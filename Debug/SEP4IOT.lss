
SEP4IOT.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000662  00800200  00006366  000063fa  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00006366  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000012a1  00800862  00800862  00006a5c  2**0
                  ALLOC
  3 .comment      0000008c  00000000  00000000  00006a5c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00006ae8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000c10  00000000  00000000  00006b28  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000f20a  00000000  00000000  00007738  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00003dc6  00000000  00000000  00016942  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000072b5  00000000  00000000  0001a708  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000029a4  00000000  00000000  000219c0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000477b  00000000  00000000  00024364  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000db82  00000000  00000000  00028adf  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000c18  00000000  00000000  00036661  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	4f c2       	rjmp	.+1182   	; 0x4a0 <__ctors_end>
       2:	00 00       	nop
       4:	6e c2       	rjmp	.+1244   	; 0x4e2 <__bad_interrupt>
       6:	00 00       	nop
       8:	6c c2       	rjmp	.+1240   	; 0x4e2 <__bad_interrupt>
       a:	00 00       	nop
       c:	6a c2       	rjmp	.+1236   	; 0x4e2 <__bad_interrupt>
       e:	00 00       	nop
      10:	68 c2       	rjmp	.+1232   	; 0x4e2 <__bad_interrupt>
      12:	00 00       	nop
      14:	66 c2       	rjmp	.+1228   	; 0x4e2 <__bad_interrupt>
      16:	00 00       	nop
      18:	64 c2       	rjmp	.+1224   	; 0x4e2 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	62 c2       	rjmp	.+1220   	; 0x4e2 <__bad_interrupt>
      1e:	00 00       	nop
      20:	60 c2       	rjmp	.+1216   	; 0x4e2 <__bad_interrupt>
      22:	00 00       	nop
      24:	5e c2       	rjmp	.+1212   	; 0x4e2 <__bad_interrupt>
      26:	00 00       	nop
      28:	5c c2       	rjmp	.+1208   	; 0x4e2 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	5a c2       	rjmp	.+1204   	; 0x4e2 <__bad_interrupt>
      2e:	00 00       	nop
      30:	0c 94 1d 0c 	jmp	0x183a	; 0x183a <__vector_12>
      34:	56 c2       	rjmp	.+1196   	; 0x4e2 <__bad_interrupt>
      36:	00 00       	nop
      38:	54 c2       	rjmp	.+1192   	; 0x4e2 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	52 c2       	rjmp	.+1188   	; 0x4e2 <__bad_interrupt>
      3e:	00 00       	nop
      40:	50 c2       	rjmp	.+1184   	; 0x4e2 <__bad_interrupt>
      42:	00 00       	nop
      44:	4e c2       	rjmp	.+1180   	; 0x4e2 <__bad_interrupt>
      46:	00 00       	nop
      48:	4c c2       	rjmp	.+1176   	; 0x4e2 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	4a c2       	rjmp	.+1172   	; 0x4e2 <__bad_interrupt>
      4e:	00 00       	nop
      50:	48 c2       	rjmp	.+1168   	; 0x4e2 <__bad_interrupt>
      52:	00 00       	nop
      54:	46 c2       	rjmp	.+1164   	; 0x4e2 <__bad_interrupt>
      56:	00 00       	nop
      58:	44 c2       	rjmp	.+1160   	; 0x4e2 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	42 c2       	rjmp	.+1156   	; 0x4e2 <__bad_interrupt>
      5e:	00 00       	nop
      60:	40 c2       	rjmp	.+1152   	; 0x4e2 <__bad_interrupt>
      62:	00 00       	nop
      64:	0c 94 83 26 	jmp	0x4d06	; 0x4d06 <__vector_25>
      68:	0c 94 d5 26 	jmp	0x4daa	; 0x4daa <__vector_26>
      6c:	3a c2       	rjmp	.+1140   	; 0x4e2 <__bad_interrupt>
      6e:	00 00       	nop
      70:	38 c2       	rjmp	.+1136   	; 0x4e2 <__bad_interrupt>
      72:	00 00       	nop
      74:	36 c2       	rjmp	.+1132   	; 0x4e2 <__bad_interrupt>
      76:	00 00       	nop
      78:	34 c2       	rjmp	.+1128   	; 0x4e2 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	32 c2       	rjmp	.+1124   	; 0x4e2 <__bad_interrupt>
      7e:	00 00       	nop
      80:	30 c2       	rjmp	.+1120   	; 0x4e2 <__bad_interrupt>
      82:	00 00       	nop
      84:	2e c2       	rjmp	.+1116   	; 0x4e2 <__bad_interrupt>
      86:	00 00       	nop
      88:	2c c2       	rjmp	.+1112   	; 0x4e2 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	2a c2       	rjmp	.+1108   	; 0x4e2 <__bad_interrupt>
      8e:	00 00       	nop
      90:	0c 94 19 27 	jmp	0x4e32	; 0x4e32 <__vector_36>
      94:	0c 94 6b 27 	jmp	0x4ed6	; 0x4ed6 <__vector_37>
      98:	24 c2       	rjmp	.+1096   	; 0x4e2 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	0c 94 03 2a 	jmp	0x5406	; 0x5406 <__vector_39>
      a0:	20 c2       	rjmp	.+1088   	; 0x4e2 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	1e c2       	rjmp	.+1084   	; 0x4e2 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	1c c2       	rjmp	.+1080   	; 0x4e2 <__bad_interrupt>
      aa:	00 00       	nop
      ac:	1a c2       	rjmp	.+1076   	; 0x4e2 <__bad_interrupt>
      ae:	00 00       	nop
      b0:	18 c2       	rjmp	.+1072   	; 0x4e2 <__bad_interrupt>
      b2:	00 00       	nop
      b4:	16 c2       	rjmp	.+1068   	; 0x4e2 <__bad_interrupt>
      b6:	00 00       	nop
      b8:	14 c2       	rjmp	.+1064   	; 0x4e2 <__bad_interrupt>
      ba:	00 00       	nop
      bc:	12 c2       	rjmp	.+1060   	; 0x4e2 <__bad_interrupt>
      be:	00 00       	nop
      c0:	10 c2       	rjmp	.+1056   	; 0x4e2 <__bad_interrupt>
      c2:	00 00       	nop
      c4:	0e c2       	rjmp	.+1052   	; 0x4e2 <__bad_interrupt>
      c6:	00 00       	nop
      c8:	0c c2       	rjmp	.+1048   	; 0x4e2 <__bad_interrupt>
      ca:	00 00       	nop
      cc:	0c 94 af 27 	jmp	0x4f5e	; 0x4f5e <__vector_51>
      d0:	0c 94 01 28 	jmp	0x5002	; 0x5002 <__vector_52>
      d4:	06 c2       	rjmp	.+1036   	; 0x4e2 <__bad_interrupt>
      d6:	00 00       	nop
      d8:	0c 94 45 28 	jmp	0x508a	; 0x508a <__vector_54>
      dc:	0c 94 97 28 	jmp	0x512e	; 0x512e <__vector_55>
      e0:	00 c2       	rjmp	.+1024   	; 0x4e2 <__bad_interrupt>
      e2:	00 00       	nop
      e4:	c6 01       	movw	r24, r12
      e6:	c6 01       	movw	r24, r12
      e8:	c6 01       	movw	r24, r12
      ea:	00 02       	muls	r16, r16
      ec:	08 02       	muls	r16, r24
      ee:	1e 02       	muls	r17, r30
      f0:	c6 01       	movw	r24, r12
      f2:	c6 01       	movw	r24, r12
      f4:	00 02       	muls	r16, r16
      f6:	08 02       	muls	r16, r24
      f8:	25 2a       	or	r2, r21
      fa:	95 2a       	or	r9, r21
      fc:	95 2a       	or	r9, r21
      fe:	95 2a       	or	r9, r21
     100:	95 2a       	or	r9, r21
     102:	95 2a       	or	r9, r21
     104:	95 2a       	or	r9, r21
     106:	95 2a       	or	r9, r21
     108:	25 2a       	or	r2, r21
     10a:	95 2a       	or	r9, r21
     10c:	95 2a       	or	r9, r21
     10e:	95 2a       	or	r9, r21
     110:	95 2a       	or	r9, r21
     112:	95 2a       	or	r9, r21
     114:	95 2a       	or	r9, r21
     116:	95 2a       	or	r9, r21
     118:	27 2a       	or	r2, r23
     11a:	95 2a       	or	r9, r21
     11c:	95 2a       	or	r9, r21
     11e:	95 2a       	or	r9, r21
     120:	95 2a       	or	r9, r21
     122:	95 2a       	or	r9, r21
     124:	95 2a       	or	r9, r21
     126:	95 2a       	or	r9, r21
     128:	95 2a       	or	r9, r21
     12a:	95 2a       	or	r9, r21
     12c:	95 2a       	or	r9, r21
     12e:	95 2a       	or	r9, r21
     130:	95 2a       	or	r9, r21
     132:	95 2a       	or	r9, r21
     134:	95 2a       	or	r9, r21
     136:	95 2a       	or	r9, r21
     138:	27 2a       	or	r2, r23
     13a:	95 2a       	or	r9, r21
     13c:	95 2a       	or	r9, r21
     13e:	95 2a       	or	r9, r21
     140:	95 2a       	or	r9, r21
     142:	95 2a       	or	r9, r21
     144:	95 2a       	or	r9, r21
     146:	95 2a       	or	r9, r21
     148:	95 2a       	or	r9, r21
     14a:	95 2a       	or	r9, r21
     14c:	95 2a       	or	r9, r21
     14e:	95 2a       	or	r9, r21
     150:	95 2a       	or	r9, r21
     152:	95 2a       	or	r9, r21
     154:	95 2a       	or	r9, r21
     156:	95 2a       	or	r9, r21
     158:	91 2a       	or	r9, r17
     15a:	95 2a       	or	r9, r21
     15c:	95 2a       	or	r9, r21
     15e:	95 2a       	or	r9, r21
     160:	95 2a       	or	r9, r21
     162:	95 2a       	or	r9, r21
     164:	95 2a       	or	r9, r21
     166:	95 2a       	or	r9, r21
     168:	5c 2a       	or	r5, r28
     16a:	95 2a       	or	r9, r21
     16c:	95 2a       	or	r9, r21
     16e:	95 2a       	or	r9, r21
     170:	95 2a       	or	r9, r21
     172:	95 2a       	or	r9, r21
     174:	95 2a       	or	r9, r21
     176:	95 2a       	or	r9, r21
     178:	95 2a       	or	r9, r21
     17a:	95 2a       	or	r9, r21
     17c:	95 2a       	or	r9, r21
     17e:	95 2a       	or	r9, r21
     180:	95 2a       	or	r9, r21
     182:	95 2a       	or	r9, r21
     184:	95 2a       	or	r9, r21
     186:	95 2a       	or	r9, r21
     188:	50 2a       	or	r5, r16
     18a:	95 2a       	or	r9, r21
     18c:	95 2a       	or	r9, r21
     18e:	95 2a       	or	r9, r21
     190:	95 2a       	or	r9, r21
     192:	95 2a       	or	r9, r21
     194:	95 2a       	or	r9, r21
     196:	95 2a       	or	r9, r21
     198:	74 2a       	or	r7, r20

0000019a <prvIdleTask>:
     19a:	07 ee       	ldi	r16, 0xE7	; 231
     19c:	18 e1       	ldi	r17, 0x18	; 24
     19e:	0f 2e       	mov	r0, r31
     1a0:	f7 e1       	ldi	r31, 0x17	; 23
     1a2:	ef 2e       	mov	r14, r31
     1a4:	f9 e1       	ldi	r31, 0x19	; 25
     1a6:	ff 2e       	mov	r15, r31
     1a8:	f0 2d       	mov	r31, r0
     1aa:	80 91 e6 18 	lds	r24, 0x18E6	; 0x8018e6 <uxDeletedTasksWaitingCleanUp>
     1ae:	88 23       	and	r24, r24
     1b0:	29 f1       	breq	.+74     	; 0x1fc <prvIdleTask+0x62>
     1b2:	0f b6       	in	r0, 0x3f	; 63
     1b4:	f8 94       	cli
     1b6:	0f 92       	push	r0
     1b8:	d8 01       	movw	r26, r16
     1ba:	17 96       	adiw	r26, 0x07	; 7
     1bc:	ed 91       	ld	r30, X+
     1be:	fc 91       	ld	r31, X
     1c0:	18 97       	sbiw	r26, 0x08	; 8
     1c2:	c0 85       	ldd	r28, Z+8	; 0x08
     1c4:	d1 85       	ldd	r29, Z+9	; 0x09
     1c6:	ce 01       	movw	r24, r28
     1c8:	02 96       	adiw	r24, 0x02	; 2
     1ca:	0e 94 82 0a 	call	0x1504	; 0x1504 <uxListRemove>
     1ce:	80 91 da 18 	lds	r24, 0x18DA	; 0x8018da <uxCurrentNumberOfTasks>
     1d2:	81 50       	subi	r24, 0x01	; 1
     1d4:	80 93 da 18 	sts	0x18DA, r24	; 0x8018da <uxCurrentNumberOfTasks>
     1d8:	80 91 e6 18 	lds	r24, 0x18E6	; 0x8018e6 <uxDeletedTasksWaitingCleanUp>
     1dc:	81 50       	subi	r24, 0x01	; 1
     1de:	80 93 e6 18 	sts	0x18E6, r24	; 0x8018e6 <uxDeletedTasksWaitingCleanUp>
     1e2:	0f 90       	pop	r0
     1e4:	0f be       	out	0x3f, r0	; 63
     1e6:	8b 8d       	ldd	r24, Y+27	; 0x1b
     1e8:	9c 8d       	ldd	r25, Y+28	; 0x1c
     1ea:	0e 94 de 09 	call	0x13bc	; 0x13bc <vPortFree>
     1ee:	ce 01       	movw	r24, r28
     1f0:	0e 94 de 09 	call	0x13bc	; 0x13bc <vPortFree>
     1f4:	80 91 e6 18 	lds	r24, 0x18E6	; 0x8018e6 <uxDeletedTasksWaitingCleanUp>
     1f8:	81 11       	cpse	r24, r1
     1fa:	db cf       	rjmp	.-74     	; 0x1b2 <prvIdleTask+0x18>
     1fc:	f7 01       	movw	r30, r14
     1fe:	80 81       	ld	r24, Z
     200:	82 30       	cpi	r24, 0x02	; 2
     202:	10 f0       	brcs	.+4      	; 0x208 <prvIdleTask+0x6e>
     204:	0e 94 57 0b 	call	0x16ae	; 0x16ae <vPortYield>
     208:	0e 94 6f 1c 	call	0x38de	; 0x38de <vApplicationIdleHook>
     20c:	ce cf       	rjmp	.-100    	; 0x1aa <prvIdleTask+0x10>

0000020e <prvTimerTask>:
     20e:	cf 93       	push	r28
     210:	df 93       	push	r29
     212:	cd b7       	in	r28, 0x3d	; 61
     214:	de b7       	in	r29, 0x3e	; 62
     216:	60 97       	sbiw	r28, 0x10	; 16
     218:	0f b6       	in	r0, 0x3f	; 63
     21a:	f8 94       	cli
     21c:	de bf       	out	0x3e, r29	; 62
     21e:	0f be       	out	0x3f, r0	; 63
     220:	cd bf       	out	0x3d, r28	; 61
     222:	ce 01       	movw	r24, r28
     224:	01 96       	adiw	r24, 0x01	; 1
     226:	9a 87       	std	Y+10, r25	; 0x0a
     228:	89 87       	std	Y+9, r24	; 0x09
     22a:	81 2c       	mov	r8, r1
     22c:	91 2c       	mov	r9, r1
     22e:	a1 2c       	mov	r10, r1
     230:	b1 2c       	mov	r11, r1
     232:	69 84       	ldd	r6, Y+9	; 0x09
     234:	7a 84       	ldd	r7, Y+10	; 0x0a
     236:	e0 91 4f 19 	lds	r30, 0x194F	; 0x80194f <pxCurrentTimerList>
     23a:	f0 91 50 19 	lds	r31, 0x1950	; 0x801950 <pxCurrentTimerList+0x1>
     23e:	80 81       	ld	r24, Z
     240:	88 23       	and	r24, r24
     242:	09 f4       	brne	.+2      	; 0x246 <prvTimerTask+0x38>
     244:	13 c1       	rjmp	.+550    	; 0x46c <__LOCK_REGION_LENGTH__+0x6c>
     246:	07 80       	ldd	r0, Z+7	; 0x07
     248:	f0 85       	ldd	r31, Z+8	; 0x08
     24a:	e0 2d       	mov	r30, r0
     24c:	20 80       	ld	r2, Z
     24e:	31 80       	ldd	r3, Z+1	; 0x01
     250:	42 80       	ldd	r4, Z+2	; 0x02
     252:	53 80       	ldd	r5, Z+3	; 0x03
     254:	0e 94 b4 14 	call	0x2968	; 0x2968 <vTaskSuspendAll>
     258:	ce 01       	movw	r24, r28
     25a:	01 96       	adiw	r24, 0x01	; 1
     25c:	0e 94 d9 1b 	call	0x37b2	; 0x37b2 <prvSampleTimeNow>
     260:	6b 87       	std	Y+11, r22	; 0x0b
     262:	7c 87       	std	Y+12, r23	; 0x0c
     264:	8d 87       	std	Y+13, r24	; 0x0d
     266:	9e 87       	std	Y+14, r25	; 0x0e
     268:	89 81       	ldd	r24, Y+1	; 0x01
     26a:	81 11       	cpse	r24, r1
     26c:	67 c0       	rjmp	.+206    	; 0x33c <prvTimerTask+0x12e>
     26e:	8b 85       	ldd	r24, Y+11	; 0x0b
     270:	9c 85       	ldd	r25, Y+12	; 0x0c
     272:	ad 85       	ldd	r26, Y+13	; 0x0d
     274:	be 85       	ldd	r27, Y+14	; 0x0e
     276:	82 15       	cp	r24, r2
     278:	93 05       	cpc	r25, r3
     27a:	a4 05       	cpc	r26, r4
     27c:	b5 05       	cpc	r27, r5
     27e:	08 f4       	brcc	.+2      	; 0x282 <prvTimerTask+0x74>
     280:	45 c0       	rjmp	.+138    	; 0x30c <prvTimerTask+0xfe>
     282:	0e 94 9d 15 	call	0x2b3a	; 0x2b3a <xTaskResumeAll>
     286:	e0 91 4f 19 	lds	r30, 0x194F	; 0x80194f <pxCurrentTimerList>
     28a:	f0 91 50 19 	lds	r31, 0x1950	; 0x801950 <pxCurrentTimerList+0x1>
     28e:	07 80       	ldd	r0, Z+7	; 0x07
     290:	f0 85       	ldd	r31, Z+8	; 0x08
     292:	e0 2d       	mov	r30, r0
     294:	a0 85       	ldd	r26, Z+8	; 0x08
     296:	b1 85       	ldd	r27, Z+9	; 0x09
     298:	b8 8b       	std	Y+16, r27	; 0x10
     29a:	af 87       	std	Y+15, r26	; 0x0f
     29c:	cd 01       	movw	r24, r26
     29e:	02 96       	adiw	r24, 0x02	; 2
     2a0:	0e 94 82 0a 	call	0x1504	; 0x1504 <uxListRemove>
     2a4:	ef 85       	ldd	r30, Y+15	; 0x0f
     2a6:	f8 89       	ldd	r31, Y+16	; 0x10
     2a8:	87 89       	ldd	r24, Z+23	; 0x17
     2aa:	82 ff       	sbrs	r24, 2
     2ac:	21 c0       	rjmp	.+66     	; 0x2f0 <prvTimerTask+0xe2>
     2ae:	46 85       	ldd	r20, Z+14	; 0x0e
     2b0:	57 85       	ldd	r21, Z+15	; 0x0f
     2b2:	60 89       	ldd	r22, Z+16	; 0x10
     2b4:	71 89       	ldd	r23, Z+17	; 0x11
     2b6:	42 0d       	add	r20, r2
     2b8:	53 1d       	adc	r21, r3
     2ba:	64 1d       	adc	r22, r4
     2bc:	75 1d       	adc	r23, r5
     2be:	72 01       	movw	r14, r4
     2c0:	61 01       	movw	r12, r2
     2c2:	0b 85       	ldd	r16, Y+11	; 0x0b
     2c4:	1c 85       	ldd	r17, Y+12	; 0x0c
     2c6:	2d 85       	ldd	r18, Y+13	; 0x0d
     2c8:	3e 85       	ldd	r19, Y+14	; 0x0e
     2ca:	cf 01       	movw	r24, r30
     2cc:	0e 94 e8 1a 	call	0x35d0	; 0x35d0 <prvInsertTimerInActiveList>
     2d0:	88 23       	and	r24, r24
     2d2:	99 f0       	breq	.+38     	; 0x2fa <prvTimerTask+0xec>
     2d4:	c8 2c       	mov	r12, r8
     2d6:	d9 2c       	mov	r13, r9
     2d8:	ea 2c       	mov	r14, r10
     2da:	fb 2c       	mov	r15, r11
     2dc:	00 e0       	ldi	r16, 0x00	; 0
     2de:	10 e0       	ldi	r17, 0x00	; 0
     2e0:	a2 01       	movw	r20, r4
     2e2:	91 01       	movw	r18, r2
     2e4:	60 e0       	ldi	r22, 0x00	; 0
     2e6:	8f 85       	ldd	r24, Y+15	; 0x0f
     2e8:	98 89       	ldd	r25, Y+16	; 0x10
     2ea:	0e 94 7b 1b 	call	0x36f6	; 0x36f6 <xTimerGenericCommand>
     2ee:	05 c0       	rjmp	.+10     	; 0x2fa <prvTimerTask+0xec>
     2f0:	8e 7f       	andi	r24, 0xFE	; 254
     2f2:	af 85       	ldd	r26, Y+15	; 0x0f
     2f4:	b8 89       	ldd	r27, Y+16	; 0x10
     2f6:	57 96       	adiw	r26, 0x17	; 23
     2f8:	8c 93       	st	X, r24
     2fa:	af 85       	ldd	r26, Y+15	; 0x0f
     2fc:	b8 89       	ldd	r27, Y+16	; 0x10
     2fe:	54 96       	adiw	r26, 0x14	; 20
     300:	ed 91       	ld	r30, X+
     302:	fc 91       	ld	r31, X
     304:	55 97       	sbiw	r26, 0x15	; 21
     306:	cd 01       	movw	r24, r26
     308:	19 95       	eicall
     30a:	a1 c0       	rjmp	.+322    	; 0x44e <__LOCK_REGION_LENGTH__+0x4e>
     30c:	20 e0       	ldi	r18, 0x00	; 0
     30e:	b2 01       	movw	r22, r4
     310:	a1 01       	movw	r20, r2
     312:	8b 85       	ldd	r24, Y+11	; 0x0b
     314:	9c 85       	ldd	r25, Y+12	; 0x0c
     316:	ad 85       	ldd	r26, Y+13	; 0x0d
     318:	be 85       	ldd	r27, Y+14	; 0x0e
     31a:	48 1b       	sub	r20, r24
     31c:	59 0b       	sbc	r21, r25
     31e:	6a 0b       	sbc	r22, r26
     320:	7b 0b       	sbc	r23, r27
     322:	80 91 4b 19 	lds	r24, 0x194B	; 0x80194b <xTimerQueue>
     326:	90 91 4c 19 	lds	r25, 0x194C	; 0x80194c <xTimerQueue+0x1>
     32a:	0e 94 b9 0f 	call	0x1f72	; 0x1f72 <vQueueWaitForMessageRestricted>
     32e:	0e 94 9d 15 	call	0x2b3a	; 0x2b3a <xTaskResumeAll>
     332:	81 11       	cpse	r24, r1
     334:	8c c0       	rjmp	.+280    	; 0x44e <__LOCK_REGION_LENGTH__+0x4e>
     336:	0e 94 57 0b 	call	0x16ae	; 0x16ae <vPortYield>
     33a:	89 c0       	rjmp	.+274    	; 0x44e <__LOCK_REGION_LENGTH__+0x4e>
     33c:	0e 94 9d 15 	call	0x2b3a	; 0x2b3a <xTaskResumeAll>
     340:	86 c0       	rjmp	.+268    	; 0x44e <__LOCK_REGION_LENGTH__+0x4e>
     342:	89 81       	ldd	r24, Y+1	; 0x01
     344:	88 23       	and	r24, r24
     346:	0c f4       	brge	.+2      	; 0x34a <prvTimerTask+0x13c>
     348:	82 c0       	rjmp	.+260    	; 0x44e <__LOCK_REGION_LENGTH__+0x4e>
     34a:	4e 80       	ldd	r4, Y+6	; 0x06
     34c:	5f 80       	ldd	r5, Y+7	; 0x07
     34e:	d2 01       	movw	r26, r4
     350:	1c 96       	adiw	r26, 0x0c	; 12
     352:	8d 91       	ld	r24, X+
     354:	9c 91       	ld	r25, X
     356:	1d 97       	sbiw	r26, 0x0d	; 13
     358:	89 2b       	or	r24, r25
     35a:	21 f0       	breq	.+8      	; 0x364 <prvTimerTask+0x156>
     35c:	c2 01       	movw	r24, r4
     35e:	02 96       	adiw	r24, 0x02	; 2
     360:	0e 94 82 0a 	call	0x1504	; 0x1504 <uxListRemove>
     364:	ce 01       	movw	r24, r28
     366:	08 96       	adiw	r24, 0x08	; 8
     368:	0e 94 d9 1b 	call	0x37b2	; 0x37b2 <prvSampleTimeNow>
     36c:	8b 01       	movw	r16, r22
     36e:	9c 01       	movw	r18, r24
     370:	e9 81       	ldd	r30, Y+1	; 0x01
     372:	0e 2e       	mov	r0, r30
     374:	00 0c       	add	r0, r0
     376:	ff 0b       	sbc	r31, r31
     378:	ea 30       	cpi	r30, 0x0A	; 10
     37a:	f1 05       	cpc	r31, r1
     37c:	08 f0       	brcs	.+2      	; 0x380 <prvTimerTask+0x172>
     37e:	67 c0       	rjmp	.+206    	; 0x44e <__LOCK_REGION_LENGTH__+0x4e>
     380:	88 27       	eor	r24, r24
     382:	ee 58       	subi	r30, 0x8E	; 142
     384:	ff 4f       	sbci	r31, 0xFF	; 255
     386:	8f 4f       	sbci	r24, 0xFF	; 255
     388:	0c 94 ed 2c 	jmp	0x59da	; 0x59da <__tablejump2__>
     38c:	f2 01       	movw	r30, r4
     38e:	87 89       	ldd	r24, Z+23	; 0x17
     390:	81 60       	ori	r24, 0x01	; 1
     392:	87 8b       	std	Z+23, r24	; 0x17
     394:	ca 80       	ldd	r12, Y+2	; 0x02
     396:	db 80       	ldd	r13, Y+3	; 0x03
     398:	ec 80       	ldd	r14, Y+4	; 0x04
     39a:	fd 80       	ldd	r15, Y+5	; 0x05
     39c:	46 85       	ldd	r20, Z+14	; 0x0e
     39e:	57 85       	ldd	r21, Z+15	; 0x0f
     3a0:	60 89       	ldd	r22, Z+16	; 0x10
     3a2:	71 89       	ldd	r23, Z+17	; 0x11
     3a4:	4c 0d       	add	r20, r12
     3a6:	5d 1d       	adc	r21, r13
     3a8:	6e 1d       	adc	r22, r14
     3aa:	7f 1d       	adc	r23, r15
     3ac:	c2 01       	movw	r24, r4
     3ae:	0e 94 e8 1a 	call	0x35d0	; 0x35d0 <prvInsertTimerInActiveList>
     3b2:	88 23       	and	r24, r24
     3b4:	09 f4       	brne	.+2      	; 0x3b8 <prvTimerTask+0x1aa>
     3b6:	4b c0       	rjmp	.+150    	; 0x44e <__LOCK_REGION_LENGTH__+0x4e>
     3b8:	d2 01       	movw	r26, r4
     3ba:	54 96       	adiw	r26, 0x14	; 20
     3bc:	ed 91       	ld	r30, X+
     3be:	fc 91       	ld	r31, X
     3c0:	55 97       	sbiw	r26, 0x15	; 21
     3c2:	c2 01       	movw	r24, r4
     3c4:	19 95       	eicall
     3c6:	f2 01       	movw	r30, r4
     3c8:	87 89       	ldd	r24, Z+23	; 0x17
     3ca:	82 ff       	sbrs	r24, 2
     3cc:	40 c0       	rjmp	.+128    	; 0x44e <__LOCK_REGION_LENGTH__+0x4e>
     3ce:	4a 81       	ldd	r20, Y+2	; 0x02
     3d0:	5b 81       	ldd	r21, Y+3	; 0x03
     3d2:	6c 81       	ldd	r22, Y+4	; 0x04
     3d4:	7d 81       	ldd	r23, Y+5	; 0x05
     3d6:	86 85       	ldd	r24, Z+14	; 0x0e
     3d8:	97 85       	ldd	r25, Z+15	; 0x0f
     3da:	a0 89       	ldd	r26, Z+16	; 0x10
     3dc:	b1 89       	ldd	r27, Z+17	; 0x11
     3de:	9a 01       	movw	r18, r20
     3e0:	ab 01       	movw	r20, r22
     3e2:	28 0f       	add	r18, r24
     3e4:	39 1f       	adc	r19, r25
     3e6:	4a 1f       	adc	r20, r26
     3e8:	5b 1f       	adc	r21, r27
     3ea:	c8 2c       	mov	r12, r8
     3ec:	d9 2c       	mov	r13, r9
     3ee:	ea 2c       	mov	r14, r10
     3f0:	fb 2c       	mov	r15, r11
     3f2:	00 e0       	ldi	r16, 0x00	; 0
     3f4:	10 e0       	ldi	r17, 0x00	; 0
     3f6:	60 e0       	ldi	r22, 0x00	; 0
     3f8:	c2 01       	movw	r24, r4
     3fa:	0e 94 7b 1b 	call	0x36f6	; 0x36f6 <xTimerGenericCommand>
     3fe:	27 c0       	rjmp	.+78     	; 0x44e <__LOCK_REGION_LENGTH__+0x4e>
     400:	d2 01       	movw	r26, r4
     402:	57 96       	adiw	r26, 0x17	; 23
     404:	8c 91       	ld	r24, X
     406:	57 97       	sbiw	r26, 0x17	; 23
     408:	8e 7f       	andi	r24, 0xFE	; 254
     40a:	57 96       	adiw	r26, 0x17	; 23
     40c:	8c 93       	st	X, r24
     40e:	1f c0       	rjmp	.+62     	; 0x44e <__LOCK_REGION_LENGTH__+0x4e>
     410:	f2 01       	movw	r30, r4
     412:	87 89       	ldd	r24, Z+23	; 0x17
     414:	81 60       	ori	r24, 0x01	; 1
     416:	87 8b       	std	Z+23, r24	; 0x17
     418:	4a 81       	ldd	r20, Y+2	; 0x02
     41a:	5b 81       	ldd	r21, Y+3	; 0x03
     41c:	6c 81       	ldd	r22, Y+4	; 0x04
     41e:	7d 81       	ldd	r23, Y+5	; 0x05
     420:	46 87       	std	Z+14, r20	; 0x0e
     422:	57 87       	std	Z+15, r21	; 0x0f
     424:	60 8b       	std	Z+16, r22	; 0x10
     426:	71 8b       	std	Z+17, r23	; 0x11
     428:	40 0f       	add	r20, r16
     42a:	51 1f       	adc	r21, r17
     42c:	62 1f       	adc	r22, r18
     42e:	73 1f       	adc	r23, r19
     430:	68 01       	movw	r12, r16
     432:	79 01       	movw	r14, r18
     434:	c2 01       	movw	r24, r4
     436:	0e 94 e8 1a 	call	0x35d0	; 0x35d0 <prvInsertTimerInActiveList>
     43a:	09 c0       	rjmp	.+18     	; 0x44e <__LOCK_REGION_LENGTH__+0x4e>
     43c:	f2 01       	movw	r30, r4
     43e:	87 89       	ldd	r24, Z+23	; 0x17
     440:	81 fd       	sbrc	r24, 1
     442:	03 c0       	rjmp	.+6      	; 0x44a <__LOCK_REGION_LENGTH__+0x4a>
     444:	c2 01       	movw	r24, r4
     446:	ba d7       	rcall	.+3956   	; 0x13bc <vPortFree>
     448:	02 c0       	rjmp	.+4      	; 0x44e <__LOCK_REGION_LENGTH__+0x4e>
     44a:	8e 7f       	andi	r24, 0xFE	; 254
     44c:	87 8b       	std	Z+23, r24	; 0x17
     44e:	28 2d       	mov	r18, r8
     450:	39 2d       	mov	r19, r9
     452:	4a 2d       	mov	r20, r10
     454:	5b 2d       	mov	r21, r11
     456:	66 2d       	mov	r22, r6
     458:	77 2d       	mov	r23, r7
     45a:	80 91 4b 19 	lds	r24, 0x194B	; 0x80194b <xTimerQueue>
     45e:	90 91 4c 19 	lds	r25, 0x194C	; 0x80194c <xTimerQueue+0x1>
     462:	0e 94 55 0e 	call	0x1caa	; 0x1caa <xQueueReceive>
     466:	81 11       	cpse	r24, r1
     468:	6c cf       	rjmp	.-296    	; 0x342 <prvTimerTask+0x134>
     46a:	e5 ce       	rjmp	.-566    	; 0x236 <prvTimerTask+0x28>
     46c:	0e 94 b4 14 	call	0x2968	; 0x2968 <vTaskSuspendAll>
     470:	ce 01       	movw	r24, r28
     472:	01 96       	adiw	r24, 0x01	; 1
     474:	0e 94 d9 1b 	call	0x37b2	; 0x37b2 <prvSampleTimeNow>
     478:	6b 87       	std	Y+11, r22	; 0x0b
     47a:	7c 87       	std	Y+12, r23	; 0x0c
     47c:	8d 87       	std	Y+13, r24	; 0x0d
     47e:	9e 87       	std	Y+14, r25	; 0x0e
     480:	89 81       	ldd	r24, Y+1	; 0x01
     482:	81 11       	cpse	r24, r1
     484:	5b cf       	rjmp	.-330    	; 0x33c <prvTimerTask+0x12e>
     486:	e0 91 4d 19 	lds	r30, 0x194D	; 0x80194d <pxOverflowTimerList>
     48a:	f0 91 4e 19 	lds	r31, 0x194E	; 0x80194e <pxOverflowTimerList+0x1>
     48e:	80 81       	ld	r24, Z
     490:	21 e0       	ldi	r18, 0x01	; 1
     492:	81 11       	cpse	r24, r1
     494:	20 e0       	ldi	r18, 0x00	; 0
     496:	28 2c       	mov	r2, r8
     498:	39 2c       	mov	r3, r9
     49a:	4a 2c       	mov	r4, r10
     49c:	5b 2c       	mov	r5, r11
     49e:	37 cf       	rjmp	.-402    	; 0x30e <prvTimerTask+0x100>

000004a0 <__ctors_end>:
     4a0:	11 24       	eor	r1, r1
     4a2:	1f be       	out	0x3f, r1	; 63
     4a4:	cf ef       	ldi	r28, 0xFF	; 255
     4a6:	d1 e2       	ldi	r29, 0x21	; 33
     4a8:	de bf       	out	0x3e, r29	; 62
     4aa:	cd bf       	out	0x3d, r28	; 61
     4ac:	00 e0       	ldi	r16, 0x00	; 0
     4ae:	0c bf       	out	0x3c, r16	; 60

000004b0 <__do_copy_data>:
     4b0:	18 e0       	ldi	r17, 0x08	; 8
     4b2:	a0 e0       	ldi	r26, 0x00	; 0
     4b4:	b2 e0       	ldi	r27, 0x02	; 2
     4b6:	e6 e6       	ldi	r30, 0x66	; 102
     4b8:	f3 e6       	ldi	r31, 0x63	; 99
     4ba:	00 e0       	ldi	r16, 0x00	; 0
     4bc:	0b bf       	out	0x3b, r16	; 59
     4be:	02 c0       	rjmp	.+4      	; 0x4c4 <__do_copy_data+0x14>
     4c0:	07 90       	elpm	r0, Z+
     4c2:	0d 92       	st	X+, r0
     4c4:	a2 36       	cpi	r26, 0x62	; 98
     4c6:	b1 07       	cpc	r27, r17
     4c8:	d9 f7       	brne	.-10     	; 0x4c0 <__do_copy_data+0x10>

000004ca <__do_clear_bss>:
     4ca:	2b e1       	ldi	r18, 0x1B	; 27
     4cc:	a2 e6       	ldi	r26, 0x62	; 98
     4ce:	b8 e0       	ldi	r27, 0x08	; 8
     4d0:	01 c0       	rjmp	.+2      	; 0x4d4 <.do_clear_bss_start>

000004d2 <.do_clear_bss_loop>:
     4d2:	1d 92       	st	X+, r1

000004d4 <.do_clear_bss_start>:
     4d4:	a3 30       	cpi	r26, 0x03	; 3
     4d6:	b2 07       	cpc	r27, r18
     4d8:	e1 f7       	brne	.-8      	; 0x4d2 <.do_clear_bss_loop>
     4da:	0e 94 30 1d 	call	0x3a60	; 0x3a60 <main>
     4de:	0c 94 b1 31 	jmp	0x6362	; 0x6362 <_exit>

000004e2 <__bad_interrupt>:
     4e2:	8e cd       	rjmp	.-1252   	; 0x0 <__vectors>

000004e4 <co2Reader_create>:
}



//	RETURN TO DESTROY METHODS
void co2Reader_destroy(co2reader_t self) {
     4e4:	2f 92       	push	r2
     4e6:	3f 92       	push	r3
     4e8:	4f 92       	push	r4
     4ea:	5f 92       	push	r5
     4ec:	6f 92       	push	r6
     4ee:	7f 92       	push	r7
     4f0:	8f 92       	push	r8
     4f2:	9f 92       	push	r9
     4f4:	af 92       	push	r10
     4f6:	bf 92       	push	r11
     4f8:	cf 92       	push	r12
     4fa:	df 92       	push	r13
     4fc:	ef 92       	push	r14
     4fe:	ff 92       	push	r15
     500:	0f 93       	push	r16
     502:	1f 93       	push	r17
     504:	cf 93       	push	r28
     506:	df 93       	push	r29
     508:	88 2e       	mov	r8, r24
     50a:	96 2e       	mov	r9, r22
     50c:	1a 01       	movw	r2, r20
     50e:	28 01       	movw	r4, r16
     510:	39 01       	movw	r6, r18
     512:	61 e0       	ldi	r22, 0x01	; 1
     514:	70 e0       	ldi	r23, 0x00	; 0
     516:	84 e0       	ldi	r24, 0x04	; 4
     518:	90 e0       	ldi	r25, 0x00	; 0
     51a:	0e 94 f5 2c 	call	0x59ea	; 0x59ea <calloc>
     51e:	ec 01       	movw	r28, r24
     520:	00 97       	sbiw	r24, 0x00	; 0
     522:	51 f1       	breq	.+84     	; 0x578 <co2Reader_create+0x94>
     524:	fc 01       	movw	r30, r24
     526:	11 92       	st	Z+, r1
     528:	11 92       	st	Z+, r1
     52a:	30 92 6d 08 	sts	0x086D, r3	; 0x80086d <_startMeasureEventGroup+0x1>
     52e:	20 92 6c 08 	sts	0x086C, r2	; 0x80086c <_startMeasureEventGroup>
     532:	40 92 68 08 	sts	0x0868, r4	; 0x800868 <_startMeasureBit>
     536:	50 92 69 08 	sts	0x0869, r5	; 0x800869 <_startMeasureBit+0x1>
     53a:	60 92 6a 08 	sts	0x086A, r6	; 0x80086a <_startMeasureBit+0x2>
     53e:	70 92 6b 08 	sts	0x086B, r7	; 0x80086b <_startMeasureBit+0x3>
     542:	f0 92 67 08 	sts	0x0867, r15	; 0x800867 <_readyEventGroup+0x1>
     546:	e0 92 66 08 	sts	0x0866, r14	; 0x800866 <_readyEventGroup>
     54a:	a0 92 62 08 	sts	0x0862, r10	; 0x800862 <__data_end>
     54e:	b0 92 63 08 	sts	0x0863, r11	; 0x800863 <__data_end+0x1>
     552:	c0 92 64 08 	sts	0x0864, r12	; 0x800864 <__data_end+0x2>
     556:	d0 92 65 08 	sts	0x0865, r13	; 0x800865 <__data_end+0x3>
     55a:	49 2d       	mov	r20, r9
     55c:	50 e0       	ldi	r21, 0x00	; 0
     55e:	7f 01       	movw	r14, r30
     560:	08 2d       	mov	r16, r8
     562:	9c 01       	movw	r18, r24
     564:	62 e8       	ldi	r22, 0x82	; 130
     566:	72 e0       	ldi	r23, 0x02	; 2
     568:	81 e3       	ldi	r24, 0x31	; 49
     56a:	93 e0       	ldi	r25, 0x03	; 3
     56c:	0e 94 59 13 	call	0x26b2	; 0x26b2 <xTaskCreate>
     570:	8c e8       	ldi	r24, 0x8C	; 140
     572:	92 e0       	ldi	r25, 0x02	; 2
     574:	0e 94 a6 2e 	call	0x5d4c	; 0x5d4c <puts>
     578:	ce 01       	movw	r24, r28
     57a:	df 91       	pop	r29
     57c:	cf 91       	pop	r28
     57e:	1f 91       	pop	r17
     580:	0f 91       	pop	r16
     582:	ff 90       	pop	r15
     584:	ef 90       	pop	r14
     586:	df 90       	pop	r13
     588:	cf 90       	pop	r12
     58a:	bf 90       	pop	r11
     58c:	af 90       	pop	r10
     58e:	9f 90       	pop	r9
     590:	8f 90       	pop	r8
     592:	7f 90       	pop	r7
     594:	6f 90       	pop	r6
     596:	5f 90       	pop	r5
     598:	4f 90       	pop	r4
     59a:	3f 90       	pop	r3
     59c:	2f 90       	pop	r2
     59e:	08 95       	ret

000005a0 <co2Reader_measure>:
	for (;;) {
		co2Reader_measure(self);
	}
}

void co2Reader_measure(co2reader_t self) {
     5a0:	cf 92       	push	r12
     5a2:	df 92       	push	r13
     5a4:	ef 92       	push	r14
     5a6:	ff 92       	push	r15
     5a8:	0f 93       	push	r16
     5aa:	1f 93       	push	r17
     5ac:	cf 93       	push	r28
     5ae:	df 93       	push	r29
     5b0:	ec 01       	movw	r28, r24
	
	EventBits_t uxBits = xEventGroupWaitBits(_startMeasureEventGroup, //eventGroup
     5b2:	40 91 68 08 	lds	r20, 0x0868	; 0x800868 <_startMeasureBit>
     5b6:	50 91 69 08 	lds	r21, 0x0869	; 0x800869 <_startMeasureBit+0x1>
     5ba:	60 91 6a 08 	lds	r22, 0x086A	; 0x80086a <_startMeasureBit+0x2>
     5be:	70 91 6b 08 	lds	r23, 0x086B	; 0x80086b <_startMeasureBit+0x3>
     5c2:	cc 24       	eor	r12, r12
     5c4:	ca 94       	dec	r12
     5c6:	dc 2c       	mov	r13, r12
     5c8:	76 01       	movw	r14, r12
     5ca:	01 e0       	ldi	r16, 0x01	; 1
     5cc:	21 e0       	ldi	r18, 0x01	; 1
     5ce:	80 91 6c 08 	lds	r24, 0x086C	; 0x80086c <_startMeasureEventGroup>
     5d2:	90 91 6d 08 	lds	r25, 0x086D	; 0x80086d <_startMeasureEventGroup+0x1>
     5d6:	93 d4       	rcall	.+2342   	; 0xefe <xEventGroupWaitBits>
	_startMeasureBit, //bits it is interested in
	pdTRUE, //clears the bits
	pdTRUE, //waits for both bits to be set
	portMAX_DELAY); //wait

	if ((uxBits & (_startMeasureBit)) == (_startMeasureBit)) {
     5d8:	00 91 68 08 	lds	r16, 0x0868	; 0x800868 <_startMeasureBit>
     5dc:	10 91 69 08 	lds	r17, 0x0869	; 0x800869 <_startMeasureBit+0x1>
     5e0:	20 91 6a 08 	lds	r18, 0x086A	; 0x80086a <_startMeasureBit+0x2>
     5e4:	30 91 6b 08 	lds	r19, 0x086B	; 0x80086b <_startMeasureBit+0x3>
     5e8:	dc 01       	movw	r26, r24
     5ea:	cb 01       	movw	r24, r22
     5ec:	80 23       	and	r24, r16
     5ee:	91 23       	and	r25, r17
     5f0:	a2 23       	and	r26, r18
     5f2:	b3 23       	and	r27, r19
     5f4:	08 17       	cp	r16, r24
     5f6:	19 07       	cpc	r17, r25
     5f8:	2a 07       	cpc	r18, r26
     5fa:	3b 07       	cpc	r19, r27
     5fc:	49 f5       	brne	.+82     	; 0x650 <co2Reader_measure+0xb0>

		mh_z19_take_meassuring();
     5fe:	0e 94 1c 25 	call	0x4a38	; 0x4a38 <mh_z19_take_meassuring>

		uint16_t a = pvPortMalloc(sizeof(uint16_t));
     602:	82 e0       	ldi	r24, 0x02	; 2
     604:	90 e0       	ldi	r25, 0x00	; 0
     606:	21 d6       	rcall	.+3138   	; 0x124a <pvPortMalloc>
     608:	8c 01       	movw	r16, r24
		//uint16_t a;
		mh_z19_return_code_t rc = mh_z19_get_co2_ppm(a);
     60a:	0e 94 4b 25 	call	0x4a96	; 0x4a96 <mh_z19_get_co2_ppm>
     60e:	f8 2e       	mov	r15, r24
		if(rc != MHZ19_OK)
     610:	88 23       	and	r24, r24
     612:	59 f0       	breq	.+22     	; 0x62a <co2Reader_measure+0x8a>
		{
			printf("There was a problem with get co2\n");
     614:	83 e9       	ldi	r24, 0x93	; 147
     616:	92 e0       	ldi	r25, 0x02	; 2
     618:	0e 94 a6 2e 	call	0x5d4c	; 0x5d4c <puts>
		}
		if(rc == MHZ19_NO_MEASSURING_AVAILABLE)
     61c:	81 e0       	ldi	r24, 0x01	; 1
     61e:	f8 12       	cpse	r15, r24
     620:	04 c0       	rjmp	.+8      	; 0x62a <co2Reader_measure+0x8a>
		{
			printf("There was no co2 meassured\n");
     622:	84 eb       	ldi	r24, 0xB4	; 180
     624:	92 e0       	ldi	r25, 0x02	; 2
     626:	0e 94 a6 2e 	call	0x5d4c	; 0x5d4c <puts>
		}
		//my_co2_call_back(a);
		
		self->value = a;
     62a:	19 83       	std	Y+1, r17	; 0x01
     62c:	08 83       	st	Y, r16
		//vPortFree(a);

		printf("co2 done bit set\n");
     62e:	8f ec       	ldi	r24, 0xCF	; 207
     630:	92 e0       	ldi	r25, 0x02	; 2
     632:	0e 94 a6 2e 	call	0x5d4c	; 0x5d4c <puts>
		//set done bit so that device knows meassurement is done
		xEventGroupSetBits(_readyEventGroup, _readyBit);
     636:	40 91 62 08 	lds	r20, 0x0862	; 0x800862 <__data_end>
     63a:	50 91 63 08 	lds	r21, 0x0863	; 0x800863 <__data_end+0x1>
     63e:	60 91 64 08 	lds	r22, 0x0864	; 0x800864 <__data_end+0x2>
     642:	70 91 65 08 	lds	r23, 0x0865	; 0x800865 <__data_end+0x3>
     646:	80 91 66 08 	lds	r24, 0x0866	; 0x800866 <_readyEventGroup>
     64a:	90 91 67 08 	lds	r25, 0x0867	; 0x800867 <_readyEventGroup+0x1>
     64e:	17 d5       	rcall	.+2606   	; 0x107e <xEventGroupSetBits>
	}
}
     650:	df 91       	pop	r29
     652:	cf 91       	pop	r28
     654:	1f 91       	pop	r17
     656:	0f 91       	pop	r16
     658:	ff 90       	pop	r15
     65a:	ef 90       	pop	r14
     65c:	df 90       	pop	r13
     65e:	cf 90       	pop	r12
     660:	08 95       	ret

00000662 <co2Reader_executeTask>:
	//free(self->value);
	//free(self);
}

//actual task, methods devided so that it is possible to test
void co2Reader_executeTask(co2reader_t self) {
     662:	ec 01       	movw	r28, r24
	mh_z19_create(ser_USART3, NULL); 
     664:	60 e0       	ldi	r22, 0x00	; 0
     666:	70 e0       	ldi	r23, 0x00	; 0
     668:	83 e0       	ldi	r24, 0x03	; 3
     66a:	0e 94 ee 24 	call	0x49dc	; 0x49dc <mh_z19_create>
	for (;;) {
		co2Reader_measure(self);
     66e:	ce 01       	movw	r24, r28
     670:	97 df       	rcall	.-210    	; 0x5a0 <co2Reader_measure>
     672:	fd cf       	rjmp	.-6      	; 0x66e <co2Reader_executeTask+0xc>

00000674 <co2Reader_getCO2>:
	}
}

uint16_t co2Reader_getCO2(co2reader_t self) {
	return self->value;
}
     674:	fc 01       	movw	r30, r24
     676:	80 81       	ld	r24, Z
     678:	91 81       	ldd	r25, Z+1	; 0x01
     67a:	08 95       	ret

0000067c <configuration_create>:
		xSemaphoreTake(_semaphore, portMAX_DELAY);
		_working = value;
		xSemaphoreGive(_semaphore);
	}
	else _working = value;
}
     67c:	81 e0       	ldi	r24, 0x01	; 1
     67e:	80 93 71 08 	sts	0x0871, r24	; 0x800871 <_working>
     682:	10 92 70 08 	sts	0x0870, r1	; 0x800870 <_ventilation>
     686:	0e 94 01 0e 	call	0x1c02	; 0x1c02 <xQueueCreateMutex>
     68a:	90 93 6f 08 	sts	0x086F, r25	; 0x80086f <_semaphore+0x1>
     68e:	80 93 6e 08 	sts	0x086E, r24	; 0x80086e <_semaphore>
     692:	08 95       	ret

00000694 <configuration_getWorking>:

void configuration_getWorking(bool* working) {
     694:	0f 93       	push	r16
     696:	cf 93       	push	r28
     698:	df 93       	push	r29
	if (_semaphore != NULL) {
     69a:	20 91 6e 08 	lds	r18, 0x086E	; 0x80086e <_semaphore>
     69e:	30 91 6f 08 	lds	r19, 0x086F	; 0x80086f <_semaphore+0x1>
     6a2:	21 15       	cp	r18, r1
     6a4:	31 05       	cpc	r19, r1
     6a6:	b9 f0       	breq	.+46     	; 0x6d6 <configuration_getWorking+0x42>
     6a8:	ec 01       	movw	r28, r24
		xSemaphoreTake(_semaphore, portMAX_DELAY);
     6aa:	4f ef       	ldi	r20, 0xFF	; 255
     6ac:	5f ef       	ldi	r21, 0xFF	; 255
     6ae:	ba 01       	movw	r22, r20
     6b0:	c9 01       	movw	r24, r18
     6b2:	0e 94 ed 0e 	call	0x1dda	; 0x1dda <xQueueSemaphoreTake>
		*working = _working;
     6b6:	80 91 71 08 	lds	r24, 0x0871	; 0x800871 <_working>
     6ba:	88 83       	st	Y, r24
		xSemaphoreGive(_semaphore);
     6bc:	00 e0       	ldi	r16, 0x00	; 0
     6be:	20 e0       	ldi	r18, 0x00	; 0
     6c0:	30 e0       	ldi	r19, 0x00	; 0
     6c2:	a9 01       	movw	r20, r18
     6c4:	60 e0       	ldi	r22, 0x00	; 0
     6c6:	70 e0       	ldi	r23, 0x00	; 0
     6c8:	80 91 6e 08 	lds	r24, 0x086E	; 0x80086e <_semaphore>
     6cc:	90 91 6f 08 	lds	r25, 0x086F	; 0x80086f <_semaphore+0x1>
     6d0:	0e 94 61 0d 	call	0x1ac2	; 0x1ac2 <xQueueGenericSend>
     6d4:	04 c0       	rjmp	.+8      	; 0x6de <configuration_getWorking+0x4a>
	}
	else *working = _working;
     6d6:	20 91 71 08 	lds	r18, 0x0871	; 0x800871 <_working>
     6da:	fc 01       	movw	r30, r24
     6dc:	20 83       	st	Z, r18
}
     6de:	df 91       	pop	r29
     6e0:	cf 91       	pop	r28
     6e2:	0f 91       	pop	r16
     6e4:	08 95       	ret

000006e6 <currentCondition_create>:
     6e6:	61 e0       	ldi	r22, 0x01	; 1
     6e8:	70 e0       	ldi	r23, 0x00	; 0
     6ea:	88 e0       	ldi	r24, 0x08	; 8
     6ec:	90 e0       	ldi	r25, 0x00	; 0
     6ee:	0e 94 f5 2c 	call	0x59ea	; 0x59ea <calloc>
     6f2:	00 97       	sbiw	r24, 0x00	; 0
     6f4:	39 f0       	breq	.+14     	; 0x704 <currentCondition_create+0x1e>
     6f6:	fc 01       	movw	r30, r24
     6f8:	13 82       	std	Z+3, r1	; 0x03
     6fa:	12 82       	std	Z+2, r1	; 0x02
     6fc:	15 82       	std	Z+5, r1	; 0x05
     6fe:	14 82       	std	Z+4, r1	; 0x04
     700:	11 82       	std	Z+1, r1	; 0x01
     702:	10 82       	st	Z, r1
     704:	08 95       	ret

00000706 <currentCondition_setCO2>:
     706:	00 97       	sbiw	r24, 0x00	; 0
     708:	19 f0       	breq	.+6      	; 0x710 <currentCondition_setCO2+0xa>
     70a:	fc 01       	movw	r30, r24
     70c:	71 83       	std	Z+1, r23	; 0x01
     70e:	60 83       	st	Z, r22
     710:	08 95       	ret

00000712 <currentCondition_setHumidity>:
     712:	00 97       	sbiw	r24, 0x00	; 0
     714:	19 f0       	breq	.+6      	; 0x71c <currentCondition_setHumidity+0xa>
     716:	fc 01       	movw	r30, r24
     718:	75 83       	std	Z+5, r23	; 0x05
     71a:	64 83       	std	Z+4, r22	; 0x04
     71c:	08 95       	ret

0000071e <currentCondition_setTemperature>:
     71e:	00 97       	sbiw	r24, 0x00	; 0
     720:	19 f0       	breq	.+6      	; 0x728 <currentCondition_setTemperature+0xa>
     722:	fc 01       	movw	r30, r24
     724:	73 83       	std	Z+3, r23	; 0x03
     726:	62 83       	std	Z+2, r22	; 0x02
     728:	08 95       	ret

0000072a <getcurrentConditionPayload>:
     72a:	fc 01       	movw	r30, r24
     72c:	db 01       	movw	r26, r22
     72e:	12 96       	adiw	r26, 0x02	; 2
     730:	2c 91       	ld	r18, X
     732:	12 97       	sbiw	r26, 0x02	; 2
     734:	13 96       	adiw	r26, 0x03	; 3
     736:	3c 91       	ld	r19, X
     738:	13 97       	sbiw	r26, 0x03	; 3
     73a:	14 96       	adiw	r26, 0x04	; 4
     73c:	8c 91       	ld	r24, X
     73e:	14 97       	sbiw	r26, 0x04	; 4
     740:	15 96       	adiw	r26, 0x05	; 5
     742:	9c 91       	ld	r25, X
     744:	41 e0       	ldi	r20, 0x01	; 1
     746:	40 83       	st	Z, r20
     748:	44 e0       	ldi	r20, 0x04	; 4
     74a:	41 83       	std	Z+1, r20	; 0x01
     74c:	32 83       	std	Z+2, r19	; 0x02
     74e:	23 83       	std	Z+3, r18	; 0x03
     750:	94 83       	std	Z+4, r25	; 0x04
     752:	85 83       	std	Z+5, r24	; 0x05
     754:	cf 01       	movw	r24, r30
     756:	08 95       	ret

00000758 <device_create>:
	//free(self);*/
//}

currentCondition_t device_getCurrentCondition(device_t self) {
	return self->currentCondition;
}
     758:	2f 92       	push	r2
     75a:	3f 92       	push	r3
     75c:	4f 92       	push	r4
     75e:	5f 92       	push	r5
     760:	6f 92       	push	r6
     762:	7f 92       	push	r7
     764:	8f 92       	push	r8
     766:	9f 92       	push	r9
     768:	af 92       	push	r10
     76a:	bf 92       	push	r11
     76c:	cf 92       	push	r12
     76e:	df 92       	push	r13
     770:	ef 92       	push	r14
     772:	ff 92       	push	r15
     774:	0f 93       	push	r16
     776:	1f 93       	push	r17
     778:	cf 93       	push	r28
     77a:	df 93       	push	r29
     77c:	00 d0       	rcall	.+0      	; 0x77e <device_create+0x26>
     77e:	1f 92       	push	r1
     780:	cd b7       	in	r28, 0x3d	; 61
     782:	de b7       	in	r29, 0x3e	; 62
     784:	28 2e       	mov	r2, r24
     786:	36 2e       	mov	r3, r22
     788:	5c 83       	std	Y+4, r21	; 0x04
     78a:	4b 83       	std	Y+3, r20	; 0x03
     78c:	28 01       	movw	r4, r16
     78e:	39 01       	movw	r6, r18
     790:	61 e0       	ldi	r22, 0x01	; 1
     792:	70 e0       	ldi	r23, 0x00	; 0
     794:	88 e0       	ldi	r24, 0x08	; 8
     796:	90 e0       	ldi	r25, 0x00	; 0
     798:	0e 94 f5 2c 	call	0x59ea	; 0x59ea <calloc>
     79c:	9a 83       	std	Y+2, r25	; 0x02
     79e:	89 83       	std	Y+1, r24	; 0x01
     7a0:	00 97       	sbiw	r24, 0x00	; 0
     7a2:	09 f4       	brne	.+2      	; 0x7a6 <device_create+0x4e>
     7a4:	3e c0       	rjmp	.+124    	; 0x822 <device_create+0xca>
     7a6:	fc 01       	movw	r30, r24
     7a8:	91 82       	std	Z+1, r9	; 0x01
     7aa:	80 82       	st	Z, r8
     7ac:	8a 8d       	ldd	r24, Y+26	; 0x1a
     7ae:	9b 8d       	ldd	r25, Y+27	; 0x1b
     7b0:	93 83       	std	Z+3, r25	; 0x03
     7b2:	82 83       	std	Z+2, r24	; 0x02
     7b4:	98 df       	rcall	.-208    	; 0x6e6 <currentCondition_create>
     7b6:	e9 81       	ldd	r30, Y+1	; 0x01
     7b8:	fa 81       	ldd	r31, Y+2	; 0x02
     7ba:	95 83       	std	Z+5, r25	; 0x05
     7bc:	84 83       	std	Z+4, r24	; 0x04
     7be:	8b 81       	ldd	r24, Y+3	; 0x03
     7c0:	9c 81       	ldd	r25, Y+4	; 0x04
     7c2:	90 93 95 08 	sts	0x0895, r25	; 0x800895 <_startMeasureEventGroup+0x1>
     7c6:	80 93 94 08 	sts	0x0894, r24	; 0x800894 <_startMeasureEventGroup>
     7ca:	40 92 90 08 	sts	0x0890, r4	; 0x800890 <_startMeasureBit>
     7ce:	50 92 91 08 	sts	0x0891, r5	; 0x800891 <_startMeasureBit+0x1>
     7d2:	60 92 92 08 	sts	0x0892, r6	; 0x800892 <_startMeasureBit+0x2>
     7d6:	70 92 93 08 	sts	0x0893, r7	; 0x800893 <_startMeasureBit+0x3>
     7da:	f0 92 8f 08 	sts	0x088F, r15	; 0x80088f <_readyEventGroup+0x1>
     7de:	e0 92 8e 08 	sts	0x088E, r14	; 0x80088e <_readyEventGroup>
     7e2:	a0 92 8a 08 	sts	0x088A, r10	; 0x80088a <_readyBit>
     7e6:	b0 92 8b 08 	sts	0x088B, r11	; 0x80088b <_readyBit+0x1>
     7ea:	c0 92 8c 08 	sts	0x088C, r12	; 0x80088c <_readyBit+0x2>
     7ee:	d0 92 8d 08 	sts	0x088D, r13	; 0x80088d <_readyBit+0x3>
     7f2:	8c 8d       	ldd	r24, Y+28	; 0x1c
     7f4:	9d 8d       	ldd	r25, Y+29	; 0x1d
     7f6:	90 93 89 08 	sts	0x0889, r25	; 0x800889 <_uplinkmessageBuffer+0x1>
     7fa:	80 93 88 08 	sts	0x0888, r24	; 0x800888 <_uplinkmessageBuffer>
     7fe:	43 2d       	mov	r20, r3
     800:	50 e0       	ldi	r21, 0x00	; 0
     802:	7f 01       	movw	r14, r30
     804:	96 e0       	ldi	r25, 0x06	; 6
     806:	e9 0e       	add	r14, r25
     808:	f1 1c       	adc	r15, r1
     80a:	02 2d       	mov	r16, r2
     80c:	9f 01       	movw	r18, r30
     80e:	60 ee       	ldi	r22, 0xE0	; 224
     810:	72 e0       	ldi	r23, 0x02	; 2
     812:	8c e1       	ldi	r24, 0x1C	; 28
     814:	95 e0       	ldi	r25, 0x05	; 5
     816:	0e 94 59 13 	call	0x26b2	; 0x26b2 <xTaskCreate>
     81a:	87 ee       	ldi	r24, 0xE7	; 231
     81c:	92 e0       	ldi	r25, 0x02	; 2
     81e:	0e 94 a6 2e 	call	0x5d4c	; 0x5d4c <puts>
     822:	89 81       	ldd	r24, Y+1	; 0x01
     824:	9a 81       	ldd	r25, Y+2	; 0x02
     826:	0f 90       	pop	r0
     828:	0f 90       	pop	r0
     82a:	0f 90       	pop	r0
     82c:	0f 90       	pop	r0
     82e:	df 91       	pop	r29
     830:	cf 91       	pop	r28
     832:	1f 91       	pop	r17
     834:	0f 91       	pop	r16
     836:	ff 90       	pop	r15
     838:	ef 90       	pop	r14
     83a:	df 90       	pop	r13
     83c:	cf 90       	pop	r12
     83e:	bf 90       	pop	r11
     840:	af 90       	pop	r10
     842:	9f 90       	pop	r9
     844:	8f 90       	pop	r8
     846:	7f 90       	pop	r7
     848:	6f 90       	pop	r6
     84a:	5f 90       	pop	r5
     84c:	4f 90       	pop	r4
     84e:	3f 90       	pop	r3
     850:	2f 90       	pop	r2
     852:	08 95       	ret

00000854 <device_setHumidityToCurrent>:

void device_setHumidityToCurrent(device_t self, uint16_t value)
{
	currentCondition_setHumidity(self->currentCondition,value);
     854:	fc 01       	movw	r30, r24
     856:	84 81       	ldd	r24, Z+4	; 0x04
     858:	95 81       	ldd	r25, Z+5	; 0x05
     85a:	5b cf       	rjmp	.-330    	; 0x712 <currentCondition_setHumidity>
     85c:	08 95       	ret

0000085e <device_getHumidityData>:
}


uint16_t device_getHumidityData(device_t self)
{
	if (self->humAndTempReader!=NULL)
     85e:	fc 01       	movw	r30, r24
     860:	82 81       	ldd	r24, Z+2	; 0x02
     862:	93 81       	ldd	r25, Z+3	; 0x03
     864:	00 97       	sbiw	r24, 0x00	; 0
     866:	11 f0       	breq	.+4      	; 0x86c <device_getHumidityData+0xe>
	{
		return humAndTempReader_getHumidity(self->humAndTempReader);
     868:	b6 c1       	rjmp	.+876    	; 0xbd6 <humAndTempReader_getHumidity>
     86a:	08 95       	ret
	}
	else
	return -1;
     86c:	8f ef       	ldi	r24, 0xFF	; 255
     86e:	9f ef       	ldi	r25, 0xFF	; 255
}
     870:	08 95       	ret

00000872 <device_setCO2ToCurrent>:

void device_setCO2ToCurrent(device_t self, uint16_t value) {
	currentCondition_setCO2(self->currentCondition, value);
     872:	fc 01       	movw	r30, r24
     874:	84 81       	ldd	r24, Z+4	; 0x04
     876:	95 81       	ldd	r25, Z+5	; 0x05
     878:	46 cf       	rjmp	.-372    	; 0x706 <currentCondition_setCO2>
     87a:	08 95       	ret

0000087c <device_getCO2Data>:
}

uint16_t device_getCO2Data(device_t self) {
	if (self->co2reader != NULL)
     87c:	fc 01       	movw	r30, r24
     87e:	80 81       	ld	r24, Z
     880:	91 81       	ldd	r25, Z+1	; 0x01
     882:	00 97       	sbiw	r24, 0x00	; 0
     884:	11 f0       	breq	.+4      	; 0x88a <device_getCO2Data+0xe>
		return co2Reader_getCO2(self->co2reader);
     886:	f6 ce       	rjmp	.-532    	; 0x674 <co2Reader_getCO2>
     888:	08 95       	ret
	else return -1;
     88a:	8f ef       	ldi	r24, 0xFF	; 255
     88c:	9f ef       	ldi	r25, 0xFF	; 255
}
     88e:	08 95       	ret

00000890 <device_setTemperatureToCurrent>:

void device_setTemperatureToCurrent(device_t self, int16_t value)
{
	
	currentCondition_setTemperature(self->currentCondition,value);
     890:	fc 01       	movw	r30, r24
     892:	84 81       	ldd	r24, Z+4	; 0x04
     894:	95 81       	ldd	r25, Z+5	; 0x05
     896:	43 cf       	rjmp	.-378    	; 0x71e <currentCondition_setTemperature>
     898:	08 95       	ret

0000089a <device_getTemperatureData>:
}


int16_t device_getTemperatureData(device_t self)
{
	if (self->humAndTempReader!=NULL)
     89a:	fc 01       	movw	r30, r24
     89c:	82 81       	ldd	r24, Z+2	; 0x02
     89e:	93 81       	ldd	r25, Z+3	; 0x03
     8a0:	00 97       	sbiw	r24, 0x00	; 0
     8a2:	11 f0       	breq	.+4      	; 0x8a8 <device_getTemperatureData+0xe>
	{
		return humAndTempReader_getTemperature(self->humAndTempReader);
     8a4:	9c c1       	rjmp	.+824    	; 0xbde <humAndTempReader_getTemperature>
     8a6:	08 95       	ret
	}
	else
	return -1;
     8a8:	8f ef       	ldi	r24, 0xFF	; 255
     8aa:	9f ef       	ldi	r25, 0xFF	; 255
	
     8ac:	08 95       	ret

000008ae <device_startMeasuring>:
void device_executeTask(device_t self) {
	for (;;)
		device_startMeasuring(self);
}

void device_startMeasuring(device_t self) {
     8ae:	af 92       	push	r10
     8b0:	bf 92       	push	r11
     8b2:	cf 92       	push	r12
     8b4:	df 92       	push	r13
     8b6:	ef 92       	push	r14
     8b8:	ff 92       	push	r15
     8ba:	0f 93       	push	r16
     8bc:	1f 93       	push	r17
     8be:	cf 93       	push	r28
     8c0:	df 93       	push	r29
     8c2:	cd b7       	in	r28, 0x3d	; 61
     8c4:	de b7       	in	r29, 0x3e	; 62
     8c6:	66 97       	sbiw	r28, 0x16	; 22
     8c8:	0f b6       	in	r0, 0x3f	; 63
     8ca:	f8 94       	cli
     8cc:	de bf       	out	0x3e, r29	; 62
     8ce:	0f be       	out	0x3f, r0	; 63
     8d0:	cd bf       	out	0x3d, r28	; 61
     8d2:	5c 01       	movw	r10, r24
	//we should first check if device is on, get that from lora and add new eventBit 
	
	//-------------------------------------------	TEST ME !	-----------------------------------------------------------------------
	
	
	bool* works = pvPortMalloc(sizeof(bool));
     8d4:	81 e0       	ldi	r24, 0x01	; 1
     8d6:	90 e0       	ldi	r25, 0x00	; 0
     8d8:	b8 d4       	rcall	.+2416   	; 0x124a <pvPortMalloc>
     8da:	8c 01       	movw	r16, r24
	configuration_getWorking(works);
     8dc:	db de       	rcall	.-586    	; 0x694 <configuration_getWorking>
     8de:	f8 01       	movw	r30, r16
	if (*works == true)
     8e0:	80 81       	ld	r24, Z
     8e2:	88 23       	and	r24, r24
     8e4:	09 f4       	brne	.+2      	; 0x8e8 <device_startMeasuring+0x3a>
     8e6:	91 c0       	rjmp	.+290    	; 0xa0a <device_startMeasuring+0x15c>
     8e8:	40 91 90 08 	lds	r20, 0x0890	; 0x800890 <_startMeasureBit>


	//if ventilation needed -> ventilate 

	//tell sensors to start meassuring 
	xEventGroupSetBits(_startMeasureEventGroup, _startMeasureBit);
     8ec:	50 91 91 08 	lds	r21, 0x0891	; 0x800891 <_startMeasureBit+0x1>
     8f0:	60 91 92 08 	lds	r22, 0x0892	; 0x800892 <_startMeasureBit+0x2>
     8f4:	70 91 93 08 	lds	r23, 0x0893	; 0x800893 <_startMeasureBit+0x3>
     8f8:	80 91 94 08 	lds	r24, 0x0894	; 0x800894 <_startMeasureEventGroup>
     8fc:	90 91 95 08 	lds	r25, 0x0895	; 0x800895 <_startMeasureEventGroup+0x1>
     900:	be d3       	rcall	.+1916   	; 0x107e <xEventGroupSetBits>
     902:	81 ef       	ldi	r24, 0xF1	; 241
	printf("device has set bits\n");
     904:	92 e0       	ldi	r25, 0x02	; 2
     906:	0e 94 a6 2e 	call	0x5d4c	; 0x5d4c <puts>
     90a:	40 91 8a 08 	lds	r20, 0x088A	; 0x80088a <_readyBit>

	//wait for sensors to read data
	EventBits_t uxBits = xEventGroupWaitBits(_readyEventGroup, //eventGroup it is interested in
     90e:	50 91 8b 08 	lds	r21, 0x088B	; 0x80088b <_readyBit+0x1>
     912:	60 91 8c 08 	lds	r22, 0x088C	; 0x80088c <_readyBit+0x2>
     916:	70 91 8d 08 	lds	r23, 0x088D	; 0x80088d <_readyBit+0x3>
     91a:	cc 24       	eor	r12, r12
     91c:	ca 94       	dec	r12
     91e:	dc 2c       	mov	r13, r12
     920:	76 01       	movw	r14, r12
     922:	01 e0       	ldi	r16, 0x01	; 1
     924:	21 e0       	ldi	r18, 0x01	; 1
     926:	80 91 8e 08 	lds	r24, 0x088E	; 0x80088e <_readyEventGroup>
     92a:	90 91 8f 08 	lds	r25, 0x088F	; 0x80088f <_readyEventGroup+0x1>
     92e:	e7 d2       	rcall	.+1486   	; 0xefe <xEventGroupWaitBits>
     930:	00 91 8a 08 	lds	r16, 0x088A	; 0x80088a <_readyBit>
		_readyBit, //bits it is interested in
		pdTRUE, //clears the bits 
		pdTRUE, //waits for both bits to be set
		portMAX_DELAY); //waits forever if needed

	if ((uxBits & (_readyBit)) == (_readyBit)) {
     934:	10 91 8b 08 	lds	r17, 0x088B	; 0x80088b <_readyBit+0x1>
     938:	20 91 8c 08 	lds	r18, 0x088C	; 0x80088c <_readyBit+0x2>
     93c:	30 91 8d 08 	lds	r19, 0x088D	; 0x80088d <_readyBit+0x3>
     940:	dc 01       	movw	r26, r24
     942:	cb 01       	movw	r24, r22
     944:	80 23       	and	r24, r16
     946:	91 23       	and	r25, r17
     948:	a2 23       	and	r26, r18
     94a:	b3 23       	and	r27, r19
     94c:	08 17       	cp	r16, r24
     94e:	19 07       	cpc	r17, r25
     950:	2a 07       	cpc	r18, r26
     952:	3b 07       	cpc	r19, r27
     954:	09 f0       	breq	.+2      	; 0x958 <device_startMeasuring+0xaa>
     956:	5f c0       	rjmp	.+190    	; 0xa16 <device_startMeasuring+0x168>
		device_setCO2ToCurrent(self, device_getCO2Data(self));
     958:	c5 01       	movw	r24, r10
     95a:	90 df       	rcall	.-224    	; 0x87c <device_getCO2Data>
     95c:	bc 01       	movw	r22, r24
     95e:	c5 01       	movw	r24, r10
     960:	88 df       	rcall	.-240    	; 0x872 <device_setCO2ToCurrent>
		device_setTemperatureToCurrent(self, device_getTemperatureData(self));
     962:	c5 01       	movw	r24, r10
     964:	9a df       	rcall	.-204    	; 0x89a <device_getTemperatureData>
     966:	bc 01       	movw	r22, r24
     968:	c5 01       	movw	r24, r10
     96a:	92 df       	rcall	.-220    	; 0x890 <device_setTemperatureToCurrent>
		device_setHumidityToCurrent(self, device_getHumidityData(self));
     96c:	c5 01       	movw	r24, r10
     96e:	77 df       	rcall	.-274    	; 0x85e <device_getHumidityData>
     970:	bc 01       	movw	r22, r24
     972:	c5 01       	movw	r24, r10
     974:	6f df       	rcall	.-290    	; 0x854 <device_setHumidityToCurrent>
     976:	85 e0       	ldi	r24, 0x05	; 5
		
		printf("device got done bit\n");
     978:	93 e0       	ldi	r25, 0x03	; 3
     97a:	0e 94 a6 2e 	call	0x5d4c	; 0x5d4c <puts>
     97e:	c5 01       	movw	r24, r10
		
		printf("CO2 is: %u\n", device_getCO2Data(self));
     980:	7d df       	rcall	.-262    	; 0x87c <device_getCO2Data>
     982:	9f 93       	push	r25
     984:	8f 93       	push	r24
     986:	89 e1       	ldi	r24, 0x19	; 25
     988:	93 e0       	ldi	r25, 0x03	; 3
     98a:	9f 93       	push	r25
     98c:	8f 93       	push	r24
     98e:	0e 94 93 2e 	call	0x5d26	; 0x5d26 <printf>
     992:	c5 01       	movw	r24, r10
		printf("Temperature is: %d\n", device_getTemperatureData(self));
     994:	82 df       	rcall	.-252    	; 0x89a <device_getTemperatureData>
     996:	9f 93       	push	r25
     998:	8f 93       	push	r24
     99a:	85 e2       	ldi	r24, 0x25	; 37
     99c:	93 e0       	ldi	r25, 0x03	; 3
     99e:	9f 93       	push	r25
     9a0:	8f 93       	push	r24
     9a2:	0e 94 93 2e 	call	0x5d26	; 0x5d26 <printf>
     9a6:	c5 01       	movw	r24, r10
		printf("Humidity is: %u\n", device_getHumidityData(self));
     9a8:	5a df       	rcall	.-332    	; 0x85e <device_getHumidityData>
     9aa:	9f 93       	push	r25
     9ac:	8f 93       	push	r24
     9ae:	89 e3       	ldi	r24, 0x39	; 57
     9b0:	93 e0       	ldi	r25, 0x03	; 3
     9b2:	9f 93       	push	r25
     9b4:	8f 93       	push	r24
     9b6:	0e 94 93 2e 	call	0x5d26	; 0x5d26 <printf>
     9ba:	f5 01       	movw	r30, r10
		
		
		/*Perhaps loraPayload is not a good idea to be here*/
		_uplink_payload = getcurrentConditionPayload(self->currentCondition);
     9bc:	64 81       	ldd	r22, Z+4	; 0x04
     9be:	75 81       	ldd	r23, Z+5	; 0x05
     9c0:	ce 01       	movw	r24, r28
     9c2:	01 96       	adiw	r24, 0x01	; 1
     9c4:	b2 de       	rcall	.-668    	; 0x72a <getcurrentConditionPayload>
     9c6:	86 e1       	ldi	r24, 0x16	; 22
     9c8:	fe 01       	movw	r30, r28
     9ca:	31 96       	adiw	r30, 0x01	; 1
     9cc:	a2 e7       	ldi	r26, 0x72	; 114
     9ce:	b8 e0       	ldi	r27, 0x08	; 8
     9d0:	01 90       	ld	r0, Z+
     9d2:	0d 92       	st	X+, r0
     9d4:	8a 95       	dec	r24
     9d6:	e1 f7       	brne	.-8      	; 0x9d0 <device_startMeasuring+0x122>
     9d8:	68 ee       	ldi	r22, 0xE8	; 232
     9da:	73 e0       	ldi	r23, 0x03	; 3
		//if(_uplink_payload!=NULL)
		//{
		vTaskDelay(1000);
     9dc:	80 e0       	ldi	r24, 0x00	; 0
     9de:	90 e0       	ldi	r25, 0x00	; 0
     9e0:	0e 94 19 16 	call	0x2c32	; 0x2c32 <vTaskDelay>
     9e4:	0f ef       	ldi	r16, 0xFF	; 255
     9e6:	1f ef       	ldi	r17, 0xFF	; 255

		xMessageBufferSend(_uplinkmessageBuffer,(void*) &_uplink_payload,sizeof(_uplink_payload),portMAX_DELAY);
     9e8:	98 01       	movw	r18, r16
     9ea:	46 e1       	ldi	r20, 0x16	; 22
     9ec:	50 e0       	ldi	r21, 0x00	; 0
     9ee:	62 e7       	ldi	r22, 0x72	; 114
     9f0:	78 e0       	ldi	r23, 0x08	; 8
     9f2:	80 91 88 08 	lds	r24, 0x0888	; 0x800888 <_uplinkmessageBuffer>
     9f6:	90 91 89 08 	lds	r25, 0x0889	; 0x800889 <_uplinkmessageBuffer+0x1>
     9fa:	0e 94 29 11 	call	0x2252	; 0x2252 <xStreamBufferSend>
     9fe:	0f b6       	in	r0, 0x3f	; 63
     a00:	f8 94       	cli
     a02:	de bf       	out	0x3e, r29	; 62
     a04:	0f be       	out	0x3f, r0	; 63
     a06:	cd bf       	out	0x3d, r28	; 61
     a08:	06 c0       	rjmp	.+12     	; 0xa16 <device_startMeasuring+0x168>
     a0a:	68 e8       	ldi	r22, 0x88	; 136
     a0c:	73 e1       	ldi	r23, 0x13	; 19
		//}
		//else printf("Error when making loraPayload");
	}
	//if the device is not on, wait a bit and check if anything is changed
	}
	else vTaskDelay(5000);
     a0e:	80 e0       	ldi	r24, 0x00	; 0
     a10:	90 e0       	ldi	r25, 0x00	; 0
     a12:	0e 94 19 16 	call	0x2c32	; 0x2c32 <vTaskDelay>
     a16:	66 96       	adiw	r28, 0x16	; 22
     a18:	0f b6       	in	r0, 0x3f	; 63
}
     a1a:	f8 94       	cli
     a1c:	de bf       	out	0x3e, r29	; 62
     a1e:	0f be       	out	0x3f, r0	; 63
     a20:	cd bf       	out	0x3d, r28	; 61
     a22:	df 91       	pop	r29
     a24:	cf 91       	pop	r28
     a26:	1f 91       	pop	r17
     a28:	0f 91       	pop	r16
     a2a:	ff 90       	pop	r15
     a2c:	ef 90       	pop	r14
     a2e:	df 90       	pop	r13
     a30:	cf 90       	pop	r12
     a32:	bf 90       	pop	r11
     a34:	af 90       	pop	r10
     a36:	08 95       	ret

00000a38 <device_executeTask>:
     a38:	ec 01       	movw	r28, r24
     a3a:	ce 01       	movw	r24, r28
}

//devided so we can test
void device_executeTask(device_t self) {
	for (;;)
		device_startMeasuring(self);
     a3c:	38 df       	rcall	.-400    	; 0x8ae <device_startMeasuring>
     a3e:	fd cf       	rjmp	.-6      	; 0xa3a <device_executeTask+0x2>

00000a40 <humAndTempReader_create>:
void humAndTempReader_destroy(humAndTempReader_t self) {
	if (self == NULL)
	return;

	//delete will clear the allocated memory to the task + we need to remove everything else
	vTaskDelete(self->handleTask);
     a40:	2f 92       	push	r2
     a42:	3f 92       	push	r3
     a44:	4f 92       	push	r4
     a46:	5f 92       	push	r5
     a48:	6f 92       	push	r6
     a4a:	7f 92       	push	r7
     a4c:	8f 92       	push	r8
     a4e:	9f 92       	push	r9
     a50:	af 92       	push	r10
     a52:	bf 92       	push	r11
     a54:	cf 92       	push	r12
     a56:	df 92       	push	r13
     a58:	ef 92       	push	r14
     a5a:	ff 92       	push	r15
     a5c:	0f 93       	push	r16
     a5e:	1f 93       	push	r17
     a60:	cf 93       	push	r28
     a62:	df 93       	push	r29
     a64:	88 2e       	mov	r8, r24
     a66:	96 2e       	mov	r9, r22
     a68:	1a 01       	movw	r2, r20
     a6a:	28 01       	movw	r4, r16
     a6c:	39 01       	movw	r6, r18
     a6e:	61 e0       	ldi	r22, 0x01	; 1
     a70:	70 e0       	ldi	r23, 0x00	; 0
     a72:	86 e0       	ldi	r24, 0x06	; 6
     a74:	90 e0       	ldi	r25, 0x00	; 0
     a76:	0e 94 f5 2c 	call	0x59ea	; 0x59ea <calloc>
     a7a:	ec 01       	movw	r28, r24
     a7c:	00 97       	sbiw	r24, 0x00	; 0
     a7e:	71 f1       	breq	.+92     	; 0xadc <humAndTempReader_create+0x9c>
     a80:	19 82       	std	Y+1, r1	; 0x01
     a82:	18 82       	st	Y, r1
     a84:	1b 82       	std	Y+3, r1	; 0x03
     a86:	1a 82       	std	Y+2, r1	; 0x02
     a88:	30 92 a1 08 	sts	0x08A1, r3	; 0x8008a1 <_startMeasureEventGroup+0x1>
     a8c:	20 92 a0 08 	sts	0x08A0, r2	; 0x8008a0 <_startMeasureEventGroup>
     a90:	40 92 9c 08 	sts	0x089C, r4	; 0x80089c <_startMeasureBit>
     a94:	50 92 9d 08 	sts	0x089D, r5	; 0x80089d <_startMeasureBit+0x1>
     a98:	60 92 9e 08 	sts	0x089E, r6	; 0x80089e <_startMeasureBit+0x2>
     a9c:	70 92 9f 08 	sts	0x089F, r7	; 0x80089f <_startMeasureBit+0x3>
     aa0:	f0 92 9b 08 	sts	0x089B, r15	; 0x80089b <_readyEventGroup+0x1>
     aa4:	e0 92 9a 08 	sts	0x089A, r14	; 0x80089a <_readyEventGroup>
     aa8:	a0 92 96 08 	sts	0x0896, r10	; 0x800896 <_readyBit>
     aac:	b0 92 97 08 	sts	0x0897, r11	; 0x800897 <_readyBit+0x1>
     ab0:	c0 92 98 08 	sts	0x0898, r12	; 0x800898 <_readyBit+0x2>
     ab4:	d0 92 99 08 	sts	0x0899, r13	; 0x800899 <_readyBit+0x3>
     ab8:	49 2d       	mov	r20, r9
     aba:	50 e0       	ldi	r21, 0x00	; 0
     abc:	7c 01       	movw	r14, r24
     abe:	84 e0       	ldi	r24, 0x04	; 4
     ac0:	e8 0e       	add	r14, r24
     ac2:	f1 1c       	adc	r15, r1
     ac4:	08 2d       	mov	r16, r8
     ac6:	9e 01       	movw	r18, r28
     ac8:	6a e4       	ldi	r22, 0x4A	; 74
     aca:	73 e0       	ldi	r23, 0x03	; 3
     acc:	87 ee       	ldi	r24, 0xE7	; 231
     ace:	95 e0       	ldi	r25, 0x05	; 5
     ad0:	0e 94 59 13 	call	0x26b2	; 0x26b2 <xTaskCreate>
     ad4:	8b e5       	ldi	r24, 0x5B	; 91
     ad6:	93 e0       	ldi	r25, 0x03	; 3
     ad8:	0e 94 a6 2e 	call	0x5d4c	; 0x5d4c <puts>
     adc:	ce 01       	movw	r24, r28
     ade:	df 91       	pop	r29
     ae0:	cf 91       	pop	r28
     ae2:	1f 91       	pop	r17
     ae4:	0f 91       	pop	r16
     ae6:	ff 90       	pop	r15
     ae8:	ef 90       	pop	r14
     aea:	df 90       	pop	r13
     aec:	cf 90       	pop	r12
     aee:	bf 90       	pop	r11
     af0:	af 90       	pop	r10
     af2:	9f 90       	pop	r9
     af4:	8f 90       	pop	r8
     af6:	7f 90       	pop	r7
     af8:	6f 90       	pop	r6
     afa:	5f 90       	pop	r5
     afc:	4f 90       	pop	r4
     afe:	3f 90       	pop	r3
     b00:	2f 90       	pop	r2
     b02:	08 95       	ret

00000b04 <humAndTempReader_measure>:
	for (;;) {
		humAndTempReader_measure(self);
	}
}

void humAndTempReader_measure(humAndTempReader_t self) {//dummy
     b04:	cf 92       	push	r12
     b06:	df 92       	push	r13
     b08:	ef 92       	push	r14
     b0a:	ff 92       	push	r15
     b0c:	0f 93       	push	r16
     b0e:	1f 93       	push	r17
     b10:	cf 93       	push	r28
     b12:	df 93       	push	r29
     b14:	ec 01       	movw	r28, r24
	EventBits_t uxBits = xEventGroupWaitBits(_startMeasureEventGroup, //eventGroup
     b16:	40 91 9c 08 	lds	r20, 0x089C	; 0x80089c <_startMeasureBit>
     b1a:	50 91 9d 08 	lds	r21, 0x089D	; 0x80089d <_startMeasureBit+0x1>
     b1e:	60 91 9e 08 	lds	r22, 0x089E	; 0x80089e <_startMeasureBit+0x2>
     b22:	70 91 9f 08 	lds	r23, 0x089F	; 0x80089f <_startMeasureBit+0x3>
     b26:	cc 24       	eor	r12, r12
     b28:	ca 94       	dec	r12
     b2a:	dc 2c       	mov	r13, r12
     b2c:	76 01       	movw	r14, r12
     b2e:	01 e0       	ldi	r16, 0x01	; 1
     b30:	21 e0       	ldi	r18, 0x01	; 1
     b32:	80 91 a0 08 	lds	r24, 0x08A0	; 0x8008a0 <_startMeasureEventGroup>
     b36:	90 91 a1 08 	lds	r25, 0x08A1	; 0x8008a1 <_startMeasureEventGroup+0x1>
     b3a:	e1 d1       	rcall	.+962    	; 0xefe <xEventGroupWaitBits>
	_startMeasureBit, //bits it is interested i
	pdTRUE, //clears the bits
	pdTRUE, //waits for both bits to be set
	portMAX_DELAY); //wait

	if ((uxBits & (_startMeasureBit)) == (_startMeasureBit)) {
     b3c:	00 91 9c 08 	lds	r16, 0x089C	; 0x80089c <_startMeasureBit>
     b40:	10 91 9d 08 	lds	r17, 0x089D	; 0x80089d <_startMeasureBit+0x1>
     b44:	20 91 9e 08 	lds	r18, 0x089E	; 0x80089e <_startMeasureBit+0x2>
     b48:	30 91 9f 08 	lds	r19, 0x089F	; 0x80089f <_startMeasureBit+0x3>
     b4c:	dc 01       	movw	r26, r24
     b4e:	cb 01       	movw	r24, r22
     b50:	80 23       	and	r24, r16
     b52:	91 23       	and	r25, r17
     b54:	a2 23       	and	r26, r18
     b56:	b3 23       	and	r27, r19
     b58:	08 17       	cp	r16, r24
     b5a:	19 07       	cpc	r17, r25
     b5c:	2a 07       	cpc	r18, r26
     b5e:	3b 07       	cpc	r19, r27
     b60:	69 f5       	brne	.+90     	; 0xbbc <humAndTempReader_measure+0xb8>
		hih8120Wakeup();
     b62:	0e 94 b3 1d 	call	0x3b66	; 0x3b66 <hih8120Wakeup>
		vTaskDelay(50);
     b66:	62 e3       	ldi	r22, 0x32	; 50
     b68:	70 e0       	ldi	r23, 0x00	; 0
     b6a:	80 e0       	ldi	r24, 0x00	; 0
     b6c:	90 e0       	ldi	r25, 0x00	; 0
     b6e:	0e 94 19 16 	call	0x2c32	; 0x2c32 <vTaskDelay>
		hih8120Meassure();
     b72:	0e 94 c8 1d 	call	0x3b90	; 0x3b90 <hih8120Meassure>
		vTaskDelay(5);
     b76:	65 e0       	ldi	r22, 0x05	; 5
     b78:	70 e0       	ldi	r23, 0x00	; 0
     b7a:	80 e0       	ldi	r24, 0x00	; 0
     b7c:	90 e0       	ldi	r25, 0x00	; 0
     b7e:	0e 94 19 16 	call	0x2c32	; 0x2c32 <vTaskDelay>
		if(hih8120IsReady())
     b82:	0e 94 b0 1d 	call	0x3b60	; 0x3b60 <hih8120IsReady>
     b86:	88 23       	and	r24, r24
     b88:	61 f0       	breq	.+24     	; 0xba2 <humAndTempReader_measure+0x9e>
		{
			self->humidity = hih8120GetHumidityPercent_x10();
     b8a:	0e 94 ee 1d 	call	0x3bdc	; 0x3bdc <hih8120GetHumidityPercent_x10>
     b8e:	99 83       	std	Y+1, r25	; 0x01
     b90:	88 83       	st	Y, r24
			self->temperature = hih8120GetTemperature_x10();
     b92:	0e 94 14 1e 	call	0x3c28	; 0x3c28 <hih8120GetTemperature_x10>
     b96:	9b 83       	std	Y+3, r25	; 0x03
     b98:	8a 83       	std	Y+2, r24	; 0x02
			printf("humidity and temperature done bit set\n");
     b9a:	8a e7       	ldi	r24, 0x7A	; 122
     b9c:	93 e0       	ldi	r25, 0x03	; 3
     b9e:	0e 94 a6 2e 	call	0x5d4c	; 0x5d4c <puts>
		}
		//set done bit so that device knows meassurement is done
		xEventGroupSetBits(_readyEventGroup, _readyBit);
     ba2:	40 91 96 08 	lds	r20, 0x0896	; 0x800896 <_readyBit>
     ba6:	50 91 97 08 	lds	r21, 0x0897	; 0x800897 <_readyBit+0x1>
     baa:	60 91 98 08 	lds	r22, 0x0898	; 0x800898 <_readyBit+0x2>
     bae:	70 91 99 08 	lds	r23, 0x0899	; 0x800899 <_readyBit+0x3>
     bb2:	80 91 9a 08 	lds	r24, 0x089A	; 0x80089a <_readyEventGroup>
     bb6:	90 91 9b 08 	lds	r25, 0x089B	; 0x80089b <_readyEventGroup+0x1>
     bba:	61 d2       	rcall	.+1218   	; 0x107e <xEventGroupSetBits>
	}
}
     bbc:	df 91       	pop	r29
     bbe:	cf 91       	pop	r28
     bc0:	1f 91       	pop	r17
     bc2:	0f 91       	pop	r16
     bc4:	ff 90       	pop	r15
     bc6:	ef 90       	pop	r14
     bc8:	df 90       	pop	r13
     bca:	cf 90       	pop	r12
     bcc:	08 95       	ret

00000bce <humAndTempReader_executeTask>:
	//free(self->temperature);
	//free(self);
}

//actual task, methods devided so that it is possible to test
void humAndTempReader_executeTask(humAndTempReader_t self) {
     bce:	ec 01       	movw	r28, r24
	for (;;) {
		humAndTempReader_measure(self);
     bd0:	ce 01       	movw	r24, r28
     bd2:	98 df       	rcall	.-208    	; 0xb04 <humAndTempReader_measure>
     bd4:	fd cf       	rjmp	.-6      	; 0xbd0 <humAndTempReader_executeTask+0x2>

00000bd6 <humAndTempReader_getHumidity>:
	}
}

uint16_t humAndTempReader_getHumidity(humAndTempReader_t self){
	return self->humidity;
}
     bd6:	fc 01       	movw	r30, r24
     bd8:	80 81       	ld	r24, Z
     bda:	91 81       	ldd	r25, Z+1	; 0x01
     bdc:	08 95       	ret

00000bde <humAndTempReader_getTemperature>:

int16_t humAndTempReader_getTemperature(humAndTempReader_t self){
	return self->temperature;
}
     bde:	fc 01       	movw	r30, r24
     be0:	82 81       	ldd	r24, Z+2	; 0x02
     be2:	93 81       	ldd	r25, Z+3	; 0x03
     be4:	08 95       	ret

00000be6 <lora_UpLinkHandler_create>:
/*Check for the parameters*/



void lora_UpLinkHandler_create(UBaseType_t lora_handler_task_priority, MessageBufferHandle_t xMessageBuffer)
{
     be6:	ef 92       	push	r14
     be8:	ff 92       	push	r15
     bea:	0f 93       	push	r16
     bec:	9b 01       	movw	r18, r22
	_buffer = xMessageBuffer;
	
	
	
	xTaskCreate(
     bee:	e1 2c       	mov	r14, r1
     bf0:	f1 2c       	mov	r15, r1
     bf2:	08 2f       	mov	r16, r24
     bf4:	48 e8       	ldi	r20, 0x88	; 136
     bf6:	51 e0       	ldi	r21, 0x01	; 1
     bf8:	60 ea       	ldi	r22, 0xA0	; 160
     bfa:	73 e0       	ldi	r23, 0x03	; 3
     bfc:	8c e4       	ldi	r24, 0x4C	; 76
     bfe:	97 e0       	ldi	r25, 0x07	; 7
     c00:	0e 94 59 13 	call	0x26b2	; 0x26b2 <xTaskCreate>
	,  (const portCHAR *)"LRUpHand"  // A name just for humans
	,  configMINIMAL_STACK_SIZE+200  // This stack size can be checked & adjusted by reading the Stack Highwater
	,  xMessageBuffer
	,  lora_handler_task_priority  // Priority, with 3 (configMAX_PRIORITIES - 1) being the highest, and 0 being the lowest.
	,  NULL );
}
     c04:	0f 91       	pop	r16
     c06:	ff 90       	pop	r15
     c08:	ef 90       	pop	r14
     c0a:	08 95       	ret

00000c0c <lora_UpLinkHandler_task>:
	
	/*Receives message from message buffer shared between it and the application responsible for gathering the data
	--> Should be called every 5 minutes from application
	*/
	void lora_UpLinkHandler_task(MessageBufferHandle_t xMessageBuffer)
	{	
     c0c:	df 92       	push	r13
     c0e:	ef 92       	push	r14
     c10:	ff 92       	push	r15
     c12:	0f 93       	push	r16
     c14:	1f 93       	push	r17
     c16:	cf 93       	push	r28
     c18:	df 93       	push	r29
     c1a:	7c 01       	movw	r14, r24
		size_t xBytesToSend;
		char rxData[50];
		if (!isSet)
     c1c:	80 91 a2 08 	lds	r24, 0x08A2	; 0x8008a2 <isSet>
     c20:	81 11       	cpse	r24, r1
     c22:	d0 c0       	rjmp	.+416    	; 0xdc4 <lora_UpLinkHandler_task+0x1b8>
		{
			// Hardware reset of LoRaWAN transceiver
			lora_driver_reset_rn2483(1);
     c24:	81 e0       	ldi	r24, 0x01	; 1
     c26:	0e 94 34 21 	call	0x4268	; 0x4268 <lora_driver_reset_rn2483>
			vTaskDelay(2);
     c2a:	62 e0       	ldi	r22, 0x02	; 2
     c2c:	70 e0       	ldi	r23, 0x00	; 0
     c2e:	80 e0       	ldi	r24, 0x00	; 0
     c30:	90 e0       	ldi	r25, 0x00	; 0
     c32:	0e 94 19 16 	call	0x2c32	; 0x2c32 <vTaskDelay>
			lora_driver_reset_rn2483(0);
     c36:	80 e0       	ldi	r24, 0x00	; 0
     c38:	0e 94 34 21 	call	0x4268	; 0x4268 <lora_driver_reset_rn2483>
			// Give it a chance to wakeup
			vTaskDelay(150);
     c3c:	66 e9       	ldi	r22, 0x96	; 150
     c3e:	70 e0       	ldi	r23, 0x00	; 0
     c40:	80 e0       	ldi	r24, 0x00	; 0
     c42:	90 e0       	ldi	r25, 0x00	; 0
     c44:	0e 94 19 16 	call	0x2c32	; 0x2c32 <vTaskDelay>

			lora_driver_flush_buffers(); // get rid of first version string from module after reset!
     c48:	0e 94 ea 20 	call	0x41d4	; 0x41d4 <lora_driver_flush_buffers>


static void _lora_setup(void)
{
	e_LoRa_return_code_t rc;
	led_slow_blink(led_ST2); // OPTIONAL: Led the green led blink slowly while we are setting up LoRa
     c4c:	81 e0       	ldi	r24, 0x01	; 1
     c4e:	0e 94 42 1f 	call	0x3e84	; 0x3e84 <led_slow_blink>
	//The below code is required to be executed only once due to the fact that these MAC settings
	// can be stored inside of the tranciever
	//START ON ONE TIME USE CODE

	// Factory reset the transceiver
	printf("FactoryReset >%s<\n", lora_driver_map_return_code_to_text(lora_driver_rn2483_factory_reset()));
     c52:	0e 94 48 21 	call	0x4290	; 0x4290 <lora_driver_rn2483_factory_reset>
     c56:	0e 94 c5 23 	call	0x478a	; 0x478a <lora_driver_map_return_code_to_text>
     c5a:	9f 93       	push	r25
     c5c:	8f 93       	push	r24
     c5e:	89 ea       	ldi	r24, 0xA9	; 169
     c60:	93 e0       	ldi	r25, 0x03	; 3
     c62:	9f 93       	push	r25
     c64:	8f 93       	push	r24
     c66:	0e 94 93 2e 	call	0x5d26	; 0x5d26 <printf>
	
	// Configure to EU868 LoRaWAN standards
	printf("Configure to EU868 >%s<\n", lora_driver_map_return_code_to_text(lora_driver_configure_to_eu868()));
     c6a:	0e 94 c6 22 	call	0x458c	; 0x458c <lora_driver_configure_to_eu868>
     c6e:	0e 94 c5 23 	call	0x478a	; 0x478a <lora_driver_map_return_code_to_text>
     c72:	9f 93       	push	r25
     c74:	8f 93       	push	r24
     c76:	8c eb       	ldi	r24, 0xBC	; 188
     c78:	93 e0       	ldi	r25, 0x03	; 3
     c7a:	9f 93       	push	r25
     c7c:	8f 93       	push	r24
     c7e:	0e 94 93 2e 	call	0x5d26	; 0x5d26 <printf>

	// Get the transceivers HW EUI
	rc = lora_driver_get_rn2483_hweui(_out_buf);
     c82:	89 eb       	ldi	r24, 0xB9	; 185
     c84:	98 e0       	ldi	r25, 0x08	; 8
     c86:	0e 94 5a 21 	call	0x42b4	; 0x42b4 <lora_driver_get_rn2483_hweui>
	printf("Get HWEUI >%s<: %s\n",lora_driver_map_return_code_to_text(rc), _out_buf);
     c8a:	0e 94 c5 23 	call	0x478a	; 0x478a <lora_driver_map_return_code_to_text>
     c8e:	c9 eb       	ldi	r28, 0xB9	; 185
     c90:	d8 e0       	ldi	r29, 0x08	; 8
     c92:	df 93       	push	r29
     c94:	cf 93       	push	r28
     c96:	9f 93       	push	r25
     c98:	8f 93       	push	r24
     c9a:	85 ed       	ldi	r24, 0xD5	; 213
     c9c:	93 e0       	ldi	r25, 0x03	; 3
     c9e:	9f 93       	push	r25
     ca0:	8f 93       	push	r24
     ca2:	0e 94 93 2e 	call	0x5d26	; 0x5d26 <printf>

	// Set the HWEUI as DevEUI in the LoRaWAN software stack in the transceiver
	printf("Set DevEUI: %s >%s<\n", _out_buf, lora_driver_map_return_code_to_text(lora_driver_set_device_identifier(_out_buf)));
     ca6:	ce 01       	movw	r24, r28
     ca8:	0e 94 76 21 	call	0x42ec	; 0x42ec <lora_driver_set_device_identifier>
     cac:	0e 94 c5 23 	call	0x478a	; 0x478a <lora_driver_map_return_code_to_text>
     cb0:	9f 93       	push	r25
     cb2:	8f 93       	push	r24
     cb4:	df 93       	push	r29
     cb6:	cf 93       	push	r28
     cb8:	89 ee       	ldi	r24, 0xE9	; 233
     cba:	93 e0       	ldi	r25, 0x03	; 3
     cbc:	9f 93       	push	r25
     cbe:	8f 93       	push	r24
     cc0:	0e 94 93 2e 	call	0x5d26	; 0x5d26 <printf>

	// Set Over The Air Activation parameters to be ready to join the LoRaWAN
	printf("Set OTAA Identity appEUI:%s appKEY:%s devEUI:%s >%s<\n", LORA_appEUI, LORA_appKEY, _out_buf, lora_driver_map_return_code_to_text(lora_driver_set_otaa_identity(LORA_appEUI,LORA_appKEY,_out_buf)));
     cc4:	ae 01       	movw	r20, r28
     cc6:	6e ef       	ldi	r22, 0xFE	; 254
     cc8:	73 e0       	ldi	r23, 0x03	; 3
     cca:	8f e1       	ldi	r24, 0x1F	; 31
     ccc:	94 e0       	ldi	r25, 0x04	; 4
     cce:	0e 94 a4 23 	call	0x4748	; 0x4748 <lora_driver_set_otaa_identity>
     cd2:	0e 94 c5 23 	call	0x478a	; 0x478a <lora_driver_map_return_code_to_text>
     cd6:	9f 93       	push	r25
     cd8:	8f 93       	push	r24
     cda:	df 93       	push	r29
     cdc:	cf 93       	push	r28
     cde:	8e ef       	ldi	r24, 0xFE	; 254
     ce0:	93 e0       	ldi	r25, 0x03	; 3
     ce2:	9f 93       	push	r25
     ce4:	8f 93       	push	r24
     ce6:	8f e1       	ldi	r24, 0x1F	; 31
     ce8:	94 e0       	ldi	r25, 0x04	; 4
     cea:	9f 93       	push	r25
     cec:	8f 93       	push	r24
     cee:	80 e3       	ldi	r24, 0x30	; 48
     cf0:	94 e0       	ldi	r25, 0x04	; 4
     cf2:	9f 93       	push	r25
     cf4:	8f 93       	push	r24
     cf6:	0e 94 93 2e 	call	0x5d26	; 0x5d26 <printf>

	// Save all the MAC settings in the transceiver
	printf("Save mac >%s<\n",lora_driver_map_return_code_to_text(lora_driver_save_mac()));
     cfa:	0e 94 a9 21 	call	0x4352	; 0x4352 <lora_driver_save_mac>
     cfe:	0e 94 c5 23 	call	0x478a	; 0x478a <lora_driver_map_return_code_to_text>
     d02:	9f 93       	push	r25
     d04:	8f 93       	push	r24
     d06:	86 e6       	ldi	r24, 0x66	; 102
     d08:	94 e0       	ldi	r25, 0x04	; 4
     d0a:	9f 93       	push	r25
     d0c:	8f 93       	push	r24
     d0e:	0e 94 93 2e 	call	0x5d26	; 0x5d26 <printf>

	//END OF ONE TIME USE CODE
	
	
	// Enable Adaptive Data Rate
	printf("Set Adaptive Data Rate: ON >%s<\n", lora_driver_map_return_code_to_text(lora_driver_set_adaptive_data_rate(LoRa_ON)));
     d12:	8d b7       	in	r24, 0x3d	; 61
     d14:	9e b7       	in	r25, 0x3e	; 62
     d16:	82 96       	adiw	r24, 0x22	; 34
     d18:	0f b6       	in	r0, 0x3f	; 63
     d1a:	f8 94       	cli
     d1c:	9e bf       	out	0x3e, r25	; 62
     d1e:	0f be       	out	0x3f, r0	; 63
     d20:	8d bf       	out	0x3d, r24	; 61
     d22:	81 e0       	ldi	r24, 0x01	; 1
     d24:	0e 94 a3 22 	call	0x4546	; 0x4546 <lora_driver_set_adaptive_data_rate>
     d28:	0e 94 c5 23 	call	0x478a	; 0x478a <lora_driver_map_return_code_to_text>
     d2c:	9f 93       	push	r25
     d2e:	8f 93       	push	r24
     d30:	85 e7       	ldi	r24, 0x75	; 117
     d32:	94 e0       	ldi	r25, 0x04	; 4
     d34:	9f 93       	push	r25
     d36:	8f 93       	push	r24
     d38:	0e 94 93 2e 	call	0x5d26	; 0x5d26 <printf>

	// Set receiver window1 delay to 500 ms - this is needed if down-link messages will be used
	printf("Set Receiver Delay: %d ms >%s<\n", 500, lora_driver_map_return_code_to_text(lora_driver_set_receive_delay(500)));
     d3c:	84 ef       	ldi	r24, 0xF4	; 244
     d3e:	91 e0       	ldi	r25, 0x01	; 1
     d40:	0e 94 ae 22 	call	0x455c	; 0x455c <lora_driver_set_receive_delay>
     d44:	0e 94 c5 23 	call	0x478a	; 0x478a <lora_driver_map_return_code_to_text>
     d48:	9f 93       	push	r25
     d4a:	8f 93       	push	r24
     d4c:	81 e0       	ldi	r24, 0x01	; 1
     d4e:	8f 93       	push	r24
     d50:	84 ef       	ldi	r24, 0xF4	; 244
     d52:	8f 93       	push	r24
     d54:	86 e9       	ldi	r24, 0x96	; 150
     d56:	94 e0       	ldi	r25, 0x04	; 4
     d58:	9f 93       	push	r25
     d5a:	8f 93       	push	r24
     d5c:	0e 94 93 2e 	call	0x5d26	; 0x5d26 <printf>
     d60:	8d b7       	in	r24, 0x3d	; 61
     d62:	9e b7       	in	r25, 0x3e	; 62
     d64:	0a 96       	adiw	r24, 0x0a	; 10
     d66:	0f b6       	in	r0, 0x3f	; 63
     d68:	f8 94       	cli
     d6a:	9e bf       	out	0x3e, r25	; 62
     d6c:	0f be       	out	0x3f, r0	; 63
     d6e:	8d bf       	out	0x3d, r24	; 61
     d70:	ca e0       	ldi	r28, 0x0A	; 10
     d72:	d0 e0       	ldi	r29, 0x00	; 0
	// Join the LoRaWAN
	uint8_t maxJoinTriesLeft = 10;
	
	do {
		rc = lora_driver_join(LoRa_OTAA);
		printf("Join Network TriesLeft:%d >%s<\n", maxJoinTriesLeft, lora_driver_map_return_code_to_text(rc));
     d74:	06 eb       	ldi	r16, 0xB6	; 182
     d76:	14 e0       	ldi	r17, 0x04	; 4

	// Join the LoRaWAN
	uint8_t maxJoinTriesLeft = 10;
	
	do {
		rc = lora_driver_join(LoRa_OTAA);
     d78:	80 e0       	ldi	r24, 0x00	; 0
     d7a:	0e 94 af 21 	call	0x435e	; 0x435e <lora_driver_join>
     d7e:	d8 2e       	mov	r13, r24
		printf("Join Network TriesLeft:%d >%s<\n", maxJoinTriesLeft, lora_driver_map_return_code_to_text(rc));
     d80:	0e 94 c5 23 	call	0x478a	; 0x478a <lora_driver_map_return_code_to_text>
     d84:	9f 93       	push	r25
     d86:	8f 93       	push	r24
     d88:	df 93       	push	r29
     d8a:	cf 93       	push	r28
     d8c:	1f 93       	push	r17
     d8e:	0f 93       	push	r16
     d90:	0e 94 93 2e 	call	0x5d26	; 0x5d26 <printf>

		if ( rc != LoRa_ACCEPTED)
     d94:	0f 90       	pop	r0
     d96:	0f 90       	pop	r0
     d98:	0f 90       	pop	r0
     d9a:	0f 90       	pop	r0
     d9c:	0f 90       	pop	r0
     d9e:	0f 90       	pop	r0
     da0:	88 e0       	ldi	r24, 0x08	; 8
     da2:	d8 16       	cp	r13, r24
     da4:	09 f4       	brne	.+2      	; 0xda8 <lora_UpLinkHandler_task+0x19c>
     da6:	62 c0       	rjmp	.+196    	; 0xe6c <lora_UpLinkHandler_task+0x260>
		{
			// Make the red led pulse to tell something went wrong
			led_long_puls(led_ST1); // OPTIONAL
     da8:	80 e0       	ldi	r24, 0x00	; 0
     daa:	0e 94 ae 1f 	call	0x3f5c	; 0x3f5c <led_long_puls>
			// Wait 5 sec and lets try again
			vTaskDelay(pdMS_TO_TICKS(5000UL));
     dae:	66 e3       	ldi	r22, 0x36	; 54
     db0:	71 e0       	ldi	r23, 0x01	; 1
     db2:	80 e0       	ldi	r24, 0x00	; 0
     db4:	90 e0       	ldi	r25, 0x00	; 0
     db6:	0e 94 19 16 	call	0x2c32	; 0x2c32 <vTaskDelay>
     dba:	21 97       	sbiw	r28, 0x01	; 1
		}
		else
		{
			break;
		}
	} while (--maxJoinTriesLeft);
     dbc:	e9 f6       	brne	.-70     	; 0xd78 <lora_UpLinkHandler_task+0x16c>
     dbe:	5d c0       	rjmp	.+186    	; 0xe7a <lora_UpLinkHandler_task+0x26e>
		led_fast_blink(led_ST1); // OPTIONAL

		// Lets stay here
		while (1)
		{
			taskYIELD();
     dc0:	76 d4       	rcall	.+2284   	; 0x16ae <vPortYield>
     dc2:	fe cf       	rjmp	.-4      	; 0xdc0 <lora_UpLinkHandler_task+0x1b4>
			isSet=true;
		}
		

		
		xBytesToSend = xMessageBufferReceive(xMessageBuffer, (void*) &_uplink_payload,
     dc4:	00 e0       	ldi	r16, 0x00	; 0
     dc6:	10 e0       	ldi	r17, 0x00	; 0
     dc8:	98 01       	movw	r18, r16
     dca:	42 e3       	ldi	r20, 0x32	; 50
     dcc:	50 e0       	ldi	r21, 0x00	; 0
     dce:	63 ea       	ldi	r22, 0xA3	; 163
     dd0:	78 e0       	ldi	r23, 0x08	; 8
     dd2:	c7 01       	movw	r24, r14
     dd4:	0e 94 16 12 	call	0x242c	; 0x242c <xStreamBufferReceive>
		sizeof(rxData),0);
		if(xBytesToSend >= sizeof(uint8_t)*2)
     dd8:	02 97       	sbiw	r24, 0x02	; 2
     dda:	08 f4       	brcc	.+2      	; 0xdde <lora_UpLinkHandler_task+0x1d2>
     ddc:	40 c0       	rjmp	.+128    	; 0xe5e <lora_UpLinkHandler_task+0x252>
			//_uplink_payload = (_uplink_payload) &rxData;
			
			/**< Status led ST4 (BLUE)*/
			//Makes the led light up in a short period.
			
			led_short_puls(led_ST4);
     dde:	83 e0       	ldi	r24, 0x03	; 3
     de0:	0e 94 c0 1f 	call	0x3f80	; 0x3f80 <led_short_puls>
			//_uplink_payload.port_no = 1;
			//_uplink_payload.len = 4;
			
			printf("The temperature in upLink is: %d\n", _uplink_payload.bytes[0]);
     de4:	c3 ea       	ldi	r28, 0xA3	; 163
     de6:	d8 e0       	ldi	r29, 0x08	; 8
     de8:	8a 81       	ldd	r24, Y+2	; 0x02
     dea:	1f 92       	push	r1
     dec:	8f 93       	push	r24
     dee:	86 ed       	ldi	r24, 0xD6	; 214
     df0:	94 e0       	ldi	r25, 0x04	; 4
     df2:	9f 93       	push	r25
     df4:	8f 93       	push	r24
     df6:	0e 94 93 2e 	call	0x5d26	; 0x5d26 <printf>
			printf("The temperature2 in upLink is: %d\n", _uplink_payload.bytes[1]);
     dfa:	8b 81       	ldd	r24, Y+3	; 0x03
     dfc:	1f 92       	push	r1
     dfe:	8f 93       	push	r24
     e00:	88 ef       	ldi	r24, 0xF8	; 248
     e02:	94 e0       	ldi	r25, 0x04	; 4
     e04:	9f 93       	push	r25
     e06:	8f 93       	push	r24
     e08:	0e 94 93 2e 	call	0x5d26	; 0x5d26 <printf>
			printf("The humidity in upLink is: %u\n", _uplink_payload.bytes[2]);
     e0c:	8c 81       	ldd	r24, Y+4	; 0x04
     e0e:	1f 92       	push	r1
     e10:	8f 93       	push	r24
     e12:	8b e1       	ldi	r24, 0x1B	; 27
     e14:	95 e0       	ldi	r25, 0x05	; 5
     e16:	9f 93       	push	r25
     e18:	8f 93       	push	r24
     e1a:	0e 94 93 2e 	call	0x5d26	; 0x5d26 <printf>
			printf("The humidity2 in upLink is: %u\n", _uplink_payload.bytes[3]);
     e1e:	8d 81       	ldd	r24, Y+5	; 0x05
     e20:	1f 92       	push	r1
     e22:	8f 93       	push	r24
     e24:	8a e3       	ldi	r24, 0x3A	; 58
     e26:	95 e0       	ldi	r25, 0x05	; 5
     e28:	9f 93       	push	r25
     e2a:	8f 93       	push	r24
     e2c:	0e 94 93 2e 	call	0x5d26	; 0x5d26 <printf>
			
			
			printf("Upload Message >%s<\n", lora_driver_map_return_code_to_text(lora_driver_sent_upload_message(false, &_uplink_payload)));
     e30:	be 01       	movw	r22, r28
     e32:	80 e0       	ldi	r24, 0x00	; 0
     e34:	0e 94 d8 21 	call	0x43b0	; 0x43b0 <lora_driver_sent_upload_message>
     e38:	0e 94 c5 23 	call	0x478a	; 0x478a <lora_driver_map_return_code_to_text>
     e3c:	9f 93       	push	r25
     e3e:	8f 93       	push	r24
     e40:	8a e5       	ldi	r24, 0x5A	; 90
     e42:	95 e0       	ldi	r25, 0x05	; 5
     e44:	9f 93       	push	r25
     e46:	8f 93       	push	r24
     e48:	0e 94 93 2e 	call	0x5d26	; 0x5d26 <printf>
     e4c:	8d b7       	in	r24, 0x3d	; 61
     e4e:	9e b7       	in	r25, 0x3e	; 62
     e50:	44 96       	adiw	r24, 0x14	; 20
     e52:	0f b6       	in	r0, 0x3f	; 63
     e54:	f8 94       	cli
     e56:	9e bf       	out	0x3e, r25	; 62
     e58:	0f be       	out	0x3f, r0	; 63
     e5a:	8d bf       	out	0x3d, r24	; 61
     e5c:	15 c0       	rjmp	.+42     	; 0xe88 <lora_UpLinkHandler_task+0x27c>
		}
		else
		{
			vTaskDelay(2000);
     e5e:	60 ed       	ldi	r22, 0xD0	; 208
     e60:	77 e0       	ldi	r23, 0x07	; 7
     e62:	80 e0       	ldi	r24, 0x00	; 0
     e64:	90 e0       	ldi	r25, 0x00	; 0
     e66:	0e 94 19 16 	call	0x2c32	; 0x2c32 <vTaskDelay>
		}
	}
     e6a:	0e c0       	rjmp	.+28     	; 0xe88 <lora_UpLinkHandler_task+0x27c>

	if (rc == LoRa_ACCEPTED)
	{
		// Connected to LoRaWAN :-)
		// Make the green led steady
		led_led_on(led_ST2); // OPTIONAL
     e6c:	81 e0       	ldi	r24, 0x01	; 1
     e6e:	0e 94 90 1f 	call	0x3f20	; 0x3f20 <led_led_on>
			vTaskDelay(150);

			lora_driver_flush_buffers(); // get rid of first version string from module after reset!

			_lora_setup();
			isSet=true;
     e72:	81 e0       	ldi	r24, 0x01	; 1
     e74:	80 93 a2 08 	sts	0x08A2, r24	; 0x8008a2 <isSet>
     e78:	a5 cf       	rjmp	.-182    	; 0xdc4 <lora_UpLinkHandler_task+0x1b8>
	}
	else
	{
		// Something went wrong
		// Turn off the green led
		led_led_off(led_ST2); // OPTIONAL
     e7a:	81 e0       	ldi	r24, 0x01	; 1
     e7c:	0e 94 9f 1f 	call	0x3f3e	; 0x3f3e <led_led_off>
		// Make the red led blink fast to tell something went wrong
		led_fast_blink(led_ST1); // OPTIONAL
     e80:	80 e0       	ldi	r24, 0x00	; 0
     e82:	0e 94 69 1f 	call	0x3ed2	; 0x3ed2 <led_fast_blink>
     e86:	9c cf       	rjmp	.-200    	; 0xdc0 <lora_UpLinkHandler_task+0x1b4>
		}
		else
		{
			vTaskDelay(2000);
		}
	}
     e88:	df 91       	pop	r29
     e8a:	cf 91       	pop	r28
     e8c:	1f 91       	pop	r17
     e8e:	0f 91       	pop	r16
     e90:	ff 90       	pop	r15
     e92:	ef 90       	pop	r14
     e94:	df 90       	pop	r13
     e96:	08 95       	ret

00000e98 <lora_UpLinkHandler_startTask>:
	
	void lora_UpLinkHandler_startTask(MessageBufferHandle_t xMessageBuffer){
     e98:	ec 01       	movw	r28, r24
		for(;;)
		{
			lora_UpLinkHandler_task(xMessageBuffer);
     e9a:	ce 01       	movw	r24, r28
     e9c:	b7 de       	rcall	.-658    	; 0xc0c <lora_UpLinkHandler_task>
			vTaskDelay(3000);
     e9e:	68 eb       	ldi	r22, 0xB8	; 184
     ea0:	7b e0       	ldi	r23, 0x0B	; 11
     ea2:	80 e0       	ldi	r24, 0x00	; 0
     ea4:	90 e0       	ldi	r25, 0x00	; 0
     ea6:	0e 94 19 16 	call	0x2c32	; 0x2c32 <vTaskDelay>
     eaa:	f7 cf       	rjmp	.-18     	; 0xe9a <lora_UpLinkHandler_startTask+0x2>

00000eac <trace_init>:
     eac:	e7 e0       	ldi	r30, 0x07	; 7
     eae:	f1 e0       	ldi	r31, 0x01	; 1
     eb0:	80 81       	ld	r24, Z
     eb2:	8f 60       	ori	r24, 0x0F	; 15
     eb4:	80 83       	st	Z, r24
     eb6:	08 95       	ret

00000eb8 <task_switch_in>:
     eb8:	e8 e0       	ldi	r30, 0x08	; 8
     eba:	f1 e0       	ldi	r31, 0x01	; 1
     ebc:	90 81       	ld	r25, Z
     ebe:	90 7f       	andi	r25, 0xF0	; 240
     ec0:	90 83       	st	Z, r25
     ec2:	90 81       	ld	r25, Z
     ec4:	8f 70       	andi	r24, 0x0F	; 15
     ec6:	98 2b       	or	r25, r24
     ec8:	90 83       	st	Z, r25
     eca:	08 95       	ret

00000ecc <task_switch_out>:
     ecc:	e8 e0       	ldi	r30, 0x08	; 8
     ece:	f1 e0       	ldi	r31, 0x01	; 1
     ed0:	80 81       	ld	r24, Z
     ed2:	80 7f       	andi	r24, 0xF0	; 240
     ed4:	80 83       	st	Z, r24
     ed6:	08 95       	ret

00000ed8 <xEventGroupCreate>:
     ed8:	cf 93       	push	r28
     eda:	df 93       	push	r29
     edc:	80 e1       	ldi	r24, 0x10	; 16
     ede:	90 e0       	ldi	r25, 0x00	; 0
     ee0:	b4 d1       	rcall	.+872    	; 0x124a <pvPortMalloc>
     ee2:	ec 01       	movw	r28, r24
     ee4:	00 97       	sbiw	r24, 0x00	; 0
     ee6:	39 f0       	breq	.+14     	; 0xef6 <xEventGroupCreate+0x1e>
     ee8:	fc 01       	movw	r30, r24
     eea:	11 92       	st	Z+, r1
     eec:	11 92       	st	Z+, r1
     eee:	11 92       	st	Z+, r1
     ef0:	11 92       	st	Z+, r1
     ef2:	cf 01       	movw	r24, r30
     ef4:	94 d2       	rcall	.+1320   	; 0x141e <vListInitialise>
     ef6:	ce 01       	movw	r24, r28
     ef8:	df 91       	pop	r29
     efa:	cf 91       	pop	r28
     efc:	08 95       	ret

00000efe <xEventGroupWaitBits>:
     efe:	2f 92       	push	r2
     f00:	3f 92       	push	r3
     f02:	4f 92       	push	r4
     f04:	5f 92       	push	r5
     f06:	6f 92       	push	r6
     f08:	7f 92       	push	r7
     f0a:	8f 92       	push	r8
     f0c:	9f 92       	push	r9
     f0e:	af 92       	push	r10
     f10:	bf 92       	push	r11
     f12:	cf 92       	push	r12
     f14:	df 92       	push	r13
     f16:	ef 92       	push	r14
     f18:	ff 92       	push	r15
     f1a:	0f 93       	push	r16
     f1c:	1f 93       	push	r17
     f1e:	cf 93       	push	r28
     f20:	df 93       	push	r29
     f22:	ec 01       	movw	r28, r24
     f24:	4a 01       	movw	r8, r20
     f26:	5b 01       	movw	r10, r22
     f28:	62 2e       	mov	r6, r18
     f2a:	70 2e       	mov	r7, r16
     f2c:	0e 94 b4 14 	call	0x2968	; 0x2968 <vTaskSuspendAll>
     f30:	28 80       	ld	r2, Y
     f32:	39 80       	ldd	r3, Y+1	; 0x01
     f34:	4a 80       	ldd	r4, Y+2	; 0x02
     f36:	5b 80       	ldd	r5, Y+3	; 0x03
     f38:	01 11       	cpse	r16, r1
     f3a:	0d c0       	rjmp	.+26     	; 0xf56 <xEventGroupWaitBits+0x58>
     f3c:	81 e0       	ldi	r24, 0x01	; 1
     f3e:	b2 01       	movw	r22, r4
     f40:	a1 01       	movw	r20, r2
     f42:	48 21       	and	r20, r8
     f44:	59 21       	and	r21, r9
     f46:	6a 21       	and	r22, r10
     f48:	7b 21       	and	r23, r11
     f4a:	45 2b       	or	r20, r21
     f4c:	46 2b       	or	r20, r22
     f4e:	47 2b       	or	r20, r23
     f50:	79 f4       	brne	.+30     	; 0xf70 <xEventGroupWaitBits+0x72>
     f52:	80 e0       	ldi	r24, 0x00	; 0
     f54:	0d c0       	rjmp	.+26     	; 0xf70 <xEventGroupWaitBits+0x72>
     f56:	81 e0       	ldi	r24, 0x01	; 1
     f58:	b2 01       	movw	r22, r4
     f5a:	a1 01       	movw	r20, r2
     f5c:	48 21       	and	r20, r8
     f5e:	59 21       	and	r21, r9
     f60:	6a 21       	and	r22, r10
     f62:	7b 21       	and	r23, r11
     f64:	48 15       	cp	r20, r8
     f66:	59 05       	cpc	r21, r9
     f68:	6a 05       	cpc	r22, r10
     f6a:	7b 05       	cpc	r23, r11
     f6c:	09 f0       	breq	.+2      	; 0xf70 <xEventGroupWaitBits+0x72>
     f6e:	80 e0       	ldi	r24, 0x00	; 0
     f70:	88 23       	and	r24, r24
     f72:	81 f0       	breq	.+32     	; 0xf94 <xEventGroupWaitBits+0x96>
     f74:	66 20       	and	r6, r6
     f76:	09 f4       	brne	.+2      	; 0xf7a <xEventGroupWaitBits+0x7c>
     f78:	6b c0       	rjmp	.+214    	; 0x1050 <xEventGroupWaitBits+0x152>
     f7a:	80 94       	com	r8
     f7c:	90 94       	com	r9
     f7e:	a0 94       	com	r10
     f80:	b0 94       	com	r11
     f82:	82 20       	and	r8, r2
     f84:	93 20       	and	r9, r3
     f86:	a4 20       	and	r10, r4
     f88:	b5 20       	and	r11, r5
     f8a:	88 82       	st	Y, r8
     f8c:	99 82       	std	Y+1, r9	; 0x01
     f8e:	aa 82       	std	Y+2, r10	; 0x02
     f90:	bb 82       	std	Y+3, r11	; 0x03
     f92:	5e c0       	rjmp	.+188    	; 0x1050 <xEventGroupWaitBits+0x152>
     f94:	c1 14       	cp	r12, r1
     f96:	d1 04       	cpc	r13, r1
     f98:	e1 04       	cpc	r14, r1
     f9a:	f1 04       	cpc	r15, r1
     f9c:	09 f4       	brne	.+2      	; 0xfa0 <xEventGroupWaitBits+0xa2>
     f9e:	58 c0       	rjmp	.+176    	; 0x1050 <xEventGroupWaitBits+0x152>
     fa0:	66 20       	and	r6, r6
     fa2:	29 f0       	breq	.+10     	; 0xfae <xEventGroupWaitBits+0xb0>
     fa4:	40 e0       	ldi	r20, 0x00	; 0
     fa6:	50 e0       	ldi	r21, 0x00	; 0
     fa8:	60 e0       	ldi	r22, 0x00	; 0
     faa:	71 e0       	ldi	r23, 0x01	; 1
     fac:	03 c0       	rjmp	.+6      	; 0xfb4 <xEventGroupWaitBits+0xb6>
     fae:	40 e0       	ldi	r20, 0x00	; 0
     fb0:	50 e0       	ldi	r21, 0x00	; 0
     fb2:	ba 01       	movw	r22, r20
     fb4:	71 10       	cpse	r7, r1
     fb6:	74 60       	ori	r23, 0x04	; 4
     fb8:	48 29       	or	r20, r8
     fba:	59 29       	or	r21, r9
     fbc:	6a 29       	or	r22, r10
     fbe:	7b 29       	or	r23, r11
     fc0:	97 01       	movw	r18, r14
     fc2:	86 01       	movw	r16, r12
     fc4:	ce 01       	movw	r24, r28
     fc6:	04 96       	adiw	r24, 0x04	; 4
     fc8:	0e 94 c8 16 	call	0x2d90	; 0x2d90 <vTaskPlaceOnUnorderedEventList>
     fcc:	0e 94 9d 15 	call	0x2b3a	; 0x2b3a <xTaskResumeAll>
     fd0:	81 11       	cpse	r24, r1
     fd2:	01 c0       	rjmp	.+2      	; 0xfd6 <xEventGroupWaitBits+0xd8>
     fd4:	6c d3       	rcall	.+1752   	; 0x16ae <vPortYield>
     fd6:	0e 94 0f 19 	call	0x321e	; 0x321e <uxTaskResetEventItemValue>
     fda:	91 fd       	sbrc	r25, 1
     fdc:	35 c0       	rjmp	.+106    	; 0x1048 <xEventGroupWaitBits+0x14a>
     fde:	0f b6       	in	r0, 0x3f	; 63
     fe0:	f8 94       	cli
     fe2:	0f 92       	push	r0
     fe4:	68 81       	ld	r22, Y
     fe6:	79 81       	ldd	r23, Y+1	; 0x01
     fe8:	8a 81       	ldd	r24, Y+2	; 0x02
     fea:	9b 81       	ldd	r25, Y+3	; 0x03
     fec:	71 10       	cpse	r7, r1
     fee:	0d c0       	rjmp	.+26     	; 0x100a <xEventGroupWaitBits+0x10c>
     ff0:	21 e0       	ldi	r18, 0x01	; 1
     ff2:	75 01       	movw	r14, r10
     ff4:	64 01       	movw	r12, r8
     ff6:	c6 22       	and	r12, r22
     ff8:	d7 22       	and	r13, r23
     ffa:	e8 22       	and	r14, r24
     ffc:	f9 22       	and	r15, r25
     ffe:	cd 28       	or	r12, r13
    1000:	ce 28       	or	r12, r14
    1002:	cf 28       	or	r12, r15
    1004:	79 f4       	brne	.+30     	; 0x1024 <xEventGroupWaitBits+0x126>
    1006:	20 e0       	ldi	r18, 0x00	; 0
    1008:	0d c0       	rjmp	.+26     	; 0x1024 <xEventGroupWaitBits+0x126>
    100a:	21 e0       	ldi	r18, 0x01	; 1
    100c:	75 01       	movw	r14, r10
    100e:	64 01       	movw	r12, r8
    1010:	c6 22       	and	r12, r22
    1012:	d7 22       	and	r13, r23
    1014:	e8 22       	and	r14, r24
    1016:	f9 22       	and	r15, r25
    1018:	c8 14       	cp	r12, r8
    101a:	d9 04       	cpc	r13, r9
    101c:	ea 04       	cpc	r14, r10
    101e:	fb 04       	cpc	r15, r11
    1020:	09 f0       	breq	.+2      	; 0x1024 <xEventGroupWaitBits+0x126>
    1022:	20 e0       	ldi	r18, 0x00	; 0
    1024:	22 23       	and	r18, r18
    1026:	71 f0       	breq	.+28     	; 0x1044 <xEventGroupWaitBits+0x146>
    1028:	66 20       	and	r6, r6
    102a:	61 f0       	breq	.+24     	; 0x1044 <xEventGroupWaitBits+0x146>
    102c:	80 94       	com	r8
    102e:	90 94       	com	r9
    1030:	a0 94       	com	r10
    1032:	b0 94       	com	r11
    1034:	86 22       	and	r8, r22
    1036:	97 22       	and	r9, r23
    1038:	a8 22       	and	r10, r24
    103a:	b9 22       	and	r11, r25
    103c:	88 82       	st	Y, r8
    103e:	99 82       	std	Y+1, r9	; 0x01
    1040:	aa 82       	std	Y+2, r10	; 0x02
    1042:	bb 82       	std	Y+3, r11	; 0x03
    1044:	0f 90       	pop	r0
    1046:	0f be       	out	0x3f, r0	; 63
    1048:	1b 01       	movw	r2, r22
    104a:	2c 01       	movw	r4, r24
    104c:	55 24       	eor	r5, r5
    104e:	02 c0       	rjmp	.+4      	; 0x1054 <xEventGroupWaitBits+0x156>
    1050:	0e 94 9d 15 	call	0x2b3a	; 0x2b3a <xTaskResumeAll>
    1054:	c2 01       	movw	r24, r4
    1056:	b1 01       	movw	r22, r2
    1058:	df 91       	pop	r29
    105a:	cf 91       	pop	r28
    105c:	1f 91       	pop	r17
    105e:	0f 91       	pop	r16
    1060:	ff 90       	pop	r15
    1062:	ef 90       	pop	r14
    1064:	df 90       	pop	r13
    1066:	cf 90       	pop	r12
    1068:	bf 90       	pop	r11
    106a:	af 90       	pop	r10
    106c:	9f 90       	pop	r9
    106e:	8f 90       	pop	r8
    1070:	7f 90       	pop	r7
    1072:	6f 90       	pop	r6
    1074:	5f 90       	pop	r5
    1076:	4f 90       	pop	r4
    1078:	3f 90       	pop	r3
    107a:	2f 90       	pop	r2
    107c:	08 95       	ret

0000107e <xEventGroupSetBits>:
    107e:	4f 92       	push	r4
    1080:	5f 92       	push	r5
    1082:	6f 92       	push	r6
    1084:	7f 92       	push	r7
    1086:	8f 92       	push	r8
    1088:	9f 92       	push	r9
    108a:	af 92       	push	r10
    108c:	bf 92       	push	r11
    108e:	cf 92       	push	r12
    1090:	df 92       	push	r13
    1092:	ef 92       	push	r14
    1094:	ff 92       	push	r15
    1096:	0f 93       	push	r16
    1098:	1f 93       	push	r17
    109a:	cf 93       	push	r28
    109c:	df 93       	push	r29
    109e:	ec 01       	movw	r28, r24
    10a0:	6a 01       	movw	r12, r20
    10a2:	7b 01       	movw	r14, r22
    10a4:	8c 01       	movw	r16, r24
    10a6:	09 5f       	subi	r16, 0xF9	; 249
    10a8:	1f 4f       	sbci	r17, 0xFF	; 255
    10aa:	0e 94 b4 14 	call	0x2968	; 0x2968 <vTaskSuspendAll>
    10ae:	eb 85       	ldd	r30, Y+11	; 0x0b
    10b0:	fc 85       	ldd	r31, Y+12	; 0x0c
    10b2:	88 81       	ld	r24, Y
    10b4:	99 81       	ldd	r25, Y+1	; 0x01
    10b6:	aa 81       	ldd	r26, Y+2	; 0x02
    10b8:	bb 81       	ldd	r27, Y+3	; 0x03
    10ba:	c8 2a       	or	r12, r24
    10bc:	d9 2a       	or	r13, r25
    10be:	ea 2a       	or	r14, r26
    10c0:	fb 2a       	or	r15, r27
    10c2:	c8 82       	st	Y, r12
    10c4:	d9 82       	std	Y+1, r13	; 0x01
    10c6:	ea 82       	std	Y+2, r14	; 0x02
    10c8:	fb 82       	std	Y+3, r15	; 0x03
    10ca:	0e 17       	cp	r16, r30
    10cc:	1f 07       	cpc	r17, r31
    10ce:	09 f4       	brne	.+2      	; 0x10d2 <xEventGroupSetBits+0x54>
    10d0:	45 c0       	rjmp	.+138    	; 0x115c <xEventGroupSetBits+0xde>
    10d2:	c1 2c       	mov	r12, r1
    10d4:	d1 2c       	mov	r13, r1
    10d6:	76 01       	movw	r14, r12
    10d8:	99 24       	eor	r9, r9
    10da:	93 94       	inc	r9
    10dc:	81 2c       	mov	r8, r1
    10de:	a4 80       	ldd	r10, Z+4	; 0x04
    10e0:	b5 80       	ldd	r11, Z+5	; 0x05
    10e2:	80 81       	ld	r24, Z
    10e4:	91 81       	ldd	r25, Z+1	; 0x01
    10e6:	a2 81       	ldd	r26, Z+2	; 0x02
    10e8:	b3 81       	ldd	r27, Z+3	; 0x03
    10ea:	ac 01       	movw	r20, r24
    10ec:	bd 01       	movw	r22, r26
    10ee:	77 27       	eor	r23, r23
    10f0:	b2 fd       	sbrc	r27, 2
    10f2:	0f c0       	rjmp	.+30     	; 0x1112 <xEventGroupSetBits+0x94>
    10f4:	48 80       	ld	r4, Y
    10f6:	59 80       	ldd	r5, Y+1	; 0x01
    10f8:	6a 80       	ldd	r6, Y+2	; 0x02
    10fa:	7b 80       	ldd	r7, Y+3	; 0x03
    10fc:	44 22       	and	r4, r20
    10fe:	55 22       	and	r5, r21
    1100:	66 22       	and	r6, r22
    1102:	77 22       	and	r7, r23
    1104:	29 2d       	mov	r18, r9
    1106:	45 28       	or	r4, r5
    1108:	46 28       	or	r4, r6
    110a:	47 28       	or	r4, r7
    110c:	89 f4       	brne	.+34     	; 0x1130 <xEventGroupSetBits+0xb2>
    110e:	28 2d       	mov	r18, r8
    1110:	0f c0       	rjmp	.+30     	; 0x1130 <xEventGroupSetBits+0xb2>
    1112:	48 80       	ld	r4, Y
    1114:	59 80       	ldd	r5, Y+1	; 0x01
    1116:	6a 80       	ldd	r6, Y+2	; 0x02
    1118:	7b 80       	ldd	r7, Y+3	; 0x03
    111a:	44 22       	and	r4, r20
    111c:	55 22       	and	r5, r21
    111e:	66 22       	and	r6, r22
    1120:	77 22       	and	r7, r23
    1122:	29 2d       	mov	r18, r9
    1124:	44 16       	cp	r4, r20
    1126:	55 06       	cpc	r5, r21
    1128:	66 06       	cpc	r6, r22
    112a:	77 06       	cpc	r7, r23
    112c:	09 f0       	breq	.+2      	; 0x1130 <xEventGroupSetBits+0xb2>
    112e:	28 2d       	mov	r18, r8
    1130:	22 23       	and	r18, r18
    1132:	71 f0       	breq	.+28     	; 0x1150 <xEventGroupSetBits+0xd2>
    1134:	b0 ff       	sbrs	r27, 0
    1136:	04 c0       	rjmp	.+8      	; 0x1140 <xEventGroupSetBits+0xc2>
    1138:	c4 2a       	or	r12, r20
    113a:	d5 2a       	or	r13, r21
    113c:	e6 2a       	or	r14, r22
    113e:	f7 2a       	or	r15, r23
    1140:	48 81       	ld	r20, Y
    1142:	59 81       	ldd	r21, Y+1	; 0x01
    1144:	6a 81       	ldd	r22, Y+2	; 0x02
    1146:	7b 81       	ldd	r23, Y+3	; 0x03
    1148:	72 60       	ori	r23, 0x02	; 2
    114a:	cf 01       	movw	r24, r30
    114c:	0e 94 4e 17 	call	0x2e9c	; 0x2e9c <vTaskRemoveFromUnorderedEventList>
    1150:	ea 2d       	mov	r30, r10
    1152:	fb 2d       	mov	r31, r11
    1154:	0e 17       	cp	r16, r30
    1156:	1f 07       	cpc	r17, r31
    1158:	11 f6       	brne	.-124    	; 0x10de <xEventGroupSetBits+0x60>
    115a:	03 c0       	rjmp	.+6      	; 0x1162 <xEventGroupSetBits+0xe4>
    115c:	c1 2c       	mov	r12, r1
    115e:	d1 2c       	mov	r13, r1
    1160:	76 01       	movw	r14, r12
    1162:	c0 94       	com	r12
    1164:	d0 94       	com	r13
    1166:	e0 94       	com	r14
    1168:	f0 94       	com	r15
    116a:	88 81       	ld	r24, Y
    116c:	99 81       	ldd	r25, Y+1	; 0x01
    116e:	aa 81       	ldd	r26, Y+2	; 0x02
    1170:	bb 81       	ldd	r27, Y+3	; 0x03
    1172:	c8 22       	and	r12, r24
    1174:	d9 22       	and	r13, r25
    1176:	ea 22       	and	r14, r26
    1178:	fb 22       	and	r15, r27
    117a:	c8 82       	st	Y, r12
    117c:	d9 82       	std	Y+1, r13	; 0x01
    117e:	ea 82       	std	Y+2, r14	; 0x02
    1180:	fb 82       	std	Y+3, r15	; 0x03
    1182:	0e 94 9d 15 	call	0x2b3a	; 0x2b3a <xTaskResumeAll>
    1186:	68 81       	ld	r22, Y
    1188:	79 81       	ldd	r23, Y+1	; 0x01
    118a:	8a 81       	ldd	r24, Y+2	; 0x02
    118c:	9b 81       	ldd	r25, Y+3	; 0x03
    118e:	df 91       	pop	r29
    1190:	cf 91       	pop	r28
    1192:	1f 91       	pop	r17
    1194:	0f 91       	pop	r16
    1196:	ff 90       	pop	r15
    1198:	ef 90       	pop	r14
    119a:	df 90       	pop	r13
    119c:	cf 90       	pop	r12
    119e:	bf 90       	pop	r11
    11a0:	af 90       	pop	r10
    11a2:	9f 90       	pop	r9
    11a4:	8f 90       	pop	r8
    11a6:	7f 90       	pop	r7
    11a8:	6f 90       	pop	r6
    11aa:	5f 90       	pop	r5
    11ac:	4f 90       	pop	r4
    11ae:	08 95       	ret

000011b0 <prvInsertBlockIntoFreeList>:
    11b0:	cf 93       	push	r28
    11b2:	df 93       	push	r29
    11b4:	dc 01       	movw	r26, r24
    11b6:	e5 e2       	ldi	r30, 0x25	; 37
    11b8:	f9 e0       	ldi	r31, 0x09	; 9
    11ba:	01 c0       	rjmp	.+2      	; 0x11be <prvInsertBlockIntoFreeList+0xe>
    11bc:	f9 01       	movw	r30, r18
    11be:	20 81       	ld	r18, Z
    11c0:	31 81       	ldd	r19, Z+1	; 0x01
    11c2:	2a 17       	cp	r18, r26
    11c4:	3b 07       	cpc	r19, r27
    11c6:	d0 f3       	brcs	.-12     	; 0x11bc <prvInsertBlockIntoFreeList+0xc>
    11c8:	82 81       	ldd	r24, Z+2	; 0x02
    11ca:	93 81       	ldd	r25, Z+3	; 0x03
    11cc:	af 01       	movw	r20, r30
    11ce:	48 0f       	add	r20, r24
    11d0:	59 1f       	adc	r21, r25
    11d2:	a4 17       	cp	r26, r20
    11d4:	b5 07       	cpc	r27, r21
    11d6:	49 f4       	brne	.+18     	; 0x11ea <prvInsertBlockIntoFreeList+0x3a>
    11d8:	12 96       	adiw	r26, 0x02	; 2
    11da:	4d 91       	ld	r20, X+
    11dc:	5c 91       	ld	r21, X
    11de:	13 97       	sbiw	r26, 0x03	; 3
    11e0:	84 0f       	add	r24, r20
    11e2:	95 1f       	adc	r25, r21
    11e4:	93 83       	std	Z+3, r25	; 0x03
    11e6:	82 83       	std	Z+2, r24	; 0x02
    11e8:	df 01       	movw	r26, r30
    11ea:	12 96       	adiw	r26, 0x02	; 2
    11ec:	8d 91       	ld	r24, X+
    11ee:	9c 91       	ld	r25, X
    11f0:	13 97       	sbiw	r26, 0x03	; 3
    11f2:	ed 01       	movw	r28, r26
    11f4:	c8 0f       	add	r28, r24
    11f6:	d9 1f       	adc	r29, r25
    11f8:	2c 17       	cp	r18, r28
    11fa:	3d 07       	cpc	r19, r29
    11fc:	d9 f4       	brne	.+54     	; 0x1234 <prvInsertBlockIntoFreeList+0x84>
    11fe:	20 91 23 09 	lds	r18, 0x0923	; 0x800923 <pxEnd>
    1202:	30 91 24 09 	lds	r19, 0x0924	; 0x800924 <pxEnd+0x1>
    1206:	c2 17       	cp	r28, r18
    1208:	d3 07       	cpc	r29, r19
    120a:	81 f0       	breq	.+32     	; 0x122c <prvInsertBlockIntoFreeList+0x7c>
    120c:	2a 81       	ldd	r18, Y+2	; 0x02
    120e:	3b 81       	ldd	r19, Y+3	; 0x03
    1210:	82 0f       	add	r24, r18
    1212:	93 1f       	adc	r25, r19
    1214:	13 96       	adiw	r26, 0x03	; 3
    1216:	9c 93       	st	X, r25
    1218:	8e 93       	st	-X, r24
    121a:	12 97       	sbiw	r26, 0x02	; 2
    121c:	c0 81       	ld	r28, Z
    121e:	d1 81       	ldd	r29, Z+1	; 0x01
    1220:	88 81       	ld	r24, Y
    1222:	99 81       	ldd	r25, Y+1	; 0x01
    1224:	11 96       	adiw	r26, 0x01	; 1
    1226:	9c 93       	st	X, r25
    1228:	8e 93       	st	-X, r24
    122a:	07 c0       	rjmp	.+14     	; 0x123a <prvInsertBlockIntoFreeList+0x8a>
    122c:	11 96       	adiw	r26, 0x01	; 1
    122e:	dc 93       	st	X, r29
    1230:	ce 93       	st	-X, r28
    1232:	03 c0       	rjmp	.+6      	; 0x123a <prvInsertBlockIntoFreeList+0x8a>
    1234:	11 96       	adiw	r26, 0x01	; 1
    1236:	3c 93       	st	X, r19
    1238:	2e 93       	st	-X, r18
    123a:	ae 17       	cp	r26, r30
    123c:	bf 07       	cpc	r27, r31
    123e:	11 f0       	breq	.+4      	; 0x1244 <prvInsertBlockIntoFreeList+0x94>
    1240:	b1 83       	std	Z+1, r27	; 0x01
    1242:	a0 83       	st	Z, r26
    1244:	df 91       	pop	r29
    1246:	cf 91       	pop	r28
    1248:	08 95       	ret

0000124a <pvPortMalloc>:
    124a:	cf 92       	push	r12
    124c:	df 92       	push	r13
    124e:	ef 92       	push	r14
    1250:	ff 92       	push	r15
    1252:	0f 93       	push	r16
    1254:	1f 93       	push	r17
    1256:	cf 93       	push	r28
    1258:	df 93       	push	r29
    125a:	ec 01       	movw	r28, r24
    125c:	0e 94 b4 14 	call	0x2968	; 0x2968 <vTaskSuspendAll>
    1260:	80 91 23 09 	lds	r24, 0x0923	; 0x800923 <pxEnd>
    1264:	90 91 24 09 	lds	r25, 0x0924	; 0x800924 <pxEnd+0x1>
    1268:	89 2b       	or	r24, r25
    126a:	41 f5       	brne	.+80     	; 0x12bc <pvPortMalloc+0x72>
    126c:	e5 e2       	ldi	r30, 0x25	; 37
    126e:	f9 e0       	ldi	r31, 0x09	; 9
    1270:	a9 e2       	ldi	r26, 0x29	; 41
    1272:	b9 e0       	ldi	r27, 0x09	; 9
    1274:	b1 83       	std	Z+1, r27	; 0x01
    1276:	a0 83       	st	Z, r26
    1278:	13 82       	std	Z+3, r1	; 0x03
    127a:	12 82       	std	Z+2, r1	; 0x02
    127c:	e5 ec       	ldi	r30, 0xC5	; 197
    127e:	f8 e1       	ldi	r31, 0x18	; 24
    1280:	f0 93 24 09 	sts	0x0924, r31	; 0x800924 <pxEnd+0x1>
    1284:	e0 93 23 09 	sts	0x0923, r30	; 0x800923 <pxEnd>
    1288:	13 82       	std	Z+3, r1	; 0x03
    128a:	12 82       	std	Z+2, r1	; 0x02
    128c:	11 82       	std	Z+1, r1	; 0x01
    128e:	10 82       	st	Z, r1
    1290:	8c e9       	ldi	r24, 0x9C	; 156
    1292:	9f e0       	ldi	r25, 0x0F	; 15
    1294:	13 96       	adiw	r26, 0x03	; 3
    1296:	9c 93       	st	X, r25
    1298:	8e 93       	st	-X, r24
    129a:	12 97       	sbiw	r26, 0x02	; 2
    129c:	ed 93       	st	X+, r30
    129e:	fc 93       	st	X, r31
    12a0:	90 93 20 09 	sts	0x0920, r25	; 0x800920 <xMinimumEverFreeBytesRemaining+0x1>
    12a4:	80 93 1f 09 	sts	0x091F, r24	; 0x80091f <xMinimumEverFreeBytesRemaining>
    12a8:	90 93 22 09 	sts	0x0922, r25	; 0x800922 <xFreeBytesRemaining+0x1>
    12ac:	80 93 21 09 	sts	0x0921, r24	; 0x800921 <xFreeBytesRemaining>
    12b0:	80 e0       	ldi	r24, 0x00	; 0
    12b2:	90 e8       	ldi	r25, 0x80	; 128
    12b4:	90 93 1e 09 	sts	0x091E, r25	; 0x80091e <xBlockAllocatedBit+0x1>
    12b8:	80 93 1d 09 	sts	0x091D, r24	; 0x80091d <xBlockAllocatedBit>
    12bc:	e0 90 1d 09 	lds	r14, 0x091D	; 0x80091d <xBlockAllocatedBit>
    12c0:	f0 90 1e 09 	lds	r15, 0x091E	; 0x80091e <xBlockAllocatedBit+0x1>
    12c4:	c7 01       	movw	r24, r14
    12c6:	8c 23       	and	r24, r28
    12c8:	9d 23       	and	r25, r29
    12ca:	89 2b       	or	r24, r25
    12cc:	09 f0       	breq	.+2      	; 0x12d0 <pvPortMalloc+0x86>
    12ce:	66 c0       	rjmp	.+204    	; 0x139c <pvPortMalloc+0x152>
    12d0:	20 97       	sbiw	r28, 0x00	; 0
    12d2:	09 f4       	brne	.+2      	; 0x12d6 <pvPortMalloc+0x8c>
    12d4:	66 c0       	rjmp	.+204    	; 0x13a2 <pvPortMalloc+0x158>
    12d6:	ae 01       	movw	r20, r28
    12d8:	4c 5f       	subi	r20, 0xFC	; 252
    12da:	5f 4f       	sbci	r21, 0xFF	; 255
    12dc:	09 f4       	brne	.+2      	; 0x12e0 <pvPortMalloc+0x96>
    12de:	5e c0       	rjmp	.+188    	; 0x139c <pvPortMalloc+0x152>
    12e0:	00 91 21 09 	lds	r16, 0x0921	; 0x800921 <xFreeBytesRemaining>
    12e4:	10 91 22 09 	lds	r17, 0x0922	; 0x800922 <xFreeBytesRemaining+0x1>
    12e8:	04 17       	cp	r16, r20
    12ea:	15 07       	cpc	r17, r21
    12ec:	08 f4       	brcc	.+2      	; 0x12f0 <pvPortMalloc+0xa6>
    12ee:	56 c0       	rjmp	.+172    	; 0x139c <pvPortMalloc+0x152>
    12f0:	c0 91 25 09 	lds	r28, 0x0925	; 0x800925 <xStart>
    12f4:	d0 91 26 09 	lds	r29, 0x0926	; 0x800926 <xStart+0x1>
    12f8:	e5 e2       	ldi	r30, 0x25	; 37
    12fa:	f9 e0       	ldi	r31, 0x09	; 9
    12fc:	02 c0       	rjmp	.+4      	; 0x1302 <pvPortMalloc+0xb8>
    12fe:	fe 01       	movw	r30, r28
    1300:	e9 01       	movw	r28, r18
    1302:	2a 81       	ldd	r18, Y+2	; 0x02
    1304:	3b 81       	ldd	r19, Y+3	; 0x03
    1306:	24 17       	cp	r18, r20
    1308:	35 07       	cpc	r19, r21
    130a:	28 f4       	brcc	.+10     	; 0x1316 <pvPortMalloc+0xcc>
    130c:	28 81       	ld	r18, Y
    130e:	39 81       	ldd	r19, Y+1	; 0x01
    1310:	21 15       	cp	r18, r1
    1312:	31 05       	cpc	r19, r1
    1314:	a1 f7       	brne	.-24     	; 0x12fe <pvPortMalloc+0xb4>
    1316:	80 91 23 09 	lds	r24, 0x0923	; 0x800923 <pxEnd>
    131a:	90 91 24 09 	lds	r25, 0x0924	; 0x800924 <pxEnd+0x1>
    131e:	c8 17       	cp	r28, r24
    1320:	d9 07       	cpc	r29, r25
    1322:	e1 f1       	breq	.+120    	; 0x139c <pvPortMalloc+0x152>
    1324:	c0 80       	ld	r12, Z
    1326:	d1 80       	ldd	r13, Z+1	; 0x01
    1328:	84 e0       	ldi	r24, 0x04	; 4
    132a:	c8 0e       	add	r12, r24
    132c:	d1 1c       	adc	r13, r1
    132e:	88 81       	ld	r24, Y
    1330:	99 81       	ldd	r25, Y+1	; 0x01
    1332:	91 83       	std	Z+1, r25	; 0x01
    1334:	80 83       	st	Z, r24
    1336:	2a 81       	ldd	r18, Y+2	; 0x02
    1338:	3b 81       	ldd	r19, Y+3	; 0x03
    133a:	24 1b       	sub	r18, r20
    133c:	35 0b       	sbc	r19, r21
    133e:	29 30       	cpi	r18, 0x09	; 9
    1340:	31 05       	cpc	r19, r1
    1342:	48 f0       	brcs	.+18     	; 0x1356 <pvPortMalloc+0x10c>
    1344:	ce 01       	movw	r24, r28
    1346:	84 0f       	add	r24, r20
    1348:	95 1f       	adc	r25, r21
    134a:	fc 01       	movw	r30, r24
    134c:	33 83       	std	Z+3, r19	; 0x03
    134e:	22 83       	std	Z+2, r18	; 0x02
    1350:	5b 83       	std	Y+3, r21	; 0x03
    1352:	4a 83       	std	Y+2, r20	; 0x02
    1354:	2d df       	rcall	.-422    	; 0x11b0 <prvInsertBlockIntoFreeList>
    1356:	8a 81       	ldd	r24, Y+2	; 0x02
    1358:	9b 81       	ldd	r25, Y+3	; 0x03
    135a:	08 1b       	sub	r16, r24
    135c:	19 0b       	sbc	r17, r25
    135e:	10 93 22 09 	sts	0x0922, r17	; 0x800922 <xFreeBytesRemaining+0x1>
    1362:	00 93 21 09 	sts	0x0921, r16	; 0x800921 <xFreeBytesRemaining>
    1366:	20 91 1f 09 	lds	r18, 0x091F	; 0x80091f <xMinimumEverFreeBytesRemaining>
    136a:	30 91 20 09 	lds	r19, 0x0920	; 0x800920 <xMinimumEverFreeBytesRemaining+0x1>
    136e:	02 17       	cp	r16, r18
    1370:	13 07       	cpc	r17, r19
    1372:	20 f4       	brcc	.+8      	; 0x137c <pvPortMalloc+0x132>
    1374:	10 93 20 09 	sts	0x0920, r17	; 0x800920 <xMinimumEverFreeBytesRemaining+0x1>
    1378:	00 93 1f 09 	sts	0x091F, r16	; 0x80091f <xMinimumEverFreeBytesRemaining>
    137c:	e8 2a       	or	r14, r24
    137e:	f9 2a       	or	r15, r25
    1380:	fb 82       	std	Y+3, r15	; 0x03
    1382:	ea 82       	std	Y+2, r14	; 0x02
    1384:	19 82       	std	Y+1, r1	; 0x01
    1386:	18 82       	st	Y, r1
    1388:	0e 94 9d 15 	call	0x2b3a	; 0x2b3a <xTaskResumeAll>
    138c:	c1 14       	cp	r12, r1
    138e:	d1 04       	cpc	r13, r1
    1390:	59 f4       	brne	.+22     	; 0x13a8 <pvPortMalloc+0x15e>
    1392:	0e 94 70 1c 	call	0x38e0	; 0x38e0 <vApplicationMallocFailedHook>
    1396:	c1 2c       	mov	r12, r1
    1398:	d1 2c       	mov	r13, r1
    139a:	06 c0       	rjmp	.+12     	; 0x13a8 <pvPortMalloc+0x15e>
    139c:	0e 94 9d 15 	call	0x2b3a	; 0x2b3a <xTaskResumeAll>
    13a0:	f8 cf       	rjmp	.-16     	; 0x1392 <pvPortMalloc+0x148>
    13a2:	0e 94 9d 15 	call	0x2b3a	; 0x2b3a <xTaskResumeAll>
    13a6:	f5 cf       	rjmp	.-22     	; 0x1392 <pvPortMalloc+0x148>
    13a8:	c6 01       	movw	r24, r12
    13aa:	df 91       	pop	r29
    13ac:	cf 91       	pop	r28
    13ae:	1f 91       	pop	r17
    13b0:	0f 91       	pop	r16
    13b2:	ff 90       	pop	r15
    13b4:	ef 90       	pop	r14
    13b6:	df 90       	pop	r13
    13b8:	cf 90       	pop	r12
    13ba:	08 95       	ret

000013bc <vPortFree>:
    13bc:	cf 93       	push	r28
    13be:	df 93       	push	r29
    13c0:	00 97       	sbiw	r24, 0x00	; 0
    13c2:	51 f1       	breq	.+84     	; 0x1418 <vPortFree+0x5c>
    13c4:	fc 01       	movw	r30, r24
    13c6:	34 97       	sbiw	r30, 0x04	; 4
    13c8:	22 81       	ldd	r18, Z+2	; 0x02
    13ca:	33 81       	ldd	r19, Z+3	; 0x03
    13cc:	40 91 1d 09 	lds	r20, 0x091D	; 0x80091d <xBlockAllocatedBit>
    13d0:	50 91 1e 09 	lds	r21, 0x091E	; 0x80091e <xBlockAllocatedBit+0x1>
    13d4:	b9 01       	movw	r22, r18
    13d6:	64 23       	and	r22, r20
    13d8:	75 23       	and	r23, r21
    13da:	67 2b       	or	r22, r23
    13dc:	e9 f0       	breq	.+58     	; 0x1418 <vPortFree+0x5c>
    13de:	60 81       	ld	r22, Z
    13e0:	71 81       	ldd	r23, Z+1	; 0x01
    13e2:	67 2b       	or	r22, r23
    13e4:	c9 f4       	brne	.+50     	; 0x1418 <vPortFree+0x5c>
    13e6:	ef 01       	movw	r28, r30
    13e8:	40 95       	com	r20
    13ea:	50 95       	com	r21
    13ec:	24 23       	and	r18, r20
    13ee:	35 23       	and	r19, r21
    13f0:	33 83       	std	Z+3, r19	; 0x03
    13f2:	22 83       	std	Z+2, r18	; 0x02
    13f4:	0e 94 b4 14 	call	0x2968	; 0x2968 <vTaskSuspendAll>
    13f8:	20 91 21 09 	lds	r18, 0x0921	; 0x800921 <xFreeBytesRemaining>
    13fc:	30 91 22 09 	lds	r19, 0x0922	; 0x800922 <xFreeBytesRemaining+0x1>
    1400:	8a 81       	ldd	r24, Y+2	; 0x02
    1402:	9b 81       	ldd	r25, Y+3	; 0x03
    1404:	82 0f       	add	r24, r18
    1406:	93 1f       	adc	r25, r19
    1408:	90 93 22 09 	sts	0x0922, r25	; 0x800922 <xFreeBytesRemaining+0x1>
    140c:	80 93 21 09 	sts	0x0921, r24	; 0x800921 <xFreeBytesRemaining>
    1410:	ce 01       	movw	r24, r28
    1412:	ce de       	rcall	.-612    	; 0x11b0 <prvInsertBlockIntoFreeList>
    1414:	0e 94 9d 15 	call	0x2b3a	; 0x2b3a <xTaskResumeAll>
    1418:	df 91       	pop	r29
    141a:	cf 91       	pop	r28
    141c:	08 95       	ret

0000141e <vListInitialise>:
    141e:	fc 01       	movw	r30, r24
    1420:	03 96       	adiw	r24, 0x03	; 3
    1422:	92 83       	std	Z+2, r25	; 0x02
    1424:	81 83       	std	Z+1, r24	; 0x01
    1426:	4f ef       	ldi	r20, 0xFF	; 255
    1428:	5f ef       	ldi	r21, 0xFF	; 255
    142a:	ba 01       	movw	r22, r20
    142c:	43 83       	std	Z+3, r20	; 0x03
    142e:	54 83       	std	Z+4, r21	; 0x04
    1430:	65 83       	std	Z+5, r22	; 0x05
    1432:	76 83       	std	Z+6, r23	; 0x06
    1434:	90 87       	std	Z+8, r25	; 0x08
    1436:	87 83       	std	Z+7, r24	; 0x07
    1438:	92 87       	std	Z+10, r25	; 0x0a
    143a:	81 87       	std	Z+9, r24	; 0x09
    143c:	10 82       	st	Z, r1
    143e:	08 95       	ret

00001440 <vListInitialiseItem>:
    1440:	fc 01       	movw	r30, r24
    1442:	13 86       	std	Z+11, r1	; 0x0b
    1444:	12 86       	std	Z+10, r1	; 0x0a
    1446:	08 95       	ret

00001448 <vListInsertEnd>:
    1448:	cf 93       	push	r28
    144a:	df 93       	push	r29
    144c:	9c 01       	movw	r18, r24
    144e:	fb 01       	movw	r30, r22
    1450:	dc 01       	movw	r26, r24
    1452:	11 96       	adiw	r26, 0x01	; 1
    1454:	cd 91       	ld	r28, X+
    1456:	dc 91       	ld	r29, X
    1458:	12 97       	sbiw	r26, 0x02	; 2
    145a:	d5 83       	std	Z+5, r29	; 0x05
    145c:	c4 83       	std	Z+4, r28	; 0x04
    145e:	8e 81       	ldd	r24, Y+6	; 0x06
    1460:	9f 81       	ldd	r25, Y+7	; 0x07
    1462:	97 83       	std	Z+7, r25	; 0x07
    1464:	86 83       	std	Z+6, r24	; 0x06
    1466:	8e 81       	ldd	r24, Y+6	; 0x06
    1468:	9f 81       	ldd	r25, Y+7	; 0x07
    146a:	dc 01       	movw	r26, r24
    146c:	15 96       	adiw	r26, 0x05	; 5
    146e:	7c 93       	st	X, r23
    1470:	6e 93       	st	-X, r22
    1472:	14 97       	sbiw	r26, 0x04	; 4
    1474:	7f 83       	std	Y+7, r23	; 0x07
    1476:	6e 83       	std	Y+6, r22	; 0x06
    1478:	33 87       	std	Z+11, r19	; 0x0b
    147a:	22 87       	std	Z+10, r18	; 0x0a
    147c:	f9 01       	movw	r30, r18
    147e:	80 81       	ld	r24, Z
    1480:	8f 5f       	subi	r24, 0xFF	; 255
    1482:	80 83       	st	Z, r24
    1484:	df 91       	pop	r29
    1486:	cf 91       	pop	r28
    1488:	08 95       	ret

0000148a <vListInsert>:
    148a:	0f 93       	push	r16
    148c:	1f 93       	push	r17
    148e:	cf 93       	push	r28
    1490:	df 93       	push	r29
    1492:	eb 01       	movw	r28, r22
    1494:	08 81       	ld	r16, Y
    1496:	19 81       	ldd	r17, Y+1	; 0x01
    1498:	2a 81       	ldd	r18, Y+2	; 0x02
    149a:	3b 81       	ldd	r19, Y+3	; 0x03
    149c:	0f 3f       	cpi	r16, 0xFF	; 255
    149e:	4f ef       	ldi	r20, 0xFF	; 255
    14a0:	14 07       	cpc	r17, r20
    14a2:	24 07       	cpc	r18, r20
    14a4:	34 07       	cpc	r19, r20
    14a6:	21 f4       	brne	.+8      	; 0x14b0 <vListInsert+0x26>
    14a8:	fc 01       	movw	r30, r24
    14aa:	a1 85       	ldd	r26, Z+9	; 0x09
    14ac:	b2 85       	ldd	r27, Z+10	; 0x0a
    14ae:	11 c0       	rjmp	.+34     	; 0x14d2 <vListInsert+0x48>
    14b0:	dc 01       	movw	r26, r24
    14b2:	13 96       	adiw	r26, 0x03	; 3
    14b4:	01 c0       	rjmp	.+2      	; 0x14b8 <vListInsert+0x2e>
    14b6:	df 01       	movw	r26, r30
    14b8:	14 96       	adiw	r26, 0x04	; 4
    14ba:	ed 91       	ld	r30, X+
    14bc:	fc 91       	ld	r31, X
    14be:	15 97       	sbiw	r26, 0x05	; 5
    14c0:	40 81       	ld	r20, Z
    14c2:	51 81       	ldd	r21, Z+1	; 0x01
    14c4:	62 81       	ldd	r22, Z+2	; 0x02
    14c6:	73 81       	ldd	r23, Z+3	; 0x03
    14c8:	04 17       	cp	r16, r20
    14ca:	15 07       	cpc	r17, r21
    14cc:	26 07       	cpc	r18, r22
    14ce:	37 07       	cpc	r19, r23
    14d0:	90 f7       	brcc	.-28     	; 0x14b6 <vListInsert+0x2c>
    14d2:	14 96       	adiw	r26, 0x04	; 4
    14d4:	ed 91       	ld	r30, X+
    14d6:	fc 91       	ld	r31, X
    14d8:	15 97       	sbiw	r26, 0x05	; 5
    14da:	fd 83       	std	Y+5, r31	; 0x05
    14dc:	ec 83       	std	Y+4, r30	; 0x04
    14de:	d7 83       	std	Z+7, r29	; 0x07
    14e0:	c6 83       	std	Z+6, r28	; 0x06
    14e2:	bf 83       	std	Y+7, r27	; 0x07
    14e4:	ae 83       	std	Y+6, r26	; 0x06
    14e6:	15 96       	adiw	r26, 0x05	; 5
    14e8:	dc 93       	st	X, r29
    14ea:	ce 93       	st	-X, r28
    14ec:	14 97       	sbiw	r26, 0x04	; 4
    14ee:	9b 87       	std	Y+11, r25	; 0x0b
    14f0:	8a 87       	std	Y+10, r24	; 0x0a
    14f2:	fc 01       	movw	r30, r24
    14f4:	20 81       	ld	r18, Z
    14f6:	2f 5f       	subi	r18, 0xFF	; 255
    14f8:	20 83       	st	Z, r18
    14fa:	df 91       	pop	r29
    14fc:	cf 91       	pop	r28
    14fe:	1f 91       	pop	r17
    1500:	0f 91       	pop	r16
    1502:	08 95       	ret

00001504 <uxListRemove>:
    1504:	cf 93       	push	r28
    1506:	df 93       	push	r29
    1508:	fc 01       	movw	r30, r24
    150a:	a2 85       	ldd	r26, Z+10	; 0x0a
    150c:	b3 85       	ldd	r27, Z+11	; 0x0b
    150e:	c4 81       	ldd	r28, Z+4	; 0x04
    1510:	d5 81       	ldd	r29, Z+5	; 0x05
    1512:	86 81       	ldd	r24, Z+6	; 0x06
    1514:	97 81       	ldd	r25, Z+7	; 0x07
    1516:	9f 83       	std	Y+7, r25	; 0x07
    1518:	8e 83       	std	Y+6, r24	; 0x06
    151a:	c6 81       	ldd	r28, Z+6	; 0x06
    151c:	d7 81       	ldd	r29, Z+7	; 0x07
    151e:	84 81       	ldd	r24, Z+4	; 0x04
    1520:	95 81       	ldd	r25, Z+5	; 0x05
    1522:	9d 83       	std	Y+5, r25	; 0x05
    1524:	8c 83       	std	Y+4, r24	; 0x04
    1526:	11 96       	adiw	r26, 0x01	; 1
    1528:	8d 91       	ld	r24, X+
    152a:	9c 91       	ld	r25, X
    152c:	12 97       	sbiw	r26, 0x02	; 2
    152e:	e8 17       	cp	r30, r24
    1530:	f9 07       	cpc	r31, r25
    1532:	31 f4       	brne	.+12     	; 0x1540 <uxListRemove+0x3c>
    1534:	86 81       	ldd	r24, Z+6	; 0x06
    1536:	97 81       	ldd	r25, Z+7	; 0x07
    1538:	12 96       	adiw	r26, 0x02	; 2
    153a:	9c 93       	st	X, r25
    153c:	8e 93       	st	-X, r24
    153e:	11 97       	sbiw	r26, 0x01	; 1
    1540:	13 86       	std	Z+11, r1	; 0x0b
    1542:	12 86       	std	Z+10, r1	; 0x0a
    1544:	8c 91       	ld	r24, X
    1546:	81 50       	subi	r24, 0x01	; 1
    1548:	8c 93       	st	X, r24
    154a:	8c 91       	ld	r24, X
    154c:	df 91       	pop	r29
    154e:	cf 91       	pop	r28
    1550:	08 95       	ret

00001552 <pxPortInitialiseStack>:
		);
	}
	else
	{
        uint8_t register temp_reg;
		__asm__ __volatile__ (
    1552:	31 e1       	ldi	r19, 0x11	; 17
    1554:	fc 01       	movw	r30, r24
    1556:	30 83       	st	Z, r19
    1558:	31 97       	sbiw	r30, 0x01	; 1
    155a:	22 e2       	ldi	r18, 0x22	; 34
    155c:	20 83       	st	Z, r18
    155e:	31 97       	sbiw	r30, 0x01	; 1
    1560:	a3 e3       	ldi	r26, 0x33	; 51
    1562:	a0 83       	st	Z, r26
    1564:	31 97       	sbiw	r30, 0x01	; 1
    1566:	60 83       	st	Z, r22
    1568:	31 97       	sbiw	r30, 0x01	; 1
    156a:	70 83       	st	Z, r23
    156c:	31 97       	sbiw	r30, 0x01	; 1
    156e:	10 82       	st	Z, r1
    1570:	31 97       	sbiw	r30, 0x01	; 1
    1572:	10 82       	st	Z, r1
    1574:	31 97       	sbiw	r30, 0x01	; 1
    1576:	60 e8       	ldi	r22, 0x80	; 128
    1578:	60 83       	st	Z, r22
    157a:	31 97       	sbiw	r30, 0x01	; 1
    157c:	10 82       	st	Z, r1
    157e:	31 97       	sbiw	r30, 0x01	; 1
    1580:	10 82       	st	Z, r1
    1582:	31 97       	sbiw	r30, 0x01	; 1
    1584:	10 82       	st	Z, r1
    1586:	31 97       	sbiw	r30, 0x01	; 1
    1588:	62 e0       	ldi	r22, 0x02	; 2
    158a:	60 83       	st	Z, r22
    158c:	31 97       	sbiw	r30, 0x01	; 1
    158e:	63 e0       	ldi	r22, 0x03	; 3
    1590:	60 83       	st	Z, r22
    1592:	31 97       	sbiw	r30, 0x01	; 1
    1594:	64 e0       	ldi	r22, 0x04	; 4
    1596:	60 83       	st	Z, r22
    1598:	31 97       	sbiw	r30, 0x01	; 1
    159a:	65 e0       	ldi	r22, 0x05	; 5
    159c:	60 83       	st	Z, r22
    159e:	31 97       	sbiw	r30, 0x01	; 1
    15a0:	66 e0       	ldi	r22, 0x06	; 6
    15a2:	60 83       	st	Z, r22
    15a4:	31 97       	sbiw	r30, 0x01	; 1
    15a6:	67 e0       	ldi	r22, 0x07	; 7
    15a8:	60 83       	st	Z, r22
    15aa:	31 97       	sbiw	r30, 0x01	; 1
    15ac:	68 e0       	ldi	r22, 0x08	; 8
    15ae:	60 83       	st	Z, r22
    15b0:	31 97       	sbiw	r30, 0x01	; 1
    15b2:	69 e0       	ldi	r22, 0x09	; 9
    15b4:	60 83       	st	Z, r22
    15b6:	31 97       	sbiw	r30, 0x01	; 1
    15b8:	60 e1       	ldi	r22, 0x10	; 16
    15ba:	60 83       	st	Z, r22
    15bc:	31 97       	sbiw	r30, 0x01	; 1
    15be:	30 83       	st	Z, r19
    15c0:	31 97       	sbiw	r30, 0x01	; 1
    15c2:	32 e1       	ldi	r19, 0x12	; 18
    15c4:	30 83       	st	Z, r19
    15c6:	31 97       	sbiw	r30, 0x01	; 1
    15c8:	33 e1       	ldi	r19, 0x13	; 19
    15ca:	30 83       	st	Z, r19
    15cc:	31 97       	sbiw	r30, 0x01	; 1
    15ce:	34 e1       	ldi	r19, 0x14	; 20
    15d0:	30 83       	st	Z, r19
    15d2:	31 97       	sbiw	r30, 0x01	; 1
    15d4:	35 e1       	ldi	r19, 0x15	; 21
    15d6:	30 83       	st	Z, r19
    15d8:	31 97       	sbiw	r30, 0x01	; 1
    15da:	36 e1       	ldi	r19, 0x16	; 22
    15dc:	30 83       	st	Z, r19
    15de:	31 97       	sbiw	r30, 0x01	; 1
    15e0:	37 e1       	ldi	r19, 0x17	; 23
    15e2:	30 83       	st	Z, r19
    15e4:	31 97       	sbiw	r30, 0x01	; 1
    15e6:	38 e1       	ldi	r19, 0x18	; 24
    15e8:	30 83       	st	Z, r19
    15ea:	31 97       	sbiw	r30, 0x01	; 1
    15ec:	39 e1       	ldi	r19, 0x19	; 25
    15ee:	30 83       	st	Z, r19
    15f0:	31 97       	sbiw	r30, 0x01	; 1
    15f2:	30 e2       	ldi	r19, 0x20	; 32
    15f4:	30 83       	st	Z, r19
    15f6:	31 97       	sbiw	r30, 0x01	; 1
    15f8:	31 e2       	ldi	r19, 0x21	; 33
    15fa:	30 83       	st	Z, r19
    15fc:	31 97       	sbiw	r30, 0x01	; 1
    15fe:	20 83       	st	Z, r18
    1600:	31 97       	sbiw	r30, 0x01	; 1
    1602:	23 e2       	ldi	r18, 0x23	; 35
    1604:	20 83       	st	Z, r18
    1606:	31 97       	sbiw	r30, 0x01	; 1
    1608:	40 83       	st	Z, r20
    160a:	31 97       	sbiw	r30, 0x01	; 1
    160c:	50 83       	st	Z, r21
    160e:	31 97       	sbiw	r30, 0x01	; 1
    1610:	26 e2       	ldi	r18, 0x26	; 38
    1612:	20 83       	st	Z, r18
    1614:	31 97       	sbiw	r30, 0x01	; 1
    1616:	27 e2       	ldi	r18, 0x27	; 39
    1618:	20 83       	st	Z, r18
    161a:	31 97       	sbiw	r30, 0x01	; 1
    161c:	28 e2       	ldi	r18, 0x28	; 40
    161e:	20 83       	st	Z, r18
    1620:	31 97       	sbiw	r30, 0x01	; 1
    1622:	29 e2       	ldi	r18, 0x29	; 41
    1624:	20 83       	st	Z, r18
    1626:	31 97       	sbiw	r30, 0x01	; 1
    1628:	20 e3       	ldi	r18, 0x30	; 48
    162a:	20 83       	st	Z, r18
    162c:	31 97       	sbiw	r30, 0x01	; 1
    162e:	21 e3       	ldi	r18, 0x31	; 49
    1630:	20 83       	st	Z, r18
    1632:	89 97       	sbiw	r24, 0x29	; 41
    1634:	08 95       	ret

00001636 <xPortStartScheduler>:
    1636:	a8 95       	wdr
    1638:	90 ec       	ldi	r25, 0xC0	; 192
    163a:	88 e1       	ldi	r24, 0x18	; 24
    163c:	0f b6       	in	r0, 0x3f	; 63
    163e:	f8 94       	cli
    1640:	a8 95       	wdr
    1642:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__TEXT_REGION_LENGTH__+0x700060>
    1646:	0f be       	out	0x3f, r0	; 63
    1648:	90 93 60 00 	sts	0x0060, r25	; 0x800060 <__TEXT_REGION_LENGTH__+0x700060>
    164c:	a0 91 43 19 	lds	r26, 0x1943	; 0x801943 <pxCurrentTCB>
    1650:	b0 91 44 19 	lds	r27, 0x1944	; 0x801944 <pxCurrentTCB+0x1>
    1654:	cd 91       	ld	r28, X+
    1656:	cd bf       	out	0x3d, r28	; 61
    1658:	dd 91       	ld	r29, X+
    165a:	de bf       	out	0x3e, r29	; 62
    165c:	ff 91       	pop	r31
    165e:	ef 91       	pop	r30
    1660:	df 91       	pop	r29
    1662:	cf 91       	pop	r28
    1664:	bf 91       	pop	r27
    1666:	af 91       	pop	r26
    1668:	9f 91       	pop	r25
    166a:	8f 91       	pop	r24
    166c:	7f 91       	pop	r23
    166e:	6f 91       	pop	r22
    1670:	5f 91       	pop	r21
    1672:	4f 91       	pop	r20
    1674:	3f 91       	pop	r19
    1676:	2f 91       	pop	r18
    1678:	1f 91       	pop	r17
    167a:	0f 91       	pop	r16
    167c:	ff 90       	pop	r15
    167e:	ef 90       	pop	r14
    1680:	df 90       	pop	r13
    1682:	cf 90       	pop	r12
    1684:	bf 90       	pop	r11
    1686:	af 90       	pop	r10
    1688:	9f 90       	pop	r9
    168a:	8f 90       	pop	r8
    168c:	7f 90       	pop	r7
    168e:	6f 90       	pop	r6
    1690:	5f 90       	pop	r5
    1692:	4f 90       	pop	r4
    1694:	3f 90       	pop	r3
    1696:	2f 90       	pop	r2
    1698:	1f 90       	pop	r1
    169a:	0f 90       	pop	r0
    169c:	0c be       	out	0x3c, r0	; 60
    169e:	0f 90       	pop	r0
    16a0:	0b be       	out	0x3b, r0	; 59
    16a2:	0f 90       	pop	r0
    16a4:	0f be       	out	0x3f, r0	; 63
    16a6:	0f 90       	pop	r0
    16a8:	08 95       	ret
    16aa:	81 e0       	ldi	r24, 0x01	; 1
    16ac:	08 95       	ret

000016ae <vPortYield>:
    16ae:	0f 92       	push	r0
    16b0:	0f b6       	in	r0, 0x3f	; 63
    16b2:	f8 94       	cli
    16b4:	0f 92       	push	r0
    16b6:	0b b6       	in	r0, 0x3b	; 59
    16b8:	0f 92       	push	r0
    16ba:	0c b6       	in	r0, 0x3c	; 60
    16bc:	0f 92       	push	r0
    16be:	1f 92       	push	r1
    16c0:	11 24       	eor	r1, r1
    16c2:	2f 92       	push	r2
    16c4:	3f 92       	push	r3
    16c6:	4f 92       	push	r4
    16c8:	5f 92       	push	r5
    16ca:	6f 92       	push	r6
    16cc:	7f 92       	push	r7
    16ce:	8f 92       	push	r8
    16d0:	9f 92       	push	r9
    16d2:	af 92       	push	r10
    16d4:	bf 92       	push	r11
    16d6:	cf 92       	push	r12
    16d8:	df 92       	push	r13
    16da:	ef 92       	push	r14
    16dc:	ff 92       	push	r15
    16de:	0f 93       	push	r16
    16e0:	1f 93       	push	r17
    16e2:	2f 93       	push	r18
    16e4:	3f 93       	push	r19
    16e6:	4f 93       	push	r20
    16e8:	5f 93       	push	r21
    16ea:	6f 93       	push	r22
    16ec:	7f 93       	push	r23
    16ee:	8f 93       	push	r24
    16f0:	9f 93       	push	r25
    16f2:	af 93       	push	r26
    16f4:	bf 93       	push	r27
    16f6:	cf 93       	push	r28
    16f8:	df 93       	push	r29
    16fa:	ef 93       	push	r30
    16fc:	ff 93       	push	r31
    16fe:	a0 91 43 19 	lds	r26, 0x1943	; 0x801943 <pxCurrentTCB>
    1702:	b0 91 44 19 	lds	r27, 0x1944	; 0x801944 <pxCurrentTCB+0x1>
    1706:	0d b6       	in	r0, 0x3d	; 61
    1708:	0d 92       	st	X+, r0
    170a:	0e b6       	in	r0, 0x3e	; 62
    170c:	0d 92       	st	X+, r0
    170e:	0e 94 32 16 	call	0x2c64	; 0x2c64 <vTaskSwitchContext>
    1712:	a0 91 43 19 	lds	r26, 0x1943	; 0x801943 <pxCurrentTCB>
    1716:	b0 91 44 19 	lds	r27, 0x1944	; 0x801944 <pxCurrentTCB+0x1>
    171a:	cd 91       	ld	r28, X+
    171c:	cd bf       	out	0x3d, r28	; 61
    171e:	dd 91       	ld	r29, X+
    1720:	de bf       	out	0x3e, r29	; 62
    1722:	ff 91       	pop	r31
    1724:	ef 91       	pop	r30
    1726:	df 91       	pop	r29
    1728:	cf 91       	pop	r28
    172a:	bf 91       	pop	r27
    172c:	af 91       	pop	r26
    172e:	9f 91       	pop	r25
    1730:	8f 91       	pop	r24
    1732:	7f 91       	pop	r23
    1734:	6f 91       	pop	r22
    1736:	5f 91       	pop	r21
    1738:	4f 91       	pop	r20
    173a:	3f 91       	pop	r19
    173c:	2f 91       	pop	r18
    173e:	1f 91       	pop	r17
    1740:	0f 91       	pop	r16
    1742:	ff 90       	pop	r15
    1744:	ef 90       	pop	r14
    1746:	df 90       	pop	r13
    1748:	cf 90       	pop	r12
    174a:	bf 90       	pop	r11
    174c:	af 90       	pop	r10
    174e:	9f 90       	pop	r9
    1750:	8f 90       	pop	r8
    1752:	7f 90       	pop	r7
    1754:	6f 90       	pop	r6
    1756:	5f 90       	pop	r5
    1758:	4f 90       	pop	r4
    175a:	3f 90       	pop	r3
    175c:	2f 90       	pop	r2
    175e:	1f 90       	pop	r1
    1760:	0f 90       	pop	r0
    1762:	0c be       	out	0x3c, r0	; 60
    1764:	0f 90       	pop	r0
    1766:	0b be       	out	0x3b, r0	; 59
    1768:	0f 90       	pop	r0
    176a:	0f be       	out	0x3f, r0	; 63
    176c:	0f 90       	pop	r0
    176e:	08 95       	ret

00001770 <vPortYieldFromTick>:
    1770:	0f 92       	push	r0
    1772:	0f b6       	in	r0, 0x3f	; 63
    1774:	f8 94       	cli
    1776:	0f 92       	push	r0
    1778:	0b b6       	in	r0, 0x3b	; 59
    177a:	0f 92       	push	r0
    177c:	0c b6       	in	r0, 0x3c	; 60
    177e:	0f 92       	push	r0
    1780:	1f 92       	push	r1
    1782:	11 24       	eor	r1, r1
    1784:	2f 92       	push	r2
    1786:	3f 92       	push	r3
    1788:	4f 92       	push	r4
    178a:	5f 92       	push	r5
    178c:	6f 92       	push	r6
    178e:	7f 92       	push	r7
    1790:	8f 92       	push	r8
    1792:	9f 92       	push	r9
    1794:	af 92       	push	r10
    1796:	bf 92       	push	r11
    1798:	cf 92       	push	r12
    179a:	df 92       	push	r13
    179c:	ef 92       	push	r14
    179e:	ff 92       	push	r15
    17a0:	0f 93       	push	r16
    17a2:	1f 93       	push	r17
    17a4:	2f 93       	push	r18
    17a6:	3f 93       	push	r19
    17a8:	4f 93       	push	r20
    17aa:	5f 93       	push	r21
    17ac:	6f 93       	push	r22
    17ae:	7f 93       	push	r23
    17b0:	8f 93       	push	r24
    17b2:	9f 93       	push	r25
    17b4:	af 93       	push	r26
    17b6:	bf 93       	push	r27
    17b8:	cf 93       	push	r28
    17ba:	df 93       	push	r29
    17bc:	ef 93       	push	r30
    17be:	ff 93       	push	r31
    17c0:	a0 91 43 19 	lds	r26, 0x1943	; 0x801943 <pxCurrentTCB>
    17c4:	b0 91 44 19 	lds	r27, 0x1944	; 0x801944 <pxCurrentTCB+0x1>
    17c8:	0d b6       	in	r0, 0x3d	; 61
    17ca:	0d 92       	st	X+, r0
    17cc:	0e b6       	in	r0, 0x3e	; 62
    17ce:	0d 92       	st	X+, r0
    17d0:	13 be       	out	0x33, r1	; 51
    17d2:	0e 94 c8 14 	call	0x2990	; 0x2990 <xTaskIncrementTick>
    17d6:	81 11       	cpse	r24, r1
    17d8:	0e 94 32 16 	call	0x2c64	; 0x2c64 <vTaskSwitchContext>
    17dc:	a0 91 43 19 	lds	r26, 0x1943	; 0x801943 <pxCurrentTCB>
    17e0:	b0 91 44 19 	lds	r27, 0x1944	; 0x801944 <pxCurrentTCB+0x1>
    17e4:	cd 91       	ld	r28, X+
    17e6:	cd bf       	out	0x3d, r28	; 61
    17e8:	dd 91       	ld	r29, X+
    17ea:	de bf       	out	0x3e, r29	; 62
    17ec:	ff 91       	pop	r31
    17ee:	ef 91       	pop	r30
    17f0:	df 91       	pop	r29
    17f2:	cf 91       	pop	r28
    17f4:	bf 91       	pop	r27
    17f6:	af 91       	pop	r26
    17f8:	9f 91       	pop	r25
    17fa:	8f 91       	pop	r24
    17fc:	7f 91       	pop	r23
    17fe:	6f 91       	pop	r22
    1800:	5f 91       	pop	r21
    1802:	4f 91       	pop	r20
    1804:	3f 91       	pop	r19
    1806:	2f 91       	pop	r18
    1808:	1f 91       	pop	r17
    180a:	0f 91       	pop	r16
    180c:	ff 90       	pop	r15
    180e:	ef 90       	pop	r14
    1810:	df 90       	pop	r13
    1812:	cf 90       	pop	r12
    1814:	bf 90       	pop	r11
    1816:	af 90       	pop	r10
    1818:	9f 90       	pop	r9
    181a:	8f 90       	pop	r8
    181c:	7f 90       	pop	r7
    181e:	6f 90       	pop	r6
    1820:	5f 90       	pop	r5
    1822:	4f 90       	pop	r4
    1824:	3f 90       	pop	r3
    1826:	2f 90       	pop	r2
    1828:	1f 90       	pop	r1
    182a:	0f 90       	pop	r0
    182c:	0c be       	out	0x3c, r0	; 60
    182e:	0f 90       	pop	r0
    1830:	0b be       	out	0x3b, r0	; 59
    1832:	0f 90       	pop	r0
    1834:	0f be       	out	0x3f, r0	; 63
    1836:	0f 90       	pop	r0
    1838:	08 95       	ret

0000183a <__vector_12>:
    183a:	9a df       	rcall	.-204    	; 0x1770 <vPortYieldFromTick>
    183c:	18 95       	reti

0000183e <prvIsQueueEmpty>:
    183e:	0f b6       	in	r0, 0x3f	; 63
    1840:	f8 94       	cli
    1842:	0f 92       	push	r0
    1844:	fc 01       	movw	r30, r24
    1846:	96 8d       	ldd	r25, Z+30	; 0x1e
    1848:	0f 90       	pop	r0
    184a:	0f be       	out	0x3f, r0	; 63
    184c:	81 e0       	ldi	r24, 0x01	; 1
    184e:	91 11       	cpse	r25, r1
    1850:	80 e0       	ldi	r24, 0x00	; 0
    1852:	08 95       	ret

00001854 <prvCopyDataToQueue>:
    1854:	0f 93       	push	r16
    1856:	1f 93       	push	r17
    1858:	cf 93       	push	r28
    185a:	df 93       	push	r29
    185c:	ec 01       	movw	r28, r24
    185e:	04 2f       	mov	r16, r20
    1860:	1e 8d       	ldd	r17, Y+30	; 0x1e
    1862:	48 a1       	ldd	r20, Y+32	; 0x20
    1864:	41 11       	cpse	r20, r1
    1866:	0c c0       	rjmp	.+24     	; 0x1880 <prvCopyDataToQueue+0x2c>
    1868:	88 81       	ld	r24, Y
    186a:	99 81       	ldd	r25, Y+1	; 0x01
    186c:	89 2b       	or	r24, r25
    186e:	09 f0       	breq	.+2      	; 0x1872 <prvCopyDataToQueue+0x1e>
    1870:	42 c0       	rjmp	.+132    	; 0x18f6 <prvCopyDataToQueue+0xa2>
    1872:	8c 81       	ldd	r24, Y+4	; 0x04
    1874:	9d 81       	ldd	r25, Y+5	; 0x05
    1876:	0e 94 83 18 	call	0x3106	; 0x3106 <xTaskPriorityDisinherit>
    187a:	1d 82       	std	Y+5, r1	; 0x05
    187c:	1c 82       	std	Y+4, r1	; 0x04
    187e:	42 c0       	rjmp	.+132    	; 0x1904 <prvCopyDataToQueue+0xb0>
    1880:	01 11       	cpse	r16, r1
    1882:	17 c0       	rjmp	.+46     	; 0x18b2 <prvCopyDataToQueue+0x5e>
    1884:	50 e0       	ldi	r21, 0x00	; 0
    1886:	8a 81       	ldd	r24, Y+2	; 0x02
    1888:	9b 81       	ldd	r25, Y+3	; 0x03
    188a:	0e 94 34 2e 	call	0x5c68	; 0x5c68 <memcpy>
    188e:	28 a1       	ldd	r18, Y+32	; 0x20
    1890:	8a 81       	ldd	r24, Y+2	; 0x02
    1892:	9b 81       	ldd	r25, Y+3	; 0x03
    1894:	82 0f       	add	r24, r18
    1896:	91 1d       	adc	r25, r1
    1898:	9b 83       	std	Y+3, r25	; 0x03
    189a:	8a 83       	std	Y+2, r24	; 0x02
    189c:	2c 81       	ldd	r18, Y+4	; 0x04
    189e:	3d 81       	ldd	r19, Y+5	; 0x05
    18a0:	82 17       	cp	r24, r18
    18a2:	93 07       	cpc	r25, r19
    18a4:	50 f1       	brcs	.+84     	; 0x18fa <prvCopyDataToQueue+0xa6>
    18a6:	88 81       	ld	r24, Y
    18a8:	99 81       	ldd	r25, Y+1	; 0x01
    18aa:	9b 83       	std	Y+3, r25	; 0x03
    18ac:	8a 83       	std	Y+2, r24	; 0x02
    18ae:	80 e0       	ldi	r24, 0x00	; 0
    18b0:	29 c0       	rjmp	.+82     	; 0x1904 <prvCopyDataToQueue+0xb0>
    18b2:	50 e0       	ldi	r21, 0x00	; 0
    18b4:	8e 81       	ldd	r24, Y+6	; 0x06
    18b6:	9f 81       	ldd	r25, Y+7	; 0x07
    18b8:	0e 94 34 2e 	call	0x5c68	; 0x5c68 <memcpy>
    18bc:	88 a1       	ldd	r24, Y+32	; 0x20
    18be:	90 e0       	ldi	r25, 0x00	; 0
    18c0:	91 95       	neg	r25
    18c2:	81 95       	neg	r24
    18c4:	91 09       	sbc	r25, r1
    18c6:	2e 81       	ldd	r18, Y+6	; 0x06
    18c8:	3f 81       	ldd	r19, Y+7	; 0x07
    18ca:	28 0f       	add	r18, r24
    18cc:	39 1f       	adc	r19, r25
    18ce:	3f 83       	std	Y+7, r19	; 0x07
    18d0:	2e 83       	std	Y+6, r18	; 0x06
    18d2:	48 81       	ld	r20, Y
    18d4:	59 81       	ldd	r21, Y+1	; 0x01
    18d6:	24 17       	cp	r18, r20
    18d8:	35 07       	cpc	r19, r21
    18da:	30 f4       	brcc	.+12     	; 0x18e8 <prvCopyDataToQueue+0x94>
    18dc:	2c 81       	ldd	r18, Y+4	; 0x04
    18de:	3d 81       	ldd	r19, Y+5	; 0x05
    18e0:	82 0f       	add	r24, r18
    18e2:	93 1f       	adc	r25, r19
    18e4:	9f 83       	std	Y+7, r25	; 0x07
    18e6:	8e 83       	std	Y+6, r24	; 0x06
    18e8:	02 30       	cpi	r16, 0x02	; 2
    18ea:	49 f4       	brne	.+18     	; 0x18fe <prvCopyDataToQueue+0xaa>
    18ec:	11 23       	and	r17, r17
    18ee:	49 f0       	breq	.+18     	; 0x1902 <prvCopyDataToQueue+0xae>
    18f0:	11 50       	subi	r17, 0x01	; 1
    18f2:	80 e0       	ldi	r24, 0x00	; 0
    18f4:	07 c0       	rjmp	.+14     	; 0x1904 <prvCopyDataToQueue+0xb0>
    18f6:	80 e0       	ldi	r24, 0x00	; 0
    18f8:	05 c0       	rjmp	.+10     	; 0x1904 <prvCopyDataToQueue+0xb0>
    18fa:	80 e0       	ldi	r24, 0x00	; 0
    18fc:	03 c0       	rjmp	.+6      	; 0x1904 <prvCopyDataToQueue+0xb0>
    18fe:	80 e0       	ldi	r24, 0x00	; 0
    1900:	01 c0       	rjmp	.+2      	; 0x1904 <prvCopyDataToQueue+0xb0>
    1902:	80 e0       	ldi	r24, 0x00	; 0
    1904:	1f 5f       	subi	r17, 0xFF	; 255
    1906:	1e 8f       	std	Y+30, r17	; 0x1e
    1908:	df 91       	pop	r29
    190a:	cf 91       	pop	r28
    190c:	1f 91       	pop	r17
    190e:	0f 91       	pop	r16
    1910:	08 95       	ret

00001912 <prvCopyDataFromQueue>:
    1912:	fc 01       	movw	r30, r24
    1914:	40 a1       	ldd	r20, Z+32	; 0x20
    1916:	44 23       	and	r20, r20
    1918:	a9 f0       	breq	.+42     	; 0x1944 <prvCopyDataFromQueue+0x32>
    191a:	50 e0       	ldi	r21, 0x00	; 0
    191c:	26 81       	ldd	r18, Z+6	; 0x06
    191e:	37 81       	ldd	r19, Z+7	; 0x07
    1920:	24 0f       	add	r18, r20
    1922:	35 1f       	adc	r19, r21
    1924:	37 83       	std	Z+7, r19	; 0x07
    1926:	26 83       	std	Z+6, r18	; 0x06
    1928:	84 81       	ldd	r24, Z+4	; 0x04
    192a:	95 81       	ldd	r25, Z+5	; 0x05
    192c:	28 17       	cp	r18, r24
    192e:	39 07       	cpc	r19, r25
    1930:	20 f0       	brcs	.+8      	; 0x193a <prvCopyDataFromQueue+0x28>
    1932:	80 81       	ld	r24, Z
    1934:	91 81       	ldd	r25, Z+1	; 0x01
    1936:	97 83       	std	Z+7, r25	; 0x07
    1938:	86 83       	std	Z+6, r24	; 0x06
    193a:	cb 01       	movw	r24, r22
    193c:	66 81       	ldd	r22, Z+6	; 0x06
    193e:	77 81       	ldd	r23, Z+7	; 0x07
    1940:	0c 94 34 2e 	jmp	0x5c68	; 0x5c68 <memcpy>
    1944:	08 95       	ret

00001946 <prvUnlockQueue>:
    1946:	ef 92       	push	r14
    1948:	ff 92       	push	r15
    194a:	0f 93       	push	r16
    194c:	1f 93       	push	r17
    194e:	cf 93       	push	r28
    1950:	8c 01       	movw	r16, r24
    1952:	0f b6       	in	r0, 0x3f	; 63
    1954:	f8 94       	cli
    1956:	0f 92       	push	r0
    1958:	fc 01       	movw	r30, r24
    195a:	c2 a1       	ldd	r28, Z+34	; 0x22
    195c:	1c 16       	cp	r1, r28
    195e:	ac f4       	brge	.+42     	; 0x198a <prvUnlockQueue+0x44>
    1960:	83 89       	ldd	r24, Z+19	; 0x13
    1962:	81 11       	cpse	r24, r1
    1964:	06 c0       	rjmp	.+12     	; 0x1972 <prvUnlockQueue+0x2c>
    1966:	11 c0       	rjmp	.+34     	; 0x198a <prvUnlockQueue+0x44>
    1968:	f8 01       	movw	r30, r16
    196a:	83 89       	ldd	r24, Z+19	; 0x13
    196c:	81 11       	cpse	r24, r1
    196e:	05 c0       	rjmp	.+10     	; 0x197a <prvUnlockQueue+0x34>
    1970:	0c c0       	rjmp	.+24     	; 0x198a <prvUnlockQueue+0x44>
    1972:	78 01       	movw	r14, r16
    1974:	f3 e1       	ldi	r31, 0x13	; 19
    1976:	ef 0e       	add	r14, r31
    1978:	f1 1c       	adc	r15, r1
    197a:	c7 01       	movw	r24, r14
    197c:	0e 94 0c 17 	call	0x2e18	; 0x2e18 <xTaskRemoveFromEventList>
    1980:	81 11       	cpse	r24, r1
    1982:	0e 94 fe 17 	call	0x2ffc	; 0x2ffc <vTaskMissedYield>
    1986:	c1 50       	subi	r28, 0x01	; 1
    1988:	79 f7       	brne	.-34     	; 0x1968 <prvUnlockQueue+0x22>
    198a:	8f ef       	ldi	r24, 0xFF	; 255
    198c:	f8 01       	movw	r30, r16
    198e:	82 a3       	std	Z+34, r24	; 0x22
    1990:	0f 90       	pop	r0
    1992:	0f be       	out	0x3f, r0	; 63
    1994:	0f b6       	in	r0, 0x3f	; 63
    1996:	f8 94       	cli
    1998:	0f 92       	push	r0
    199a:	c1 a1       	ldd	r28, Z+33	; 0x21
    199c:	1c 16       	cp	r1, r28
    199e:	ac f4       	brge	.+42     	; 0x19ca <prvUnlockQueue+0x84>
    19a0:	80 85       	ldd	r24, Z+8	; 0x08
    19a2:	81 11       	cpse	r24, r1
    19a4:	06 c0       	rjmp	.+12     	; 0x19b2 <prvUnlockQueue+0x6c>
    19a6:	11 c0       	rjmp	.+34     	; 0x19ca <prvUnlockQueue+0x84>
    19a8:	f8 01       	movw	r30, r16
    19aa:	80 85       	ldd	r24, Z+8	; 0x08
    19ac:	81 11       	cpse	r24, r1
    19ae:	05 c0       	rjmp	.+10     	; 0x19ba <prvUnlockQueue+0x74>
    19b0:	0c c0       	rjmp	.+24     	; 0x19ca <prvUnlockQueue+0x84>
    19b2:	78 01       	movw	r14, r16
    19b4:	f8 e0       	ldi	r31, 0x08	; 8
    19b6:	ef 0e       	add	r14, r31
    19b8:	f1 1c       	adc	r15, r1
    19ba:	c7 01       	movw	r24, r14
    19bc:	0e 94 0c 17 	call	0x2e18	; 0x2e18 <xTaskRemoveFromEventList>
    19c0:	81 11       	cpse	r24, r1
    19c2:	0e 94 fe 17 	call	0x2ffc	; 0x2ffc <vTaskMissedYield>
    19c6:	c1 50       	subi	r28, 0x01	; 1
    19c8:	79 f7       	brne	.-34     	; 0x19a8 <prvUnlockQueue+0x62>
    19ca:	8f ef       	ldi	r24, 0xFF	; 255
    19cc:	f8 01       	movw	r30, r16
    19ce:	81 a3       	std	Z+33, r24	; 0x21
    19d0:	0f 90       	pop	r0
    19d2:	0f be       	out	0x3f, r0	; 63
    19d4:	cf 91       	pop	r28
    19d6:	1f 91       	pop	r17
    19d8:	0f 91       	pop	r16
    19da:	ff 90       	pop	r15
    19dc:	ef 90       	pop	r14
    19de:	08 95       	ret

000019e0 <xQueueGenericReset>:
    19e0:	cf 93       	push	r28
    19e2:	df 93       	push	r29
    19e4:	ec 01       	movw	r28, r24
    19e6:	0f b6       	in	r0, 0x3f	; 63
    19e8:	f8 94       	cli
    19ea:	0f 92       	push	r0
    19ec:	e8 81       	ld	r30, Y
    19ee:	f9 81       	ldd	r31, Y+1	; 0x01
    19f0:	8f 8d       	ldd	r24, Y+31	; 0x1f
    19f2:	28 a1       	ldd	r18, Y+32	; 0x20
    19f4:	90 e0       	ldi	r25, 0x00	; 0
    19f6:	30 e0       	ldi	r19, 0x00	; 0
    19f8:	82 9f       	mul	r24, r18
    19fa:	a0 01       	movw	r20, r0
    19fc:	83 9f       	mul	r24, r19
    19fe:	50 0d       	add	r21, r0
    1a00:	92 9f       	mul	r25, r18
    1a02:	50 0d       	add	r21, r0
    1a04:	11 24       	eor	r1, r1
    1a06:	4e 0f       	add	r20, r30
    1a08:	5f 1f       	adc	r21, r31
    1a0a:	5d 83       	std	Y+5, r21	; 0x05
    1a0c:	4c 83       	std	Y+4, r20	; 0x04
    1a0e:	1e 8e       	std	Y+30, r1	; 0x1e
    1a10:	fb 83       	std	Y+3, r31	; 0x03
    1a12:	ea 83       	std	Y+2, r30	; 0x02
    1a14:	01 97       	sbiw	r24, 0x01	; 1
    1a16:	82 9f       	mul	r24, r18
    1a18:	a0 01       	movw	r20, r0
    1a1a:	83 9f       	mul	r24, r19
    1a1c:	50 0d       	add	r21, r0
    1a1e:	92 9f       	mul	r25, r18
    1a20:	50 0d       	add	r21, r0
    1a22:	11 24       	eor	r1, r1
    1a24:	cf 01       	movw	r24, r30
    1a26:	84 0f       	add	r24, r20
    1a28:	95 1f       	adc	r25, r21
    1a2a:	9f 83       	std	Y+7, r25	; 0x07
    1a2c:	8e 83       	std	Y+6, r24	; 0x06
    1a2e:	8f ef       	ldi	r24, 0xFF	; 255
    1a30:	89 a3       	std	Y+33, r24	; 0x21
    1a32:	8a a3       	std	Y+34, r24	; 0x22
    1a34:	61 11       	cpse	r22, r1
    1a36:	0b c0       	rjmp	.+22     	; 0x1a4e <xQueueGenericReset+0x6e>
    1a38:	88 85       	ldd	r24, Y+8	; 0x08
    1a3a:	88 23       	and	r24, r24
    1a3c:	71 f0       	breq	.+28     	; 0x1a5a <xQueueGenericReset+0x7a>
    1a3e:	ce 01       	movw	r24, r28
    1a40:	08 96       	adiw	r24, 0x08	; 8
    1a42:	0e 94 0c 17 	call	0x2e18	; 0x2e18 <xTaskRemoveFromEventList>
    1a46:	88 23       	and	r24, r24
    1a48:	41 f0       	breq	.+16     	; 0x1a5a <xQueueGenericReset+0x7a>
    1a4a:	31 de       	rcall	.-926    	; 0x16ae <vPortYield>
    1a4c:	06 c0       	rjmp	.+12     	; 0x1a5a <xQueueGenericReset+0x7a>
    1a4e:	ce 01       	movw	r24, r28
    1a50:	08 96       	adiw	r24, 0x08	; 8
    1a52:	e5 dc       	rcall	.-1590   	; 0x141e <vListInitialise>
    1a54:	ce 01       	movw	r24, r28
    1a56:	43 96       	adiw	r24, 0x13	; 19
    1a58:	e2 dc       	rcall	.-1596   	; 0x141e <vListInitialise>
    1a5a:	0f 90       	pop	r0
    1a5c:	0f be       	out	0x3f, r0	; 63
    1a5e:	81 e0       	ldi	r24, 0x01	; 1
    1a60:	df 91       	pop	r29
    1a62:	cf 91       	pop	r28
    1a64:	08 95       	ret

00001a66 <xQueueGenericCreate>:
    1a66:	ff 92       	push	r15
    1a68:	0f 93       	push	r16
    1a6a:	1f 93       	push	r17
    1a6c:	cf 93       	push	r28
    1a6e:	df 93       	push	r29
    1a70:	08 2f       	mov	r16, r24
    1a72:	16 2f       	mov	r17, r22
    1a74:	f4 2e       	mov	r15, r20
    1a76:	66 23       	and	r22, r22
    1a78:	b9 f0       	breq	.+46     	; 0x1aa8 <xQueueGenericCreate+0x42>
    1a7a:	86 9f       	mul	r24, r22
    1a7c:	c0 01       	movw	r24, r0
    1a7e:	11 24       	eor	r1, r1
    1a80:	85 96       	adiw	r24, 0x25	; 37
    1a82:	e3 db       	rcall	.-2106   	; 0x124a <pvPortMalloc>
    1a84:	ec 01       	movw	r28, r24
    1a86:	00 97       	sbiw	r24, 0x00	; 0
    1a88:	41 f4       	brne	.+16     	; 0x1a9a <xQueueGenericCreate+0x34>
    1a8a:	14 c0       	rjmp	.+40     	; 0x1ab4 <xQueueGenericCreate+0x4e>
    1a8c:	0f 8f       	std	Y+31, r16	; 0x1f
    1a8e:	18 a3       	std	Y+32, r17	; 0x20
    1a90:	61 e0       	ldi	r22, 0x01	; 1
    1a92:	ce 01       	movw	r24, r28
    1a94:	a5 df       	rcall	.-182    	; 0x19e0 <xQueueGenericReset>
    1a96:	fc a2       	std	Y+36, r15	; 0x24
    1a98:	0d c0       	rjmp	.+26     	; 0x1ab4 <xQueueGenericCreate+0x4e>
    1a9a:	85 96       	adiw	r24, 0x25	; 37
    1a9c:	99 83       	std	Y+1, r25	; 0x01
    1a9e:	88 83       	st	Y, r24
    1aa0:	f5 cf       	rjmp	.-22     	; 0x1a8c <xQueueGenericCreate+0x26>
    1aa2:	d9 83       	std	Y+1, r29	; 0x01
    1aa4:	c8 83       	st	Y, r28
    1aa6:	f2 cf       	rjmp	.-28     	; 0x1a8c <xQueueGenericCreate+0x26>
    1aa8:	85 e2       	ldi	r24, 0x25	; 37
    1aaa:	90 e0       	ldi	r25, 0x00	; 0
    1aac:	ce db       	rcall	.-2148   	; 0x124a <pvPortMalloc>
    1aae:	ec 01       	movw	r28, r24
    1ab0:	89 2b       	or	r24, r25
    1ab2:	b9 f7       	brne	.-18     	; 0x1aa2 <xQueueGenericCreate+0x3c>
    1ab4:	ce 01       	movw	r24, r28
    1ab6:	df 91       	pop	r29
    1ab8:	cf 91       	pop	r28
    1aba:	1f 91       	pop	r17
    1abc:	0f 91       	pop	r16
    1abe:	ff 90       	pop	r15
    1ac0:	08 95       	ret

00001ac2 <xQueueGenericSend>:
    1ac2:	9f 92       	push	r9
    1ac4:	af 92       	push	r10
    1ac6:	bf 92       	push	r11
    1ac8:	cf 92       	push	r12
    1aca:	df 92       	push	r13
    1acc:	ef 92       	push	r14
    1ace:	ff 92       	push	r15
    1ad0:	0f 93       	push	r16
    1ad2:	1f 93       	push	r17
    1ad4:	cf 93       	push	r28
    1ad6:	df 93       	push	r29
    1ad8:	cd b7       	in	r28, 0x3d	; 61
    1ada:	de b7       	in	r29, 0x3e	; 62
    1adc:	29 97       	sbiw	r28, 0x09	; 9
    1ade:	0f b6       	in	r0, 0x3f	; 63
    1ae0:	f8 94       	cli
    1ae2:	de bf       	out	0x3e, r29	; 62
    1ae4:	0f be       	out	0x3f, r0	; 63
    1ae6:	cd bf       	out	0x3d, r28	; 61
    1ae8:	7c 01       	movw	r14, r24
    1aea:	5b 01       	movw	r10, r22
    1aec:	2e 83       	std	Y+6, r18	; 0x06
    1aee:	3f 83       	std	Y+7, r19	; 0x07
    1af0:	48 87       	std	Y+8, r20	; 0x08
    1af2:	59 87       	std	Y+9, r21	; 0x09
    1af4:	10 e0       	ldi	r17, 0x00	; 0
    1af6:	99 24       	eor	r9, r9
    1af8:	93 94       	inc	r9
    1afa:	6c 01       	movw	r12, r24
    1afc:	88 e0       	ldi	r24, 0x08	; 8
    1afe:	c8 0e       	add	r12, r24
    1b00:	d1 1c       	adc	r13, r1
    1b02:	0f b6       	in	r0, 0x3f	; 63
    1b04:	f8 94       	cli
    1b06:	0f 92       	push	r0
    1b08:	f7 01       	movw	r30, r14
    1b0a:	96 8d       	ldd	r25, Z+30	; 0x1e
    1b0c:	87 8d       	ldd	r24, Z+31	; 0x1f
    1b0e:	98 17       	cp	r25, r24
    1b10:	10 f0       	brcs	.+4      	; 0x1b16 <xQueueGenericSend+0x54>
    1b12:	02 30       	cpi	r16, 0x02	; 2
    1b14:	b1 f4       	brne	.+44     	; 0x1b42 <xQueueGenericSend+0x80>
    1b16:	40 2f       	mov	r20, r16
    1b18:	b5 01       	movw	r22, r10
    1b1a:	c7 01       	movw	r24, r14
    1b1c:	9b de       	rcall	.-714    	; 0x1854 <prvCopyDataToQueue>
    1b1e:	f7 01       	movw	r30, r14
    1b20:	93 89       	ldd	r25, Z+19	; 0x13
    1b22:	99 23       	and	r25, r25
    1b24:	41 f0       	breq	.+16     	; 0x1b36 <xQueueGenericSend+0x74>
    1b26:	c7 01       	movw	r24, r14
    1b28:	43 96       	adiw	r24, 0x13	; 19
    1b2a:	0e 94 0c 17 	call	0x2e18	; 0x2e18 <xTaskRemoveFromEventList>
    1b2e:	88 23       	and	r24, r24
    1b30:	21 f0       	breq	.+8      	; 0x1b3a <xQueueGenericSend+0x78>
    1b32:	bd dd       	rcall	.-1158   	; 0x16ae <vPortYield>
    1b34:	02 c0       	rjmp	.+4      	; 0x1b3a <xQueueGenericSend+0x78>
    1b36:	81 11       	cpse	r24, r1
    1b38:	ba dd       	rcall	.-1164   	; 0x16ae <vPortYield>
    1b3a:	0f 90       	pop	r0
    1b3c:	0f be       	out	0x3f, r0	; 63
    1b3e:	81 e0       	ldi	r24, 0x01	; 1
    1b40:	4e c0       	rjmp	.+156    	; 0x1bde <xQueueGenericSend+0x11c>
    1b42:	8e 81       	ldd	r24, Y+6	; 0x06
    1b44:	9f 81       	ldd	r25, Y+7	; 0x07
    1b46:	a8 85       	ldd	r26, Y+8	; 0x08
    1b48:	b9 85       	ldd	r27, Y+9	; 0x09
    1b4a:	89 2b       	or	r24, r25
    1b4c:	8a 2b       	or	r24, r26
    1b4e:	8b 2b       	or	r24, r27
    1b50:	21 f4       	brne	.+8      	; 0x1b5a <xQueueGenericSend+0x98>
    1b52:	0f 90       	pop	r0
    1b54:	0f be       	out	0x3f, r0	; 63
    1b56:	80 e0       	ldi	r24, 0x00	; 0
    1b58:	42 c0       	rjmp	.+132    	; 0x1bde <xQueueGenericSend+0x11c>
    1b5a:	11 11       	cpse	r17, r1
    1b5c:	05 c0       	rjmp	.+10     	; 0x1b68 <xQueueGenericSend+0xa6>
    1b5e:	ce 01       	movw	r24, r28
    1b60:	01 96       	adiw	r24, 0x01	; 1
    1b62:	0e 94 98 17 	call	0x2f30	; 0x2f30 <vTaskInternalSetTimeOutState>
    1b66:	19 2d       	mov	r17, r9
    1b68:	0f 90       	pop	r0
    1b6a:	0f be       	out	0x3f, r0	; 63
    1b6c:	fd d6       	rcall	.+3578   	; 0x2968 <vTaskSuspendAll>
    1b6e:	0f b6       	in	r0, 0x3f	; 63
    1b70:	f8 94       	cli
    1b72:	0f 92       	push	r0
    1b74:	f7 01       	movw	r30, r14
    1b76:	81 a1       	ldd	r24, Z+33	; 0x21
    1b78:	8f 3f       	cpi	r24, 0xFF	; 255
    1b7a:	09 f4       	brne	.+2      	; 0x1b7e <xQueueGenericSend+0xbc>
    1b7c:	11 a2       	std	Z+33, r1	; 0x21
    1b7e:	f7 01       	movw	r30, r14
    1b80:	82 a1       	ldd	r24, Z+34	; 0x22
    1b82:	8f 3f       	cpi	r24, 0xFF	; 255
    1b84:	09 f4       	brne	.+2      	; 0x1b88 <xQueueGenericSend+0xc6>
    1b86:	12 a2       	std	Z+34, r1	; 0x22
    1b88:	0f 90       	pop	r0
    1b8a:	0f be       	out	0x3f, r0	; 63
    1b8c:	be 01       	movw	r22, r28
    1b8e:	6a 5f       	subi	r22, 0xFA	; 250
    1b90:	7f 4f       	sbci	r23, 0xFF	; 255
    1b92:	ce 01       	movw	r24, r28
    1b94:	01 96       	adiw	r24, 0x01	; 1
    1b96:	0e 94 a9 17 	call	0x2f52	; 0x2f52 <xTaskCheckForTimeOut>
    1b9a:	81 11       	cpse	r24, r1
    1b9c:	1c c0       	rjmp	.+56     	; 0x1bd6 <xQueueGenericSend+0x114>
    1b9e:	0f b6       	in	r0, 0x3f	; 63
    1ba0:	f8 94       	cli
    1ba2:	0f 92       	push	r0
    1ba4:	f7 01       	movw	r30, r14
    1ba6:	96 8d       	ldd	r25, Z+30	; 0x1e
    1ba8:	87 8d       	ldd	r24, Z+31	; 0x1f
    1baa:	0f 90       	pop	r0
    1bac:	0f be       	out	0x3f, r0	; 63
    1bae:	98 13       	cpse	r25, r24
    1bb0:	0e c0       	rjmp	.+28     	; 0x1bce <xQueueGenericSend+0x10c>
    1bb2:	4e 81       	ldd	r20, Y+6	; 0x06
    1bb4:	5f 81       	ldd	r21, Y+7	; 0x07
    1bb6:	68 85       	ldd	r22, Y+8	; 0x08
    1bb8:	79 85       	ldd	r23, Y+9	; 0x09
    1bba:	c6 01       	movw	r24, r12
    1bbc:	0e 94 b1 16 	call	0x2d62	; 0x2d62 <vTaskPlaceOnEventList>
    1bc0:	c7 01       	movw	r24, r14
    1bc2:	c1 de       	rcall	.-638    	; 0x1946 <prvUnlockQueue>
    1bc4:	ba d7       	rcall	.+3956   	; 0x2b3a <xTaskResumeAll>
    1bc6:	81 11       	cpse	r24, r1
    1bc8:	9c cf       	rjmp	.-200    	; 0x1b02 <xQueueGenericSend+0x40>
    1bca:	71 dd       	rcall	.-1310   	; 0x16ae <vPortYield>
    1bcc:	9a cf       	rjmp	.-204    	; 0x1b02 <xQueueGenericSend+0x40>
    1bce:	c7 01       	movw	r24, r14
    1bd0:	ba de       	rcall	.-652    	; 0x1946 <prvUnlockQueue>
    1bd2:	b3 d7       	rcall	.+3942   	; 0x2b3a <xTaskResumeAll>
    1bd4:	96 cf       	rjmp	.-212    	; 0x1b02 <xQueueGenericSend+0x40>
    1bd6:	c7 01       	movw	r24, r14
    1bd8:	b6 de       	rcall	.-660    	; 0x1946 <prvUnlockQueue>
    1bda:	af d7       	rcall	.+3934   	; 0x2b3a <xTaskResumeAll>
    1bdc:	80 e0       	ldi	r24, 0x00	; 0
    1bde:	29 96       	adiw	r28, 0x09	; 9
    1be0:	0f b6       	in	r0, 0x3f	; 63
    1be2:	f8 94       	cli
    1be4:	de bf       	out	0x3e, r29	; 62
    1be6:	0f be       	out	0x3f, r0	; 63
    1be8:	cd bf       	out	0x3d, r28	; 61
    1bea:	df 91       	pop	r29
    1bec:	cf 91       	pop	r28
    1bee:	1f 91       	pop	r17
    1bf0:	0f 91       	pop	r16
    1bf2:	ff 90       	pop	r15
    1bf4:	ef 90       	pop	r14
    1bf6:	df 90       	pop	r13
    1bf8:	cf 90       	pop	r12
    1bfa:	bf 90       	pop	r11
    1bfc:	af 90       	pop	r10
    1bfe:	9f 90       	pop	r9
    1c00:	08 95       	ret

00001c02 <xQueueCreateMutex>:
    1c02:	0f 93       	push	r16
    1c04:	cf 93       	push	r28
    1c06:	df 93       	push	r29
    1c08:	48 2f       	mov	r20, r24
    1c0a:	60 e0       	ldi	r22, 0x00	; 0
    1c0c:	81 e0       	ldi	r24, 0x01	; 1
    1c0e:	2b df       	rcall	.-426    	; 0x1a66 <xQueueGenericCreate>
    1c10:	ec 01       	movw	r28, r24
    1c12:	00 97       	sbiw	r24, 0x00	; 0
    1c14:	61 f0       	breq	.+24     	; 0x1c2e <xQueueCreateMutex+0x2c>
    1c16:	1d 82       	std	Y+5, r1	; 0x05
    1c18:	1c 82       	std	Y+4, r1	; 0x04
    1c1a:	19 82       	std	Y+1, r1	; 0x01
    1c1c:	18 82       	st	Y, r1
    1c1e:	1e 82       	std	Y+6, r1	; 0x06
    1c20:	00 e0       	ldi	r16, 0x00	; 0
    1c22:	20 e0       	ldi	r18, 0x00	; 0
    1c24:	30 e0       	ldi	r19, 0x00	; 0
    1c26:	a9 01       	movw	r20, r18
    1c28:	60 e0       	ldi	r22, 0x00	; 0
    1c2a:	70 e0       	ldi	r23, 0x00	; 0
    1c2c:	4a df       	rcall	.-364    	; 0x1ac2 <xQueueGenericSend>
    1c2e:	ce 01       	movw	r24, r28
    1c30:	df 91       	pop	r29
    1c32:	cf 91       	pop	r28
    1c34:	0f 91       	pop	r16
    1c36:	08 95       	ret

00001c38 <xQueueGenericSendFromISR>:
    1c38:	ef 92       	push	r14
    1c3a:	ff 92       	push	r15
    1c3c:	0f 93       	push	r16
    1c3e:	1f 93       	push	r17
    1c40:	cf 93       	push	r28
    1c42:	df 93       	push	r29
    1c44:	8a 01       	movw	r16, r20
    1c46:	fc 01       	movw	r30, r24
    1c48:	56 8d       	ldd	r21, Z+30	; 0x1e
    1c4a:	37 8d       	ldd	r19, Z+31	; 0x1f
    1c4c:	53 17       	cp	r21, r19
    1c4e:	10 f0       	brcs	.+4      	; 0x1c54 <xQueueGenericSendFromISR+0x1c>
    1c50:	22 30       	cpi	r18, 0x02	; 2
    1c52:	e9 f4       	brne	.+58     	; 0x1c8e <xQueueGenericSendFromISR+0x56>
    1c54:	42 2f       	mov	r20, r18
    1c56:	78 01       	movw	r14, r16
    1c58:	ec 01       	movw	r28, r24
    1c5a:	1a a1       	ldd	r17, Y+34	; 0x22
    1c5c:	fb dd       	rcall	.-1034   	; 0x1854 <prvCopyDataToQueue>
    1c5e:	1f 3f       	cpi	r17, 0xFF	; 255
    1c60:	81 f4       	brne	.+32     	; 0x1c82 <xQueueGenericSendFromISR+0x4a>
    1c62:	8b 89       	ldd	r24, Y+19	; 0x13
    1c64:	88 23       	and	r24, r24
    1c66:	a9 f0       	breq	.+42     	; 0x1c92 <xQueueGenericSendFromISR+0x5a>
    1c68:	ce 01       	movw	r24, r28
    1c6a:	43 96       	adiw	r24, 0x13	; 19
    1c6c:	0e 94 0c 17 	call	0x2e18	; 0x2e18 <xTaskRemoveFromEventList>
    1c70:	88 23       	and	r24, r24
    1c72:	89 f0       	breq	.+34     	; 0x1c96 <xQueueGenericSendFromISR+0x5e>
    1c74:	e1 14       	cp	r14, r1
    1c76:	f1 04       	cpc	r15, r1
    1c78:	81 f0       	breq	.+32     	; 0x1c9a <xQueueGenericSendFromISR+0x62>
    1c7a:	81 e0       	ldi	r24, 0x01	; 1
    1c7c:	f7 01       	movw	r30, r14
    1c7e:	80 83       	st	Z, r24
    1c80:	0d c0       	rjmp	.+26     	; 0x1c9c <xQueueGenericSendFromISR+0x64>
    1c82:	ff 24       	eor	r15, r15
    1c84:	f3 94       	inc	r15
    1c86:	f1 0e       	add	r15, r17
    1c88:	fa a2       	std	Y+34, r15	; 0x22
    1c8a:	81 e0       	ldi	r24, 0x01	; 1
    1c8c:	07 c0       	rjmp	.+14     	; 0x1c9c <xQueueGenericSendFromISR+0x64>
    1c8e:	80 e0       	ldi	r24, 0x00	; 0
    1c90:	05 c0       	rjmp	.+10     	; 0x1c9c <xQueueGenericSendFromISR+0x64>
    1c92:	81 e0       	ldi	r24, 0x01	; 1
    1c94:	03 c0       	rjmp	.+6      	; 0x1c9c <xQueueGenericSendFromISR+0x64>
    1c96:	81 e0       	ldi	r24, 0x01	; 1
    1c98:	01 c0       	rjmp	.+2      	; 0x1c9c <xQueueGenericSendFromISR+0x64>
    1c9a:	81 e0       	ldi	r24, 0x01	; 1
    1c9c:	df 91       	pop	r29
    1c9e:	cf 91       	pop	r28
    1ca0:	1f 91       	pop	r17
    1ca2:	0f 91       	pop	r16
    1ca4:	ff 90       	pop	r15
    1ca6:	ef 90       	pop	r14
    1ca8:	08 95       	ret

00001caa <xQueueReceive>:
    1caa:	9f 92       	push	r9
    1cac:	af 92       	push	r10
    1cae:	bf 92       	push	r11
    1cb0:	cf 92       	push	r12
    1cb2:	df 92       	push	r13
    1cb4:	ef 92       	push	r14
    1cb6:	ff 92       	push	r15
    1cb8:	0f 93       	push	r16
    1cba:	1f 93       	push	r17
    1cbc:	cf 93       	push	r28
    1cbe:	df 93       	push	r29
    1cc0:	cd b7       	in	r28, 0x3d	; 61
    1cc2:	de b7       	in	r29, 0x3e	; 62
    1cc4:	29 97       	sbiw	r28, 0x09	; 9
    1cc6:	0f b6       	in	r0, 0x3f	; 63
    1cc8:	f8 94       	cli
    1cca:	de bf       	out	0x3e, r29	; 62
    1ccc:	0f be       	out	0x3f, r0	; 63
    1cce:	cd bf       	out	0x3d, r28	; 61
    1cd0:	8c 01       	movw	r16, r24
    1cd2:	5b 01       	movw	r10, r22
    1cd4:	2e 83       	std	Y+6, r18	; 0x06
    1cd6:	3f 83       	std	Y+7, r19	; 0x07
    1cd8:	48 87       	std	Y+8, r20	; 0x08
    1cda:	59 87       	std	Y+9, r21	; 0x09
    1cdc:	e1 2c       	mov	r14, r1
    1cde:	99 24       	eor	r9, r9
    1ce0:	93 94       	inc	r9
    1ce2:	6c 01       	movw	r12, r24
    1ce4:	83 e1       	ldi	r24, 0x13	; 19
    1ce6:	c8 0e       	add	r12, r24
    1ce8:	d1 1c       	adc	r13, r1
    1cea:	0f b6       	in	r0, 0x3f	; 63
    1cec:	f8 94       	cli
    1cee:	0f 92       	push	r0
    1cf0:	f8 01       	movw	r30, r16
    1cf2:	f6 8c       	ldd	r15, Z+30	; 0x1e
    1cf4:	ff 20       	and	r15, r15
    1cf6:	99 f0       	breq	.+38     	; 0x1d1e <xQueueReceive+0x74>
    1cf8:	b5 01       	movw	r22, r10
    1cfa:	c8 01       	movw	r24, r16
    1cfc:	0a de       	rcall	.-1004   	; 0x1912 <prvCopyDataFromQueue>
    1cfe:	fa 94       	dec	r15
    1d00:	f8 01       	movw	r30, r16
    1d02:	f6 8e       	std	Z+30, r15	; 0x1e
    1d04:	80 85       	ldd	r24, Z+8	; 0x08
    1d06:	88 23       	and	r24, r24
    1d08:	31 f0       	breq	.+12     	; 0x1d16 <xQueueReceive+0x6c>
    1d0a:	c8 01       	movw	r24, r16
    1d0c:	08 96       	adiw	r24, 0x08	; 8
    1d0e:	0e 94 0c 17 	call	0x2e18	; 0x2e18 <xTaskRemoveFromEventList>
    1d12:	81 11       	cpse	r24, r1
    1d14:	cc dc       	rcall	.-1640   	; 0x16ae <vPortYield>
    1d16:	0f 90       	pop	r0
    1d18:	0f be       	out	0x3f, r0	; 63
    1d1a:	81 e0       	ldi	r24, 0x01	; 1
    1d1c:	4c c0       	rjmp	.+152    	; 0x1db6 <xQueueReceive+0x10c>
    1d1e:	8e 81       	ldd	r24, Y+6	; 0x06
    1d20:	9f 81       	ldd	r25, Y+7	; 0x07
    1d22:	a8 85       	ldd	r26, Y+8	; 0x08
    1d24:	b9 85       	ldd	r27, Y+9	; 0x09
    1d26:	89 2b       	or	r24, r25
    1d28:	8a 2b       	or	r24, r26
    1d2a:	8b 2b       	or	r24, r27
    1d2c:	21 f4       	brne	.+8      	; 0x1d36 <xQueueReceive+0x8c>
    1d2e:	0f 90       	pop	r0
    1d30:	0f be       	out	0x3f, r0	; 63
    1d32:	80 e0       	ldi	r24, 0x00	; 0
    1d34:	40 c0       	rjmp	.+128    	; 0x1db6 <xQueueReceive+0x10c>
    1d36:	e1 10       	cpse	r14, r1
    1d38:	05 c0       	rjmp	.+10     	; 0x1d44 <xQueueReceive+0x9a>
    1d3a:	ce 01       	movw	r24, r28
    1d3c:	01 96       	adiw	r24, 0x01	; 1
    1d3e:	0e 94 98 17 	call	0x2f30	; 0x2f30 <vTaskInternalSetTimeOutState>
    1d42:	e9 2c       	mov	r14, r9
    1d44:	0f 90       	pop	r0
    1d46:	0f be       	out	0x3f, r0	; 63
    1d48:	0f d6       	rcall	.+3102   	; 0x2968 <vTaskSuspendAll>
    1d4a:	0f b6       	in	r0, 0x3f	; 63
    1d4c:	f8 94       	cli
    1d4e:	0f 92       	push	r0
    1d50:	f8 01       	movw	r30, r16
    1d52:	81 a1       	ldd	r24, Z+33	; 0x21
    1d54:	8f 3f       	cpi	r24, 0xFF	; 255
    1d56:	09 f4       	brne	.+2      	; 0x1d5a <xQueueReceive+0xb0>
    1d58:	11 a2       	std	Z+33, r1	; 0x21
    1d5a:	f8 01       	movw	r30, r16
    1d5c:	82 a1       	ldd	r24, Z+34	; 0x22
    1d5e:	8f 3f       	cpi	r24, 0xFF	; 255
    1d60:	09 f4       	brne	.+2      	; 0x1d64 <xQueueReceive+0xba>
    1d62:	12 a2       	std	Z+34, r1	; 0x22
    1d64:	0f 90       	pop	r0
    1d66:	0f be       	out	0x3f, r0	; 63
    1d68:	be 01       	movw	r22, r28
    1d6a:	6a 5f       	subi	r22, 0xFA	; 250
    1d6c:	7f 4f       	sbci	r23, 0xFF	; 255
    1d6e:	ce 01       	movw	r24, r28
    1d70:	01 96       	adiw	r24, 0x01	; 1
    1d72:	0e 94 a9 17 	call	0x2f52	; 0x2f52 <xTaskCheckForTimeOut>
    1d76:	81 11       	cpse	r24, r1
    1d78:	15 c0       	rjmp	.+42     	; 0x1da4 <xQueueReceive+0xfa>
    1d7a:	c8 01       	movw	r24, r16
    1d7c:	60 dd       	rcall	.-1344   	; 0x183e <prvIsQueueEmpty>
    1d7e:	88 23       	and	r24, r24
    1d80:	69 f0       	breq	.+26     	; 0x1d9c <xQueueReceive+0xf2>
    1d82:	4e 81       	ldd	r20, Y+6	; 0x06
    1d84:	5f 81       	ldd	r21, Y+7	; 0x07
    1d86:	68 85       	ldd	r22, Y+8	; 0x08
    1d88:	79 85       	ldd	r23, Y+9	; 0x09
    1d8a:	c6 01       	movw	r24, r12
    1d8c:	ea d7       	rcall	.+4052   	; 0x2d62 <vTaskPlaceOnEventList>
    1d8e:	c8 01       	movw	r24, r16
    1d90:	da dd       	rcall	.-1100   	; 0x1946 <prvUnlockQueue>
    1d92:	d3 d6       	rcall	.+3494   	; 0x2b3a <xTaskResumeAll>
    1d94:	81 11       	cpse	r24, r1
    1d96:	a9 cf       	rjmp	.-174    	; 0x1cea <xQueueReceive+0x40>
    1d98:	8a dc       	rcall	.-1772   	; 0x16ae <vPortYield>
    1d9a:	a7 cf       	rjmp	.-178    	; 0x1cea <xQueueReceive+0x40>
    1d9c:	c8 01       	movw	r24, r16
    1d9e:	d3 dd       	rcall	.-1114   	; 0x1946 <prvUnlockQueue>
    1da0:	cc d6       	rcall	.+3480   	; 0x2b3a <xTaskResumeAll>
    1da2:	a3 cf       	rjmp	.-186    	; 0x1cea <xQueueReceive+0x40>
    1da4:	c8 01       	movw	r24, r16
    1da6:	cf dd       	rcall	.-1122   	; 0x1946 <prvUnlockQueue>
    1da8:	c8 d6       	rcall	.+3472   	; 0x2b3a <xTaskResumeAll>
    1daa:	c8 01       	movw	r24, r16
    1dac:	48 dd       	rcall	.-1392   	; 0x183e <prvIsQueueEmpty>
    1dae:	88 23       	and	r24, r24
    1db0:	09 f4       	brne	.+2      	; 0x1db4 <xQueueReceive+0x10a>
    1db2:	9b cf       	rjmp	.-202    	; 0x1cea <xQueueReceive+0x40>
    1db4:	80 e0       	ldi	r24, 0x00	; 0
    1db6:	29 96       	adiw	r28, 0x09	; 9
    1db8:	0f b6       	in	r0, 0x3f	; 63
    1dba:	f8 94       	cli
    1dbc:	de bf       	out	0x3e, r29	; 62
    1dbe:	0f be       	out	0x3f, r0	; 63
    1dc0:	cd bf       	out	0x3d, r28	; 61
    1dc2:	df 91       	pop	r29
    1dc4:	cf 91       	pop	r28
    1dc6:	1f 91       	pop	r17
    1dc8:	0f 91       	pop	r16
    1dca:	ff 90       	pop	r15
    1dcc:	ef 90       	pop	r14
    1dce:	df 90       	pop	r13
    1dd0:	cf 90       	pop	r12
    1dd2:	bf 90       	pop	r11
    1dd4:	af 90       	pop	r10
    1dd6:	9f 90       	pop	r9
    1dd8:	08 95       	ret

00001dda <xQueueSemaphoreTake>:
    1dda:	bf 92       	push	r11
    1ddc:	cf 92       	push	r12
    1dde:	df 92       	push	r13
    1de0:	ef 92       	push	r14
    1de2:	ff 92       	push	r15
    1de4:	0f 93       	push	r16
    1de6:	1f 93       	push	r17
    1de8:	cf 93       	push	r28
    1dea:	df 93       	push	r29
    1dec:	cd b7       	in	r28, 0x3d	; 61
    1dee:	de b7       	in	r29, 0x3e	; 62
    1df0:	29 97       	sbiw	r28, 0x09	; 9
    1df2:	0f b6       	in	r0, 0x3f	; 63
    1df4:	f8 94       	cli
    1df6:	de bf       	out	0x3e, r29	; 62
    1df8:	0f be       	out	0x3f, r0	; 63
    1dfa:	cd bf       	out	0x3d, r28	; 61
    1dfc:	8c 01       	movw	r16, r24
    1dfe:	4e 83       	std	Y+6, r20	; 0x06
    1e00:	5f 83       	std	Y+7, r21	; 0x07
    1e02:	68 87       	std	Y+8, r22	; 0x08
    1e04:	79 87       	std	Y+9, r23	; 0x09
    1e06:	b1 2c       	mov	r11, r1
    1e08:	d1 2c       	mov	r13, r1
    1e0a:	cc 24       	eor	r12, r12
    1e0c:	c3 94       	inc	r12
    1e0e:	7c 01       	movw	r14, r24
    1e10:	83 e1       	ldi	r24, 0x13	; 19
    1e12:	e8 0e       	add	r14, r24
    1e14:	f1 1c       	adc	r15, r1
    1e16:	0f b6       	in	r0, 0x3f	; 63
    1e18:	f8 94       	cli
    1e1a:	0f 92       	push	r0
    1e1c:	d8 01       	movw	r26, r16
    1e1e:	5e 96       	adiw	r26, 0x1e	; 30
    1e20:	8c 91       	ld	r24, X
    1e22:	5e 97       	sbiw	r26, 0x1e	; 30
    1e24:	88 23       	and	r24, r24
    1e26:	d9 f0       	breq	.+54     	; 0x1e5e <xQueueSemaphoreTake+0x84>
    1e28:	81 50       	subi	r24, 0x01	; 1
    1e2a:	5e 96       	adiw	r26, 0x1e	; 30
    1e2c:	8c 93       	st	X, r24
    1e2e:	5e 97       	sbiw	r26, 0x1e	; 30
    1e30:	8d 91       	ld	r24, X+
    1e32:	9c 91       	ld	r25, X
    1e34:	89 2b       	or	r24, r25
    1e36:	29 f4       	brne	.+10     	; 0x1e42 <xQueueSemaphoreTake+0x68>
    1e38:	0e 94 37 19 	call	0x326e	; 0x326e <pvTaskIncrementMutexHeldCount>
    1e3c:	f8 01       	movw	r30, r16
    1e3e:	95 83       	std	Z+5, r25	; 0x05
    1e40:	84 83       	std	Z+4, r24	; 0x04
    1e42:	d8 01       	movw	r26, r16
    1e44:	18 96       	adiw	r26, 0x08	; 8
    1e46:	8c 91       	ld	r24, X
    1e48:	88 23       	and	r24, r24
    1e4a:	29 f0       	breq	.+10     	; 0x1e56 <xQueueSemaphoreTake+0x7c>
    1e4c:	c8 01       	movw	r24, r16
    1e4e:	08 96       	adiw	r24, 0x08	; 8
    1e50:	e3 d7       	rcall	.+4038   	; 0x2e18 <xTaskRemoveFromEventList>
    1e52:	81 11       	cpse	r24, r1
    1e54:	2c dc       	rcall	.-1960   	; 0x16ae <vPortYield>
    1e56:	0f 90       	pop	r0
    1e58:	0f be       	out	0x3f, r0	; 63
    1e5a:	81 e0       	ldi	r24, 0x01	; 1
    1e5c:	7a c0       	rjmp	.+244    	; 0x1f52 <xQueueSemaphoreTake+0x178>
    1e5e:	8e 81       	ldd	r24, Y+6	; 0x06
    1e60:	9f 81       	ldd	r25, Y+7	; 0x07
    1e62:	a8 85       	ldd	r26, Y+8	; 0x08
    1e64:	b9 85       	ldd	r27, Y+9	; 0x09
    1e66:	89 2b       	or	r24, r25
    1e68:	8a 2b       	or	r24, r26
    1e6a:	8b 2b       	or	r24, r27
    1e6c:	21 f4       	brne	.+8      	; 0x1e76 <xQueueSemaphoreTake+0x9c>
    1e6e:	0f 90       	pop	r0
    1e70:	0f be       	out	0x3f, r0	; 63
    1e72:	80 e0       	ldi	r24, 0x00	; 0
    1e74:	6e c0       	rjmp	.+220    	; 0x1f52 <xQueueSemaphoreTake+0x178>
    1e76:	d1 10       	cpse	r13, r1
    1e78:	05 c0       	rjmp	.+10     	; 0x1e84 <xQueueSemaphoreTake+0xaa>
    1e7a:	ce 01       	movw	r24, r28
    1e7c:	01 96       	adiw	r24, 0x01	; 1
    1e7e:	0e 94 98 17 	call	0x2f30	; 0x2f30 <vTaskInternalSetTimeOutState>
    1e82:	dc 2c       	mov	r13, r12
    1e84:	0f 90       	pop	r0
    1e86:	0f be       	out	0x3f, r0	; 63
    1e88:	6f d5       	rcall	.+2782   	; 0x2968 <vTaskSuspendAll>
    1e8a:	0f b6       	in	r0, 0x3f	; 63
    1e8c:	f8 94       	cli
    1e8e:	0f 92       	push	r0
    1e90:	f8 01       	movw	r30, r16
    1e92:	81 a1       	ldd	r24, Z+33	; 0x21
    1e94:	8f 3f       	cpi	r24, 0xFF	; 255
    1e96:	09 f4       	brne	.+2      	; 0x1e9a <xQueueSemaphoreTake+0xc0>
    1e98:	11 a2       	std	Z+33, r1	; 0x21
    1e9a:	d8 01       	movw	r26, r16
    1e9c:	92 96       	adiw	r26, 0x22	; 34
    1e9e:	8c 91       	ld	r24, X
    1ea0:	92 97       	sbiw	r26, 0x22	; 34
    1ea2:	8f 3f       	cpi	r24, 0xFF	; 255
    1ea4:	11 f4       	brne	.+4      	; 0x1eaa <xQueueSemaphoreTake+0xd0>
    1ea6:	92 96       	adiw	r26, 0x22	; 34
    1ea8:	1c 92       	st	X, r1
    1eaa:	0f 90       	pop	r0
    1eac:	0f be       	out	0x3f, r0	; 63
    1eae:	be 01       	movw	r22, r28
    1eb0:	6a 5f       	subi	r22, 0xFA	; 250
    1eb2:	7f 4f       	sbci	r23, 0xFF	; 255
    1eb4:	ce 01       	movw	r24, r28
    1eb6:	01 96       	adiw	r24, 0x01	; 1
    1eb8:	0e 94 a9 17 	call	0x2f52	; 0x2f52 <xTaskCheckForTimeOut>
    1ebc:	81 11       	cpse	r24, r1
    1ebe:	24 c0       	rjmp	.+72     	; 0x1f08 <xQueueSemaphoreTake+0x12e>
    1ec0:	c8 01       	movw	r24, r16
    1ec2:	bd dc       	rcall	.-1670   	; 0x183e <prvIsQueueEmpty>
    1ec4:	88 23       	and	r24, r24
    1ec6:	e1 f0       	breq	.+56     	; 0x1f00 <xQueueSemaphoreTake+0x126>
    1ec8:	f8 01       	movw	r30, r16
    1eca:	80 81       	ld	r24, Z
    1ecc:	91 81       	ldd	r25, Z+1	; 0x01
    1ece:	89 2b       	or	r24, r25
    1ed0:	51 f4       	brne	.+20     	; 0x1ee6 <xQueueSemaphoreTake+0x10c>
    1ed2:	0f b6       	in	r0, 0x3f	; 63
    1ed4:	f8 94       	cli
    1ed6:	0f 92       	push	r0
    1ed8:	84 81       	ldd	r24, Z+4	; 0x04
    1eda:	95 81       	ldd	r25, Z+5	; 0x05
    1edc:	0e 94 15 18 	call	0x302a	; 0x302a <xTaskPriorityInherit>
    1ee0:	b8 2e       	mov	r11, r24
    1ee2:	0f 90       	pop	r0
    1ee4:	0f be       	out	0x3f, r0	; 63
    1ee6:	4e 81       	ldd	r20, Y+6	; 0x06
    1ee8:	5f 81       	ldd	r21, Y+7	; 0x07
    1eea:	68 85       	ldd	r22, Y+8	; 0x08
    1eec:	79 85       	ldd	r23, Y+9	; 0x09
    1eee:	c7 01       	movw	r24, r14
    1ef0:	38 d7       	rcall	.+3696   	; 0x2d62 <vTaskPlaceOnEventList>
    1ef2:	c8 01       	movw	r24, r16
    1ef4:	28 dd       	rcall	.-1456   	; 0x1946 <prvUnlockQueue>
    1ef6:	21 d6       	rcall	.+3138   	; 0x2b3a <xTaskResumeAll>
    1ef8:	81 11       	cpse	r24, r1
    1efa:	8d cf       	rjmp	.-230    	; 0x1e16 <xQueueSemaphoreTake+0x3c>
    1efc:	d8 db       	rcall	.-2128   	; 0x16ae <vPortYield>
    1efe:	8b cf       	rjmp	.-234    	; 0x1e16 <xQueueSemaphoreTake+0x3c>
    1f00:	c8 01       	movw	r24, r16
    1f02:	21 dd       	rcall	.-1470   	; 0x1946 <prvUnlockQueue>
    1f04:	1a d6       	rcall	.+3124   	; 0x2b3a <xTaskResumeAll>
    1f06:	87 cf       	rjmp	.-242    	; 0x1e16 <xQueueSemaphoreTake+0x3c>
    1f08:	c8 01       	movw	r24, r16
    1f0a:	1d dd       	rcall	.-1478   	; 0x1946 <prvUnlockQueue>
    1f0c:	16 d6       	rcall	.+3116   	; 0x2b3a <xTaskResumeAll>
    1f0e:	c8 01       	movw	r24, r16
    1f10:	96 dc       	rcall	.-1748   	; 0x183e <prvIsQueueEmpty>
    1f12:	88 23       	and	r24, r24
    1f14:	09 f4       	brne	.+2      	; 0x1f18 <xQueueSemaphoreTake+0x13e>
    1f16:	7f cf       	rjmp	.-258    	; 0x1e16 <xQueueSemaphoreTake+0x3c>
    1f18:	bb 20       	and	r11, r11
    1f1a:	d1 f0       	breq	.+52     	; 0x1f50 <xQueueSemaphoreTake+0x176>
    1f1c:	0f b6       	in	r0, 0x3f	; 63
    1f1e:	f8 94       	cli
    1f20:	0f 92       	push	r0
    1f22:	f8 01       	movw	r30, r16
    1f24:	83 89       	ldd	r24, Z+19	; 0x13
    1f26:	88 23       	and	r24, r24
    1f28:	39 f0       	breq	.+14     	; 0x1f38 <xQueueSemaphoreTake+0x15e>
    1f2a:	02 8c       	ldd	r0, Z+26	; 0x1a
    1f2c:	f3 8d       	ldd	r31, Z+27	; 0x1b
    1f2e:	e0 2d       	mov	r30, r0
    1f30:	80 81       	ld	r24, Z
    1f32:	64 e0       	ldi	r22, 0x04	; 4
    1f34:	68 1b       	sub	r22, r24
    1f36:	01 c0       	rjmp	.+2      	; 0x1f3a <xQueueSemaphoreTake+0x160>
    1f38:	60 e0       	ldi	r22, 0x00	; 0
    1f3a:	d8 01       	movw	r26, r16
    1f3c:	14 96       	adiw	r26, 0x04	; 4
    1f3e:	8d 91       	ld	r24, X+
    1f40:	9c 91       	ld	r25, X
    1f42:	15 97       	sbiw	r26, 0x05	; 5
    1f44:	0e 94 c3 18 	call	0x3186	; 0x3186 <vTaskPriorityDisinheritAfterTimeout>
    1f48:	0f 90       	pop	r0
    1f4a:	0f be       	out	0x3f, r0	; 63
    1f4c:	80 e0       	ldi	r24, 0x00	; 0
    1f4e:	01 c0       	rjmp	.+2      	; 0x1f52 <xQueueSemaphoreTake+0x178>
    1f50:	80 e0       	ldi	r24, 0x00	; 0
    1f52:	29 96       	adiw	r28, 0x09	; 9
    1f54:	0f b6       	in	r0, 0x3f	; 63
    1f56:	f8 94       	cli
    1f58:	de bf       	out	0x3e, r29	; 62
    1f5a:	0f be       	out	0x3f, r0	; 63
    1f5c:	cd bf       	out	0x3d, r28	; 61
    1f5e:	df 91       	pop	r29
    1f60:	cf 91       	pop	r28
    1f62:	1f 91       	pop	r17
    1f64:	0f 91       	pop	r16
    1f66:	ff 90       	pop	r15
    1f68:	ef 90       	pop	r14
    1f6a:	df 90       	pop	r13
    1f6c:	cf 90       	pop	r12
    1f6e:	bf 90       	pop	r11
    1f70:	08 95       	ret

00001f72 <vQueueWaitForMessageRestricted>:
    1f72:	cf 93       	push	r28
    1f74:	df 93       	push	r29
    1f76:	ec 01       	movw	r28, r24
    1f78:	0f b6       	in	r0, 0x3f	; 63
    1f7a:	f8 94       	cli
    1f7c:	0f 92       	push	r0
    1f7e:	89 a1       	ldd	r24, Y+33	; 0x21
    1f80:	8f 3f       	cpi	r24, 0xFF	; 255
    1f82:	09 f4       	brne	.+2      	; 0x1f86 <vQueueWaitForMessageRestricted+0x14>
    1f84:	19 a2       	std	Y+33, r1	; 0x21
    1f86:	8a a1       	ldd	r24, Y+34	; 0x22
    1f88:	8f 3f       	cpi	r24, 0xFF	; 255
    1f8a:	09 f4       	brne	.+2      	; 0x1f8e <vQueueWaitForMessageRestricted+0x1c>
    1f8c:	1a a2       	std	Y+34, r1	; 0x22
    1f8e:	0f 90       	pop	r0
    1f90:	0f be       	out	0x3f, r0	; 63
    1f92:	8e 8d       	ldd	r24, Y+30	; 0x1e
    1f94:	81 11       	cpse	r24, r1
    1f96:	03 c0       	rjmp	.+6      	; 0x1f9e <vQueueWaitForMessageRestricted+0x2c>
    1f98:	ce 01       	movw	r24, r28
    1f9a:	43 96       	adiw	r24, 0x13	; 19
    1f9c:	1d d7       	rcall	.+3642   	; 0x2dd8 <vTaskPlaceOnEventListRestricted>
    1f9e:	ce 01       	movw	r24, r28
    1fa0:	d2 dc       	rcall	.-1628   	; 0x1946 <prvUnlockQueue>
    1fa2:	df 91       	pop	r29
    1fa4:	cf 91       	pop	r28
    1fa6:	08 95       	ret

00001fa8 <prvBytesInBuffer>:
    1fa8:	fc 01       	movw	r30, r24
    1faa:	44 81       	ldd	r20, Z+4	; 0x04
    1fac:	55 81       	ldd	r21, Z+5	; 0x05
    1fae:	22 81       	ldd	r18, Z+2	; 0x02
    1fb0:	33 81       	ldd	r19, Z+3	; 0x03
    1fb2:	24 0f       	add	r18, r20
    1fb4:	35 1f       	adc	r19, r21
    1fb6:	80 81       	ld	r24, Z
    1fb8:	91 81       	ldd	r25, Z+1	; 0x01
    1fba:	b9 01       	movw	r22, r18
    1fbc:	68 1b       	sub	r22, r24
    1fbe:	79 0b       	sbc	r23, r25
    1fc0:	cb 01       	movw	r24, r22
    1fc2:	64 17       	cp	r22, r20
    1fc4:	75 07       	cpc	r23, r21
    1fc6:	10 f0       	brcs	.+4      	; 0x1fcc <prvBytesInBuffer+0x24>
    1fc8:	84 1b       	sub	r24, r20
    1fca:	95 0b       	sbc	r25, r21
    1fcc:	08 95       	ret

00001fce <prvWriteBytesToBuffer>:
    1fce:	af 92       	push	r10
    1fd0:	bf 92       	push	r11
    1fd2:	cf 92       	push	r12
    1fd4:	df 92       	push	r13
    1fd6:	ef 92       	push	r14
    1fd8:	ff 92       	push	r15
    1fda:	0f 93       	push	r16
    1fdc:	1f 93       	push	r17
    1fde:	cf 93       	push	r28
    1fe0:	df 93       	push	r29
    1fe2:	6c 01       	movw	r12, r24
    1fe4:	5b 01       	movw	r10, r22
    1fe6:	7a 01       	movw	r14, r20
    1fe8:	fc 01       	movw	r30, r24
    1fea:	c2 81       	ldd	r28, Z+2	; 0x02
    1fec:	d3 81       	ldd	r29, Z+3	; 0x03
    1fee:	04 81       	ldd	r16, Z+4	; 0x04
    1ff0:	15 81       	ldd	r17, Z+5	; 0x05
    1ff2:	0c 1b       	sub	r16, r28
    1ff4:	1d 0b       	sbc	r17, r29
    1ff6:	40 17       	cp	r20, r16
    1ff8:	51 07       	cpc	r21, r17
    1ffa:	08 f4       	brcc	.+2      	; 0x1ffe <prvWriteBytesToBuffer+0x30>
    1ffc:	8a 01       	movw	r16, r20
    1ffe:	f6 01       	movw	r30, r12
    2000:	84 85       	ldd	r24, Z+12	; 0x0c
    2002:	95 85       	ldd	r25, Z+13	; 0x0d
    2004:	a8 01       	movw	r20, r16
    2006:	b5 01       	movw	r22, r10
    2008:	8c 0f       	add	r24, r28
    200a:	9d 1f       	adc	r25, r29
    200c:	0e 94 34 2e 	call	0x5c68	; 0x5c68 <memcpy>
    2010:	0e 15       	cp	r16, r14
    2012:	1f 05       	cpc	r17, r15
    2014:	58 f4       	brcc	.+22     	; 0x202c <prvWriteBytesToBuffer+0x5e>
    2016:	a7 01       	movw	r20, r14
    2018:	40 1b       	sub	r20, r16
    201a:	51 0b       	sbc	r21, r17
    201c:	b5 01       	movw	r22, r10
    201e:	60 0f       	add	r22, r16
    2020:	71 1f       	adc	r23, r17
    2022:	f6 01       	movw	r30, r12
    2024:	84 85       	ldd	r24, Z+12	; 0x0c
    2026:	95 85       	ldd	r25, Z+13	; 0x0d
    2028:	0e 94 34 2e 	call	0x5c68	; 0x5c68 <memcpy>
    202c:	ce 01       	movw	r24, r28
    202e:	8e 0d       	add	r24, r14
    2030:	9f 1d       	adc	r25, r15
    2032:	f6 01       	movw	r30, r12
    2034:	24 81       	ldd	r18, Z+4	; 0x04
    2036:	35 81       	ldd	r19, Z+5	; 0x05
    2038:	82 17       	cp	r24, r18
    203a:	93 07       	cpc	r25, r19
    203c:	10 f0       	brcs	.+4      	; 0x2042 <prvWriteBytesToBuffer+0x74>
    203e:	82 1b       	sub	r24, r18
    2040:	93 0b       	sbc	r25, r19
    2042:	f6 01       	movw	r30, r12
    2044:	93 83       	std	Z+3, r25	; 0x03
    2046:	82 83       	std	Z+2, r24	; 0x02
    2048:	c7 01       	movw	r24, r14
    204a:	df 91       	pop	r29
    204c:	cf 91       	pop	r28
    204e:	1f 91       	pop	r17
    2050:	0f 91       	pop	r16
    2052:	ff 90       	pop	r15
    2054:	ef 90       	pop	r14
    2056:	df 90       	pop	r13
    2058:	cf 90       	pop	r12
    205a:	bf 90       	pop	r11
    205c:	af 90       	pop	r10
    205e:	08 95       	ret

00002060 <prvWriteMessageToBuffer>:
    2060:	cf 92       	push	r12
    2062:	df 92       	push	r13
    2064:	ef 92       	push	r14
    2066:	ff 92       	push	r15
    2068:	0f 93       	push	r16
    206a:	1f 93       	push	r17
    206c:	cf 93       	push	r28
    206e:	df 93       	push	r29
    2070:	1f 92       	push	r1
    2072:	1f 92       	push	r1
    2074:	cd b7       	in	r28, 0x3d	; 61
    2076:	de b7       	in	r29, 0x3e	; 62
    2078:	5a 83       	std	Y+2, r21	; 0x02
    207a:	49 83       	std	Y+1, r20	; 0x01
    207c:	21 15       	cp	r18, r1
    207e:	31 05       	cpc	r19, r1
    2080:	c9 f0       	breq	.+50     	; 0x20b4 <prvWriteMessageToBuffer+0x54>
    2082:	6b 01       	movw	r12, r22
    2084:	7c 01       	movw	r14, r24
    2086:	fc 01       	movw	r30, r24
    2088:	86 85       	ldd	r24, Z+14	; 0x0e
    208a:	80 fd       	sbrc	r24, 0
    208c:	08 c0       	rjmp	.+16     	; 0x209e <prvWriteMessageToBuffer+0x3e>
    208e:	ca 01       	movw	r24, r20
    2090:	24 17       	cp	r18, r20
    2092:	35 07       	cpc	r19, r21
    2094:	08 f4       	brcc	.+2      	; 0x2098 <prvWriteMessageToBuffer+0x38>
    2096:	c9 01       	movw	r24, r18
    2098:	9a 83       	std	Y+2, r25	; 0x02
    209a:	89 83       	std	Y+1, r24	; 0x01
    209c:	11 c0       	rjmp	.+34     	; 0x20c0 <prvWriteMessageToBuffer+0x60>
    209e:	20 17       	cp	r18, r16
    20a0:	31 07       	cpc	r19, r17
    20a2:	58 f0       	brcs	.+22     	; 0x20ba <prvWriteMessageToBuffer+0x5a>
    20a4:	42 e0       	ldi	r20, 0x02	; 2
    20a6:	50 e0       	ldi	r21, 0x00	; 0
    20a8:	be 01       	movw	r22, r28
    20aa:	6f 5f       	subi	r22, 0xFF	; 255
    20ac:	7f 4f       	sbci	r23, 0xFF	; 255
    20ae:	c7 01       	movw	r24, r14
    20b0:	8e df       	rcall	.-228    	; 0x1fce <prvWriteBytesToBuffer>
    20b2:	06 c0       	rjmp	.+12     	; 0x20c0 <prvWriteMessageToBuffer+0x60>
    20b4:	80 e0       	ldi	r24, 0x00	; 0
    20b6:	90 e0       	ldi	r25, 0x00	; 0
    20b8:	08 c0       	rjmp	.+16     	; 0x20ca <prvWriteMessageToBuffer+0x6a>
    20ba:	80 e0       	ldi	r24, 0x00	; 0
    20bc:	90 e0       	ldi	r25, 0x00	; 0
    20be:	05 c0       	rjmp	.+10     	; 0x20ca <prvWriteMessageToBuffer+0x6a>
    20c0:	49 81       	ldd	r20, Y+1	; 0x01
    20c2:	5a 81       	ldd	r21, Y+2	; 0x02
    20c4:	b6 01       	movw	r22, r12
    20c6:	c7 01       	movw	r24, r14
    20c8:	82 df       	rcall	.-252    	; 0x1fce <prvWriteBytesToBuffer>
    20ca:	0f 90       	pop	r0
    20cc:	0f 90       	pop	r0
    20ce:	df 91       	pop	r29
    20d0:	cf 91       	pop	r28
    20d2:	1f 91       	pop	r17
    20d4:	0f 91       	pop	r16
    20d6:	ff 90       	pop	r15
    20d8:	ef 90       	pop	r14
    20da:	df 90       	pop	r13
    20dc:	cf 90       	pop	r12
    20de:	08 95       	ret

000020e0 <prvReadBytesFromBuffer>:
    20e0:	af 92       	push	r10
    20e2:	bf 92       	push	r11
    20e4:	cf 92       	push	r12
    20e6:	df 92       	push	r13
    20e8:	ef 92       	push	r14
    20ea:	ff 92       	push	r15
    20ec:	0f 93       	push	r16
    20ee:	1f 93       	push	r17
    20f0:	cf 93       	push	r28
    20f2:	df 93       	push	r29
    20f4:	7c 01       	movw	r14, r24
    20f6:	5b 01       	movw	r10, r22
    20f8:	e9 01       	movw	r28, r18
    20fa:	42 17       	cp	r20, r18
    20fc:	53 07       	cpc	r21, r19
    20fe:	08 f4       	brcc	.+2      	; 0x2102 <prvReadBytesFromBuffer+0x22>
    2100:	ea 01       	movw	r28, r20
    2102:	20 97       	sbiw	r28, 0x00	; 0
    2104:	79 f1       	breq	.+94     	; 0x2164 <prvReadBytesFromBuffer+0x84>
    2106:	f7 01       	movw	r30, r14
    2108:	00 81       	ld	r16, Z
    210a:	11 81       	ldd	r17, Z+1	; 0x01
    210c:	c4 80       	ldd	r12, Z+4	; 0x04
    210e:	d5 80       	ldd	r13, Z+5	; 0x05
    2110:	c0 1a       	sub	r12, r16
    2112:	d1 0a       	sbc	r13, r17
    2114:	cc 15       	cp	r28, r12
    2116:	dd 05       	cpc	r29, r13
    2118:	08 f4       	brcc	.+2      	; 0x211c <prvReadBytesFromBuffer+0x3c>
    211a:	6e 01       	movw	r12, r28
    211c:	f7 01       	movw	r30, r14
    211e:	64 85       	ldd	r22, Z+12	; 0x0c
    2120:	75 85       	ldd	r23, Z+13	; 0x0d
    2122:	60 0f       	add	r22, r16
    2124:	71 1f       	adc	r23, r17
    2126:	a6 01       	movw	r20, r12
    2128:	c5 01       	movw	r24, r10
    212a:	0e 94 34 2e 	call	0x5c68	; 0x5c68 <memcpy>
    212e:	cc 16       	cp	r12, r28
    2130:	dd 06       	cpc	r13, r29
    2132:	58 f4       	brcc	.+22     	; 0x214a <prvReadBytesFromBuffer+0x6a>
    2134:	ae 01       	movw	r20, r28
    2136:	4c 19       	sub	r20, r12
    2138:	5d 09       	sbc	r21, r13
    213a:	f7 01       	movw	r30, r14
    213c:	64 85       	ldd	r22, Z+12	; 0x0c
    213e:	75 85       	ldd	r23, Z+13	; 0x0d
    2140:	c5 01       	movw	r24, r10
    2142:	8c 0d       	add	r24, r12
    2144:	9d 1d       	adc	r25, r13
    2146:	0e 94 34 2e 	call	0x5c68	; 0x5c68 <memcpy>
    214a:	0c 0f       	add	r16, r28
    214c:	1d 1f       	adc	r17, r29
    214e:	f7 01       	movw	r30, r14
    2150:	84 81       	ldd	r24, Z+4	; 0x04
    2152:	95 81       	ldd	r25, Z+5	; 0x05
    2154:	08 17       	cp	r16, r24
    2156:	19 07       	cpc	r17, r25
    2158:	10 f0       	brcs	.+4      	; 0x215e <prvReadBytesFromBuffer+0x7e>
    215a:	08 1b       	sub	r16, r24
    215c:	19 0b       	sbc	r17, r25
    215e:	f7 01       	movw	r30, r14
    2160:	11 83       	std	Z+1, r17	; 0x01
    2162:	00 83       	st	Z, r16
    2164:	ce 01       	movw	r24, r28
    2166:	df 91       	pop	r29
    2168:	cf 91       	pop	r28
    216a:	1f 91       	pop	r17
    216c:	0f 91       	pop	r16
    216e:	ff 90       	pop	r15
    2170:	ef 90       	pop	r14
    2172:	df 90       	pop	r13
    2174:	cf 90       	pop	r12
    2176:	bf 90       	pop	r11
    2178:	af 90       	pop	r10
    217a:	08 95       	ret

0000217c <xStreamBufferGenericCreate>:
    217c:	ef 92       	push	r14
    217e:	ff 92       	push	r15
    2180:	1f 93       	push	r17
    2182:	cf 93       	push	r28
    2184:	df 93       	push	r29
    2186:	eb 01       	movw	r28, r22
    2188:	11 e0       	ldi	r17, 0x01	; 1
    218a:	41 30       	cpi	r20, 0x01	; 1
    218c:	09 f0       	breq	.+2      	; 0x2190 <xStreamBufferGenericCreate+0x14>
    218e:	10 e0       	ldi	r17, 0x00	; 0
    2190:	20 97       	sbiw	r28, 0x00	; 0
    2192:	11 f4       	brne	.+4      	; 0x2198 <xStreamBufferGenericCreate+0x1c>
    2194:	c1 e0       	ldi	r28, 0x01	; 1
    2196:	d0 e0       	ldi	r29, 0x00	; 0
    2198:	7c 01       	movw	r14, r24
    219a:	2f ef       	ldi	r18, 0xFF	; 255
    219c:	e2 1a       	sub	r14, r18
    219e:	f2 0a       	sbc	r15, r18
    21a0:	41 96       	adiw	r24, 0x11	; 17
    21a2:	53 d8       	rcall	.-3930   	; 0x124a <pvPortMalloc>
    21a4:	00 97       	sbiw	r24, 0x00	; 0
    21a6:	81 f0       	breq	.+32     	; 0x21c8 <xStreamBufferGenericCreate+0x4c>
    21a8:	20 e1       	ldi	r18, 0x10	; 16
    21aa:	fc 01       	movw	r30, r24
    21ac:	11 92       	st	Z+, r1
    21ae:	2a 95       	dec	r18
    21b0:	e9 f7       	brne	.-6      	; 0x21ac <xStreamBufferGenericCreate+0x30>
    21b2:	9c 01       	movw	r18, r24
    21b4:	20 5f       	subi	r18, 0xF0	; 240
    21b6:	3f 4f       	sbci	r19, 0xFF	; 255
    21b8:	fc 01       	movw	r30, r24
    21ba:	35 87       	std	Z+13, r19	; 0x0d
    21bc:	24 87       	std	Z+12, r18	; 0x0c
    21be:	f5 82       	std	Z+5, r15	; 0x05
    21c0:	e4 82       	std	Z+4, r14	; 0x04
    21c2:	d7 83       	std	Z+7, r29	; 0x07
    21c4:	c6 83       	std	Z+6, r28	; 0x06
    21c6:	16 87       	std	Z+14, r17	; 0x0e
    21c8:	df 91       	pop	r29
    21ca:	cf 91       	pop	r28
    21cc:	1f 91       	pop	r17
    21ce:	ff 90       	pop	r15
    21d0:	ef 90       	pop	r14
    21d2:	08 95       	ret

000021d4 <xStreamBufferReset>:
    21d4:	cf 93       	push	r28
    21d6:	df 93       	push	r29
    21d8:	fc 01       	movw	r30, r24
    21da:	27 85       	ldd	r18, Z+15	; 0x0f
    21dc:	0f b6       	in	r0, 0x3f	; 63
    21de:	f8 94       	cli
    21e0:	0f 92       	push	r0
    21e2:	80 85       	ldd	r24, Z+8	; 0x08
    21e4:	91 85       	ldd	r25, Z+9	; 0x09
    21e6:	89 2b       	or	r24, r25
    21e8:	d1 f4       	brne	.+52     	; 0x221e <__stack+0x1f>
    21ea:	82 85       	ldd	r24, Z+10	; 0x0a
    21ec:	93 85       	ldd	r25, Z+11	; 0x0b
    21ee:	89 2b       	or	r24, r25
    21f0:	c1 f4       	brne	.+48     	; 0x2222 <__stack+0x23>
    21f2:	86 85       	ldd	r24, Z+14	; 0x0e
    21f4:	46 81       	ldd	r20, Z+6	; 0x06
    21f6:	57 81       	ldd	r21, Z+7	; 0x07
    21f8:	64 81       	ldd	r22, Z+4	; 0x04
    21fa:	75 81       	ldd	r23, Z+5	; 0x05
    21fc:	a4 85       	ldd	r26, Z+12	; 0x0c
    21fe:	b5 85       	ldd	r27, Z+13	; 0x0d
    2200:	90 e1       	ldi	r25, 0x10	; 16
    2202:	ef 01       	movw	r28, r30
    2204:	19 92       	st	Y+, r1
    2206:	9a 95       	dec	r25
    2208:	e9 f7       	brne	.-6      	; 0x2204 <__stack+0x5>
    220a:	b5 87       	std	Z+13, r27	; 0x0d
    220c:	a4 87       	std	Z+12, r26	; 0x0c
    220e:	75 83       	std	Z+5, r23	; 0x05
    2210:	64 83       	std	Z+4, r22	; 0x04
    2212:	57 83       	std	Z+7, r21	; 0x07
    2214:	46 83       	std	Z+6, r20	; 0x06
    2216:	86 87       	std	Z+14, r24	; 0x0e
    2218:	27 87       	std	Z+15, r18	; 0x0f
    221a:	81 e0       	ldi	r24, 0x01	; 1
    221c:	03 c0       	rjmp	.+6      	; 0x2224 <__stack+0x25>
    221e:	80 e0       	ldi	r24, 0x00	; 0
    2220:	01 c0       	rjmp	.+2      	; 0x2224 <__stack+0x25>
    2222:	80 e0       	ldi	r24, 0x00	; 0
    2224:	0f 90       	pop	r0
    2226:	0f be       	out	0x3f, r0	; 63
    2228:	df 91       	pop	r29
    222a:	cf 91       	pop	r28
    222c:	08 95       	ret

0000222e <xStreamBufferSpacesAvailable>:
    222e:	fc 01       	movw	r30, r24
    2230:	24 81       	ldd	r18, Z+4	; 0x04
    2232:	35 81       	ldd	r19, Z+5	; 0x05
    2234:	80 81       	ld	r24, Z
    2236:	91 81       	ldd	r25, Z+1	; 0x01
    2238:	42 81       	ldd	r20, Z+2	; 0x02
    223a:	53 81       	ldd	r21, Z+3	; 0x03
    223c:	82 0f       	add	r24, r18
    223e:	93 1f       	adc	r25, r19
    2240:	01 97       	sbiw	r24, 0x01	; 1
    2242:	84 1b       	sub	r24, r20
    2244:	95 0b       	sbc	r25, r21
    2246:	82 17       	cp	r24, r18
    2248:	93 07       	cpc	r25, r19
    224a:	10 f0       	brcs	.+4      	; 0x2250 <xStreamBufferSpacesAvailable+0x22>
    224c:	82 1b       	sub	r24, r18
    224e:	93 0b       	sbc	r25, r19
    2250:	08 95       	ret

00002252 <xStreamBufferSend>:
    2252:	2f 92       	push	r2
    2254:	3f 92       	push	r3
    2256:	4f 92       	push	r4
    2258:	5f 92       	push	r5
    225a:	6f 92       	push	r6
    225c:	7f 92       	push	r7
    225e:	8f 92       	push	r8
    2260:	9f 92       	push	r9
    2262:	af 92       	push	r10
    2264:	bf 92       	push	r11
    2266:	cf 92       	push	r12
    2268:	df 92       	push	r13
    226a:	ef 92       	push	r14
    226c:	ff 92       	push	r15
    226e:	0f 93       	push	r16
    2270:	1f 93       	push	r17
    2272:	cf 93       	push	r28
    2274:	df 93       	push	r29
    2276:	cd b7       	in	r28, 0x3d	; 61
    2278:	de b7       	in	r29, 0x3e	; 62
    227a:	29 97       	sbiw	r28, 0x09	; 9
    227c:	0f b6       	in	r0, 0x3f	; 63
    227e:	f8 94       	cli
    2280:	de bf       	out	0x3e, r29	; 62
    2282:	0f be       	out	0x3f, r0	; 63
    2284:	cd bf       	out	0x3d, r28	; 61
    2286:	5c 01       	movw	r10, r24
    2288:	1b 01       	movw	r2, r22
    228a:	2a 01       	movw	r4, r20
    228c:	0e 83       	std	Y+6, r16	; 0x06
    228e:	1f 83       	std	Y+7, r17	; 0x07
    2290:	28 87       	std	Y+8, r18	; 0x08
    2292:	39 87       	std	Y+9, r19	; 0x09
    2294:	fc 01       	movw	r30, r24
    2296:	86 85       	ldd	r24, Z+14	; 0x0e
    2298:	80 ff       	sbrs	r24, 0
    229a:	05 c0       	rjmp	.+10     	; 0x22a6 <xStreamBufferSend+0x54>
    229c:	3a 01       	movw	r6, r20
    229e:	f2 e0       	ldi	r31, 0x02	; 2
    22a0:	6f 0e       	add	r6, r31
    22a2:	71 1c       	adc	r7, r1
    22a4:	01 c0       	rjmp	.+2      	; 0x22a8 <xStreamBufferSend+0x56>
    22a6:	3a 01       	movw	r6, r20
    22a8:	8e 81       	ldd	r24, Y+6	; 0x06
    22aa:	9f 81       	ldd	r25, Y+7	; 0x07
    22ac:	a8 85       	ldd	r26, Y+8	; 0x08
    22ae:	b9 85       	ldd	r27, Y+9	; 0x09
    22b0:	89 2b       	or	r24, r25
    22b2:	8a 2b       	or	r24, r26
    22b4:	8b 2b       	or	r24, r27
    22b6:	09 f4       	brne	.+2      	; 0x22ba <xStreamBufferSend+0x68>
    22b8:	34 c0       	rjmp	.+104    	; 0x2322 <xStreamBufferSend+0xd0>
    22ba:	ce 01       	movw	r24, r28
    22bc:	01 96       	adiw	r24, 0x01	; 1
    22be:	22 d6       	rcall	.+3140   	; 0x2f04 <vTaskSetTimeOutState>
    22c0:	0f b6       	in	r0, 0x3f	; 63
    22c2:	f8 94       	cli
    22c4:	0f 92       	push	r0
    22c6:	c5 01       	movw	r24, r10
    22c8:	b2 df       	rcall	.-156    	; 0x222e <xStreamBufferSpacesAvailable>
    22ca:	4c 01       	movw	r8, r24
    22cc:	86 15       	cp	r24, r6
    22ce:	97 05       	cpc	r25, r7
    22d0:	18 f5       	brcc	.+70     	; 0x2318 <xStreamBufferSend+0xc6>
    22d2:	80 e0       	ldi	r24, 0x00	; 0
    22d4:	90 e0       	ldi	r25, 0x00	; 0
    22d6:	0e 94 d4 1a 	call	0x35a8	; 0x35a8 <xTaskNotifyStateClear>
    22da:	94 d6       	rcall	.+3368   	; 0x3004 <xTaskGetCurrentTaskHandle>
    22dc:	f5 01       	movw	r30, r10
    22de:	93 87       	std	Z+11, r25	; 0x0b
    22e0:	82 87       	std	Z+10, r24	; 0x0a
    22e2:	0f 90       	pop	r0
    22e4:	0f be       	out	0x3f, r0	; 63
    22e6:	ce 80       	ldd	r12, Y+6	; 0x06
    22e8:	df 80       	ldd	r13, Y+7	; 0x07
    22ea:	e8 84       	ldd	r14, Y+8	; 0x08
    22ec:	f9 84       	ldd	r15, Y+9	; 0x09
    22ee:	00 e0       	ldi	r16, 0x00	; 0
    22f0:	10 e0       	ldi	r17, 0x00	; 0
    22f2:	20 e0       	ldi	r18, 0x00	; 0
    22f4:	30 e0       	ldi	r19, 0x00	; 0
    22f6:	a9 01       	movw	r20, r18
    22f8:	60 e0       	ldi	r22, 0x00	; 0
    22fa:	70 e0       	ldi	r23, 0x00	; 0
    22fc:	cb 01       	movw	r24, r22
    22fe:	c9 d7       	rcall	.+3986   	; 0x3292 <xTaskNotifyWait>
    2300:	f5 01       	movw	r30, r10
    2302:	13 86       	std	Z+11, r1	; 0x0b
    2304:	12 86       	std	Z+10, r1	; 0x0a
    2306:	be 01       	movw	r22, r28
    2308:	6a 5f       	subi	r22, 0xFA	; 250
    230a:	7f 4f       	sbci	r23, 0xFF	; 255
    230c:	ce 01       	movw	r24, r28
    230e:	01 96       	adiw	r24, 0x01	; 1
    2310:	20 d6       	rcall	.+3136   	; 0x2f52 <xTaskCheckForTimeOut>
    2312:	88 23       	and	r24, r24
    2314:	a9 f2       	breq	.-86     	; 0x22c0 <xStreamBufferSend+0x6e>
    2316:	02 c0       	rjmp	.+4      	; 0x231c <xStreamBufferSend+0xca>
    2318:	0f 90       	pop	r0
    231a:	0f be       	out	0x3f, r0	; 63
    231c:	81 14       	cp	r8, r1
    231e:	91 04       	cpc	r9, r1
    2320:	19 f4       	brne	.+6      	; 0x2328 <xStreamBufferSend+0xd6>
    2322:	c5 01       	movw	r24, r10
    2324:	84 df       	rcall	.-248    	; 0x222e <xStreamBufferSpacesAvailable>
    2326:	4c 01       	movw	r8, r24
    2328:	83 01       	movw	r16, r6
    232a:	94 01       	movw	r18, r8
    232c:	a2 01       	movw	r20, r4
    232e:	b1 01       	movw	r22, r2
    2330:	c5 01       	movw	r24, r10
    2332:	96 de       	rcall	.-724    	; 0x2060 <prvWriteMessageToBuffer>
    2334:	7c 01       	movw	r14, r24
    2336:	89 2b       	or	r24, r25
    2338:	e1 f0       	breq	.+56     	; 0x2372 <xStreamBufferSend+0x120>
    233a:	c5 01       	movw	r24, r10
    233c:	35 de       	rcall	.-918    	; 0x1fa8 <prvBytesInBuffer>
    233e:	f5 01       	movw	r30, r10
    2340:	26 81       	ldd	r18, Z+6	; 0x06
    2342:	37 81       	ldd	r19, Z+7	; 0x07
    2344:	82 17       	cp	r24, r18
    2346:	93 07       	cpc	r25, r19
    2348:	a0 f0       	brcs	.+40     	; 0x2372 <xStreamBufferSend+0x120>
    234a:	0e d3       	rcall	.+1564   	; 0x2968 <vTaskSuspendAll>
    234c:	f5 01       	movw	r30, r10
    234e:	80 85       	ldd	r24, Z+8	; 0x08
    2350:	91 85       	ldd	r25, Z+9	; 0x09
    2352:	89 2b       	or	r24, r25
    2354:	69 f0       	breq	.+26     	; 0x2370 <xStreamBufferSend+0x11e>
    2356:	80 85       	ldd	r24, Z+8	; 0x08
    2358:	91 85       	ldd	r25, Z+9	; 0x09
    235a:	00 e0       	ldi	r16, 0x00	; 0
    235c:	10 e0       	ldi	r17, 0x00	; 0
    235e:	20 e0       	ldi	r18, 0x00	; 0
    2360:	40 e0       	ldi	r20, 0x00	; 0
    2362:	50 e0       	ldi	r21, 0x00	; 0
    2364:	ba 01       	movw	r22, r20
    2366:	0e 94 d3 19 	call	0x33a6	; 0x33a6 <xTaskGenericNotify>
    236a:	f5 01       	movw	r30, r10
    236c:	11 86       	std	Z+9, r1	; 0x09
    236e:	10 86       	std	Z+8, r1	; 0x08
    2370:	e4 d3       	rcall	.+1992   	; 0x2b3a <xTaskResumeAll>
    2372:	c7 01       	movw	r24, r14
    2374:	29 96       	adiw	r28, 0x09	; 9
    2376:	0f b6       	in	r0, 0x3f	; 63
    2378:	f8 94       	cli
    237a:	de bf       	out	0x3e, r29	; 62
    237c:	0f be       	out	0x3f, r0	; 63
    237e:	cd bf       	out	0x3d, r28	; 61
    2380:	df 91       	pop	r29
    2382:	cf 91       	pop	r28
    2384:	1f 91       	pop	r17
    2386:	0f 91       	pop	r16
    2388:	ff 90       	pop	r15
    238a:	ef 90       	pop	r14
    238c:	df 90       	pop	r13
    238e:	cf 90       	pop	r12
    2390:	bf 90       	pop	r11
    2392:	af 90       	pop	r10
    2394:	9f 90       	pop	r9
    2396:	8f 90       	pop	r8
    2398:	7f 90       	pop	r7
    239a:	6f 90       	pop	r6
    239c:	5f 90       	pop	r5
    239e:	4f 90       	pop	r4
    23a0:	3f 90       	pop	r3
    23a2:	2f 90       	pop	r2
    23a4:	08 95       	ret

000023a6 <xStreamBufferSendFromISR>:
    23a6:	af 92       	push	r10
    23a8:	bf 92       	push	r11
    23aa:	cf 92       	push	r12
    23ac:	df 92       	push	r13
    23ae:	ef 92       	push	r14
    23b0:	ff 92       	push	r15
    23b2:	0f 93       	push	r16
    23b4:	1f 93       	push	r17
    23b6:	cf 93       	push	r28
    23b8:	df 93       	push	r29
    23ba:	ec 01       	movw	r28, r24
    23bc:	5b 01       	movw	r10, r22
    23be:	6a 01       	movw	r12, r20
    23c0:	79 01       	movw	r14, r18
    23c2:	8e 85       	ldd	r24, Y+14	; 0x0e
    23c4:	80 ff       	sbrs	r24, 0
    23c6:	04 c0       	rjmp	.+8      	; 0x23d0 <xStreamBufferSendFromISR+0x2a>
    23c8:	8a 01       	movw	r16, r20
    23ca:	0e 5f       	subi	r16, 0xFE	; 254
    23cc:	1f 4f       	sbci	r17, 0xFF	; 255
    23ce:	01 c0       	rjmp	.+2      	; 0x23d2 <xStreamBufferSendFromISR+0x2c>
    23d0:	8a 01       	movw	r16, r20
    23d2:	ce 01       	movw	r24, r28
    23d4:	2c df       	rcall	.-424    	; 0x222e <xStreamBufferSpacesAvailable>
    23d6:	9c 01       	movw	r18, r24
    23d8:	a6 01       	movw	r20, r12
    23da:	b5 01       	movw	r22, r10
    23dc:	ce 01       	movw	r24, r28
    23de:	40 de       	rcall	.-896    	; 0x2060 <prvWriteMessageToBuffer>
    23e0:	6c 01       	movw	r12, r24
    23e2:	89 2b       	or	r24, r25
    23e4:	b9 f0       	breq	.+46     	; 0x2414 <xStreamBufferSendFromISR+0x6e>
    23e6:	ce 01       	movw	r24, r28
    23e8:	df dd       	rcall	.-1090   	; 0x1fa8 <prvBytesInBuffer>
    23ea:	2e 81       	ldd	r18, Y+6	; 0x06
    23ec:	3f 81       	ldd	r19, Y+7	; 0x07
    23ee:	82 17       	cp	r24, r18
    23f0:	93 07       	cpc	r25, r19
    23f2:	80 f0       	brcs	.+32     	; 0x2414 <xStreamBufferSendFromISR+0x6e>
    23f4:	88 85       	ldd	r24, Y+8	; 0x08
    23f6:	99 85       	ldd	r25, Y+9	; 0x09
    23f8:	89 2b       	or	r24, r25
    23fa:	61 f0       	breq	.+24     	; 0x2414 <xStreamBufferSendFromISR+0x6e>
    23fc:	88 85       	ldd	r24, Y+8	; 0x08
    23fe:	99 85       	ldd	r25, Y+9	; 0x09
    2400:	00 e0       	ldi	r16, 0x00	; 0
    2402:	10 e0       	ldi	r17, 0x00	; 0
    2404:	20 e0       	ldi	r18, 0x00	; 0
    2406:	40 e0       	ldi	r20, 0x00	; 0
    2408:	50 e0       	ldi	r21, 0x00	; 0
    240a:	ba 01       	movw	r22, r20
    240c:	0e 94 4b 1a 	call	0x3496	; 0x3496 <xTaskGenericNotifyFromISR>
    2410:	19 86       	std	Y+9, r1	; 0x09
    2412:	18 86       	std	Y+8, r1	; 0x08
    2414:	c6 01       	movw	r24, r12
    2416:	df 91       	pop	r29
    2418:	cf 91       	pop	r28
    241a:	1f 91       	pop	r17
    241c:	0f 91       	pop	r16
    241e:	ff 90       	pop	r15
    2420:	ef 90       	pop	r14
    2422:	df 90       	pop	r13
    2424:	cf 90       	pop	r12
    2426:	bf 90       	pop	r11
    2428:	af 90       	pop	r10
    242a:	08 95       	ret

0000242c <xStreamBufferReceive>:
    242c:	4f 92       	push	r4
    242e:	5f 92       	push	r5
    2430:	6f 92       	push	r6
    2432:	7f 92       	push	r7
    2434:	8f 92       	push	r8
    2436:	9f 92       	push	r9
    2438:	af 92       	push	r10
    243a:	bf 92       	push	r11
    243c:	cf 92       	push	r12
    243e:	df 92       	push	r13
    2440:	ef 92       	push	r14
    2442:	ff 92       	push	r15
    2444:	0f 93       	push	r16
    2446:	1f 93       	push	r17
    2448:	cf 93       	push	r28
    244a:	df 93       	push	r29
    244c:	1f 92       	push	r1
    244e:	1f 92       	push	r1
    2450:	cd b7       	in	r28, 0x3d	; 61
    2452:	de b7       	in	r29, 0x3e	; 62
    2454:	5c 01       	movw	r10, r24
    2456:	2b 01       	movw	r4, r22
    2458:	3a 01       	movw	r6, r20
    245a:	68 01       	movw	r12, r16
    245c:	79 01       	movw	r14, r18
    245e:	fc 01       	movw	r30, r24
    2460:	86 85       	ldd	r24, Z+14	; 0x0e
    2462:	80 fd       	sbrc	r24, 0
    2464:	03 c0       	rjmp	.+6      	; 0x246c <xStreamBufferReceive+0x40>
    2466:	81 2c       	mov	r8, r1
    2468:	91 2c       	mov	r9, r1
    246a:	04 c0       	rjmp	.+8      	; 0x2474 <xStreamBufferReceive+0x48>
    246c:	68 94       	set
    246e:	88 24       	eor	r8, r8
    2470:	81 f8       	bld	r8, 1
    2472:	91 2c       	mov	r9, r1
    2474:	c1 14       	cp	r12, r1
    2476:	d1 04       	cpc	r13, r1
    2478:	e1 04       	cpc	r14, r1
    247a:	f1 04       	cpc	r15, r1
    247c:	31 f1       	breq	.+76     	; 0x24ca <xStreamBufferReceive+0x9e>
    247e:	0f b6       	in	r0, 0x3f	; 63
    2480:	f8 94       	cli
    2482:	0f 92       	push	r0
    2484:	c5 01       	movw	r24, r10
    2486:	90 dd       	rcall	.-1248   	; 0x1fa8 <prvBytesInBuffer>
    2488:	8c 01       	movw	r16, r24
    248a:	88 16       	cp	r8, r24
    248c:	99 06       	cpc	r9, r25
    248e:	40 f0       	brcs	.+16     	; 0x24a0 <xStreamBufferReceive+0x74>
    2490:	80 e0       	ldi	r24, 0x00	; 0
    2492:	90 e0       	ldi	r25, 0x00	; 0
    2494:	0e 94 d4 1a 	call	0x35a8	; 0x35a8 <xTaskNotifyStateClear>
    2498:	b5 d5       	rcall	.+2922   	; 0x3004 <xTaskGetCurrentTaskHandle>
    249a:	f5 01       	movw	r30, r10
    249c:	91 87       	std	Z+9, r25	; 0x09
    249e:	80 87       	std	Z+8, r24	; 0x08
    24a0:	0f 90       	pop	r0
    24a2:	0f be       	out	0x3f, r0	; 63
    24a4:	80 16       	cp	r8, r16
    24a6:	91 06       	cpc	r9, r17
    24a8:	b0 f0       	brcs	.+44     	; 0x24d6 <xStreamBufferReceive+0xaa>
    24aa:	00 e0       	ldi	r16, 0x00	; 0
    24ac:	10 e0       	ldi	r17, 0x00	; 0
    24ae:	20 e0       	ldi	r18, 0x00	; 0
    24b0:	30 e0       	ldi	r19, 0x00	; 0
    24b2:	a9 01       	movw	r20, r18
    24b4:	60 e0       	ldi	r22, 0x00	; 0
    24b6:	70 e0       	ldi	r23, 0x00	; 0
    24b8:	cb 01       	movw	r24, r22
    24ba:	eb d6       	rcall	.+3542   	; 0x3292 <xTaskNotifyWait>
    24bc:	f5 01       	movw	r30, r10
    24be:	11 86       	std	Z+9, r1	; 0x09
    24c0:	10 86       	std	Z+8, r1	; 0x08
    24c2:	c5 01       	movw	r24, r10
    24c4:	71 dd       	rcall	.-1310   	; 0x1fa8 <prvBytesInBuffer>
    24c6:	8c 01       	movw	r16, r24
    24c8:	03 c0       	rjmp	.+6      	; 0x24d0 <xStreamBufferReceive+0xa4>
    24ca:	c5 01       	movw	r24, r10
    24cc:	6d dd       	rcall	.-1318   	; 0x1fa8 <prvBytesInBuffer>
    24ce:	8c 01       	movw	r16, r24
    24d0:	80 16       	cp	r8, r16
    24d2:	91 06       	cpc	r9, r17
    24d4:	b8 f5       	brcc	.+110    	; 0x2544 <xStreamBufferReceive+0x118>
    24d6:	81 14       	cp	r8, r1
    24d8:	91 04       	cpc	r9, r1
    24da:	c1 f0       	breq	.+48     	; 0x250c <xStreamBufferReceive+0xe0>
    24dc:	f5 01       	movw	r30, r10
    24de:	e0 80       	ld	r14, Z
    24e0:	f1 80       	ldd	r15, Z+1	; 0x01
    24e2:	98 01       	movw	r18, r16
    24e4:	a4 01       	movw	r20, r8
    24e6:	be 01       	movw	r22, r28
    24e8:	6f 5f       	subi	r22, 0xFF	; 255
    24ea:	7f 4f       	sbci	r23, 0xFF	; 255
    24ec:	c5 01       	movw	r24, r10
    24ee:	f8 dd       	rcall	.-1040   	; 0x20e0 <prvReadBytesFromBuffer>
    24f0:	89 81       	ldd	r24, Y+1	; 0x01
    24f2:	9a 81       	ldd	r25, Y+2	; 0x02
    24f4:	08 19       	sub	r16, r8
    24f6:	19 09       	sbc	r17, r9
    24f8:	68 16       	cp	r6, r24
    24fa:	79 06       	cpc	r7, r25
    24fc:	30 f4       	brcc	.+12     	; 0x250a <xStreamBufferReceive+0xde>
    24fe:	f5 01       	movw	r30, r10
    2500:	f1 82       	std	Z+1, r15	; 0x01
    2502:	e0 82       	st	Z, r14
    2504:	61 2c       	mov	r6, r1
    2506:	71 2c       	mov	r7, r1
    2508:	01 c0       	rjmp	.+2      	; 0x250c <xStreamBufferReceive+0xe0>
    250a:	3c 01       	movw	r6, r24
    250c:	98 01       	movw	r18, r16
    250e:	a3 01       	movw	r20, r6
    2510:	b2 01       	movw	r22, r4
    2512:	c5 01       	movw	r24, r10
    2514:	e5 dd       	rcall	.-1078   	; 0x20e0 <prvReadBytesFromBuffer>
    2516:	7c 01       	movw	r14, r24
    2518:	89 2b       	or	r24, r25
    251a:	b1 f0       	breq	.+44     	; 0x2548 <xStreamBufferReceive+0x11c>
    251c:	25 d2       	rcall	.+1098   	; 0x2968 <vTaskSuspendAll>
    251e:	f5 01       	movw	r30, r10
    2520:	82 85       	ldd	r24, Z+10	; 0x0a
    2522:	93 85       	ldd	r25, Z+11	; 0x0b
    2524:	89 2b       	or	r24, r25
    2526:	61 f0       	breq	.+24     	; 0x2540 <xStreamBufferReceive+0x114>
    2528:	82 85       	ldd	r24, Z+10	; 0x0a
    252a:	93 85       	ldd	r25, Z+11	; 0x0b
    252c:	00 e0       	ldi	r16, 0x00	; 0
    252e:	10 e0       	ldi	r17, 0x00	; 0
    2530:	20 e0       	ldi	r18, 0x00	; 0
    2532:	40 e0       	ldi	r20, 0x00	; 0
    2534:	50 e0       	ldi	r21, 0x00	; 0
    2536:	ba 01       	movw	r22, r20
    2538:	36 d7       	rcall	.+3692   	; 0x33a6 <xTaskGenericNotify>
    253a:	f5 01       	movw	r30, r10
    253c:	13 86       	std	Z+11, r1	; 0x0b
    253e:	12 86       	std	Z+10, r1	; 0x0a
    2540:	fc d2       	rcall	.+1528   	; 0x2b3a <xTaskResumeAll>
    2542:	02 c0       	rjmp	.+4      	; 0x2548 <xStreamBufferReceive+0x11c>
    2544:	e1 2c       	mov	r14, r1
    2546:	f1 2c       	mov	r15, r1
    2548:	c7 01       	movw	r24, r14
    254a:	0f 90       	pop	r0
    254c:	0f 90       	pop	r0
    254e:	df 91       	pop	r29
    2550:	cf 91       	pop	r28
    2552:	1f 91       	pop	r17
    2554:	0f 91       	pop	r16
    2556:	ff 90       	pop	r15
    2558:	ef 90       	pop	r14
    255a:	df 90       	pop	r13
    255c:	cf 90       	pop	r12
    255e:	bf 90       	pop	r11
    2560:	af 90       	pop	r10
    2562:	9f 90       	pop	r9
    2564:	8f 90       	pop	r8
    2566:	7f 90       	pop	r7
    2568:	6f 90       	pop	r6
    256a:	5f 90       	pop	r5
    256c:	4f 90       	pop	r4
    256e:	08 95       	ret

00002570 <prvResetNextTaskUnblockTime>:
    2570:	e0 91 ff 18 	lds	r30, 0x18FF	; 0x8018ff <pxDelayedTaskList>
    2574:	f0 91 00 19 	lds	r31, 0x1900	; 0x801900 <pxDelayedTaskList+0x1>
    2578:	80 81       	ld	r24, Z
    257a:	81 11       	cpse	r24, r1
    257c:	0c c0       	rjmp	.+24     	; 0x2596 <prvResetNextTaskUnblockTime+0x26>
    257e:	8f ef       	ldi	r24, 0xFF	; 255
    2580:	9f ef       	ldi	r25, 0xFF	; 255
    2582:	dc 01       	movw	r26, r24
    2584:	80 93 cc 18 	sts	0x18CC, r24	; 0x8018cc <xNextTaskUnblockTime>
    2588:	90 93 cd 18 	sts	0x18CD, r25	; 0x8018cd <xNextTaskUnblockTime+0x1>
    258c:	a0 93 ce 18 	sts	0x18CE, r26	; 0x8018ce <xNextTaskUnblockTime+0x2>
    2590:	b0 93 cf 18 	sts	0x18CF, r27	; 0x8018cf <xNextTaskUnblockTime+0x3>
    2594:	08 95       	ret
    2596:	e0 91 ff 18 	lds	r30, 0x18FF	; 0x8018ff <pxDelayedTaskList>
    259a:	f0 91 00 19 	lds	r31, 0x1900	; 0x801900 <pxDelayedTaskList+0x1>
    259e:	07 80       	ldd	r0, Z+7	; 0x07
    25a0:	f0 85       	ldd	r31, Z+8	; 0x08
    25a2:	e0 2d       	mov	r30, r0
    25a4:	00 84       	ldd	r0, Z+8	; 0x08
    25a6:	f1 85       	ldd	r31, Z+9	; 0x09
    25a8:	e0 2d       	mov	r30, r0
    25aa:	82 81       	ldd	r24, Z+2	; 0x02
    25ac:	93 81       	ldd	r25, Z+3	; 0x03
    25ae:	a4 81       	ldd	r26, Z+4	; 0x04
    25b0:	b5 81       	ldd	r27, Z+5	; 0x05
    25b2:	80 93 cc 18 	sts	0x18CC, r24	; 0x8018cc <xNextTaskUnblockTime>
    25b6:	90 93 cd 18 	sts	0x18CD, r25	; 0x8018cd <xNextTaskUnblockTime+0x1>
    25ba:	a0 93 ce 18 	sts	0x18CE, r26	; 0x8018ce <xNextTaskUnblockTime+0x2>
    25be:	b0 93 cf 18 	sts	0x18CF, r27	; 0x8018cf <xNextTaskUnblockTime+0x3>
    25c2:	08 95       	ret

000025c4 <prvAddCurrentTaskToDelayedList>:
    25c4:	8f 92       	push	r8
    25c6:	9f 92       	push	r9
    25c8:	af 92       	push	r10
    25ca:	bf 92       	push	r11
    25cc:	cf 92       	push	r12
    25ce:	df 92       	push	r13
    25d0:	ef 92       	push	r14
    25d2:	ff 92       	push	r15
    25d4:	cf 93       	push	r28
    25d6:	6b 01       	movw	r12, r22
    25d8:	7c 01       	movw	r14, r24
    25da:	c4 2f       	mov	r28, r20
    25dc:	80 90 d6 18 	lds	r8, 0x18D6	; 0x8018d6 <xTickCount>
    25e0:	90 90 d7 18 	lds	r9, 0x18D7	; 0x8018d7 <xTickCount+0x1>
    25e4:	a0 90 d8 18 	lds	r10, 0x18D8	; 0x8018d8 <xTickCount+0x2>
    25e8:	b0 90 d9 18 	lds	r11, 0x18D9	; 0x8018d9 <xTickCount+0x3>
    25ec:	80 91 43 19 	lds	r24, 0x1943	; 0x801943 <pxCurrentTCB>
    25f0:	90 91 44 19 	lds	r25, 0x1944	; 0x801944 <pxCurrentTCB+0x1>
    25f4:	02 96       	adiw	r24, 0x02	; 2
    25f6:	0e 94 82 0a 	call	0x1504	; 0x1504 <uxListRemove>
    25fa:	8f ef       	ldi	r24, 0xFF	; 255
    25fc:	c8 16       	cp	r12, r24
    25fe:	d8 06       	cpc	r13, r24
    2600:	e8 06       	cpc	r14, r24
    2602:	f8 06       	cpc	r15, r24
    2604:	69 f4       	brne	.+26     	; 0x2620 <prvAddCurrentTaskToDelayedList+0x5c>
    2606:	cc 23       	and	r28, r28
    2608:	59 f0       	breq	.+22     	; 0x2620 <prvAddCurrentTaskToDelayedList+0x5c>
    260a:	60 91 43 19 	lds	r22, 0x1943	; 0x801943 <pxCurrentTCB>
    260e:	70 91 44 19 	lds	r23, 0x1944	; 0x801944 <pxCurrentTCB+0x1>
    2612:	6e 5f       	subi	r22, 0xFE	; 254
    2614:	7f 4f       	sbci	r23, 0xFF	; 255
    2616:	8b ed       	ldi	r24, 0xDB	; 219
    2618:	98 e1       	ldi	r25, 0x18	; 24
    261a:	0e 94 24 0a 	call	0x1448	; 0x1448 <vListInsertEnd>
    261e:	3f c0       	rjmp	.+126    	; 0x269e <prvAddCurrentTaskToDelayedList+0xda>
    2620:	c8 0c       	add	r12, r8
    2622:	d9 1c       	adc	r13, r9
    2624:	ea 1c       	adc	r14, r10
    2626:	fb 1c       	adc	r15, r11
    2628:	e0 91 43 19 	lds	r30, 0x1943	; 0x801943 <pxCurrentTCB>
    262c:	f0 91 44 19 	lds	r31, 0x1944	; 0x801944 <pxCurrentTCB+0x1>
    2630:	c2 82       	std	Z+2, r12	; 0x02
    2632:	d3 82       	std	Z+3, r13	; 0x03
    2634:	e4 82       	std	Z+4, r14	; 0x04
    2636:	f5 82       	std	Z+5, r15	; 0x05
    2638:	c8 14       	cp	r12, r8
    263a:	d9 04       	cpc	r13, r9
    263c:	ea 04       	cpc	r14, r10
    263e:	fb 04       	cpc	r15, r11
    2640:	68 f4       	brcc	.+26     	; 0x265c <prvAddCurrentTaskToDelayedList+0x98>
    2642:	60 91 43 19 	lds	r22, 0x1943	; 0x801943 <pxCurrentTCB>
    2646:	70 91 44 19 	lds	r23, 0x1944	; 0x801944 <pxCurrentTCB+0x1>
    264a:	80 91 fd 18 	lds	r24, 0x18FD	; 0x8018fd <pxOverflowDelayedTaskList>
    264e:	90 91 fe 18 	lds	r25, 0x18FE	; 0x8018fe <pxOverflowDelayedTaskList+0x1>
    2652:	6e 5f       	subi	r22, 0xFE	; 254
    2654:	7f 4f       	sbci	r23, 0xFF	; 255
    2656:	0e 94 45 0a 	call	0x148a	; 0x148a <vListInsert>
    265a:	21 c0       	rjmp	.+66     	; 0x269e <prvAddCurrentTaskToDelayedList+0xda>
    265c:	60 91 43 19 	lds	r22, 0x1943	; 0x801943 <pxCurrentTCB>
    2660:	70 91 44 19 	lds	r23, 0x1944	; 0x801944 <pxCurrentTCB+0x1>
    2664:	80 91 ff 18 	lds	r24, 0x18FF	; 0x8018ff <pxDelayedTaskList>
    2668:	90 91 00 19 	lds	r25, 0x1900	; 0x801900 <pxDelayedTaskList+0x1>
    266c:	6e 5f       	subi	r22, 0xFE	; 254
    266e:	7f 4f       	sbci	r23, 0xFF	; 255
    2670:	0e 94 45 0a 	call	0x148a	; 0x148a <vListInsert>
    2674:	80 91 cc 18 	lds	r24, 0x18CC	; 0x8018cc <xNextTaskUnblockTime>
    2678:	90 91 cd 18 	lds	r25, 0x18CD	; 0x8018cd <xNextTaskUnblockTime+0x1>
    267c:	a0 91 ce 18 	lds	r26, 0x18CE	; 0x8018ce <xNextTaskUnblockTime+0x2>
    2680:	b0 91 cf 18 	lds	r27, 0x18CF	; 0x8018cf <xNextTaskUnblockTime+0x3>
    2684:	c8 16       	cp	r12, r24
    2686:	d9 06       	cpc	r13, r25
    2688:	ea 06       	cpc	r14, r26
    268a:	fb 06       	cpc	r15, r27
    268c:	40 f4       	brcc	.+16     	; 0x269e <prvAddCurrentTaskToDelayedList+0xda>
    268e:	c0 92 cc 18 	sts	0x18CC, r12	; 0x8018cc <xNextTaskUnblockTime>
    2692:	d0 92 cd 18 	sts	0x18CD, r13	; 0x8018cd <xNextTaskUnblockTime+0x1>
    2696:	e0 92 ce 18 	sts	0x18CE, r14	; 0x8018ce <xNextTaskUnblockTime+0x2>
    269a:	f0 92 cf 18 	sts	0x18CF, r15	; 0x8018cf <xNextTaskUnblockTime+0x3>
    269e:	cf 91       	pop	r28
    26a0:	ff 90       	pop	r15
    26a2:	ef 90       	pop	r14
    26a4:	df 90       	pop	r13
    26a6:	cf 90       	pop	r12
    26a8:	bf 90       	pop	r11
    26aa:	af 90       	pop	r10
    26ac:	9f 90       	pop	r9
    26ae:	8f 90       	pop	r8
    26b0:	08 95       	ret

000026b2 <xTaskCreate>:
    26b2:	4f 92       	push	r4
    26b4:	5f 92       	push	r5
    26b6:	6f 92       	push	r6
    26b8:	7f 92       	push	r7
    26ba:	8f 92       	push	r8
    26bc:	9f 92       	push	r9
    26be:	af 92       	push	r10
    26c0:	bf 92       	push	r11
    26c2:	cf 92       	push	r12
    26c4:	df 92       	push	r13
    26c6:	ef 92       	push	r14
    26c8:	ff 92       	push	r15
    26ca:	0f 93       	push	r16
    26cc:	cf 93       	push	r28
    26ce:	df 93       	push	r29
    26d0:	4c 01       	movw	r8, r24
    26d2:	6b 01       	movw	r12, r22
    26d4:	5a 01       	movw	r10, r20
    26d6:	29 01       	movw	r4, r18
    26d8:	ca 01       	movw	r24, r20
    26da:	0e 94 25 09 	call	0x124a	; 0x124a <pvPortMalloc>
    26de:	3c 01       	movw	r6, r24
    26e0:	89 2b       	or	r24, r25
    26e2:	09 f4       	brne	.+2      	; 0x26e6 <xTaskCreate+0x34>
    26e4:	f4 c0       	rjmp	.+488    	; 0x28ce <xTaskCreate+0x21c>
    26e6:	80 e3       	ldi	r24, 0x30	; 48
    26e8:	90 e0       	ldi	r25, 0x00	; 0
    26ea:	0e 94 25 09 	call	0x124a	; 0x124a <pvPortMalloc>
    26ee:	ec 01       	movw	r28, r24
    26f0:	89 2b       	or	r24, r25
    26f2:	99 f0       	breq	.+38     	; 0x271a <xTaskCreate+0x68>
    26f4:	7c 8e       	std	Y+28, r7	; 0x1c
    26f6:	6b 8e       	std	Y+27, r6	; 0x1b
    26f8:	a5 01       	movw	r20, r10
    26fa:	65 ea       	ldi	r22, 0xA5	; 165
    26fc:	70 e0       	ldi	r23, 0x00	; 0
    26fe:	c3 01       	movw	r24, r6
    2700:	0e 94 3d 2e 	call	0x5c7a	; 0x5c7a <memset>
    2704:	21 e0       	ldi	r18, 0x01	; 1
    2706:	a2 1a       	sub	r10, r18
    2708:	b1 08       	sbc	r11, r1
    270a:	8b 8d       	ldd	r24, Y+27	; 0x1b
    270c:	9c 8d       	ldd	r25, Y+28	; 0x1c
    270e:	a8 0e       	add	r10, r24
    2710:	b9 1e       	adc	r11, r25
    2712:	c1 14       	cp	r12, r1
    2714:	d1 04       	cpc	r13, r1
    2716:	29 f4       	brne	.+10     	; 0x2722 <xTaskCreate+0x70>
    2718:	20 c0       	rjmp	.+64     	; 0x275a <xTaskCreate+0xa8>
    271a:	c3 01       	movw	r24, r6
    271c:	0e 94 de 09 	call	0x13bc	; 0x13bc <vPortFree>
    2720:	d6 c0       	rjmp	.+428    	; 0x28ce <xTaskCreate+0x21c>
    2722:	d6 01       	movw	r26, r12
    2724:	8c 91       	ld	r24, X
    2726:	8d 8f       	std	Y+29, r24	; 0x1d
    2728:	8c 91       	ld	r24, X
    272a:	88 23       	and	r24, r24
    272c:	a1 f0       	breq	.+40     	; 0x2756 <xTaskCreate+0xa4>
    272e:	ae 01       	movw	r20, r28
    2730:	42 5e       	subi	r20, 0xE2	; 226
    2732:	5f 4f       	sbci	r21, 0xFF	; 255
    2734:	f6 01       	movw	r30, r12
    2736:	31 96       	adiw	r30, 0x01	; 1
    2738:	b8 e0       	ldi	r27, 0x08	; 8
    273a:	cb 0e       	add	r12, r27
    273c:	d1 1c       	adc	r13, r1
    273e:	cf 01       	movw	r24, r30
    2740:	21 91       	ld	r18, Z+
    2742:	da 01       	movw	r26, r20
    2744:	2d 93       	st	X+, r18
    2746:	ad 01       	movw	r20, r26
    2748:	dc 01       	movw	r26, r24
    274a:	8c 91       	ld	r24, X
    274c:	88 23       	and	r24, r24
    274e:	19 f0       	breq	.+6      	; 0x2756 <xTaskCreate+0xa4>
    2750:	ec 15       	cp	r30, r12
    2752:	fd 05       	cpc	r31, r13
    2754:	a1 f7       	brne	.-24     	; 0x273e <xTaskCreate+0x8c>
    2756:	1c a2       	std	Y+36, r1	; 0x24
    2758:	01 c0       	rjmp	.+2      	; 0x275c <xTaskCreate+0xaa>
    275a:	1d 8e       	std	Y+29, r1	; 0x1d
    275c:	04 30       	cpi	r16, 0x04	; 4
    275e:	08 f0       	brcs	.+2      	; 0x2762 <xTaskCreate+0xb0>
    2760:	03 e0       	ldi	r16, 0x03	; 3
    2762:	0a 8f       	std	Y+26, r16	; 0x1a
    2764:	0f a3       	std	Y+39, r16	; 0x27
    2766:	18 a6       	std	Y+40, r1	; 0x28
    2768:	6e 01       	movw	r12, r28
    276a:	b2 e0       	ldi	r27, 0x02	; 2
    276c:	cb 0e       	add	r12, r27
    276e:	d1 1c       	adc	r13, r1
    2770:	c6 01       	movw	r24, r12
    2772:	0e 94 20 0a 	call	0x1440	; 0x1440 <vListInitialiseItem>
    2776:	ce 01       	movw	r24, r28
    2778:	0e 96       	adiw	r24, 0x0e	; 14
    277a:	0e 94 20 0a 	call	0x1440	; 0x1440 <vListInitialiseItem>
    277e:	db 87       	std	Y+11, r29	; 0x0b
    2780:	ca 87       	std	Y+10, r28	; 0x0a
    2782:	84 e0       	ldi	r24, 0x04	; 4
    2784:	90 e0       	ldi	r25, 0x00	; 0
    2786:	a0 e0       	ldi	r26, 0x00	; 0
    2788:	b0 e0       	ldi	r27, 0x00	; 0
    278a:	80 1b       	sub	r24, r16
    278c:	91 09       	sbc	r25, r1
    278e:	a1 09       	sbc	r26, r1
    2790:	b1 09       	sbc	r27, r1
    2792:	8e 87       	std	Y+14, r24	; 0x0e
    2794:	9f 87       	std	Y+15, r25	; 0x0f
    2796:	a8 8b       	std	Y+16, r26	; 0x10
    2798:	b9 8b       	std	Y+17, r27	; 0x11
    279a:	df 8b       	std	Y+23, r29	; 0x17
    279c:	ce 8b       	std	Y+22, r28	; 0x16
    279e:	1a a6       	std	Y+42, r1	; 0x2a
    27a0:	19 a6       	std	Y+41, r1	; 0x29
    27a2:	1b a6       	std	Y+43, r1	; 0x2b
    27a4:	1c a6       	std	Y+44, r1	; 0x2c
    27a6:	1d a6       	std	Y+45, r1	; 0x2d
    27a8:	1e a6       	std	Y+46, r1	; 0x2e
    27aa:	1f a6       	std	Y+47, r1	; 0x2f
    27ac:	a2 01       	movw	r20, r4
    27ae:	b4 01       	movw	r22, r8
    27b0:	c5 01       	movw	r24, r10
    27b2:	0e 94 a9 0a 	call	0x1552	; 0x1552 <pxPortInitialiseStack>
    27b6:	99 83       	std	Y+1, r25	; 0x01
    27b8:	88 83       	st	Y, r24
    27ba:	e1 14       	cp	r14, r1
    27bc:	f1 04       	cpc	r15, r1
    27be:	19 f0       	breq	.+6      	; 0x27c6 <xTaskCreate+0x114>
    27c0:	f7 01       	movw	r30, r14
    27c2:	d1 83       	std	Z+1, r29	; 0x01
    27c4:	c0 83       	st	Z, r28
    27c6:	0f b6       	in	r0, 0x3f	; 63
    27c8:	f8 94       	cli
    27ca:	0f 92       	push	r0
    27cc:	80 91 da 18 	lds	r24, 0x18DA	; 0x8018da <uxCurrentNumberOfTasks>
    27d0:	8f 5f       	subi	r24, 0xFF	; 255
    27d2:	80 93 da 18 	sts	0x18DA, r24	; 0x8018da <uxCurrentNumberOfTasks>
    27d6:	80 91 43 19 	lds	r24, 0x1943	; 0x801943 <pxCurrentTCB>
    27da:	90 91 44 19 	lds	r25, 0x1944	; 0x801944 <pxCurrentTCB+0x1>
    27de:	89 2b       	or	r24, r25
    27e0:	d1 f5       	brne	.+116    	; 0x2856 <xTaskCreate+0x1a4>
    27e2:	d0 93 44 19 	sts	0x1944, r29	; 0x801944 <pxCurrentTCB+0x1>
    27e6:	c0 93 43 19 	sts	0x1943, r28	; 0x801943 <pxCurrentTCB>
    27ea:	80 91 da 18 	lds	r24, 0x18DA	; 0x8018da <uxCurrentNumberOfTasks>
    27ee:	81 30       	cpi	r24, 0x01	; 1
    27f0:	09 f0       	breq	.+2      	; 0x27f4 <xTaskCreate+0x142>
    27f2:	41 c0       	rjmp	.+130    	; 0x2876 <xTaskCreate+0x1c4>
    27f4:	87 e1       	ldi	r24, 0x17	; 23
    27f6:	99 e1       	ldi	r25, 0x19	; 25
    27f8:	0e 94 0f 0a 	call	0x141e	; 0x141e <vListInitialise>
    27fc:	82 e2       	ldi	r24, 0x22	; 34
    27fe:	99 e1       	ldi	r25, 0x19	; 25
    2800:	0e 94 0f 0a 	call	0x141e	; 0x141e <vListInitialise>
    2804:	8d e2       	ldi	r24, 0x2D	; 45
    2806:	99 e1       	ldi	r25, 0x19	; 25
    2808:	0e 94 0f 0a 	call	0x141e	; 0x141e <vListInitialise>
    280c:	88 e3       	ldi	r24, 0x38	; 56
    280e:	99 e1       	ldi	r25, 0x19	; 25
    2810:	0e 94 0f 0a 	call	0x141e	; 0x141e <vListInitialise>
    2814:	8c e0       	ldi	r24, 0x0C	; 12
    2816:	99 e1       	ldi	r25, 0x19	; 25
    2818:	0e 94 0f 0a 	call	0x141e	; 0x141e <vListInitialise>
    281c:	81 e0       	ldi	r24, 0x01	; 1
    281e:	99 e1       	ldi	r25, 0x19	; 25
    2820:	0e 94 0f 0a 	call	0x141e	; 0x141e <vListInitialise>
    2824:	82 ef       	ldi	r24, 0xF2	; 242
    2826:	98 e1       	ldi	r25, 0x18	; 24
    2828:	0e 94 0f 0a 	call	0x141e	; 0x141e <vListInitialise>
    282c:	87 ee       	ldi	r24, 0xE7	; 231
    282e:	98 e1       	ldi	r25, 0x18	; 24
    2830:	0e 94 0f 0a 	call	0x141e	; 0x141e <vListInitialise>
    2834:	8b ed       	ldi	r24, 0xDB	; 219
    2836:	98 e1       	ldi	r25, 0x18	; 24
    2838:	0e 94 0f 0a 	call	0x141e	; 0x141e <vListInitialise>
    283c:	8c e0       	ldi	r24, 0x0C	; 12
    283e:	99 e1       	ldi	r25, 0x19	; 25
    2840:	90 93 00 19 	sts	0x1900, r25	; 0x801900 <pxDelayedTaskList+0x1>
    2844:	80 93 ff 18 	sts	0x18FF, r24	; 0x8018ff <pxDelayedTaskList>
    2848:	81 e0       	ldi	r24, 0x01	; 1
    284a:	99 e1       	ldi	r25, 0x19	; 25
    284c:	90 93 fe 18 	sts	0x18FE, r25	; 0x8018fe <pxOverflowDelayedTaskList+0x1>
    2850:	80 93 fd 18 	sts	0x18FD, r24	; 0x8018fd <pxOverflowDelayedTaskList>
    2854:	10 c0       	rjmp	.+32     	; 0x2876 <xTaskCreate+0x1c4>
    2856:	80 91 d4 18 	lds	r24, 0x18D4	; 0x8018d4 <xSchedulerRunning>
    285a:	81 11       	cpse	r24, r1
    285c:	0c c0       	rjmp	.+24     	; 0x2876 <xTaskCreate+0x1c4>
    285e:	e0 91 43 19 	lds	r30, 0x1943	; 0x801943 <pxCurrentTCB>
    2862:	f0 91 44 19 	lds	r31, 0x1944	; 0x801944 <pxCurrentTCB+0x1>
    2866:	92 8d       	ldd	r25, Z+26	; 0x1a
    2868:	8a 8d       	ldd	r24, Y+26	; 0x1a
    286a:	89 17       	cp	r24, r25
    286c:	20 f0       	brcs	.+8      	; 0x2876 <xTaskCreate+0x1c4>
    286e:	d0 93 44 19 	sts	0x1944, r29	; 0x801944 <pxCurrentTCB+0x1>
    2872:	c0 93 43 19 	sts	0x1943, r28	; 0x801943 <pxCurrentTCB>
    2876:	80 91 d0 18 	lds	r24, 0x18D0	; 0x8018d0 <uxTaskNumber>
    287a:	8f 5f       	subi	r24, 0xFF	; 255
    287c:	80 93 d0 18 	sts	0x18D0, r24	; 0x8018d0 <uxTaskNumber>
    2880:	8d a3       	std	Y+37, r24	; 0x25
    2882:	8a 8d       	ldd	r24, Y+26	; 0x1a
    2884:	90 91 d5 18 	lds	r25, 0x18D5	; 0x8018d5 <uxTopReadyPriority>
    2888:	98 17       	cp	r25, r24
    288a:	10 f4       	brcc	.+4      	; 0x2890 <xTaskCreate+0x1de>
    288c:	80 93 d5 18 	sts	0x18D5, r24	; 0x8018d5 <uxTopReadyPriority>
    2890:	fb e0       	ldi	r31, 0x0B	; 11
    2892:	8f 9f       	mul	r24, r31
    2894:	c0 01       	movw	r24, r0
    2896:	11 24       	eor	r1, r1
    2898:	b6 01       	movw	r22, r12
    289a:	89 5e       	subi	r24, 0xE9	; 233
    289c:	96 4e       	sbci	r25, 0xE6	; 230
    289e:	0e 94 24 0a 	call	0x1448	; 0x1448 <vListInsertEnd>
    28a2:	0f 90       	pop	r0
    28a4:	0f be       	out	0x3f, r0	; 63
    28a6:	80 91 d4 18 	lds	r24, 0x18D4	; 0x8018d4 <xSchedulerRunning>
    28aa:	88 23       	and	r24, r24
    28ac:	61 f0       	breq	.+24     	; 0x28c6 <xTaskCreate+0x214>
    28ae:	e0 91 43 19 	lds	r30, 0x1943	; 0x801943 <pxCurrentTCB>
    28b2:	f0 91 44 19 	lds	r31, 0x1944	; 0x801944 <pxCurrentTCB+0x1>
    28b6:	92 8d       	ldd	r25, Z+26	; 0x1a
    28b8:	8a 8d       	ldd	r24, Y+26	; 0x1a
    28ba:	98 17       	cp	r25, r24
    28bc:	30 f4       	brcc	.+12     	; 0x28ca <xTaskCreate+0x218>
    28be:	0e 94 57 0b 	call	0x16ae	; 0x16ae <vPortYield>
    28c2:	81 e0       	ldi	r24, 0x01	; 1
    28c4:	05 c0       	rjmp	.+10     	; 0x28d0 <xTaskCreate+0x21e>
    28c6:	81 e0       	ldi	r24, 0x01	; 1
    28c8:	03 c0       	rjmp	.+6      	; 0x28d0 <xTaskCreate+0x21e>
    28ca:	81 e0       	ldi	r24, 0x01	; 1
    28cc:	01 c0       	rjmp	.+2      	; 0x28d0 <xTaskCreate+0x21e>
    28ce:	8f ef       	ldi	r24, 0xFF	; 255
    28d0:	df 91       	pop	r29
    28d2:	cf 91       	pop	r28
    28d4:	0f 91       	pop	r16
    28d6:	ff 90       	pop	r15
    28d8:	ef 90       	pop	r14
    28da:	df 90       	pop	r13
    28dc:	cf 90       	pop	r12
    28de:	bf 90       	pop	r11
    28e0:	af 90       	pop	r10
    28e2:	9f 90       	pop	r9
    28e4:	8f 90       	pop	r8
    28e6:	7f 90       	pop	r7
    28e8:	6f 90       	pop	r6
    28ea:	5f 90       	pop	r5
    28ec:	4f 90       	pop	r4
    28ee:	08 95       	ret

000028f0 <vTaskStartScheduler>:
    28f0:	ef 92       	push	r14
    28f2:	ff 92       	push	r15
    28f4:	0f 93       	push	r16
    28f6:	0f 2e       	mov	r0, r31
    28f8:	fa ec       	ldi	r31, 0xCA	; 202
    28fa:	ef 2e       	mov	r14, r31
    28fc:	f8 e1       	ldi	r31, 0x18	; 24
    28fe:	ff 2e       	mov	r15, r31
    2900:	f0 2d       	mov	r31, r0
    2902:	00 e0       	ldi	r16, 0x00	; 0
    2904:	20 e0       	ldi	r18, 0x00	; 0
    2906:	30 e0       	ldi	r19, 0x00	; 0
    2908:	40 ec       	ldi	r20, 0xC0	; 192
    290a:	50 e0       	ldi	r21, 0x00	; 0
    290c:	6f e6       	ldi	r22, 0x6F	; 111
    290e:	75 e0       	ldi	r23, 0x05	; 5
    2910:	8d ec       	ldi	r24, 0xCD	; 205
    2912:	90 e0       	ldi	r25, 0x00	; 0
    2914:	ce de       	rcall	.-612    	; 0x26b2 <xTaskCreate>
    2916:	81 30       	cpi	r24, 0x01	; 1
    2918:	19 f5       	brne	.+70     	; 0x2960 <vTaskStartScheduler+0x70>
    291a:	cc d6       	rcall	.+3480   	; 0x36b4 <xTimerCreateTimerTask>
    291c:	81 30       	cpi	r24, 0x01	; 1
    291e:	01 f5       	brne	.+64     	; 0x2960 <vTaskStartScheduler+0x70>
    2920:	f8 94       	cli
    2922:	8f ef       	ldi	r24, 0xFF	; 255
    2924:	9f ef       	ldi	r25, 0xFF	; 255
    2926:	dc 01       	movw	r26, r24
    2928:	80 93 cc 18 	sts	0x18CC, r24	; 0x8018cc <xNextTaskUnblockTime>
    292c:	90 93 cd 18 	sts	0x18CD, r25	; 0x8018cd <xNextTaskUnblockTime+0x1>
    2930:	a0 93 ce 18 	sts	0x18CE, r26	; 0x8018ce <xNextTaskUnblockTime+0x2>
    2934:	b0 93 cf 18 	sts	0x18CF, r27	; 0x8018cf <xNextTaskUnblockTime+0x3>
    2938:	81 e0       	ldi	r24, 0x01	; 1
    293a:	80 93 d4 18 	sts	0x18D4, r24	; 0x8018d4 <xSchedulerRunning>
    293e:	10 92 d6 18 	sts	0x18D6, r1	; 0x8018d6 <xTickCount>
    2942:	10 92 d7 18 	sts	0x18D7, r1	; 0x8018d7 <xTickCount+0x1>
    2946:	10 92 d8 18 	sts	0x18D8, r1	; 0x8018d8 <xTickCount+0x2>
    294a:	10 92 d9 18 	sts	0x18D9, r1	; 0x8018d9 <xTickCount+0x3>
    294e:	e0 91 43 19 	lds	r30, 0x1943	; 0x801943 <pxCurrentTCB>
    2952:	f0 91 44 19 	lds	r31, 0x1944	; 0x801944 <pxCurrentTCB+0x1>
    2956:	81 a5       	ldd	r24, Z+41	; 0x29
    2958:	0e 94 5c 07 	call	0xeb8	; 0xeb8 <task_switch_in>
    295c:	0e 94 1b 0b 	call	0x1636	; 0x1636 <xPortStartScheduler>
    2960:	0f 91       	pop	r16
    2962:	ff 90       	pop	r15
    2964:	ef 90       	pop	r14
    2966:	08 95       	ret

00002968 <vTaskSuspendAll>:
    2968:	80 91 c9 18 	lds	r24, 0x18C9	; 0x8018c9 <uxSchedulerSuspended>
    296c:	8f 5f       	subi	r24, 0xFF	; 255
    296e:	80 93 c9 18 	sts	0x18C9, r24	; 0x8018c9 <uxSchedulerSuspended>
    2972:	08 95       	ret

00002974 <xTaskGetTickCount>:
    2974:	0f b6       	in	r0, 0x3f	; 63
    2976:	f8 94       	cli
    2978:	0f 92       	push	r0
    297a:	60 91 d6 18 	lds	r22, 0x18D6	; 0x8018d6 <xTickCount>
    297e:	70 91 d7 18 	lds	r23, 0x18D7	; 0x8018d7 <xTickCount+0x1>
    2982:	80 91 d8 18 	lds	r24, 0x18D8	; 0x8018d8 <xTickCount+0x2>
    2986:	90 91 d9 18 	lds	r25, 0x18D9	; 0x8018d9 <xTickCount+0x3>
    298a:	0f 90       	pop	r0
    298c:	0f be       	out	0x3f, r0	; 63
    298e:	08 95       	ret

00002990 <xTaskIncrementTick>:
    2990:	9f 92       	push	r9
    2992:	af 92       	push	r10
    2994:	bf 92       	push	r11
    2996:	cf 92       	push	r12
    2998:	df 92       	push	r13
    299a:	ef 92       	push	r14
    299c:	ff 92       	push	r15
    299e:	0f 93       	push	r16
    29a0:	1f 93       	push	r17
    29a2:	cf 93       	push	r28
    29a4:	df 93       	push	r29
    29a6:	80 91 c9 18 	lds	r24, 0x18C9	; 0x8018c9 <uxSchedulerSuspended>
    29aa:	81 11       	cpse	r24, r1
    29ac:	ad c0       	rjmp	.+346    	; 0x2b08 <xTaskIncrementTick+0x178>
    29ae:	c0 90 d6 18 	lds	r12, 0x18D6	; 0x8018d6 <xTickCount>
    29b2:	d0 90 d7 18 	lds	r13, 0x18D7	; 0x8018d7 <xTickCount+0x1>
    29b6:	e0 90 d8 18 	lds	r14, 0x18D8	; 0x8018d8 <xTickCount+0x2>
    29ba:	f0 90 d9 18 	lds	r15, 0x18D9	; 0x8018d9 <xTickCount+0x3>
    29be:	8f ef       	ldi	r24, 0xFF	; 255
    29c0:	c8 1a       	sub	r12, r24
    29c2:	d8 0a       	sbc	r13, r24
    29c4:	e8 0a       	sbc	r14, r24
    29c6:	f8 0a       	sbc	r15, r24
    29c8:	c0 92 d6 18 	sts	0x18D6, r12	; 0x8018d6 <xTickCount>
    29cc:	d0 92 d7 18 	sts	0x18D7, r13	; 0x8018d7 <xTickCount+0x1>
    29d0:	e0 92 d8 18 	sts	0x18D8, r14	; 0x8018d8 <xTickCount+0x2>
    29d4:	f0 92 d9 18 	sts	0x18D9, r15	; 0x8018d9 <xTickCount+0x3>
    29d8:	c1 14       	cp	r12, r1
    29da:	d1 04       	cpc	r13, r1
    29dc:	e1 04       	cpc	r14, r1
    29de:	f1 04       	cpc	r15, r1
    29e0:	b1 f4       	brne	.+44     	; 0x2a0e <xTaskIncrementTick+0x7e>
    29e2:	80 91 ff 18 	lds	r24, 0x18FF	; 0x8018ff <pxDelayedTaskList>
    29e6:	90 91 00 19 	lds	r25, 0x1900	; 0x801900 <pxDelayedTaskList+0x1>
    29ea:	20 91 fd 18 	lds	r18, 0x18FD	; 0x8018fd <pxOverflowDelayedTaskList>
    29ee:	30 91 fe 18 	lds	r19, 0x18FE	; 0x8018fe <pxOverflowDelayedTaskList+0x1>
    29f2:	30 93 00 19 	sts	0x1900, r19	; 0x801900 <pxDelayedTaskList+0x1>
    29f6:	20 93 ff 18 	sts	0x18FF, r18	; 0x8018ff <pxDelayedTaskList>
    29fa:	90 93 fe 18 	sts	0x18FE, r25	; 0x8018fe <pxOverflowDelayedTaskList+0x1>
    29fe:	80 93 fd 18 	sts	0x18FD, r24	; 0x8018fd <pxOverflowDelayedTaskList>
    2a02:	80 91 d1 18 	lds	r24, 0x18D1	; 0x8018d1 <xNumOfOverflows>
    2a06:	8f 5f       	subi	r24, 0xFF	; 255
    2a08:	80 93 d1 18 	sts	0x18D1, r24	; 0x8018d1 <xNumOfOverflows>
    2a0c:	b1 dd       	rcall	.-1182   	; 0x2570 <prvResetNextTaskUnblockTime>
    2a0e:	80 91 cc 18 	lds	r24, 0x18CC	; 0x8018cc <xNextTaskUnblockTime>
    2a12:	90 91 cd 18 	lds	r25, 0x18CD	; 0x8018cd <xNextTaskUnblockTime+0x1>
    2a16:	a0 91 ce 18 	lds	r26, 0x18CE	; 0x8018ce <xNextTaskUnblockTime+0x2>
    2a1a:	b0 91 cf 18 	lds	r27, 0x18CF	; 0x8018cf <xNextTaskUnblockTime+0x3>
    2a1e:	c8 16       	cp	r12, r24
    2a20:	d9 06       	cpc	r13, r25
    2a22:	ea 06       	cpc	r14, r26
    2a24:	fb 06       	cpc	r15, r27
    2a26:	10 f4       	brcc	.+4      	; 0x2a2c <xTaskIncrementTick+0x9c>
    2a28:	b1 2c       	mov	r11, r1
    2a2a:	5d c0       	rjmp	.+186    	; 0x2ae6 <xTaskIncrementTick+0x156>
    2a2c:	b1 2c       	mov	r11, r1
    2a2e:	0f 2e       	mov	r0, r31
    2a30:	fb e0       	ldi	r31, 0x0B	; 11
    2a32:	af 2e       	mov	r10, r31
    2a34:	f0 2d       	mov	r31, r0
    2a36:	99 24       	eor	r9, r9
    2a38:	93 94       	inc	r9
    2a3a:	e0 91 ff 18 	lds	r30, 0x18FF	; 0x8018ff <pxDelayedTaskList>
    2a3e:	f0 91 00 19 	lds	r31, 0x1900	; 0x801900 <pxDelayedTaskList+0x1>
    2a42:	80 81       	ld	r24, Z
    2a44:	81 11       	cpse	r24, r1
    2a46:	0c c0       	rjmp	.+24     	; 0x2a60 <xTaskIncrementTick+0xd0>
    2a48:	8f ef       	ldi	r24, 0xFF	; 255
    2a4a:	9f ef       	ldi	r25, 0xFF	; 255
    2a4c:	dc 01       	movw	r26, r24
    2a4e:	80 93 cc 18 	sts	0x18CC, r24	; 0x8018cc <xNextTaskUnblockTime>
    2a52:	90 93 cd 18 	sts	0x18CD, r25	; 0x8018cd <xNextTaskUnblockTime+0x1>
    2a56:	a0 93 ce 18 	sts	0x18CE, r26	; 0x8018ce <xNextTaskUnblockTime+0x2>
    2a5a:	b0 93 cf 18 	sts	0x18CF, r27	; 0x8018cf <xNextTaskUnblockTime+0x3>
    2a5e:	43 c0       	rjmp	.+134    	; 0x2ae6 <xTaskIncrementTick+0x156>
    2a60:	e0 91 ff 18 	lds	r30, 0x18FF	; 0x8018ff <pxDelayedTaskList>
    2a64:	f0 91 00 19 	lds	r31, 0x1900	; 0x801900 <pxDelayedTaskList+0x1>
    2a68:	07 80       	ldd	r0, Z+7	; 0x07
    2a6a:	f0 85       	ldd	r31, Z+8	; 0x08
    2a6c:	e0 2d       	mov	r30, r0
    2a6e:	c0 85       	ldd	r28, Z+8	; 0x08
    2a70:	d1 85       	ldd	r29, Z+9	; 0x09
    2a72:	8a 81       	ldd	r24, Y+2	; 0x02
    2a74:	9b 81       	ldd	r25, Y+3	; 0x03
    2a76:	ac 81       	ldd	r26, Y+4	; 0x04
    2a78:	bd 81       	ldd	r27, Y+5	; 0x05
    2a7a:	c8 16       	cp	r12, r24
    2a7c:	d9 06       	cpc	r13, r25
    2a7e:	ea 06       	cpc	r14, r26
    2a80:	fb 06       	cpc	r15, r27
    2a82:	48 f4       	brcc	.+18     	; 0x2a96 <xTaskIncrementTick+0x106>
    2a84:	80 93 cc 18 	sts	0x18CC, r24	; 0x8018cc <xNextTaskUnblockTime>
    2a88:	90 93 cd 18 	sts	0x18CD, r25	; 0x8018cd <xNextTaskUnblockTime+0x1>
    2a8c:	a0 93 ce 18 	sts	0x18CE, r26	; 0x8018ce <xNextTaskUnblockTime+0x2>
    2a90:	b0 93 cf 18 	sts	0x18CF, r27	; 0x8018cf <xNextTaskUnblockTime+0x3>
    2a94:	28 c0       	rjmp	.+80     	; 0x2ae6 <xTaskIncrementTick+0x156>
    2a96:	8e 01       	movw	r16, r28
    2a98:	0e 5f       	subi	r16, 0xFE	; 254
    2a9a:	1f 4f       	sbci	r17, 0xFF	; 255
    2a9c:	c8 01       	movw	r24, r16
    2a9e:	0e 94 82 0a 	call	0x1504	; 0x1504 <uxListRemove>
    2aa2:	88 8d       	ldd	r24, Y+24	; 0x18
    2aa4:	99 8d       	ldd	r25, Y+25	; 0x19
    2aa6:	89 2b       	or	r24, r25
    2aa8:	21 f0       	breq	.+8      	; 0x2ab2 <xTaskIncrementTick+0x122>
    2aaa:	ce 01       	movw	r24, r28
    2aac:	0e 96       	adiw	r24, 0x0e	; 14
    2aae:	0e 94 82 0a 	call	0x1504	; 0x1504 <uxListRemove>
    2ab2:	8a 8d       	ldd	r24, Y+26	; 0x1a
    2ab4:	90 91 d5 18 	lds	r25, 0x18D5	; 0x8018d5 <uxTopReadyPriority>
    2ab8:	98 17       	cp	r25, r24
    2aba:	10 f4       	brcc	.+4      	; 0x2ac0 <xTaskIncrementTick+0x130>
    2abc:	80 93 d5 18 	sts	0x18D5, r24	; 0x8018d5 <uxTopReadyPriority>
    2ac0:	a8 9e       	mul	r10, r24
    2ac2:	c0 01       	movw	r24, r0
    2ac4:	11 24       	eor	r1, r1
    2ac6:	b8 01       	movw	r22, r16
    2ac8:	89 5e       	subi	r24, 0xE9	; 233
    2aca:	96 4e       	sbci	r25, 0xE6	; 230
    2acc:	0e 94 24 0a 	call	0x1448	; 0x1448 <vListInsertEnd>
    2ad0:	e0 91 43 19 	lds	r30, 0x1943	; 0x801943 <pxCurrentTCB>
    2ad4:	f0 91 44 19 	lds	r31, 0x1944	; 0x801944 <pxCurrentTCB+0x1>
    2ad8:	9a 8d       	ldd	r25, Y+26	; 0x1a
    2ada:	82 8d       	ldd	r24, Z+26	; 0x1a
    2adc:	98 17       	cp	r25, r24
    2ade:	08 f4       	brcc	.+2      	; 0x2ae2 <xTaskIncrementTick+0x152>
    2ae0:	ac cf       	rjmp	.-168    	; 0x2a3a <xTaskIncrementTick+0xaa>
    2ae2:	b9 2c       	mov	r11, r9
    2ae4:	aa cf       	rjmp	.-172    	; 0x2a3a <xTaskIncrementTick+0xaa>
    2ae6:	e0 91 43 19 	lds	r30, 0x1943	; 0x801943 <pxCurrentTCB>
    2aea:	f0 91 44 19 	lds	r31, 0x1944	; 0x801944 <pxCurrentTCB+0x1>
    2aee:	e2 8d       	ldd	r30, Z+26	; 0x1a
    2af0:	8b e0       	ldi	r24, 0x0B	; 11
    2af2:	e8 9f       	mul	r30, r24
    2af4:	f0 01       	movw	r30, r0
    2af6:	11 24       	eor	r1, r1
    2af8:	e9 5e       	subi	r30, 0xE9	; 233
    2afa:	f6 4e       	sbci	r31, 0xE6	; 230
    2afc:	80 81       	ld	r24, Z
    2afe:	82 30       	cpi	r24, 0x02	; 2
    2b00:	48 f0       	brcs	.+18     	; 0x2b14 <xTaskIncrementTick+0x184>
    2b02:	bb 24       	eor	r11, r11
    2b04:	b3 94       	inc	r11
    2b06:	06 c0       	rjmp	.+12     	; 0x2b14 <xTaskIncrementTick+0x184>
    2b08:	80 91 d3 18 	lds	r24, 0x18D3	; 0x8018d3 <uxPendedTicks>
    2b0c:	8f 5f       	subi	r24, 0xFF	; 255
    2b0e:	80 93 d3 18 	sts	0x18D3, r24	; 0x8018d3 <uxPendedTicks>
    2b12:	b1 2c       	mov	r11, r1
    2b14:	80 91 d2 18 	lds	r24, 0x18D2	; 0x8018d2 <xYieldPending>
    2b18:	88 23       	and	r24, r24
    2b1a:	11 f0       	breq	.+4      	; 0x2b20 <xTaskIncrementTick+0x190>
    2b1c:	bb 24       	eor	r11, r11
    2b1e:	b3 94       	inc	r11
    2b20:	8b 2d       	mov	r24, r11
    2b22:	df 91       	pop	r29
    2b24:	cf 91       	pop	r28
    2b26:	1f 91       	pop	r17
    2b28:	0f 91       	pop	r16
    2b2a:	ff 90       	pop	r15
    2b2c:	ef 90       	pop	r14
    2b2e:	df 90       	pop	r13
    2b30:	cf 90       	pop	r12
    2b32:	bf 90       	pop	r11
    2b34:	af 90       	pop	r10
    2b36:	9f 90       	pop	r9
    2b38:	08 95       	ret

00002b3a <xTaskResumeAll>:
    2b3a:	cf 92       	push	r12
    2b3c:	df 92       	push	r13
    2b3e:	ef 92       	push	r14
    2b40:	ff 92       	push	r15
    2b42:	0f 93       	push	r16
    2b44:	1f 93       	push	r17
    2b46:	cf 93       	push	r28
    2b48:	df 93       	push	r29
    2b4a:	0f b6       	in	r0, 0x3f	; 63
    2b4c:	f8 94       	cli
    2b4e:	0f 92       	push	r0
    2b50:	80 91 c9 18 	lds	r24, 0x18C9	; 0x8018c9 <uxSchedulerSuspended>
    2b54:	81 50       	subi	r24, 0x01	; 1
    2b56:	80 93 c9 18 	sts	0x18C9, r24	; 0x8018c9 <uxSchedulerSuspended>
    2b5a:	80 91 c9 18 	lds	r24, 0x18C9	; 0x8018c9 <uxSchedulerSuspended>
    2b5e:	81 11       	cpse	r24, r1
    2b60:	5a c0       	rjmp	.+180    	; 0x2c16 <xTaskResumeAll+0xdc>
    2b62:	80 91 da 18 	lds	r24, 0x18DA	; 0x8018da <uxCurrentNumberOfTasks>
    2b66:	81 11       	cpse	r24, r1
    2b68:	2c c0       	rjmp	.+88     	; 0x2bc2 <xTaskResumeAll+0x88>
    2b6a:	58 c0       	rjmp	.+176    	; 0x2c1c <xTaskResumeAll+0xe2>
    2b6c:	d7 01       	movw	r26, r14
    2b6e:	17 96       	adiw	r26, 0x07	; 7
    2b70:	ed 91       	ld	r30, X+
    2b72:	fc 91       	ld	r31, X
    2b74:	18 97       	sbiw	r26, 0x08	; 8
    2b76:	c0 85       	ldd	r28, Z+8	; 0x08
    2b78:	d1 85       	ldd	r29, Z+9	; 0x09
    2b7a:	ce 01       	movw	r24, r28
    2b7c:	0e 96       	adiw	r24, 0x0e	; 14
    2b7e:	0e 94 82 0a 	call	0x1504	; 0x1504 <uxListRemove>
    2b82:	8e 01       	movw	r16, r28
    2b84:	0e 5f       	subi	r16, 0xFE	; 254
    2b86:	1f 4f       	sbci	r17, 0xFF	; 255
    2b88:	c8 01       	movw	r24, r16
    2b8a:	0e 94 82 0a 	call	0x1504	; 0x1504 <uxListRemove>
    2b8e:	8a 8d       	ldd	r24, Y+26	; 0x1a
    2b90:	90 91 d5 18 	lds	r25, 0x18D5	; 0x8018d5 <uxTopReadyPriority>
    2b94:	98 17       	cp	r25, r24
    2b96:	10 f4       	brcc	.+4      	; 0x2b9c <xTaskResumeAll+0x62>
    2b98:	80 93 d5 18 	sts	0x18D5, r24	; 0x8018d5 <uxTopReadyPriority>
    2b9c:	d8 9e       	mul	r13, r24
    2b9e:	c0 01       	movw	r24, r0
    2ba0:	11 24       	eor	r1, r1
    2ba2:	b8 01       	movw	r22, r16
    2ba4:	89 5e       	subi	r24, 0xE9	; 233
    2ba6:	96 4e       	sbci	r25, 0xE6	; 230
    2ba8:	0e 94 24 0a 	call	0x1448	; 0x1448 <vListInsertEnd>
    2bac:	e0 91 43 19 	lds	r30, 0x1943	; 0x801943 <pxCurrentTCB>
    2bb0:	f0 91 44 19 	lds	r31, 0x1944	; 0x801944 <pxCurrentTCB+0x1>
    2bb4:	9a 8d       	ldd	r25, Y+26	; 0x1a
    2bb6:	82 8d       	ldd	r24, Z+26	; 0x1a
    2bb8:	98 17       	cp	r25, r24
    2bba:	88 f0       	brcs	.+34     	; 0x2bde <xTaskResumeAll+0xa4>
    2bbc:	c0 92 d2 18 	sts	0x18D2, r12	; 0x8018d2 <xYieldPending>
    2bc0:	0e c0       	rjmp	.+28     	; 0x2bde <xTaskResumeAll+0xa4>
    2bc2:	c0 e0       	ldi	r28, 0x00	; 0
    2bc4:	d0 e0       	ldi	r29, 0x00	; 0
    2bc6:	0f 2e       	mov	r0, r31
    2bc8:	f2 ef       	ldi	r31, 0xF2	; 242
    2bca:	ef 2e       	mov	r14, r31
    2bcc:	f8 e1       	ldi	r31, 0x18	; 24
    2bce:	ff 2e       	mov	r15, r31
    2bd0:	f0 2d       	mov	r31, r0
    2bd2:	0f 2e       	mov	r0, r31
    2bd4:	fb e0       	ldi	r31, 0x0B	; 11
    2bd6:	df 2e       	mov	r13, r31
    2bd8:	f0 2d       	mov	r31, r0
    2bda:	cc 24       	eor	r12, r12
    2bdc:	c3 94       	inc	r12
    2bde:	f7 01       	movw	r30, r14
    2be0:	80 81       	ld	r24, Z
    2be2:	81 11       	cpse	r24, r1
    2be4:	c3 cf       	rjmp	.-122    	; 0x2b6c <xTaskResumeAll+0x32>
    2be6:	cd 2b       	or	r28, r29
    2be8:	09 f0       	breq	.+2      	; 0x2bec <xTaskResumeAll+0xb2>
    2bea:	c2 dc       	rcall	.-1660   	; 0x2570 <prvResetNextTaskUnblockTime>
    2bec:	c0 91 d3 18 	lds	r28, 0x18D3	; 0x8018d3 <uxPendedTicks>
    2bf0:	cc 23       	and	r28, r28
    2bf2:	49 f0       	breq	.+18     	; 0x2c06 <xTaskResumeAll+0xcc>
    2bf4:	d1 e0       	ldi	r29, 0x01	; 1
    2bf6:	cc de       	rcall	.-616    	; 0x2990 <xTaskIncrementTick>
    2bf8:	81 11       	cpse	r24, r1
    2bfa:	d0 93 d2 18 	sts	0x18D2, r29	; 0x8018d2 <xYieldPending>
    2bfe:	c1 50       	subi	r28, 0x01	; 1
    2c00:	d1 f7       	brne	.-12     	; 0x2bf6 <xTaskResumeAll+0xbc>
    2c02:	10 92 d3 18 	sts	0x18D3, r1	; 0x8018d3 <uxPendedTicks>
    2c06:	80 91 d2 18 	lds	r24, 0x18D2	; 0x8018d2 <xYieldPending>
    2c0a:	88 23       	and	r24, r24
    2c0c:	31 f0       	breq	.+12     	; 0x2c1a <xTaskResumeAll+0xe0>
    2c0e:	0e 94 57 0b 	call	0x16ae	; 0x16ae <vPortYield>
    2c12:	81 e0       	ldi	r24, 0x01	; 1
    2c14:	03 c0       	rjmp	.+6      	; 0x2c1c <xTaskResumeAll+0xe2>
    2c16:	80 e0       	ldi	r24, 0x00	; 0
    2c18:	01 c0       	rjmp	.+2      	; 0x2c1c <xTaskResumeAll+0xe2>
    2c1a:	80 e0       	ldi	r24, 0x00	; 0
    2c1c:	0f 90       	pop	r0
    2c1e:	0f be       	out	0x3f, r0	; 63
    2c20:	df 91       	pop	r29
    2c22:	cf 91       	pop	r28
    2c24:	1f 91       	pop	r17
    2c26:	0f 91       	pop	r16
    2c28:	ff 90       	pop	r15
    2c2a:	ef 90       	pop	r14
    2c2c:	df 90       	pop	r13
    2c2e:	cf 90       	pop	r12
    2c30:	08 95       	ret

00002c32 <vTaskDelay>:
    2c32:	cf 92       	push	r12
    2c34:	df 92       	push	r13
    2c36:	ef 92       	push	r14
    2c38:	ff 92       	push	r15
    2c3a:	6b 01       	movw	r12, r22
    2c3c:	7c 01       	movw	r14, r24
    2c3e:	67 2b       	or	r22, r23
    2c40:	68 2b       	or	r22, r24
    2c42:	69 2b       	or	r22, r25
    2c44:	41 f0       	breq	.+16     	; 0x2c56 <vTaskDelay+0x24>
    2c46:	90 de       	rcall	.-736    	; 0x2968 <vTaskSuspendAll>
    2c48:	40 e0       	ldi	r20, 0x00	; 0
    2c4a:	c7 01       	movw	r24, r14
    2c4c:	b6 01       	movw	r22, r12
    2c4e:	ba dc       	rcall	.-1676   	; 0x25c4 <prvAddCurrentTaskToDelayedList>
    2c50:	74 df       	rcall	.-280    	; 0x2b3a <xTaskResumeAll>
    2c52:	81 11       	cpse	r24, r1
    2c54:	02 c0       	rjmp	.+4      	; 0x2c5a <vTaskDelay+0x28>
    2c56:	0e 94 57 0b 	call	0x16ae	; 0x16ae <vPortYield>
    2c5a:	ff 90       	pop	r15
    2c5c:	ef 90       	pop	r14
    2c5e:	df 90       	pop	r13
    2c60:	cf 90       	pop	r12
    2c62:	08 95       	ret

00002c64 <vTaskSwitchContext>:
    2c64:	80 91 c9 18 	lds	r24, 0x18C9	; 0x8018c9 <uxSchedulerSuspended>
    2c68:	88 23       	and	r24, r24
    2c6a:	21 f0       	breq	.+8      	; 0x2c74 <vTaskSwitchContext+0x10>
    2c6c:	81 e0       	ldi	r24, 0x01	; 1
    2c6e:	80 93 d2 18 	sts	0x18D2, r24	; 0x8018d2 <xYieldPending>
    2c72:	08 95       	ret
    2c74:	10 92 d2 18 	sts	0x18D2, r1	; 0x8018d2 <xYieldPending>
    2c78:	e0 91 43 19 	lds	r30, 0x1943	; 0x801943 <pxCurrentTCB>
    2c7c:	f0 91 44 19 	lds	r31, 0x1944	; 0x801944 <pxCurrentTCB+0x1>
    2c80:	81 a5       	ldd	r24, Z+41	; 0x29
    2c82:	0e 94 66 07 	call	0xecc	; 0xecc <task_switch_out>
    2c86:	a0 91 43 19 	lds	r26, 0x1943	; 0x801943 <pxCurrentTCB>
    2c8a:	b0 91 44 19 	lds	r27, 0x1944	; 0x801944 <pxCurrentTCB+0x1>
    2c8e:	e0 91 43 19 	lds	r30, 0x1943	; 0x801943 <pxCurrentTCB>
    2c92:	f0 91 44 19 	lds	r31, 0x1944	; 0x801944 <pxCurrentTCB+0x1>
    2c96:	2d 91       	ld	r18, X+
    2c98:	3c 91       	ld	r19, X
    2c9a:	83 8d       	ldd	r24, Z+27	; 0x1b
    2c9c:	94 8d       	ldd	r25, Z+28	; 0x1c
    2c9e:	82 17       	cp	r24, r18
    2ca0:	93 07       	cpc	r25, r19
    2ca2:	58 f0       	brcs	.+22     	; 0x2cba <vTaskSwitchContext+0x56>
    2ca4:	60 91 43 19 	lds	r22, 0x1943	; 0x801943 <pxCurrentTCB>
    2ca8:	70 91 44 19 	lds	r23, 0x1944	; 0x801944 <pxCurrentTCB+0x1>
    2cac:	80 91 43 19 	lds	r24, 0x1943	; 0x801943 <pxCurrentTCB>
    2cb0:	90 91 44 19 	lds	r25, 0x1944	; 0x801944 <pxCurrentTCB+0x1>
    2cb4:	63 5e       	subi	r22, 0xE3	; 227
    2cb6:	7f 4f       	sbci	r23, 0xFF	; 255
    2cb8:	20 d6       	rcall	.+3136   	; 0x38fa <vApplicationStackOverflowHook>
    2cba:	80 91 d5 18 	lds	r24, 0x18D5	; 0x8018d5 <uxTopReadyPriority>
    2cbe:	28 2f       	mov	r18, r24
    2cc0:	30 e0       	ldi	r19, 0x00	; 0
    2cc2:	9b e0       	ldi	r25, 0x0B	; 11
    2cc4:	89 9f       	mul	r24, r25
    2cc6:	f0 01       	movw	r30, r0
    2cc8:	11 24       	eor	r1, r1
    2cca:	e9 5e       	subi	r30, 0xE9	; 233
    2ccc:	f6 4e       	sbci	r31, 0xE6	; 230
    2cce:	90 81       	ld	r25, Z
    2cd0:	91 11       	cpse	r25, r1
    2cd2:	0e c0       	rjmp	.+28     	; 0x2cf0 <vTaskSwitchContext+0x8c>
    2cd4:	4b e0       	ldi	r20, 0x0B	; 11
    2cd6:	81 50       	subi	r24, 0x01	; 1
    2cd8:	28 2f       	mov	r18, r24
    2cda:	30 e0       	ldi	r19, 0x00	; 0
    2cdc:	42 9f       	mul	r20, r18
    2cde:	f0 01       	movw	r30, r0
    2ce0:	43 9f       	mul	r20, r19
    2ce2:	f0 0d       	add	r31, r0
    2ce4:	11 24       	eor	r1, r1
    2ce6:	e9 5e       	subi	r30, 0xE9	; 233
    2ce8:	f6 4e       	sbci	r31, 0xE6	; 230
    2cea:	90 81       	ld	r25, Z
    2cec:	99 23       	and	r25, r25
    2cee:	99 f3       	breq	.-26     	; 0x2cd6 <vTaskSwitchContext+0x72>
    2cf0:	9b e0       	ldi	r25, 0x0B	; 11
    2cf2:	92 9f       	mul	r25, r18
    2cf4:	a0 01       	movw	r20, r0
    2cf6:	93 9f       	mul	r25, r19
    2cf8:	50 0d       	add	r21, r0
    2cfa:	11 24       	eor	r1, r1
    2cfc:	da 01       	movw	r26, r20
    2cfe:	a9 5e       	subi	r26, 0xE9	; 233
    2d00:	b6 4e       	sbci	r27, 0xE6	; 230
    2d02:	11 96       	adiw	r26, 0x01	; 1
    2d04:	ed 91       	ld	r30, X+
    2d06:	fc 91       	ld	r31, X
    2d08:	12 97       	sbiw	r26, 0x02	; 2
    2d0a:	04 80       	ldd	r0, Z+4	; 0x04
    2d0c:	f5 81       	ldd	r31, Z+5	; 0x05
    2d0e:	e0 2d       	mov	r30, r0
    2d10:	12 96       	adiw	r26, 0x02	; 2
    2d12:	fc 93       	st	X, r31
    2d14:	ee 93       	st	-X, r30
    2d16:	11 97       	sbiw	r26, 0x01	; 1
    2d18:	46 5e       	subi	r20, 0xE6	; 230
    2d1a:	56 4e       	sbci	r21, 0xE6	; 230
    2d1c:	e4 17       	cp	r30, r20
    2d1e:	f5 07       	cpc	r31, r21
    2d20:	29 f4       	brne	.+10     	; 0x2d2c <vTaskSwitchContext+0xc8>
    2d22:	44 81       	ldd	r20, Z+4	; 0x04
    2d24:	55 81       	ldd	r21, Z+5	; 0x05
    2d26:	fd 01       	movw	r30, r26
    2d28:	52 83       	std	Z+2, r21	; 0x02
    2d2a:	41 83       	std	Z+1, r20	; 0x01
    2d2c:	9b e0       	ldi	r25, 0x0B	; 11
    2d2e:	92 9f       	mul	r25, r18
    2d30:	f0 01       	movw	r30, r0
    2d32:	93 9f       	mul	r25, r19
    2d34:	f0 0d       	add	r31, r0
    2d36:	11 24       	eor	r1, r1
    2d38:	e9 5e       	subi	r30, 0xE9	; 233
    2d3a:	f6 4e       	sbci	r31, 0xE6	; 230
    2d3c:	01 80       	ldd	r0, Z+1	; 0x01
    2d3e:	f2 81       	ldd	r31, Z+2	; 0x02
    2d40:	e0 2d       	mov	r30, r0
    2d42:	20 85       	ldd	r18, Z+8	; 0x08
    2d44:	31 85       	ldd	r19, Z+9	; 0x09
    2d46:	30 93 44 19 	sts	0x1944, r19	; 0x801944 <pxCurrentTCB+0x1>
    2d4a:	20 93 43 19 	sts	0x1943, r18	; 0x801943 <pxCurrentTCB>
    2d4e:	80 93 d5 18 	sts	0x18D5, r24	; 0x8018d5 <uxTopReadyPriority>
    2d52:	e0 91 43 19 	lds	r30, 0x1943	; 0x801943 <pxCurrentTCB>
    2d56:	f0 91 44 19 	lds	r31, 0x1944	; 0x801944 <pxCurrentTCB+0x1>
    2d5a:	81 a5       	ldd	r24, Z+41	; 0x29
    2d5c:	0c 94 5c 07 	jmp	0xeb8	; 0xeb8 <task_switch_in>
    2d60:	08 95       	ret

00002d62 <vTaskPlaceOnEventList>:
    2d62:	cf 92       	push	r12
    2d64:	df 92       	push	r13
    2d66:	ef 92       	push	r14
    2d68:	ff 92       	push	r15
    2d6a:	6a 01       	movw	r12, r20
    2d6c:	7b 01       	movw	r14, r22
    2d6e:	60 91 43 19 	lds	r22, 0x1943	; 0x801943 <pxCurrentTCB>
    2d72:	70 91 44 19 	lds	r23, 0x1944	; 0x801944 <pxCurrentTCB+0x1>
    2d76:	62 5f       	subi	r22, 0xF2	; 242
    2d78:	7f 4f       	sbci	r23, 0xFF	; 255
    2d7a:	0e 94 45 0a 	call	0x148a	; 0x148a <vListInsert>
    2d7e:	41 e0       	ldi	r20, 0x01	; 1
    2d80:	c7 01       	movw	r24, r14
    2d82:	b6 01       	movw	r22, r12
    2d84:	1f dc       	rcall	.-1986   	; 0x25c4 <prvAddCurrentTaskToDelayedList>
    2d86:	ff 90       	pop	r15
    2d88:	ef 90       	pop	r14
    2d8a:	df 90       	pop	r13
    2d8c:	cf 90       	pop	r12
    2d8e:	08 95       	ret

00002d90 <vTaskPlaceOnUnorderedEventList>:
    2d90:	cf 92       	push	r12
    2d92:	df 92       	push	r13
    2d94:	ef 92       	push	r14
    2d96:	ff 92       	push	r15
    2d98:	0f 93       	push	r16
    2d9a:	1f 93       	push	r17
    2d9c:	68 01       	movw	r12, r16
    2d9e:	79 01       	movw	r14, r18
    2da0:	e0 91 43 19 	lds	r30, 0x1943	; 0x801943 <pxCurrentTCB>
    2da4:	f0 91 44 19 	lds	r31, 0x1944	; 0x801944 <pxCurrentTCB+0x1>
    2da8:	70 68       	ori	r23, 0x80	; 128
    2daa:	46 87       	std	Z+14, r20	; 0x0e
    2dac:	57 87       	std	Z+15, r21	; 0x0f
    2dae:	60 8b       	std	Z+16, r22	; 0x10
    2db0:	71 8b       	std	Z+17, r23	; 0x11
    2db2:	60 91 43 19 	lds	r22, 0x1943	; 0x801943 <pxCurrentTCB>
    2db6:	70 91 44 19 	lds	r23, 0x1944	; 0x801944 <pxCurrentTCB+0x1>
    2dba:	62 5f       	subi	r22, 0xF2	; 242
    2dbc:	7f 4f       	sbci	r23, 0xFF	; 255
    2dbe:	0e 94 24 0a 	call	0x1448	; 0x1448 <vListInsertEnd>
    2dc2:	41 e0       	ldi	r20, 0x01	; 1
    2dc4:	c7 01       	movw	r24, r14
    2dc6:	b6 01       	movw	r22, r12
    2dc8:	fd db       	rcall	.-2054   	; 0x25c4 <prvAddCurrentTaskToDelayedList>
    2dca:	1f 91       	pop	r17
    2dcc:	0f 91       	pop	r16
    2dce:	ff 90       	pop	r15
    2dd0:	ef 90       	pop	r14
    2dd2:	df 90       	pop	r13
    2dd4:	cf 90       	pop	r12
    2dd6:	08 95       	ret

00002dd8 <vTaskPlaceOnEventListRestricted>:
    2dd8:	cf 92       	push	r12
    2dda:	df 92       	push	r13
    2ddc:	ef 92       	push	r14
    2dde:	ff 92       	push	r15
    2de0:	cf 93       	push	r28
    2de2:	6a 01       	movw	r12, r20
    2de4:	7b 01       	movw	r14, r22
    2de6:	c2 2f       	mov	r28, r18
    2de8:	60 91 43 19 	lds	r22, 0x1943	; 0x801943 <pxCurrentTCB>
    2dec:	70 91 44 19 	lds	r23, 0x1944	; 0x801944 <pxCurrentTCB+0x1>
    2df0:	62 5f       	subi	r22, 0xF2	; 242
    2df2:	7f 4f       	sbci	r23, 0xFF	; 255
    2df4:	0e 94 24 0a 	call	0x1448	; 0x1448 <vListInsertEnd>
    2df8:	cc 23       	and	r28, r28
    2dfa:	21 f0       	breq	.+8      	; 0x2e04 <vTaskPlaceOnEventListRestricted+0x2c>
    2dfc:	cc 24       	eor	r12, r12
    2dfe:	ca 94       	dec	r12
    2e00:	dc 2c       	mov	r13, r12
    2e02:	76 01       	movw	r14, r12
    2e04:	4c 2f       	mov	r20, r28
    2e06:	c7 01       	movw	r24, r14
    2e08:	b6 01       	movw	r22, r12
    2e0a:	dc db       	rcall	.-2120   	; 0x25c4 <prvAddCurrentTaskToDelayedList>
    2e0c:	cf 91       	pop	r28
    2e0e:	ff 90       	pop	r15
    2e10:	ef 90       	pop	r14
    2e12:	df 90       	pop	r13
    2e14:	cf 90       	pop	r12
    2e16:	08 95       	ret

00002e18 <xTaskRemoveFromEventList>:
    2e18:	0f 93       	push	r16
    2e1a:	1f 93       	push	r17
    2e1c:	cf 93       	push	r28
    2e1e:	df 93       	push	r29
    2e20:	dc 01       	movw	r26, r24
    2e22:	17 96       	adiw	r26, 0x07	; 7
    2e24:	ed 91       	ld	r30, X+
    2e26:	fc 91       	ld	r31, X
    2e28:	18 97       	sbiw	r26, 0x08	; 8
    2e2a:	c0 85       	ldd	r28, Z+8	; 0x08
    2e2c:	d1 85       	ldd	r29, Z+9	; 0x09
    2e2e:	8e 01       	movw	r16, r28
    2e30:	02 5f       	subi	r16, 0xF2	; 242
    2e32:	1f 4f       	sbci	r17, 0xFF	; 255
    2e34:	c8 01       	movw	r24, r16
    2e36:	0e 94 82 0a 	call	0x1504	; 0x1504 <uxListRemove>
    2e3a:	80 91 c9 18 	lds	r24, 0x18C9	; 0x8018c9 <uxSchedulerSuspended>
    2e3e:	81 11       	cpse	r24, r1
    2e40:	16 c0       	rjmp	.+44     	; 0x2e6e <xTaskRemoveFromEventList+0x56>
    2e42:	0c 50       	subi	r16, 0x0C	; 12
    2e44:	11 09       	sbc	r17, r1
    2e46:	c8 01       	movw	r24, r16
    2e48:	0e 94 82 0a 	call	0x1504	; 0x1504 <uxListRemove>
    2e4c:	8a 8d       	ldd	r24, Y+26	; 0x1a
    2e4e:	90 91 d5 18 	lds	r25, 0x18D5	; 0x8018d5 <uxTopReadyPriority>
    2e52:	98 17       	cp	r25, r24
    2e54:	10 f4       	brcc	.+4      	; 0x2e5a <xTaskRemoveFromEventList+0x42>
    2e56:	80 93 d5 18 	sts	0x18D5, r24	; 0x8018d5 <uxTopReadyPriority>
    2e5a:	bb e0       	ldi	r27, 0x0B	; 11
    2e5c:	8b 9f       	mul	r24, r27
    2e5e:	c0 01       	movw	r24, r0
    2e60:	11 24       	eor	r1, r1
    2e62:	b8 01       	movw	r22, r16
    2e64:	89 5e       	subi	r24, 0xE9	; 233
    2e66:	96 4e       	sbci	r25, 0xE6	; 230
    2e68:	0e 94 24 0a 	call	0x1448	; 0x1448 <vListInsertEnd>
    2e6c:	05 c0       	rjmp	.+10     	; 0x2e78 <xTaskRemoveFromEventList+0x60>
    2e6e:	b8 01       	movw	r22, r16
    2e70:	82 ef       	ldi	r24, 0xF2	; 242
    2e72:	98 e1       	ldi	r25, 0x18	; 24
    2e74:	0e 94 24 0a 	call	0x1448	; 0x1448 <vListInsertEnd>
    2e78:	e0 91 43 19 	lds	r30, 0x1943	; 0x801943 <pxCurrentTCB>
    2e7c:	f0 91 44 19 	lds	r31, 0x1944	; 0x801944 <pxCurrentTCB+0x1>
    2e80:	9a 8d       	ldd	r25, Y+26	; 0x1a
    2e82:	82 8d       	ldd	r24, Z+26	; 0x1a
    2e84:	89 17       	cp	r24, r25
    2e86:	20 f4       	brcc	.+8      	; 0x2e90 <xTaskRemoveFromEventList+0x78>
    2e88:	81 e0       	ldi	r24, 0x01	; 1
    2e8a:	80 93 d2 18 	sts	0x18D2, r24	; 0x8018d2 <xYieldPending>
    2e8e:	01 c0       	rjmp	.+2      	; 0x2e92 <xTaskRemoveFromEventList+0x7a>
    2e90:	80 e0       	ldi	r24, 0x00	; 0
    2e92:	df 91       	pop	r29
    2e94:	cf 91       	pop	r28
    2e96:	1f 91       	pop	r17
    2e98:	0f 91       	pop	r16
    2e9a:	08 95       	ret

00002e9c <vTaskRemoveFromUnorderedEventList>:
    2e9c:	0f 93       	push	r16
    2e9e:	1f 93       	push	r17
    2ea0:	cf 93       	push	r28
    2ea2:	df 93       	push	r29
    2ea4:	70 68       	ori	r23, 0x80	; 128
    2ea6:	fc 01       	movw	r30, r24
    2ea8:	40 83       	st	Z, r20
    2eaa:	51 83       	std	Z+1, r21	; 0x01
    2eac:	62 83       	std	Z+2, r22	; 0x02
    2eae:	73 83       	std	Z+3, r23	; 0x03
    2eb0:	c0 85       	ldd	r28, Z+8	; 0x08
    2eb2:	d1 85       	ldd	r29, Z+9	; 0x09
    2eb4:	0e 94 82 0a 	call	0x1504	; 0x1504 <uxListRemove>
    2eb8:	8e 01       	movw	r16, r28
    2eba:	0e 5f       	subi	r16, 0xFE	; 254
    2ebc:	1f 4f       	sbci	r17, 0xFF	; 255
    2ebe:	c8 01       	movw	r24, r16
    2ec0:	0e 94 82 0a 	call	0x1504	; 0x1504 <uxListRemove>
    2ec4:	8a 8d       	ldd	r24, Y+26	; 0x1a
    2ec6:	90 91 d5 18 	lds	r25, 0x18D5	; 0x8018d5 <uxTopReadyPriority>
    2eca:	98 17       	cp	r25, r24
    2ecc:	10 f4       	brcc	.+4      	; 0x2ed2 <vTaskRemoveFromUnorderedEventList+0x36>
    2ece:	80 93 d5 18 	sts	0x18D5, r24	; 0x8018d5 <uxTopReadyPriority>
    2ed2:	fb e0       	ldi	r31, 0x0B	; 11
    2ed4:	8f 9f       	mul	r24, r31
    2ed6:	c0 01       	movw	r24, r0
    2ed8:	11 24       	eor	r1, r1
    2eda:	b8 01       	movw	r22, r16
    2edc:	89 5e       	subi	r24, 0xE9	; 233
    2ede:	96 4e       	sbci	r25, 0xE6	; 230
    2ee0:	0e 94 24 0a 	call	0x1448	; 0x1448 <vListInsertEnd>
    2ee4:	e0 91 43 19 	lds	r30, 0x1943	; 0x801943 <pxCurrentTCB>
    2ee8:	f0 91 44 19 	lds	r31, 0x1944	; 0x801944 <pxCurrentTCB+0x1>
    2eec:	9a 8d       	ldd	r25, Y+26	; 0x1a
    2eee:	82 8d       	ldd	r24, Z+26	; 0x1a
    2ef0:	89 17       	cp	r24, r25
    2ef2:	18 f4       	brcc	.+6      	; 0x2efa <vTaskRemoveFromUnorderedEventList+0x5e>
    2ef4:	81 e0       	ldi	r24, 0x01	; 1
    2ef6:	80 93 d2 18 	sts	0x18D2, r24	; 0x8018d2 <xYieldPending>
    2efa:	df 91       	pop	r29
    2efc:	cf 91       	pop	r28
    2efe:	1f 91       	pop	r17
    2f00:	0f 91       	pop	r16
    2f02:	08 95       	ret

00002f04 <vTaskSetTimeOutState>:
    2f04:	0f b6       	in	r0, 0x3f	; 63
    2f06:	f8 94       	cli
    2f08:	0f 92       	push	r0
    2f0a:	20 91 d1 18 	lds	r18, 0x18D1	; 0x8018d1 <xNumOfOverflows>
    2f0e:	fc 01       	movw	r30, r24
    2f10:	20 83       	st	Z, r18
    2f12:	40 91 d6 18 	lds	r20, 0x18D6	; 0x8018d6 <xTickCount>
    2f16:	50 91 d7 18 	lds	r21, 0x18D7	; 0x8018d7 <xTickCount+0x1>
    2f1a:	60 91 d8 18 	lds	r22, 0x18D8	; 0x8018d8 <xTickCount+0x2>
    2f1e:	70 91 d9 18 	lds	r23, 0x18D9	; 0x8018d9 <xTickCount+0x3>
    2f22:	41 83       	std	Z+1, r20	; 0x01
    2f24:	52 83       	std	Z+2, r21	; 0x02
    2f26:	63 83       	std	Z+3, r22	; 0x03
    2f28:	74 83       	std	Z+4, r23	; 0x04
    2f2a:	0f 90       	pop	r0
    2f2c:	0f be       	out	0x3f, r0	; 63
    2f2e:	08 95       	ret

00002f30 <vTaskInternalSetTimeOutState>:
    2f30:	20 91 d1 18 	lds	r18, 0x18D1	; 0x8018d1 <xNumOfOverflows>
    2f34:	fc 01       	movw	r30, r24
    2f36:	20 83       	st	Z, r18
    2f38:	40 91 d6 18 	lds	r20, 0x18D6	; 0x8018d6 <xTickCount>
    2f3c:	50 91 d7 18 	lds	r21, 0x18D7	; 0x8018d7 <xTickCount+0x1>
    2f40:	60 91 d8 18 	lds	r22, 0x18D8	; 0x8018d8 <xTickCount+0x2>
    2f44:	70 91 d9 18 	lds	r23, 0x18D9	; 0x8018d9 <xTickCount+0x3>
    2f48:	41 83       	std	Z+1, r20	; 0x01
    2f4a:	52 83       	std	Z+2, r21	; 0x02
    2f4c:	63 83       	std	Z+3, r22	; 0x03
    2f4e:	74 83       	std	Z+4, r23	; 0x04
    2f50:	08 95       	ret

00002f52 <xTaskCheckForTimeOut>:
    2f52:	cf 92       	push	r12
    2f54:	df 92       	push	r13
    2f56:	ef 92       	push	r14
    2f58:	ff 92       	push	r15
    2f5a:	0f 93       	push	r16
    2f5c:	1f 93       	push	r17
    2f5e:	cf 93       	push	r28
    2f60:	df 93       	push	r29
    2f62:	fb 01       	movw	r30, r22
    2f64:	0f b6       	in	r0, 0x3f	; 63
    2f66:	f8 94       	cli
    2f68:	0f 92       	push	r0
    2f6a:	40 91 d6 18 	lds	r20, 0x18D6	; 0x8018d6 <xTickCount>
    2f6e:	50 91 d7 18 	lds	r21, 0x18D7	; 0x8018d7 <xTickCount+0x1>
    2f72:	60 91 d8 18 	lds	r22, 0x18D8	; 0x8018d8 <xTickCount+0x2>
    2f76:	70 91 d9 18 	lds	r23, 0x18D9	; 0x8018d9 <xTickCount+0x3>
    2f7a:	00 81       	ld	r16, Z
    2f7c:	11 81       	ldd	r17, Z+1	; 0x01
    2f7e:	22 81       	ldd	r18, Z+2	; 0x02
    2f80:	33 81       	ldd	r19, Z+3	; 0x03
    2f82:	0f 3f       	cpi	r16, 0xFF	; 255
    2f84:	af ef       	ldi	r26, 0xFF	; 255
    2f86:	1a 07       	cpc	r17, r26
    2f88:	2a 07       	cpc	r18, r26
    2f8a:	3a 07       	cpc	r19, r26
    2f8c:	49 f1       	breq	.+82     	; 0x2fe0 <xTaskCheckForTimeOut+0x8e>
    2f8e:	ec 01       	movw	r28, r24
    2f90:	c9 80       	ldd	r12, Y+1	; 0x01
    2f92:	da 80       	ldd	r13, Y+2	; 0x02
    2f94:	eb 80       	ldd	r14, Y+3	; 0x03
    2f96:	fc 80       	ldd	r15, Y+4	; 0x04
    2f98:	a0 91 d1 18 	lds	r26, 0x18D1	; 0x8018d1 <xNumOfOverflows>
    2f9c:	b8 81       	ld	r27, Y
    2f9e:	ba 17       	cp	r27, r26
    2fa0:	29 f0       	breq	.+10     	; 0x2fac <xTaskCheckForTimeOut+0x5a>
    2fa2:	4c 15       	cp	r20, r12
    2fa4:	5d 05       	cpc	r21, r13
    2fa6:	6e 05       	cpc	r22, r14
    2fa8:	7f 05       	cpc	r23, r15
    2faa:	e0 f4       	brcc	.+56     	; 0x2fe4 <xTaskCheckForTimeOut+0x92>
    2fac:	4c 19       	sub	r20, r12
    2fae:	5d 09       	sbc	r21, r13
    2fb0:	6e 09       	sbc	r22, r14
    2fb2:	7f 09       	sbc	r23, r15
    2fb4:	40 17       	cp	r20, r16
    2fb6:	51 07       	cpc	r21, r17
    2fb8:	62 07       	cpc	r22, r18
    2fba:	73 07       	cpc	r23, r19
    2fbc:	58 f4       	brcc	.+22     	; 0x2fd4 <xTaskCheckForTimeOut+0x82>
    2fbe:	04 1b       	sub	r16, r20
    2fc0:	15 0b       	sbc	r17, r21
    2fc2:	26 0b       	sbc	r18, r22
    2fc4:	37 0b       	sbc	r19, r23
    2fc6:	00 83       	st	Z, r16
    2fc8:	11 83       	std	Z+1, r17	; 0x01
    2fca:	22 83       	std	Z+2, r18	; 0x02
    2fcc:	33 83       	std	Z+3, r19	; 0x03
    2fce:	b0 df       	rcall	.-160    	; 0x2f30 <vTaskInternalSetTimeOutState>
    2fd0:	80 e0       	ldi	r24, 0x00	; 0
    2fd2:	09 c0       	rjmp	.+18     	; 0x2fe6 <xTaskCheckForTimeOut+0x94>
    2fd4:	10 82       	st	Z, r1
    2fd6:	11 82       	std	Z+1, r1	; 0x01
    2fd8:	12 82       	std	Z+2, r1	; 0x02
    2fda:	13 82       	std	Z+3, r1	; 0x03
    2fdc:	81 e0       	ldi	r24, 0x01	; 1
    2fde:	03 c0       	rjmp	.+6      	; 0x2fe6 <xTaskCheckForTimeOut+0x94>
    2fe0:	80 e0       	ldi	r24, 0x00	; 0
    2fe2:	01 c0       	rjmp	.+2      	; 0x2fe6 <xTaskCheckForTimeOut+0x94>
    2fe4:	81 e0       	ldi	r24, 0x01	; 1
    2fe6:	0f 90       	pop	r0
    2fe8:	0f be       	out	0x3f, r0	; 63
    2fea:	df 91       	pop	r29
    2fec:	cf 91       	pop	r28
    2fee:	1f 91       	pop	r17
    2ff0:	0f 91       	pop	r16
    2ff2:	ff 90       	pop	r15
    2ff4:	ef 90       	pop	r14
    2ff6:	df 90       	pop	r13
    2ff8:	cf 90       	pop	r12
    2ffa:	08 95       	ret

00002ffc <vTaskMissedYield>:
    2ffc:	81 e0       	ldi	r24, 0x01	; 1
    2ffe:	80 93 d2 18 	sts	0x18D2, r24	; 0x8018d2 <xYieldPending>
    3002:	08 95       	ret

00003004 <xTaskGetCurrentTaskHandle>:
    3004:	80 91 43 19 	lds	r24, 0x1943	; 0x801943 <pxCurrentTCB>
    3008:	90 91 44 19 	lds	r25, 0x1944	; 0x801944 <pxCurrentTCB+0x1>
    300c:	08 95       	ret

0000300e <xTaskGetSchedulerState>:
    300e:	80 91 d4 18 	lds	r24, 0x18D4	; 0x8018d4 <xSchedulerRunning>
    3012:	88 23       	and	r24, r24
    3014:	31 f0       	breq	.+12     	; 0x3022 <xTaskGetSchedulerState+0x14>
    3016:	80 91 c9 18 	lds	r24, 0x18C9	; 0x8018c9 <uxSchedulerSuspended>
    301a:	88 23       	and	r24, r24
    301c:	21 f0       	breq	.+8      	; 0x3026 <xTaskGetSchedulerState+0x18>
    301e:	80 e0       	ldi	r24, 0x00	; 0
    3020:	08 95       	ret
    3022:	81 e0       	ldi	r24, 0x01	; 1
    3024:	08 95       	ret
    3026:	82 e0       	ldi	r24, 0x02	; 2
    3028:	08 95       	ret

0000302a <xTaskPriorityInherit>:
    302a:	0f 93       	push	r16
    302c:	1f 93       	push	r17
    302e:	cf 93       	push	r28
    3030:	df 93       	push	r29
    3032:	fc 01       	movw	r30, r24
    3034:	89 2b       	or	r24, r25
    3036:	09 f4       	brne	.+2      	; 0x303a <xTaskPriorityInherit+0x10>
    3038:	60 c0       	rjmp	.+192    	; 0x30fa <xTaskPriorityInherit+0xd0>
    303a:	82 8d       	ldd	r24, Z+26	; 0x1a
    303c:	a0 91 43 19 	lds	r26, 0x1943	; 0x801943 <pxCurrentTCB>
    3040:	b0 91 44 19 	lds	r27, 0x1944	; 0x801944 <pxCurrentTCB+0x1>
    3044:	5a 96       	adiw	r26, 0x1a	; 26
    3046:	9c 91       	ld	r25, X
    3048:	89 17       	cp	r24, r25
    304a:	08 f0       	brcs	.+2      	; 0x304e <xTaskPriorityInherit+0x24>
    304c:	4a c0       	rjmp	.+148    	; 0x30e2 <xTaskPriorityInherit+0xb8>
    304e:	46 85       	ldd	r20, Z+14	; 0x0e
    3050:	57 85       	ldd	r21, Z+15	; 0x0f
    3052:	60 89       	ldd	r22, Z+16	; 0x10
    3054:	71 89       	ldd	r23, Z+17	; 0x11
    3056:	77 23       	and	r23, r23
    3058:	94 f0       	brlt	.+36     	; 0x307e <xTaskPriorityInherit+0x54>
    305a:	a0 91 43 19 	lds	r26, 0x1943	; 0x801943 <pxCurrentTCB>
    305e:	b0 91 44 19 	lds	r27, 0x1944	; 0x801944 <pxCurrentTCB+0x1>
    3062:	5a 96       	adiw	r26, 0x1a	; 26
    3064:	9c 91       	ld	r25, X
    3066:	44 e0       	ldi	r20, 0x04	; 4
    3068:	50 e0       	ldi	r21, 0x00	; 0
    306a:	60 e0       	ldi	r22, 0x00	; 0
    306c:	70 e0       	ldi	r23, 0x00	; 0
    306e:	49 1b       	sub	r20, r25
    3070:	51 09       	sbc	r21, r1
    3072:	61 09       	sbc	r22, r1
    3074:	71 09       	sbc	r23, r1
    3076:	46 87       	std	Z+14, r20	; 0x0e
    3078:	57 87       	std	Z+15, r21	; 0x0f
    307a:	60 8b       	std	Z+16, r22	; 0x10
    307c:	71 8b       	std	Z+17, r23	; 0x11
    307e:	2b e0       	ldi	r18, 0x0B	; 11
    3080:	82 9f       	mul	r24, r18
    3082:	c0 01       	movw	r24, r0
    3084:	11 24       	eor	r1, r1
    3086:	89 5e       	subi	r24, 0xE9	; 233
    3088:	96 4e       	sbci	r25, 0xE6	; 230
    308a:	24 85       	ldd	r18, Z+12	; 0x0c
    308c:	35 85       	ldd	r19, Z+13	; 0x0d
    308e:	28 17       	cp	r18, r24
    3090:	39 07       	cpc	r19, r25
    3092:	f1 f4       	brne	.+60     	; 0x30d0 <xTaskPriorityInherit+0xa6>
    3094:	8f 01       	movw	r16, r30
    3096:	ef 01       	movw	r28, r30
    3098:	22 96       	adiw	r28, 0x02	; 2
    309a:	ce 01       	movw	r24, r28
    309c:	0e 94 82 0a 	call	0x1504	; 0x1504 <uxListRemove>
    30a0:	e0 91 43 19 	lds	r30, 0x1943	; 0x801943 <pxCurrentTCB>
    30a4:	f0 91 44 19 	lds	r31, 0x1944	; 0x801944 <pxCurrentTCB+0x1>
    30a8:	82 8d       	ldd	r24, Z+26	; 0x1a
    30aa:	f8 01       	movw	r30, r16
    30ac:	82 8f       	std	Z+26, r24	; 0x1a
    30ae:	90 91 d5 18 	lds	r25, 0x18D5	; 0x8018d5 <uxTopReadyPriority>
    30b2:	98 17       	cp	r25, r24
    30b4:	10 f4       	brcc	.+4      	; 0x30ba <xTaskPriorityInherit+0x90>
    30b6:	80 93 d5 18 	sts	0x18D5, r24	; 0x8018d5 <uxTopReadyPriority>
    30ba:	fb e0       	ldi	r31, 0x0B	; 11
    30bc:	8f 9f       	mul	r24, r31
    30be:	c0 01       	movw	r24, r0
    30c0:	11 24       	eor	r1, r1
    30c2:	be 01       	movw	r22, r28
    30c4:	89 5e       	subi	r24, 0xE9	; 233
    30c6:	96 4e       	sbci	r25, 0xE6	; 230
    30c8:	0e 94 24 0a 	call	0x1448	; 0x1448 <vListInsertEnd>
    30cc:	81 e0       	ldi	r24, 0x01	; 1
    30ce:	16 c0       	rjmp	.+44     	; 0x30fc <xTaskPriorityInherit+0xd2>
    30d0:	a0 91 43 19 	lds	r26, 0x1943	; 0x801943 <pxCurrentTCB>
    30d4:	b0 91 44 19 	lds	r27, 0x1944	; 0x801944 <pxCurrentTCB+0x1>
    30d8:	5a 96       	adiw	r26, 0x1a	; 26
    30da:	8c 91       	ld	r24, X
    30dc:	82 8f       	std	Z+26, r24	; 0x1a
    30de:	81 e0       	ldi	r24, 0x01	; 1
    30e0:	0d c0       	rjmp	.+26     	; 0x30fc <xTaskPriorityInherit+0xd2>
    30e2:	a0 91 43 19 	lds	r26, 0x1943	; 0x801943 <pxCurrentTCB>
    30e6:	b0 91 44 19 	lds	r27, 0x1944	; 0x801944 <pxCurrentTCB+0x1>
    30ea:	81 e0       	ldi	r24, 0x01	; 1
    30ec:	27 a1       	ldd	r18, Z+39	; 0x27
    30ee:	5a 96       	adiw	r26, 0x1a	; 26
    30f0:	9c 91       	ld	r25, X
    30f2:	29 17       	cp	r18, r25
    30f4:	18 f0       	brcs	.+6      	; 0x30fc <xTaskPriorityInherit+0xd2>
    30f6:	80 e0       	ldi	r24, 0x00	; 0
    30f8:	01 c0       	rjmp	.+2      	; 0x30fc <xTaskPriorityInherit+0xd2>
    30fa:	80 e0       	ldi	r24, 0x00	; 0
    30fc:	df 91       	pop	r29
    30fe:	cf 91       	pop	r28
    3100:	1f 91       	pop	r17
    3102:	0f 91       	pop	r16
    3104:	08 95       	ret

00003106 <xTaskPriorityDisinherit>:
    3106:	0f 93       	push	r16
    3108:	1f 93       	push	r17
    310a:	cf 93       	push	r28
    310c:	df 93       	push	r29
    310e:	fc 01       	movw	r30, r24
    3110:	89 2b       	or	r24, r25
    3112:	79 f1       	breq	.+94     	; 0x3172 <xTaskPriorityDisinherit+0x6c>
    3114:	80 a5       	ldd	r24, Z+40	; 0x28
    3116:	81 50       	subi	r24, 0x01	; 1
    3118:	80 a7       	std	Z+40, r24	; 0x28
    311a:	22 8d       	ldd	r18, Z+26	; 0x1a
    311c:	97 a1       	ldd	r25, Z+39	; 0x27
    311e:	29 17       	cp	r18, r25
    3120:	51 f1       	breq	.+84     	; 0x3176 <xTaskPriorityDisinherit+0x70>
    3122:	81 11       	cpse	r24, r1
    3124:	2a c0       	rjmp	.+84     	; 0x317a <xTaskPriorityDisinherit+0x74>
    3126:	ef 01       	movw	r28, r30
    3128:	8f 01       	movw	r16, r30
    312a:	0e 5f       	subi	r16, 0xFE	; 254
    312c:	1f 4f       	sbci	r17, 0xFF	; 255
    312e:	c8 01       	movw	r24, r16
    3130:	0e 94 82 0a 	call	0x1504	; 0x1504 <uxListRemove>
    3134:	8f a1       	ldd	r24, Y+39	; 0x27
    3136:	8a 8f       	std	Y+26, r24	; 0x1a
    3138:	44 e0       	ldi	r20, 0x04	; 4
    313a:	50 e0       	ldi	r21, 0x00	; 0
    313c:	60 e0       	ldi	r22, 0x00	; 0
    313e:	70 e0       	ldi	r23, 0x00	; 0
    3140:	48 1b       	sub	r20, r24
    3142:	51 09       	sbc	r21, r1
    3144:	61 09       	sbc	r22, r1
    3146:	71 09       	sbc	r23, r1
    3148:	4e 87       	std	Y+14, r20	; 0x0e
    314a:	5f 87       	std	Y+15, r21	; 0x0f
    314c:	68 8b       	std	Y+16, r22	; 0x10
    314e:	79 8b       	std	Y+17, r23	; 0x11
    3150:	90 91 d5 18 	lds	r25, 0x18D5	; 0x8018d5 <uxTopReadyPriority>
    3154:	98 17       	cp	r25, r24
    3156:	10 f4       	brcc	.+4      	; 0x315c <xTaskPriorityDisinherit+0x56>
    3158:	80 93 d5 18 	sts	0x18D5, r24	; 0x8018d5 <uxTopReadyPriority>
    315c:	2b e0       	ldi	r18, 0x0B	; 11
    315e:	82 9f       	mul	r24, r18
    3160:	c0 01       	movw	r24, r0
    3162:	11 24       	eor	r1, r1
    3164:	b8 01       	movw	r22, r16
    3166:	89 5e       	subi	r24, 0xE9	; 233
    3168:	96 4e       	sbci	r25, 0xE6	; 230
    316a:	0e 94 24 0a 	call	0x1448	; 0x1448 <vListInsertEnd>
    316e:	81 e0       	ldi	r24, 0x01	; 1
    3170:	05 c0       	rjmp	.+10     	; 0x317c <xTaskPriorityDisinherit+0x76>
    3172:	80 e0       	ldi	r24, 0x00	; 0
    3174:	03 c0       	rjmp	.+6      	; 0x317c <xTaskPriorityDisinherit+0x76>
    3176:	80 e0       	ldi	r24, 0x00	; 0
    3178:	01 c0       	rjmp	.+2      	; 0x317c <xTaskPriorityDisinherit+0x76>
    317a:	80 e0       	ldi	r24, 0x00	; 0
    317c:	df 91       	pop	r29
    317e:	cf 91       	pop	r28
    3180:	1f 91       	pop	r17
    3182:	0f 91       	pop	r16
    3184:	08 95       	ret

00003186 <vTaskPriorityDisinheritAfterTimeout>:
    3186:	0f 93       	push	r16
    3188:	1f 93       	push	r17
    318a:	cf 93       	push	r28
    318c:	df 93       	push	r29
    318e:	fc 01       	movw	r30, r24
    3190:	89 2b       	or	r24, r25
    3192:	09 f4       	brne	.+2      	; 0x3196 <vTaskPriorityDisinheritAfterTimeout+0x10>
    3194:	3f c0       	rjmp	.+126    	; 0x3214 <vTaskPriorityDisinheritAfterTimeout+0x8e>
    3196:	87 a1       	ldd	r24, Z+39	; 0x27
    3198:	86 17       	cp	r24, r22
    319a:	08 f4       	brcc	.+2      	; 0x319e <vTaskPriorityDisinheritAfterTimeout+0x18>
    319c:	86 2f       	mov	r24, r22
    319e:	92 8d       	ldd	r25, Z+26	; 0x1a
    31a0:	98 17       	cp	r25, r24
    31a2:	c1 f1       	breq	.+112    	; 0x3214 <vTaskPriorityDisinheritAfterTimeout+0x8e>
    31a4:	20 a5       	ldd	r18, Z+40	; 0x28
    31a6:	21 30       	cpi	r18, 0x01	; 1
    31a8:	a9 f5       	brne	.+106    	; 0x3214 <vTaskPriorityDisinheritAfterTimeout+0x8e>
    31aa:	82 8f       	std	Z+26, r24	; 0x1a
    31ac:	46 85       	ldd	r20, Z+14	; 0x0e
    31ae:	57 85       	ldd	r21, Z+15	; 0x0f
    31b0:	60 89       	ldd	r22, Z+16	; 0x10
    31b2:	71 89       	ldd	r23, Z+17	; 0x11
    31b4:	77 23       	and	r23, r23
    31b6:	64 f0       	brlt	.+24     	; 0x31d0 <vTaskPriorityDisinheritAfterTimeout+0x4a>
    31b8:	44 e0       	ldi	r20, 0x04	; 4
    31ba:	50 e0       	ldi	r21, 0x00	; 0
    31bc:	60 e0       	ldi	r22, 0x00	; 0
    31be:	70 e0       	ldi	r23, 0x00	; 0
    31c0:	48 1b       	sub	r20, r24
    31c2:	51 09       	sbc	r21, r1
    31c4:	61 09       	sbc	r22, r1
    31c6:	71 09       	sbc	r23, r1
    31c8:	46 87       	std	Z+14, r20	; 0x0e
    31ca:	57 87       	std	Z+15, r21	; 0x0f
    31cc:	60 8b       	std	Z+16, r22	; 0x10
    31ce:	71 8b       	std	Z+17, r23	; 0x11
    31d0:	2b e0       	ldi	r18, 0x0B	; 11
    31d2:	92 9f       	mul	r25, r18
    31d4:	c0 01       	movw	r24, r0
    31d6:	11 24       	eor	r1, r1
    31d8:	89 5e       	subi	r24, 0xE9	; 233
    31da:	96 4e       	sbci	r25, 0xE6	; 230
    31dc:	24 85       	ldd	r18, Z+12	; 0x0c
    31de:	35 85       	ldd	r19, Z+13	; 0x0d
    31e0:	28 17       	cp	r18, r24
    31e2:	39 07       	cpc	r19, r25
    31e4:	b9 f4       	brne	.+46     	; 0x3214 <vTaskPriorityDisinheritAfterTimeout+0x8e>
    31e6:	ef 01       	movw	r28, r30
    31e8:	8f 01       	movw	r16, r30
    31ea:	0e 5f       	subi	r16, 0xFE	; 254
    31ec:	1f 4f       	sbci	r17, 0xFF	; 255
    31ee:	c8 01       	movw	r24, r16
    31f0:	0e 94 82 0a 	call	0x1504	; 0x1504 <uxListRemove>
    31f4:	8a 8d       	ldd	r24, Y+26	; 0x1a
    31f6:	90 91 d5 18 	lds	r25, 0x18D5	; 0x8018d5 <uxTopReadyPriority>
    31fa:	98 17       	cp	r25, r24
    31fc:	10 f4       	brcc	.+4      	; 0x3202 <vTaskPriorityDisinheritAfterTimeout+0x7c>
    31fe:	80 93 d5 18 	sts	0x18D5, r24	; 0x8018d5 <uxTopReadyPriority>
    3202:	2b e0       	ldi	r18, 0x0B	; 11
    3204:	82 9f       	mul	r24, r18
    3206:	c0 01       	movw	r24, r0
    3208:	11 24       	eor	r1, r1
    320a:	b8 01       	movw	r22, r16
    320c:	89 5e       	subi	r24, 0xE9	; 233
    320e:	96 4e       	sbci	r25, 0xE6	; 230
    3210:	0e 94 24 0a 	call	0x1448	; 0x1448 <vListInsertEnd>
    3214:	df 91       	pop	r29
    3216:	cf 91       	pop	r28
    3218:	1f 91       	pop	r17
    321a:	0f 91       	pop	r16
    321c:	08 95       	ret

0000321e <uxTaskResetEventItemValue>:
    321e:	cf 92       	push	r12
    3220:	df 92       	push	r13
    3222:	ef 92       	push	r14
    3224:	ff 92       	push	r15
    3226:	e0 91 43 19 	lds	r30, 0x1943	; 0x801943 <pxCurrentTCB>
    322a:	f0 91 44 19 	lds	r31, 0x1944	; 0x801944 <pxCurrentTCB+0x1>
    322e:	66 85       	ldd	r22, Z+14	; 0x0e
    3230:	77 85       	ldd	r23, Z+15	; 0x0f
    3232:	80 89       	ldd	r24, Z+16	; 0x10
    3234:	91 89       	ldd	r25, Z+17	; 0x11
    3236:	e0 91 43 19 	lds	r30, 0x1943	; 0x801943 <pxCurrentTCB>
    323a:	f0 91 44 19 	lds	r31, 0x1944	; 0x801944 <pxCurrentTCB+0x1>
    323e:	a0 91 43 19 	lds	r26, 0x1943	; 0x801943 <pxCurrentTCB>
    3242:	b0 91 44 19 	lds	r27, 0x1944	; 0x801944 <pxCurrentTCB+0x1>
    3246:	5a 96       	adiw	r26, 0x1a	; 26
    3248:	2c 91       	ld	r18, X
    324a:	c1 2c       	mov	r12, r1
    324c:	d1 2c       	mov	r13, r1
    324e:	76 01       	movw	r14, r12
    3250:	68 94       	set
    3252:	c2 f8       	bld	r12, 2
    3254:	c2 1a       	sub	r12, r18
    3256:	d1 08       	sbc	r13, r1
    3258:	e1 08       	sbc	r14, r1
    325a:	f1 08       	sbc	r15, r1
    325c:	c6 86       	std	Z+14, r12	; 0x0e
    325e:	d7 86       	std	Z+15, r13	; 0x0f
    3260:	e0 8a       	std	Z+16, r14	; 0x10
    3262:	f1 8a       	std	Z+17, r15	; 0x11
    3264:	ff 90       	pop	r15
    3266:	ef 90       	pop	r14
    3268:	df 90       	pop	r13
    326a:	cf 90       	pop	r12
    326c:	08 95       	ret

0000326e <pvTaskIncrementMutexHeldCount>:
    326e:	80 91 43 19 	lds	r24, 0x1943	; 0x801943 <pxCurrentTCB>
    3272:	90 91 44 19 	lds	r25, 0x1944	; 0x801944 <pxCurrentTCB+0x1>
    3276:	89 2b       	or	r24, r25
    3278:	39 f0       	breq	.+14     	; 0x3288 <pvTaskIncrementMutexHeldCount+0x1a>
    327a:	e0 91 43 19 	lds	r30, 0x1943	; 0x801943 <pxCurrentTCB>
    327e:	f0 91 44 19 	lds	r31, 0x1944	; 0x801944 <pxCurrentTCB+0x1>
    3282:	80 a5       	ldd	r24, Z+40	; 0x28
    3284:	8f 5f       	subi	r24, 0xFF	; 255
    3286:	80 a7       	std	Z+40, r24	; 0x28
    3288:	80 91 43 19 	lds	r24, 0x1943	; 0x801943 <pxCurrentTCB>
    328c:	90 91 44 19 	lds	r25, 0x1944	; 0x801944 <pxCurrentTCB+0x1>
    3290:	08 95       	ret

00003292 <xTaskNotifyWait>:
    3292:	4f 92       	push	r4
    3294:	5f 92       	push	r5
    3296:	6f 92       	push	r6
    3298:	7f 92       	push	r7
    329a:	8f 92       	push	r8
    329c:	9f 92       	push	r9
    329e:	af 92       	push	r10
    32a0:	bf 92       	push	r11
    32a2:	cf 92       	push	r12
    32a4:	df 92       	push	r13
    32a6:	ef 92       	push	r14
    32a8:	ff 92       	push	r15
    32aa:	0f 93       	push	r16
    32ac:	1f 93       	push	r17
    32ae:	49 01       	movw	r8, r18
    32b0:	5a 01       	movw	r10, r20
    32b2:	0f b6       	in	r0, 0x3f	; 63
    32b4:	f8 94       	cli
    32b6:	0f 92       	push	r0
    32b8:	e0 91 43 19 	lds	r30, 0x1943	; 0x801943 <pxCurrentTCB>
    32bc:	f0 91 44 19 	lds	r31, 0x1944	; 0x801944 <pxCurrentTCB+0x1>
    32c0:	27 a5       	ldd	r18, Z+47	; 0x2f
    32c2:	22 30       	cpi	r18, 0x02	; 2
    32c4:	39 f1       	breq	.+78     	; 0x3314 <xTaskNotifyWait+0x82>
    32c6:	e0 91 43 19 	lds	r30, 0x1943	; 0x801943 <pxCurrentTCB>
    32ca:	f0 91 44 19 	lds	r31, 0x1944	; 0x801944 <pxCurrentTCB+0x1>
    32ce:	43 a4       	ldd	r4, Z+43	; 0x2b
    32d0:	54 a4       	ldd	r5, Z+44	; 0x2c
    32d2:	65 a4       	ldd	r6, Z+45	; 0x2d
    32d4:	76 a4       	ldd	r7, Z+46	; 0x2e
    32d6:	dc 01       	movw	r26, r24
    32d8:	cb 01       	movw	r24, r22
    32da:	80 95       	com	r24
    32dc:	90 95       	com	r25
    32de:	a0 95       	com	r26
    32e0:	b0 95       	com	r27
    32e2:	84 21       	and	r24, r4
    32e4:	95 21       	and	r25, r5
    32e6:	a6 21       	and	r26, r6
    32e8:	b7 21       	and	r27, r7
    32ea:	83 a7       	std	Z+43, r24	; 0x2b
    32ec:	94 a7       	std	Z+44, r25	; 0x2c
    32ee:	a5 a7       	std	Z+45, r26	; 0x2d
    32f0:	b6 a7       	std	Z+46, r27	; 0x2e
    32f2:	e0 91 43 19 	lds	r30, 0x1943	; 0x801943 <pxCurrentTCB>
    32f6:	f0 91 44 19 	lds	r31, 0x1944	; 0x801944 <pxCurrentTCB+0x1>
    32fa:	81 e0       	ldi	r24, 0x01	; 1
    32fc:	87 a7       	std	Z+47, r24	; 0x2f
    32fe:	c1 14       	cp	r12, r1
    3300:	d1 04       	cpc	r13, r1
    3302:	e1 04       	cpc	r14, r1
    3304:	f1 04       	cpc	r15, r1
    3306:	31 f0       	breq	.+12     	; 0x3314 <xTaskNotifyWait+0x82>
    3308:	41 e0       	ldi	r20, 0x01	; 1
    330a:	c7 01       	movw	r24, r14
    330c:	b6 01       	movw	r22, r12
    330e:	5a d9       	rcall	.-3404   	; 0x25c4 <prvAddCurrentTaskToDelayedList>
    3310:	0e 94 57 0b 	call	0x16ae	; 0x16ae <vPortYield>
    3314:	0f 90       	pop	r0
    3316:	0f be       	out	0x3f, r0	; 63
    3318:	0f b6       	in	r0, 0x3f	; 63
    331a:	f8 94       	cli
    331c:	0f 92       	push	r0
    331e:	01 15       	cp	r16, r1
    3320:	11 05       	cpc	r17, r1
    3322:	69 f0       	breq	.+26     	; 0x333e <xTaskNotifyWait+0xac>
    3324:	e0 91 43 19 	lds	r30, 0x1943	; 0x801943 <pxCurrentTCB>
    3328:	f0 91 44 19 	lds	r31, 0x1944	; 0x801944 <pxCurrentTCB+0x1>
    332c:	83 a5       	ldd	r24, Z+43	; 0x2b
    332e:	94 a5       	ldd	r25, Z+44	; 0x2c
    3330:	a5 a5       	ldd	r26, Z+45	; 0x2d
    3332:	b6 a5       	ldd	r27, Z+46	; 0x2e
    3334:	f8 01       	movw	r30, r16
    3336:	80 83       	st	Z, r24
    3338:	91 83       	std	Z+1, r25	; 0x01
    333a:	a2 83       	std	Z+2, r26	; 0x02
    333c:	b3 83       	std	Z+3, r27	; 0x03
    333e:	e0 91 43 19 	lds	r30, 0x1943	; 0x801943 <pxCurrentTCB>
    3342:	f0 91 44 19 	lds	r31, 0x1944	; 0x801944 <pxCurrentTCB+0x1>
    3346:	87 a5       	ldd	r24, Z+47	; 0x2f
    3348:	82 30       	cpi	r24, 0x02	; 2
    334a:	b1 f4       	brne	.+44     	; 0x3378 <xTaskNotifyWait+0xe6>
    334c:	e0 91 43 19 	lds	r30, 0x1943	; 0x801943 <pxCurrentTCB>
    3350:	f0 91 44 19 	lds	r31, 0x1944	; 0x801944 <pxCurrentTCB+0x1>
    3354:	83 a5       	ldd	r24, Z+43	; 0x2b
    3356:	94 a5       	ldd	r25, Z+44	; 0x2c
    3358:	a5 a5       	ldd	r26, Z+45	; 0x2d
    335a:	b6 a5       	ldd	r27, Z+46	; 0x2e
    335c:	80 94       	com	r8
    335e:	90 94       	com	r9
    3360:	a0 94       	com	r10
    3362:	b0 94       	com	r11
    3364:	88 22       	and	r8, r24
    3366:	99 22       	and	r9, r25
    3368:	aa 22       	and	r10, r26
    336a:	bb 22       	and	r11, r27
    336c:	83 a6       	std	Z+43, r8	; 0x2b
    336e:	94 a6       	std	Z+44, r9	; 0x2c
    3370:	a5 a6       	std	Z+45, r10	; 0x2d
    3372:	b6 a6       	std	Z+46, r11	; 0x2e
    3374:	81 e0       	ldi	r24, 0x01	; 1
    3376:	01 c0       	rjmp	.+2      	; 0x337a <xTaskNotifyWait+0xe8>
    3378:	80 e0       	ldi	r24, 0x00	; 0
    337a:	e0 91 43 19 	lds	r30, 0x1943	; 0x801943 <pxCurrentTCB>
    337e:	f0 91 44 19 	lds	r31, 0x1944	; 0x801944 <pxCurrentTCB+0x1>
    3382:	17 a6       	std	Z+47, r1	; 0x2f
    3384:	0f 90       	pop	r0
    3386:	0f be       	out	0x3f, r0	; 63
    3388:	1f 91       	pop	r17
    338a:	0f 91       	pop	r16
    338c:	ff 90       	pop	r15
    338e:	ef 90       	pop	r14
    3390:	df 90       	pop	r13
    3392:	cf 90       	pop	r12
    3394:	bf 90       	pop	r11
    3396:	af 90       	pop	r10
    3398:	9f 90       	pop	r9
    339a:	8f 90       	pop	r8
    339c:	7f 90       	pop	r7
    339e:	6f 90       	pop	r6
    33a0:	5f 90       	pop	r5
    33a2:	4f 90       	pop	r4
    33a4:	08 95       	ret

000033a6 <xTaskGenericNotify>:
    33a6:	0f 93       	push	r16
    33a8:	1f 93       	push	r17
    33aa:	cf 93       	push	r28
    33ac:	df 93       	push	r29
    33ae:	fc 01       	movw	r30, r24
    33b0:	0f b6       	in	r0, 0x3f	; 63
    33b2:	f8 94       	cli
    33b4:	0f 92       	push	r0
    33b6:	01 15       	cp	r16, r1
    33b8:	11 05       	cpc	r17, r1
    33ba:	49 f0       	breq	.+18     	; 0x33ce <xTaskGenericNotify+0x28>
    33bc:	83 a5       	ldd	r24, Z+43	; 0x2b
    33be:	94 a5       	ldd	r25, Z+44	; 0x2c
    33c0:	a5 a5       	ldd	r26, Z+45	; 0x2d
    33c2:	b6 a5       	ldd	r27, Z+46	; 0x2e
    33c4:	e8 01       	movw	r28, r16
    33c6:	88 83       	st	Y, r24
    33c8:	99 83       	std	Y+1, r25	; 0x01
    33ca:	aa 83       	std	Y+2, r26	; 0x02
    33cc:	bb 83       	std	Y+3, r27	; 0x03
    33ce:	87 a5       	ldd	r24, Z+47	; 0x2f
    33d0:	92 e0       	ldi	r25, 0x02	; 2
    33d2:	97 a7       	std	Z+47, r25	; 0x2f
    33d4:	22 30       	cpi	r18, 0x02	; 2
    33d6:	b1 f0       	breq	.+44     	; 0x3404 <xTaskGenericNotify+0x5e>
    33d8:	18 f4       	brcc	.+6      	; 0x33e0 <xTaskGenericNotify+0x3a>
    33da:	21 30       	cpi	r18, 0x01	; 1
    33dc:	31 f0       	breq	.+12     	; 0x33ea <xTaskGenericNotify+0x44>
    33de:	2a c0       	rjmp	.+84     	; 0x3434 <xTaskGenericNotify+0x8e>
    33e0:	23 30       	cpi	r18, 0x03	; 3
    33e2:	e9 f0       	breq	.+58     	; 0x341e <xTaskGenericNotify+0x78>
    33e4:	24 30       	cpi	r18, 0x04	; 4
    33e6:	01 f1       	breq	.+64     	; 0x3428 <xTaskGenericNotify+0x82>
    33e8:	25 c0       	rjmp	.+74     	; 0x3434 <xTaskGenericNotify+0x8e>
    33ea:	03 a5       	ldd	r16, Z+43	; 0x2b
    33ec:	14 a5       	ldd	r17, Z+44	; 0x2c
    33ee:	25 a5       	ldd	r18, Z+45	; 0x2d
    33f0:	36 a5       	ldd	r19, Z+46	; 0x2e
    33f2:	40 2b       	or	r20, r16
    33f4:	51 2b       	or	r21, r17
    33f6:	62 2b       	or	r22, r18
    33f8:	73 2b       	or	r23, r19
    33fa:	43 a7       	std	Z+43, r20	; 0x2b
    33fc:	54 a7       	std	Z+44, r21	; 0x2c
    33fe:	65 a7       	std	Z+45, r22	; 0x2d
    3400:	76 a7       	std	Z+46, r23	; 0x2e
    3402:	18 c0       	rjmp	.+48     	; 0x3434 <xTaskGenericNotify+0x8e>
    3404:	43 a5       	ldd	r20, Z+43	; 0x2b
    3406:	54 a5       	ldd	r21, Z+44	; 0x2c
    3408:	65 a5       	ldd	r22, Z+45	; 0x2d
    340a:	76 a5       	ldd	r23, Z+46	; 0x2e
    340c:	4f 5f       	subi	r20, 0xFF	; 255
    340e:	5f 4f       	sbci	r21, 0xFF	; 255
    3410:	6f 4f       	sbci	r22, 0xFF	; 255
    3412:	7f 4f       	sbci	r23, 0xFF	; 255
    3414:	43 a7       	std	Z+43, r20	; 0x2b
    3416:	54 a7       	std	Z+44, r21	; 0x2c
    3418:	65 a7       	std	Z+45, r22	; 0x2d
    341a:	76 a7       	std	Z+46, r23	; 0x2e
    341c:	0b c0       	rjmp	.+22     	; 0x3434 <xTaskGenericNotify+0x8e>
    341e:	43 a7       	std	Z+43, r20	; 0x2b
    3420:	54 a7       	std	Z+44, r21	; 0x2c
    3422:	65 a7       	std	Z+45, r22	; 0x2d
    3424:	76 a7       	std	Z+46, r23	; 0x2e
    3426:	06 c0       	rjmp	.+12     	; 0x3434 <xTaskGenericNotify+0x8e>
    3428:	82 30       	cpi	r24, 0x02	; 2
    342a:	49 f1       	breq	.+82     	; 0x347e <xTaskGenericNotify+0xd8>
    342c:	43 a7       	std	Z+43, r20	; 0x2b
    342e:	54 a7       	std	Z+44, r21	; 0x2c
    3430:	65 a7       	std	Z+45, r22	; 0x2d
    3432:	76 a7       	std	Z+46, r23	; 0x2e
    3434:	81 30       	cpi	r24, 0x01	; 1
    3436:	29 f5       	brne	.+74     	; 0x3482 <xTaskGenericNotify+0xdc>
    3438:	ef 01       	movw	r28, r30
    343a:	8f 01       	movw	r16, r30
    343c:	0e 5f       	subi	r16, 0xFE	; 254
    343e:	1f 4f       	sbci	r17, 0xFF	; 255
    3440:	c8 01       	movw	r24, r16
    3442:	0e 94 82 0a 	call	0x1504	; 0x1504 <uxListRemove>
    3446:	8a 8d       	ldd	r24, Y+26	; 0x1a
    3448:	90 91 d5 18 	lds	r25, 0x18D5	; 0x8018d5 <uxTopReadyPriority>
    344c:	98 17       	cp	r25, r24
    344e:	10 f4       	brcc	.+4      	; 0x3454 <xTaskGenericNotify+0xae>
    3450:	80 93 d5 18 	sts	0x18D5, r24	; 0x8018d5 <uxTopReadyPriority>
    3454:	2b e0       	ldi	r18, 0x0B	; 11
    3456:	82 9f       	mul	r24, r18
    3458:	c0 01       	movw	r24, r0
    345a:	11 24       	eor	r1, r1
    345c:	b8 01       	movw	r22, r16
    345e:	89 5e       	subi	r24, 0xE9	; 233
    3460:	96 4e       	sbci	r25, 0xE6	; 230
    3462:	0e 94 24 0a 	call	0x1448	; 0x1448 <vListInsertEnd>
    3466:	e0 91 43 19 	lds	r30, 0x1943	; 0x801943 <pxCurrentTCB>
    346a:	f0 91 44 19 	lds	r31, 0x1944	; 0x801944 <pxCurrentTCB+0x1>
    346e:	9a 8d       	ldd	r25, Y+26	; 0x1a
    3470:	82 8d       	ldd	r24, Z+26	; 0x1a
    3472:	89 17       	cp	r24, r25
    3474:	40 f4       	brcc	.+16     	; 0x3486 <xTaskGenericNotify+0xe0>
    3476:	0e 94 57 0b 	call	0x16ae	; 0x16ae <vPortYield>
    347a:	81 e0       	ldi	r24, 0x01	; 1
    347c:	05 c0       	rjmp	.+10     	; 0x3488 <xTaskGenericNotify+0xe2>
    347e:	80 e0       	ldi	r24, 0x00	; 0
    3480:	03 c0       	rjmp	.+6      	; 0x3488 <xTaskGenericNotify+0xe2>
    3482:	81 e0       	ldi	r24, 0x01	; 1
    3484:	01 c0       	rjmp	.+2      	; 0x3488 <xTaskGenericNotify+0xe2>
    3486:	81 e0       	ldi	r24, 0x01	; 1
    3488:	0f 90       	pop	r0
    348a:	0f be       	out	0x3f, r0	; 63
    348c:	df 91       	pop	r29
    348e:	cf 91       	pop	r28
    3490:	1f 91       	pop	r17
    3492:	0f 91       	pop	r16
    3494:	08 95       	ret

00003496 <xTaskGenericNotifyFromISR>:
    3496:	ef 92       	push	r14
    3498:	ff 92       	push	r15
    349a:	0f 93       	push	r16
    349c:	1f 93       	push	r17
    349e:	cf 93       	push	r28
    34a0:	df 93       	push	r29
    34a2:	fc 01       	movw	r30, r24
    34a4:	01 15       	cp	r16, r1
    34a6:	11 05       	cpc	r17, r1
    34a8:	49 f0       	breq	.+18     	; 0x34bc <xTaskGenericNotifyFromISR+0x26>
    34aa:	83 a5       	ldd	r24, Z+43	; 0x2b
    34ac:	94 a5       	ldd	r25, Z+44	; 0x2c
    34ae:	a5 a5       	ldd	r26, Z+45	; 0x2d
    34b0:	b6 a5       	ldd	r27, Z+46	; 0x2e
    34b2:	e8 01       	movw	r28, r16
    34b4:	88 83       	st	Y, r24
    34b6:	99 83       	std	Y+1, r25	; 0x01
    34b8:	aa 83       	std	Y+2, r26	; 0x02
    34ba:	bb 83       	std	Y+3, r27	; 0x03
    34bc:	87 a5       	ldd	r24, Z+47	; 0x2f
    34be:	92 e0       	ldi	r25, 0x02	; 2
    34c0:	97 a7       	std	Z+47, r25	; 0x2f
    34c2:	22 30       	cpi	r18, 0x02	; 2
    34c4:	b1 f0       	breq	.+44     	; 0x34f2 <xTaskGenericNotifyFromISR+0x5c>
    34c6:	18 f4       	brcc	.+6      	; 0x34ce <xTaskGenericNotifyFromISR+0x38>
    34c8:	21 30       	cpi	r18, 0x01	; 1
    34ca:	31 f0       	breq	.+12     	; 0x34d8 <xTaskGenericNotifyFromISR+0x42>
    34cc:	2a c0       	rjmp	.+84     	; 0x3522 <xTaskGenericNotifyFromISR+0x8c>
    34ce:	23 30       	cpi	r18, 0x03	; 3
    34d0:	e9 f0       	breq	.+58     	; 0x350c <xTaskGenericNotifyFromISR+0x76>
    34d2:	24 30       	cpi	r18, 0x04	; 4
    34d4:	01 f1       	breq	.+64     	; 0x3516 <xTaskGenericNotifyFromISR+0x80>
    34d6:	25 c0       	rjmp	.+74     	; 0x3522 <xTaskGenericNotifyFromISR+0x8c>
    34d8:	03 a5       	ldd	r16, Z+43	; 0x2b
    34da:	14 a5       	ldd	r17, Z+44	; 0x2c
    34dc:	25 a5       	ldd	r18, Z+45	; 0x2d
    34de:	36 a5       	ldd	r19, Z+46	; 0x2e
    34e0:	40 2b       	or	r20, r16
    34e2:	51 2b       	or	r21, r17
    34e4:	62 2b       	or	r22, r18
    34e6:	73 2b       	or	r23, r19
    34e8:	43 a7       	std	Z+43, r20	; 0x2b
    34ea:	54 a7       	std	Z+44, r21	; 0x2c
    34ec:	65 a7       	std	Z+45, r22	; 0x2d
    34ee:	76 a7       	std	Z+46, r23	; 0x2e
    34f0:	18 c0       	rjmp	.+48     	; 0x3522 <xTaskGenericNotifyFromISR+0x8c>
    34f2:	43 a5       	ldd	r20, Z+43	; 0x2b
    34f4:	54 a5       	ldd	r21, Z+44	; 0x2c
    34f6:	65 a5       	ldd	r22, Z+45	; 0x2d
    34f8:	76 a5       	ldd	r23, Z+46	; 0x2e
    34fa:	4f 5f       	subi	r20, 0xFF	; 255
    34fc:	5f 4f       	sbci	r21, 0xFF	; 255
    34fe:	6f 4f       	sbci	r22, 0xFF	; 255
    3500:	7f 4f       	sbci	r23, 0xFF	; 255
    3502:	43 a7       	std	Z+43, r20	; 0x2b
    3504:	54 a7       	std	Z+44, r21	; 0x2c
    3506:	65 a7       	std	Z+45, r22	; 0x2d
    3508:	76 a7       	std	Z+46, r23	; 0x2e
    350a:	0b c0       	rjmp	.+22     	; 0x3522 <xTaskGenericNotifyFromISR+0x8c>
    350c:	43 a7       	std	Z+43, r20	; 0x2b
    350e:	54 a7       	std	Z+44, r21	; 0x2c
    3510:	65 a7       	std	Z+45, r22	; 0x2d
    3512:	76 a7       	std	Z+46, r23	; 0x2e
    3514:	06 c0       	rjmp	.+12     	; 0x3522 <xTaskGenericNotifyFromISR+0x8c>
    3516:	82 30       	cpi	r24, 0x02	; 2
    3518:	d9 f1       	breq	.+118    	; 0x3590 <xTaskGenericNotifyFromISR+0xfa>
    351a:	43 a7       	std	Z+43, r20	; 0x2b
    351c:	54 a7       	std	Z+44, r21	; 0x2c
    351e:	65 a7       	std	Z+45, r22	; 0x2d
    3520:	76 a7       	std	Z+46, r23	; 0x2e
    3522:	81 30       	cpi	r24, 0x01	; 1
    3524:	b9 f5       	brne	.+110    	; 0x3594 <xTaskGenericNotifyFromISR+0xfe>
    3526:	ef 01       	movw	r28, r30
    3528:	80 91 c9 18 	lds	r24, 0x18C9	; 0x8018c9 <uxSchedulerSuspended>
    352c:	81 11       	cpse	r24, r1
    352e:	17 c0       	rjmp	.+46     	; 0x355e <xTaskGenericNotifyFromISR+0xc8>
    3530:	8f 01       	movw	r16, r30
    3532:	0e 5f       	subi	r16, 0xFE	; 254
    3534:	1f 4f       	sbci	r17, 0xFF	; 255
    3536:	c8 01       	movw	r24, r16
    3538:	0e 94 82 0a 	call	0x1504	; 0x1504 <uxListRemove>
    353c:	8a 8d       	ldd	r24, Y+26	; 0x1a
    353e:	90 91 d5 18 	lds	r25, 0x18D5	; 0x8018d5 <uxTopReadyPriority>
    3542:	98 17       	cp	r25, r24
    3544:	10 f4       	brcc	.+4      	; 0x354a <xTaskGenericNotifyFromISR+0xb4>
    3546:	80 93 d5 18 	sts	0x18D5, r24	; 0x8018d5 <uxTopReadyPriority>
    354a:	eb e0       	ldi	r30, 0x0B	; 11
    354c:	8e 9f       	mul	r24, r30
    354e:	c0 01       	movw	r24, r0
    3550:	11 24       	eor	r1, r1
    3552:	b8 01       	movw	r22, r16
    3554:	89 5e       	subi	r24, 0xE9	; 233
    3556:	96 4e       	sbci	r25, 0xE6	; 230
    3558:	0e 94 24 0a 	call	0x1448	; 0x1448 <vListInsertEnd>
    355c:	07 c0       	rjmp	.+14     	; 0x356c <xTaskGenericNotifyFromISR+0xd6>
    355e:	bf 01       	movw	r22, r30
    3560:	62 5f       	subi	r22, 0xF2	; 242
    3562:	7f 4f       	sbci	r23, 0xFF	; 255
    3564:	82 ef       	ldi	r24, 0xF2	; 242
    3566:	98 e1       	ldi	r25, 0x18	; 24
    3568:	0e 94 24 0a 	call	0x1448	; 0x1448 <vListInsertEnd>
    356c:	e0 91 43 19 	lds	r30, 0x1943	; 0x801943 <pxCurrentTCB>
    3570:	f0 91 44 19 	lds	r31, 0x1944	; 0x801944 <pxCurrentTCB+0x1>
    3574:	9a 8d       	ldd	r25, Y+26	; 0x1a
    3576:	82 8d       	ldd	r24, Z+26	; 0x1a
    3578:	89 17       	cp	r24, r25
    357a:	70 f4       	brcc	.+28     	; 0x3598 <xTaskGenericNotifyFromISR+0x102>
    357c:	e1 14       	cp	r14, r1
    357e:	f1 04       	cpc	r15, r1
    3580:	19 f0       	breq	.+6      	; 0x3588 <xTaskGenericNotifyFromISR+0xf2>
    3582:	81 e0       	ldi	r24, 0x01	; 1
    3584:	e7 01       	movw	r28, r14
    3586:	88 83       	st	Y, r24
    3588:	81 e0       	ldi	r24, 0x01	; 1
    358a:	80 93 d2 18 	sts	0x18D2, r24	; 0x8018d2 <xYieldPending>
    358e:	05 c0       	rjmp	.+10     	; 0x359a <xTaskGenericNotifyFromISR+0x104>
    3590:	80 e0       	ldi	r24, 0x00	; 0
    3592:	03 c0       	rjmp	.+6      	; 0x359a <xTaskGenericNotifyFromISR+0x104>
    3594:	81 e0       	ldi	r24, 0x01	; 1
    3596:	01 c0       	rjmp	.+2      	; 0x359a <xTaskGenericNotifyFromISR+0x104>
    3598:	81 e0       	ldi	r24, 0x01	; 1
    359a:	df 91       	pop	r29
    359c:	cf 91       	pop	r28
    359e:	1f 91       	pop	r17
    35a0:	0f 91       	pop	r16
    35a2:	ff 90       	pop	r15
    35a4:	ef 90       	pop	r14
    35a6:	08 95       	ret

000035a8 <xTaskNotifyStateClear>:
    35a8:	00 97       	sbiw	r24, 0x00	; 0
    35aa:	21 f4       	brne	.+8      	; 0x35b4 <xTaskNotifyStateClear+0xc>
    35ac:	80 91 43 19 	lds	r24, 0x1943	; 0x801943 <pxCurrentTCB>
    35b0:	90 91 44 19 	lds	r25, 0x1944	; 0x801944 <pxCurrentTCB+0x1>
    35b4:	0f b6       	in	r0, 0x3f	; 63
    35b6:	f8 94       	cli
    35b8:	0f 92       	push	r0
    35ba:	fc 01       	movw	r30, r24
    35bc:	27 a5       	ldd	r18, Z+47	; 0x2f
    35be:	22 30       	cpi	r18, 0x02	; 2
    35c0:	19 f4       	brne	.+6      	; 0x35c8 <xTaskNotifyStateClear+0x20>
    35c2:	17 a6       	std	Z+47, r1	; 0x2f
    35c4:	81 e0       	ldi	r24, 0x01	; 1
    35c6:	01 c0       	rjmp	.+2      	; 0x35ca <xTaskNotifyStateClear+0x22>
    35c8:	80 e0       	ldi	r24, 0x00	; 0
    35ca:	0f 90       	pop	r0
    35cc:	0f be       	out	0x3f, r0	; 63
    35ce:	08 95       	ret

000035d0 <prvInsertTimerInActiveList>:
    35d0:	cf 92       	push	r12
    35d2:	df 92       	push	r13
    35d4:	ef 92       	push	r14
    35d6:	ff 92       	push	r15
    35d8:	0f 93       	push	r16
    35da:	1f 93       	push	r17
    35dc:	fc 01       	movw	r30, r24
    35de:	42 83       	std	Z+2, r20	; 0x02
    35e0:	53 83       	std	Z+3, r21	; 0x03
    35e2:	64 83       	std	Z+4, r22	; 0x04
    35e4:	75 83       	std	Z+5, r23	; 0x05
    35e6:	93 87       	std	Z+11, r25	; 0x0b
    35e8:	82 87       	std	Z+10, r24	; 0x0a
    35ea:	04 17       	cp	r16, r20
    35ec:	15 07       	cpc	r17, r21
    35ee:	26 07       	cpc	r18, r22
    35f0:	37 07       	cpc	r19, r23
    35f2:	c0 f0       	brcs	.+48     	; 0x3624 <prvInsertTimerInActiveList+0x54>
    35f4:	0c 19       	sub	r16, r12
    35f6:	1d 09       	sbc	r17, r13
    35f8:	2e 09       	sbc	r18, r14
    35fa:	3f 09       	sbc	r19, r15
    35fc:	86 85       	ldd	r24, Z+14	; 0x0e
    35fe:	97 85       	ldd	r25, Z+15	; 0x0f
    3600:	a0 89       	ldd	r26, Z+16	; 0x10
    3602:	b1 89       	ldd	r27, Z+17	; 0x11
    3604:	08 17       	cp	r16, r24
    3606:	19 07       	cpc	r17, r25
    3608:	2a 07       	cpc	r18, r26
    360a:	3b 07       	cpc	r19, r27
    360c:	00 f5       	brcc	.+64     	; 0x364e <prvInsertTimerInActiveList+0x7e>
    360e:	bf 01       	movw	r22, r30
    3610:	6e 5f       	subi	r22, 0xFE	; 254
    3612:	7f 4f       	sbci	r23, 0xFF	; 255
    3614:	80 91 4d 19 	lds	r24, 0x194D	; 0x80194d <pxOverflowTimerList>
    3618:	90 91 4e 19 	lds	r25, 0x194E	; 0x80194e <pxOverflowTimerList+0x1>
    361c:	0e 94 45 0a 	call	0x148a	; 0x148a <vListInsert>
    3620:	80 e0       	ldi	r24, 0x00	; 0
    3622:	18 c0       	rjmp	.+48     	; 0x3654 <prvInsertTimerInActiveList+0x84>
    3624:	0c 15       	cp	r16, r12
    3626:	1d 05       	cpc	r17, r13
    3628:	2e 05       	cpc	r18, r14
    362a:	3f 05       	cpc	r19, r15
    362c:	28 f4       	brcc	.+10     	; 0x3638 <prvInsertTimerInActiveList+0x68>
    362e:	4c 15       	cp	r20, r12
    3630:	5d 05       	cpc	r21, r13
    3632:	6e 05       	cpc	r22, r14
    3634:	7f 05       	cpc	r23, r15
    3636:	68 f4       	brcc	.+26     	; 0x3652 <prvInsertTimerInActiveList+0x82>
    3638:	bf 01       	movw	r22, r30
    363a:	6e 5f       	subi	r22, 0xFE	; 254
    363c:	7f 4f       	sbci	r23, 0xFF	; 255
    363e:	80 91 4f 19 	lds	r24, 0x194F	; 0x80194f <pxCurrentTimerList>
    3642:	90 91 50 19 	lds	r25, 0x1950	; 0x801950 <pxCurrentTimerList+0x1>
    3646:	0e 94 45 0a 	call	0x148a	; 0x148a <vListInsert>
    364a:	80 e0       	ldi	r24, 0x00	; 0
    364c:	03 c0       	rjmp	.+6      	; 0x3654 <prvInsertTimerInActiveList+0x84>
    364e:	81 e0       	ldi	r24, 0x01	; 1
    3650:	01 c0       	rjmp	.+2      	; 0x3654 <prvInsertTimerInActiveList+0x84>
    3652:	81 e0       	ldi	r24, 0x01	; 1
    3654:	1f 91       	pop	r17
    3656:	0f 91       	pop	r16
    3658:	ff 90       	pop	r15
    365a:	ef 90       	pop	r14
    365c:	df 90       	pop	r13
    365e:	cf 90       	pop	r12
    3660:	08 95       	ret

00003662 <prvCheckForValidListAndQueue>:
    3662:	0f b6       	in	r0, 0x3f	; 63
    3664:	f8 94       	cli
    3666:	0f 92       	push	r0
    3668:	80 91 4b 19 	lds	r24, 0x194B	; 0x80194b <xTimerQueue>
    366c:	90 91 4c 19 	lds	r25, 0x194C	; 0x80194c <xTimerQueue+0x1>
    3670:	89 2b       	or	r24, r25
    3672:	e9 f4       	brne	.+58     	; 0x36ae <prvCheckForValidListAndQueue+0x4c>
    3674:	8c e5       	ldi	r24, 0x5C	; 92
    3676:	99 e1       	ldi	r25, 0x19	; 25
    3678:	0e 94 0f 0a 	call	0x141e	; 0x141e <vListInitialise>
    367c:	81 e5       	ldi	r24, 0x51	; 81
    367e:	99 e1       	ldi	r25, 0x19	; 25
    3680:	0e 94 0f 0a 	call	0x141e	; 0x141e <vListInitialise>
    3684:	8c e5       	ldi	r24, 0x5C	; 92
    3686:	99 e1       	ldi	r25, 0x19	; 25
    3688:	90 93 50 19 	sts	0x1950, r25	; 0x801950 <pxCurrentTimerList+0x1>
    368c:	80 93 4f 19 	sts	0x194F, r24	; 0x80194f <pxCurrentTimerList>
    3690:	81 e5       	ldi	r24, 0x51	; 81
    3692:	99 e1       	ldi	r25, 0x19	; 25
    3694:	90 93 4e 19 	sts	0x194E, r25	; 0x80194e <pxOverflowTimerList+0x1>
    3698:	80 93 4d 19 	sts	0x194D, r24	; 0x80194d <pxOverflowTimerList>
    369c:	40 e0       	ldi	r20, 0x00	; 0
    369e:	67 e0       	ldi	r22, 0x07	; 7
    36a0:	8a e0       	ldi	r24, 0x0A	; 10
    36a2:	0e 94 33 0d 	call	0x1a66	; 0x1a66 <xQueueGenericCreate>
    36a6:	90 93 4c 19 	sts	0x194C, r25	; 0x80194c <xTimerQueue+0x1>
    36aa:	80 93 4b 19 	sts	0x194B, r24	; 0x80194b <xTimerQueue>
    36ae:	0f 90       	pop	r0
    36b0:	0f be       	out	0x3f, r0	; 63
    36b2:	08 95       	ret

000036b4 <xTimerCreateTimerTask>:
    36b4:	ef 92       	push	r14
    36b6:	ff 92       	push	r15
    36b8:	0f 93       	push	r16
    36ba:	d3 df       	rcall	.-90     	; 0x3662 <prvCheckForValidListAndQueue>
    36bc:	80 91 4b 19 	lds	r24, 0x194B	; 0x80194b <xTimerQueue>
    36c0:	90 91 4c 19 	lds	r25, 0x194C	; 0x80194c <xTimerQueue+0x1>
    36c4:	89 2b       	or	r24, r25
    36c6:	91 f0       	breq	.+36     	; 0x36ec <xTimerCreateTimerTask+0x38>
    36c8:	0f 2e       	mov	r0, r31
    36ca:	f9 e4       	ldi	r31, 0x49	; 73
    36cc:	ef 2e       	mov	r14, r31
    36ce:	f9 e1       	ldi	r31, 0x19	; 25
    36d0:	ff 2e       	mov	r15, r31
    36d2:	f0 2d       	mov	r31, r0
    36d4:	03 e0       	ldi	r16, 0x03	; 3
    36d6:	20 e0       	ldi	r18, 0x00	; 0
    36d8:	30 e0       	ldi	r19, 0x00	; 0
    36da:	45 e5       	ldi	r20, 0x55	; 85
    36dc:	50 e0       	ldi	r21, 0x00	; 0
    36de:	64 e7       	ldi	r22, 0x74	; 116
    36e0:	75 e0       	ldi	r23, 0x05	; 5
    36e2:	87 e0       	ldi	r24, 0x07	; 7
    36e4:	91 e0       	ldi	r25, 0x01	; 1
    36e6:	0e 94 59 13 	call	0x26b2	; 0x26b2 <xTaskCreate>
    36ea:	01 c0       	rjmp	.+2      	; 0x36ee <xTimerCreateTimerTask+0x3a>
    36ec:	80 e0       	ldi	r24, 0x00	; 0
    36ee:	0f 91       	pop	r16
    36f0:	ff 90       	pop	r15
    36f2:	ef 90       	pop	r14
    36f4:	08 95       	ret

000036f6 <xTimerGenericCommand>:
    36f6:	8f 92       	push	r8
    36f8:	9f 92       	push	r9
    36fa:	af 92       	push	r10
    36fc:	bf 92       	push	r11
    36fe:	cf 92       	push	r12
    3700:	df 92       	push	r13
    3702:	ef 92       	push	r14
    3704:	ff 92       	push	r15
    3706:	0f 93       	push	r16
    3708:	1f 93       	push	r17
    370a:	cf 93       	push	r28
    370c:	df 93       	push	r29
    370e:	cd b7       	in	r28, 0x3d	; 61
    3710:	de b7       	in	r29, 0x3e	; 62
    3712:	27 97       	sbiw	r28, 0x07	; 7
    3714:	0f b6       	in	r0, 0x3f	; 63
    3716:	f8 94       	cli
    3718:	de bf       	out	0x3e, r29	; 62
    371a:	0f be       	out	0x3f, r0	; 63
    371c:	cd bf       	out	0x3d, r28	; 61
    371e:	e0 91 4b 19 	lds	r30, 0x194B	; 0x80194b <xTimerQueue>
    3722:	f0 91 4c 19 	lds	r31, 0x194C	; 0x80194c <xTimerQueue+0x1>
    3726:	30 97       	sbiw	r30, 0x00	; 0
    3728:	81 f1       	breq	.+96     	; 0x378a <xTimerGenericCommand+0x94>
    372a:	69 83       	std	Y+1, r22	; 0x01
    372c:	2a 83       	std	Y+2, r18	; 0x02
    372e:	3b 83       	std	Y+3, r19	; 0x03
    3730:	4c 83       	std	Y+4, r20	; 0x04
    3732:	5d 83       	std	Y+5, r21	; 0x05
    3734:	9f 83       	std	Y+7, r25	; 0x07
    3736:	8e 83       	std	Y+6, r24	; 0x06
    3738:	66 30       	cpi	r22, 0x06	; 6
    373a:	f4 f4       	brge	.+60     	; 0x3778 <xTimerGenericCommand+0x82>
    373c:	68 dc       	rcall	.-1840   	; 0x300e <xTaskGetSchedulerState>
    373e:	82 30       	cpi	r24, 0x02	; 2
    3740:	69 f4       	brne	.+26     	; 0x375c <xTimerGenericCommand+0x66>
    3742:	00 e0       	ldi	r16, 0x00	; 0
    3744:	a7 01       	movw	r20, r14
    3746:	96 01       	movw	r18, r12
    3748:	be 01       	movw	r22, r28
    374a:	6f 5f       	subi	r22, 0xFF	; 255
    374c:	7f 4f       	sbci	r23, 0xFF	; 255
    374e:	80 91 4b 19 	lds	r24, 0x194B	; 0x80194b <xTimerQueue>
    3752:	90 91 4c 19 	lds	r25, 0x194C	; 0x80194c <xTimerQueue+0x1>
    3756:	0e 94 61 0d 	call	0x1ac2	; 0x1ac2 <xQueueGenericSend>
    375a:	18 c0       	rjmp	.+48     	; 0x378c <xTimerGenericCommand+0x96>
    375c:	00 e0       	ldi	r16, 0x00	; 0
    375e:	20 e0       	ldi	r18, 0x00	; 0
    3760:	30 e0       	ldi	r19, 0x00	; 0
    3762:	a9 01       	movw	r20, r18
    3764:	be 01       	movw	r22, r28
    3766:	6f 5f       	subi	r22, 0xFF	; 255
    3768:	7f 4f       	sbci	r23, 0xFF	; 255
    376a:	80 91 4b 19 	lds	r24, 0x194B	; 0x80194b <xTimerQueue>
    376e:	90 91 4c 19 	lds	r25, 0x194C	; 0x80194c <xTimerQueue+0x1>
    3772:	0e 94 61 0d 	call	0x1ac2	; 0x1ac2 <xQueueGenericSend>
    3776:	0a c0       	rjmp	.+20     	; 0x378c <xTimerGenericCommand+0x96>
    3778:	20 e0       	ldi	r18, 0x00	; 0
    377a:	a8 01       	movw	r20, r16
    377c:	be 01       	movw	r22, r28
    377e:	6f 5f       	subi	r22, 0xFF	; 255
    3780:	7f 4f       	sbci	r23, 0xFF	; 255
    3782:	cf 01       	movw	r24, r30
    3784:	0e 94 1c 0e 	call	0x1c38	; 0x1c38 <xQueueGenericSendFromISR>
    3788:	01 c0       	rjmp	.+2      	; 0x378c <xTimerGenericCommand+0x96>
    378a:	80 e0       	ldi	r24, 0x00	; 0
    378c:	27 96       	adiw	r28, 0x07	; 7
    378e:	0f b6       	in	r0, 0x3f	; 63
    3790:	f8 94       	cli
    3792:	de bf       	out	0x3e, r29	; 62
    3794:	0f be       	out	0x3f, r0	; 63
    3796:	cd bf       	out	0x3d, r28	; 61
    3798:	df 91       	pop	r29
    379a:	cf 91       	pop	r28
    379c:	1f 91       	pop	r17
    379e:	0f 91       	pop	r16
    37a0:	ff 90       	pop	r15
    37a2:	ef 90       	pop	r14
    37a4:	df 90       	pop	r13
    37a6:	cf 90       	pop	r12
    37a8:	bf 90       	pop	r11
    37aa:	af 90       	pop	r10
    37ac:	9f 90       	pop	r9
    37ae:	8f 90       	pop	r8
    37b0:	08 95       	ret

000037b2 <prvSampleTimeNow>:
    37b2:	2f 92       	push	r2
    37b4:	3f 92       	push	r3
    37b6:	4f 92       	push	r4
    37b8:	5f 92       	push	r5
    37ba:	6f 92       	push	r6
    37bc:	7f 92       	push	r7
    37be:	8f 92       	push	r8
    37c0:	9f 92       	push	r9
    37c2:	af 92       	push	r10
    37c4:	bf 92       	push	r11
    37c6:	cf 92       	push	r12
    37c8:	df 92       	push	r13
    37ca:	ef 92       	push	r14
    37cc:	ff 92       	push	r15
    37ce:	0f 93       	push	r16
    37d0:	1f 93       	push	r17
    37d2:	cf 93       	push	r28
    37d4:	df 93       	push	r29
    37d6:	1c 01       	movw	r2, r24
    37d8:	cd d8       	rcall	.-3686   	; 0x2974 <xTaskGetTickCount>
    37da:	2b 01       	movw	r4, r22
    37dc:	3c 01       	movw	r6, r24
    37de:	80 91 45 19 	lds	r24, 0x1945	; 0x801945 <xLastTime.2432>
    37e2:	90 91 46 19 	lds	r25, 0x1946	; 0x801946 <xLastTime.2432+0x1>
    37e6:	a0 91 47 19 	lds	r26, 0x1947	; 0x801947 <xLastTime.2432+0x2>
    37ea:	b0 91 48 19 	lds	r27, 0x1948	; 0x801948 <xLastTime.2432+0x3>
    37ee:	48 16       	cp	r4, r24
    37f0:	59 06       	cpc	r5, r25
    37f2:	6a 06       	cpc	r6, r26
    37f4:	7b 06       	cpc	r7, r27
    37f6:	08 f0       	brcs	.+2      	; 0x37fa <prvSampleTimeNow+0x48>
    37f8:	53 c0       	rjmp	.+166    	; 0x38a0 <prvSampleTimeNow+0xee>
    37fa:	3b c0       	rjmp	.+118    	; 0x3872 <prvSampleTimeNow+0xc0>
    37fc:	07 80       	ldd	r0, Z+7	; 0x07
    37fe:	f0 85       	ldd	r31, Z+8	; 0x08
    3800:	e0 2d       	mov	r30, r0
    3802:	80 80       	ld	r8, Z
    3804:	91 80       	ldd	r9, Z+1	; 0x01
    3806:	a2 80       	ldd	r10, Z+2	; 0x02
    3808:	b3 80       	ldd	r11, Z+3	; 0x03
    380a:	c0 85       	ldd	r28, Z+8	; 0x08
    380c:	d1 85       	ldd	r29, Z+9	; 0x09
    380e:	8e 01       	movw	r16, r28
    3810:	0e 5f       	subi	r16, 0xFE	; 254
    3812:	1f 4f       	sbci	r17, 0xFF	; 255
    3814:	c8 01       	movw	r24, r16
    3816:	0e 94 82 0a 	call	0x1504	; 0x1504 <uxListRemove>
    381a:	ec 89       	ldd	r30, Y+20	; 0x14
    381c:	fd 89       	ldd	r31, Y+21	; 0x15
    381e:	ce 01       	movw	r24, r28
    3820:	19 95       	eicall
    3822:	8f 89       	ldd	r24, Y+23	; 0x17
    3824:	82 ff       	sbrs	r24, 2
    3826:	25 c0       	rjmp	.+74     	; 0x3872 <prvSampleTimeNow+0xc0>
    3828:	8e 85       	ldd	r24, Y+14	; 0x0e
    382a:	9f 85       	ldd	r25, Y+15	; 0x0f
    382c:	a8 89       	ldd	r26, Y+16	; 0x10
    382e:	b9 89       	ldd	r27, Y+17	; 0x11
    3830:	88 0d       	add	r24, r8
    3832:	99 1d       	adc	r25, r9
    3834:	aa 1d       	adc	r26, r10
    3836:	bb 1d       	adc	r27, r11
    3838:	88 16       	cp	r8, r24
    383a:	99 06       	cpc	r9, r25
    383c:	aa 06       	cpc	r10, r26
    383e:	bb 06       	cpc	r11, r27
    3840:	70 f4       	brcc	.+28     	; 0x385e <prvSampleTimeNow+0xac>
    3842:	8a 83       	std	Y+2, r24	; 0x02
    3844:	9b 83       	std	Y+3, r25	; 0x03
    3846:	ac 83       	std	Y+4, r26	; 0x04
    3848:	bd 83       	std	Y+5, r27	; 0x05
    384a:	db 87       	std	Y+11, r29	; 0x0b
    384c:	ca 87       	std	Y+10, r28	; 0x0a
    384e:	b8 01       	movw	r22, r16
    3850:	80 91 4f 19 	lds	r24, 0x194F	; 0x80194f <pxCurrentTimerList>
    3854:	90 91 50 19 	lds	r25, 0x1950	; 0x801950 <pxCurrentTimerList+0x1>
    3858:	0e 94 45 0a 	call	0x148a	; 0x148a <vListInsert>
    385c:	0a c0       	rjmp	.+20     	; 0x3872 <prvSampleTimeNow+0xc0>
    385e:	c1 2c       	mov	r12, r1
    3860:	d1 2c       	mov	r13, r1
    3862:	76 01       	movw	r14, r12
    3864:	00 e0       	ldi	r16, 0x00	; 0
    3866:	10 e0       	ldi	r17, 0x00	; 0
    3868:	a5 01       	movw	r20, r10
    386a:	94 01       	movw	r18, r8
    386c:	60 e0       	ldi	r22, 0x00	; 0
    386e:	ce 01       	movw	r24, r28
    3870:	42 df       	rcall	.-380    	; 0x36f6 <xTimerGenericCommand>
    3872:	e0 91 4f 19 	lds	r30, 0x194F	; 0x80194f <pxCurrentTimerList>
    3876:	f0 91 50 19 	lds	r31, 0x1950	; 0x801950 <pxCurrentTimerList+0x1>
    387a:	80 81       	ld	r24, Z
    387c:	81 11       	cpse	r24, r1
    387e:	be cf       	rjmp	.-132    	; 0x37fc <prvSampleTimeNow+0x4a>
    3880:	80 91 4d 19 	lds	r24, 0x194D	; 0x80194d <pxOverflowTimerList>
    3884:	90 91 4e 19 	lds	r25, 0x194E	; 0x80194e <pxOverflowTimerList+0x1>
    3888:	90 93 50 19 	sts	0x1950, r25	; 0x801950 <pxCurrentTimerList+0x1>
    388c:	80 93 4f 19 	sts	0x194F, r24	; 0x80194f <pxCurrentTimerList>
    3890:	f0 93 4e 19 	sts	0x194E, r31	; 0x80194e <pxOverflowTimerList+0x1>
    3894:	e0 93 4d 19 	sts	0x194D, r30	; 0x80194d <pxOverflowTimerList>
    3898:	81 e0       	ldi	r24, 0x01	; 1
    389a:	f1 01       	movw	r30, r2
    389c:	80 83       	st	Z, r24
    389e:	02 c0       	rjmp	.+4      	; 0x38a4 <prvSampleTimeNow+0xf2>
    38a0:	f1 01       	movw	r30, r2
    38a2:	10 82       	st	Z, r1
    38a4:	40 92 45 19 	sts	0x1945, r4	; 0x801945 <xLastTime.2432>
    38a8:	50 92 46 19 	sts	0x1946, r5	; 0x801946 <xLastTime.2432+0x1>
    38ac:	60 92 47 19 	sts	0x1947, r6	; 0x801947 <xLastTime.2432+0x2>
    38b0:	70 92 48 19 	sts	0x1948, r7	; 0x801948 <xLastTime.2432+0x3>
    38b4:	c3 01       	movw	r24, r6
    38b6:	b2 01       	movw	r22, r4
    38b8:	df 91       	pop	r29
    38ba:	cf 91       	pop	r28
    38bc:	1f 91       	pop	r17
    38be:	0f 91       	pop	r16
    38c0:	ff 90       	pop	r15
    38c2:	ef 90       	pop	r14
    38c4:	df 90       	pop	r13
    38c6:	cf 90       	pop	r12
    38c8:	bf 90       	pop	r11
    38ca:	af 90       	pop	r10
    38cc:	9f 90       	pop	r9
    38ce:	8f 90       	pop	r8
    38d0:	7f 90       	pop	r7
    38d2:	6f 90       	pop	r6
    38d4:	5f 90       	pop	r5
    38d6:	4f 90       	pop	r4
    38d8:	3f 90       	pop	r3
    38da:	2f 90       	pop	r2
    38dc:	08 95       	ret

000038de <vApplicationIdleHook>:
    38de:	08 95       	ret

000038e0 <vApplicationMallocFailedHook>:
    38e0:	27 9a       	sbi	0x04, 7	; 4
    38e2:	2f 9a       	sbi	0x05, 7	; 5
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    38e4:	2f ef       	ldi	r18, 0xFF	; 255
    38e6:	80 e7       	ldi	r24, 0x70	; 112
    38e8:	92 e0       	ldi	r25, 0x02	; 2
    38ea:	21 50       	subi	r18, 0x01	; 1
    38ec:	80 40       	sbci	r24, 0x00	; 0
    38ee:	90 40       	sbci	r25, 0x00	; 0
    38f0:	e1 f7       	brne	.-8      	; 0x38ea <vApplicationMallocFailedHook+0xa>
    38f2:	00 c0       	rjmp	.+0      	; 0x38f4 <vApplicationMallocFailedHook+0x14>
    38f4:	00 00       	nop
    38f6:	1f 9a       	sbi	0x03, 7	; 3
    38f8:	f5 cf       	rjmp	.-22     	; 0x38e4 <vApplicationMallocFailedHook+0x4>

000038fa <vApplicationStackOverflowHook>:
    38fa:	27 9a       	sbi	0x04, 7	; 4
    38fc:	2f 9a       	sbi	0x05, 7	; 5
    38fe:	2f ef       	ldi	r18, 0xFF	; 255
    3900:	87 ea       	ldi	r24, 0xA7	; 167
    3902:	91 e6       	ldi	r25, 0x61	; 97
    3904:	21 50       	subi	r18, 0x01	; 1
    3906:	80 40       	sbci	r24, 0x00	; 0
    3908:	90 40       	sbci	r25, 0x00	; 0
    390a:	e1 f7       	brne	.-8      	; 0x3904 <vApplicationStackOverflowHook+0xa>
    390c:	00 c0       	rjmp	.+0      	; 0x390e <vApplicationStackOverflowHook+0x14>
    390e:	00 00       	nop
    3910:	1f 9a       	sbi	0x03, 7	; 3
    3912:	f5 cf       	rjmp	.-22     	; 0x38fe <vApplicationStackOverflowHook+0x4>

00003914 <create_tasks_and_semaphores>:
	hih8120Create();
	
}

void doStuff()
{
    3914:	8f 92       	push	r8
    3916:	9f 92       	push	r9
    3918:	af 92       	push	r10
    391a:	bf 92       	push	r11
    391c:	cf 92       	push	r12
    391e:	df 92       	push	r13
    3920:	ef 92       	push	r14
    3922:	ff 92       	push	r15
    3924:	0f 93       	push	r16
    3926:	1f 93       	push	r17
    3928:	cf 93       	push	r28
    392a:	df 93       	push	r29
    392c:	0e 94 6c 07 	call	0xed8	; 0xed8 <xEventGroupCreate>
    3930:	90 93 e2 1a 	sts	0x1AE2, r25	; 0x801ae2 <startMeasureEventGroup+0x1>
    3934:	80 93 e1 1a 	sts	0x1AE1, r24	; 0x801ae1 <startMeasureEventGroup>
    3938:	0e 94 6c 07 	call	0xed8	; 0xed8 <xEventGroupCreate>
    393c:	90 93 c8 1a 	sts	0x1AC8, r25	; 0x801ac8 <readyEventGroup+0x1>
    3940:	80 93 c7 1a 	sts	0x1AC7, r24	; 0x801ac7 <readyEventGroup>
    3944:	41 e0       	ldi	r20, 0x01	; 1
    3946:	60 e0       	ldi	r22, 0x00	; 0
    3948:	70 e0       	ldi	r23, 0x00	; 0
    394a:	84 e6       	ldi	r24, 0x64	; 100
    394c:	90 e0       	ldi	r25, 0x00	; 0
    394e:	0e 94 be 10 	call	0x217c	; 0x217c <xStreamBufferGenericCreate>
    3952:	90 93 c4 1a 	sts	0x1AC4, r25	; 0x801ac4 <xMessageBuffer+0x1>
    3956:	80 93 c3 1a 	sts	0x1AC3, r24	; 0x801ac3 <xMessageBuffer>
    395a:	41 e0       	ldi	r20, 0x01	; 1
    395c:	60 e0       	ldi	r22, 0x00	; 0
    395e:	70 e0       	ldi	r23, 0x00	; 0
    3960:	8c e2       	ldi	r24, 0x2C	; 44
    3962:	90 e0       	ldi	r25, 0x00	; 0
    3964:	0e 94 be 10 	call	0x217c	; 0x217c <xStreamBufferGenericCreate>
    3968:	90 93 c6 1a 	sts	0x1AC6, r25	; 0x801ac6 <_downlinkMessagebuffer+0x1>
    396c:	80 93 c5 1a 	sts	0x1AC5, r24	; 0x801ac5 <_downlinkMessagebuffer>
    3970:	0e 94 3e 03 	call	0x67c	; 0x67c <configuration_create>
    3974:	e0 90 c7 1a 	lds	r14, 0x1AC7	; 0x801ac7 <readyEventGroup>
    3978:	f0 90 c8 1a 	lds	r15, 0x1AC8	; 0x801ac8 <readyEventGroup+0x1>
    397c:	40 91 e1 1a 	lds	r20, 0x1AE1	; 0x801ae1 <startMeasureEventGroup>
    3980:	50 91 e2 1a 	lds	r21, 0x1AE2	; 0x801ae2 <startMeasureEventGroup+0x1>
    3984:	a1 2c       	mov	r10, r1
    3986:	b1 2c       	mov	r11, r1
    3988:	65 01       	movw	r12, r10
    398a:	68 94       	set
    398c:	a4 f8       	bld	r10, 4
    398e:	01 e0       	ldi	r16, 0x01	; 1
    3990:	10 e0       	ldi	r17, 0x00	; 0
    3992:	20 e0       	ldi	r18, 0x00	; 0
    3994:	30 e0       	ldi	r19, 0x00	; 0
    3996:	60 ec       	ldi	r22, 0xC0	; 192
    3998:	81 e0       	ldi	r24, 0x01	; 1
    399a:	0e 94 20 05 	call	0xa40	; 0xa40 <humAndTempReader_create>
    399e:	c8 2f       	mov	r28, r24
    39a0:	d9 2f       	mov	r29, r25
    39a2:	e0 90 c7 1a 	lds	r14, 0x1AC7	; 0x801ac7 <readyEventGroup>
    39a6:	f0 90 c8 1a 	lds	r15, 0x1AC8	; 0x801ac8 <readyEventGroup+0x1>
    39aa:	40 91 e1 1a 	lds	r20, 0x1AE1	; 0x801ae1 <startMeasureEventGroup>
    39ae:	50 91 e2 1a 	lds	r21, 0x1AE2	; 0x801ae2 <startMeasureEventGroup+0x1>
    39b2:	a1 2c       	mov	r10, r1
    39b4:	b1 2c       	mov	r11, r1
    39b6:	65 01       	movw	r12, r10
    39b8:	68 94       	set
    39ba:	a5 f8       	bld	r10, 5
    39bc:	02 e0       	ldi	r16, 0x02	; 2
    39be:	10 e0       	ldi	r17, 0x00	; 0
    39c0:	20 e0       	ldi	r18, 0x00	; 0
    39c2:	30 e0       	ldi	r19, 0x00	; 0
    39c4:	60 ec       	ldi	r22, 0xC0	; 192
    39c6:	81 e0       	ldi	r24, 0x01	; 1
    39c8:	0e 94 72 02 	call	0x4e4	; 0x4e4 <co2Reader_create>
    39cc:	e0 90 c7 1a 	lds	r14, 0x1AC7	; 0x801ac7 <readyEventGroup>
    39d0:	f0 90 c8 1a 	lds	r15, 0x1AC8	; 0x801ac8 <readyEventGroup+0x1>
    39d4:	40 91 e1 1a 	lds	r20, 0x1AE1	; 0x801ae1 <startMeasureEventGroup>
    39d8:	50 91 e2 1a 	lds	r21, 0x1AE2	; 0x801ae2 <startMeasureEventGroup+0x1>
    39dc:	20 91 c4 1a 	lds	r18, 0x1AC4	; 0x801ac4 <xMessageBuffer+0x1>
    39e0:	2f 93       	push	r18
    39e2:	20 91 c3 1a 	lds	r18, 0x1AC3	; 0x801ac3 <xMessageBuffer>
    39e6:	2f 93       	push	r18
    39e8:	df 93       	push	r29
    39ea:	cf 93       	push	r28
    39ec:	4c 01       	movw	r8, r24
    39ee:	0f 2e       	mov	r0, r31
    39f0:	f0 e3       	ldi	r31, 0x30	; 48
    39f2:	af 2e       	mov	r10, r31
    39f4:	b1 2c       	mov	r11, r1
    39f6:	c1 2c       	mov	r12, r1
    39f8:	d1 2c       	mov	r13, r1
    39fa:	f0 2d       	mov	r31, r0
    39fc:	03 e0       	ldi	r16, 0x03	; 3
    39fe:	10 e0       	ldi	r17, 0x00	; 0
    3a00:	20 e0       	ldi	r18, 0x00	; 0
    3a02:	30 e0       	ldi	r19, 0x00	; 0
    3a04:	60 ec       	ldi	r22, 0xC0	; 192
    3a06:	83 e0       	ldi	r24, 0x03	; 3
    3a08:	0e 94 ac 03 	call	0x758	; 0x758 <device_create>
    3a0c:	60 91 c3 1a 	lds	r22, 0x1AC3	; 0x801ac3 <xMessageBuffer>
    3a10:	70 91 c4 1a 	lds	r23, 0x1AC4	; 0x801ac4 <xMessageBuffer+0x1>
    3a14:	83 e0       	ldi	r24, 0x03	; 3
    3a16:	0e 94 f3 05 	call	0xbe6	; 0xbe6 <lora_UpLinkHandler_create>
    3a1a:	0f 90       	pop	r0
    3a1c:	0f 90       	pop	r0
    3a1e:	0f 90       	pop	r0
    3a20:	0f 90       	pop	r0
    3a22:	df 91       	pop	r29
    3a24:	cf 91       	pop	r28
    3a26:	1f 91       	pop	r17
    3a28:	0f 91       	pop	r16
    3a2a:	ff 90       	pop	r15
    3a2c:	ef 90       	pop	r14
    3a2e:	df 90       	pop	r13
    3a30:	cf 90       	pop	r12
    3a32:	bf 90       	pop	r11
    3a34:	af 90       	pop	r10
    3a36:	9f 90       	pop	r9
    3a38:	8f 90       	pop	r8
    3a3a:	08 95       	ret

00003a3c <initialiseSystem>:
    3a3c:	81 b1       	in	r24, 0x01	; 1
    3a3e:	81 68       	ori	r24, 0x81	; 129
    3a40:	81 b9       	out	0x01, r24	; 1
    3a42:	0e 94 56 07 	call	0xeac	; 0xeac <trace_init>
    3a46:	80 e0       	ldi	r24, 0x00	; 0
    3a48:	0e 94 f9 28 	call	0x51f2	; 0x51f2 <stdioCreate>
    3a4c:	85 e0       	ldi	r24, 0x05	; 5
    3a4e:	11 d0       	rcall	.+34     	; 0x3a72 <hal_create>
    3a50:	60 91 c5 1a 	lds	r22, 0x1AC5	; 0x801ac5 <_downlinkMessagebuffer>
    3a54:	70 91 c6 1a 	lds	r23, 0x1AC6	; 0x801ac6 <_downlinkMessagebuffer+0x1>
    3a58:	81 e0       	ldi	r24, 0x01	; 1
    3a5a:	c3 d3       	rcall	.+1926   	; 0x41e2 <lora_driver_create>
    3a5c:	69 c0       	rjmp	.+210    	; 0x3b30 <hih8120Create>
    3a5e:	08 95       	ret

00003a60 <main>:
	//bytesToSend=xMessageBufferSend(xMessageBuffer,(void*) &payload,sizeof(payload),portMAX_DELAY);
}
/*-----------------------------------------------------------*/
int main(void)
{
	initialiseSystem(); // Must be done as the very first thing!!
    3a60:	ed df       	rcall	.-38     	; 0x3a3c <initialiseSystem>
	printf("Program Started!!\n");
    3a62:	8c e7       	ldi	r24, 0x7C	; 124
    3a64:	95 e0       	ldi	r25, 0x05	; 5
    3a66:	0e 94 a6 2e 	call	0x5d4c	; 0x5d4c <puts>
	create_tasks_and_semaphores();
    3a6a:	54 df       	rcall	.-344    	; 0x3914 <create_tasks_and_semaphores>
	vTaskStartScheduler(); // Initialise and run the freeRTOS scheduler. Execution should never return from here.
    3a6c:	0e 94 78 14 	call	0x28f0	; 0x28f0 <vTaskStartScheduler>
    3a70:	ff cf       	rjmp	.-2      	; 0x3a70 <main+0x10>

00003a72 <hal_create>:
    3a72:	e3 ee       	ldi	r30, 0xE3	; 227
    3a74:	fa e1       	ldi	r31, 0x1A	; 26
    3a76:	26 e4       	ldi	r18, 0x46	; 70
    3a78:	34 e2       	ldi	r19, 0x24	; 36
    3a7a:	31 83       	std	Z+1, r19	; 0x01
    3a7c:	20 83       	st	Z, r18
    3a7e:	29 e4       	ldi	r18, 0x49	; 73
    3a80:	34 e2       	ldi	r19, 0x24	; 36
    3a82:	33 83       	std	Z+3, r19	; 0x03
    3a84:	22 83       	std	Z+2, r18	; 0x02
    3a86:	24 e5       	ldi	r18, 0x54	; 84
    3a88:	34 e2       	ldi	r19, 0x24	; 36
    3a8a:	35 83       	std	Z+5, r19	; 0x05
    3a8c:	24 83       	std	Z+4, r18	; 0x04
    3a8e:	28 e5       	ldi	r18, 0x58	; 88
    3a90:	34 e2       	ldi	r19, 0x24	; 36
    3a92:	37 83       	std	Z+7, r19	; 0x07
    3a94:	26 83       	std	Z+6, r18	; 0x06
    3a96:	2e e5       	ldi	r18, 0x5E	; 94
    3a98:	34 e2       	ldi	r19, 0x24	; 36
    3a9a:	31 87       	std	Z+9, r19	; 0x09
    3a9c:	20 87       	std	Z+8, r18	; 0x08
    3a9e:	2a e6       	ldi	r18, 0x6A	; 106
    3aa0:	34 e2       	ldi	r19, 0x24	; 36
    3aa2:	33 87       	std	Z+11, r19	; 0x0b
    3aa4:	22 87       	std	Z+10, r18	; 0x0a
    3aa6:	2f e6       	ldi	r18, 0x6F	; 111
    3aa8:	34 e2       	ldi	r19, 0x24	; 36
    3aaa:	35 87       	std	Z+13, r19	; 0x0d
    3aac:	24 87       	std	Z+12, r18	; 0x0c
    3aae:	2b e7       	ldi	r18, 0x7B	; 123
    3ab0:	34 e2       	ldi	r19, 0x24	; 36
    3ab2:	37 87       	std	Z+15, r19	; 0x0f
    3ab4:	26 87       	std	Z+14, r18	; 0x0e
    3ab6:	2b e5       	ldi	r18, 0x5B	; 91
    3ab8:	34 e2       	ldi	r19, 0x24	; 36
    3aba:	31 8b       	std	Z+17, r19	; 0x11
    3abc:	20 8b       	std	Z+16, r18	; 0x10
    3abe:	20 e8       	ldi	r18, 0x80	; 128
    3ac0:	34 e2       	ldi	r19, 0x24	; 36
    3ac2:	33 8b       	std	Z+19, r19	; 0x13
    3ac4:	22 8b       	std	Z+18, r18	; 0x12
    3ac6:	2d e8       	ldi	r18, 0x8D	; 141
    3ac8:	34 e2       	ldi	r19, 0x24	; 36
    3aca:	35 8b       	std	Z+21, r19	; 0x15
    3acc:	24 8b       	std	Z+20, r18	; 0x14
    3ace:	68 2f       	mov	r22, r24
    3ad0:	cf 01       	movw	r24, r30
    3ad2:	53 c1       	rjmp	.+678    	; 0x3d7a <led_create>
    3ad4:	08 95       	ret

00003ad6 <_hihTwiCallback>:
    3ad6:	65 30       	cpi	r22, 0x05	; 5
    3ad8:	f1 f4       	brne	.+60     	; 0x3b16 <_hihTwiCallback+0x40>
    3ada:	fa 01       	movw	r30, r20
    3adc:	80 81       	ld	r24, Z
    3ade:	8f 73       	andi	r24, 0x3F	; 63
    3ae0:	90 e0       	ldi	r25, 0x00	; 0
    3ae2:	98 2f       	mov	r25, r24
    3ae4:	88 27       	eor	r24, r24
    3ae6:	21 81       	ldd	r18, Z+1	; 0x01
    3ae8:	82 2b       	or	r24, r18
    3aea:	90 93 09 02 	sts	0x0209, r25	; 0x800209 <_hum+0x1>
    3aee:	80 93 08 02 	sts	0x0208, r24	; 0x800208 <_hum>
    3af2:	82 81       	ldd	r24, Z+2	; 0x02
    3af4:	f0 e4       	ldi	r31, 0x40	; 64
    3af6:	8f 9f       	mul	r24, r31
    3af8:	c0 01       	movw	r24, r0
    3afa:	11 24       	eor	r1, r1
    3afc:	fa 01       	movw	r30, r20
    3afe:	23 81       	ldd	r18, Z+3	; 0x03
    3b00:	26 95       	lsr	r18
    3b02:	26 95       	lsr	r18
    3b04:	82 2b       	or	r24, r18
    3b06:	90 93 07 02 	sts	0x0207, r25	; 0x800207 <_temp+0x1>
    3b0a:	80 93 06 02 	sts	0x0206, r24	; 0x800206 <_temp>
    3b0e:	81 e0       	ldi	r24, 0x01	; 1
    3b10:	80 93 67 19 	sts	0x1967, r24	; 0x801967 <_measuringIsReady>
    3b14:	08 95       	ret
    3b16:	64 30       	cpi	r22, 0x04	; 4
    3b18:	51 f0       	breq	.+20     	; 0x3b2e <_hihTwiCallback+0x58>
    3b1a:	80 e0       	ldi	r24, 0x00	; 0
    3b1c:	90 e4       	ldi	r25, 0x40	; 64
    3b1e:	90 93 07 02 	sts	0x0207, r25	; 0x800207 <_temp+0x1>
    3b22:	80 93 06 02 	sts	0x0206, r24	; 0x800206 <_temp>
    3b26:	90 93 09 02 	sts	0x0209, r25	; 0x800209 <_hum+0x1>
    3b2a:	80 93 08 02 	sts	0x0208, r24	; 0x800208 <_hum>
    3b2e:	08 95       	ret

00003b30 <hih8120Create>:
    3b30:	0f 93       	push	r16
    3b32:	1f 93       	push	r17
    3b34:	0b e6       	ldi	r16, 0x6B	; 107
    3b36:	1d e1       	ldi	r17, 0x1D	; 29
    3b38:	20 e0       	ldi	r18, 0x00	; 0
    3b3a:	34 e2       	ldi	r19, 0x24	; 36
    3b3c:	44 ef       	ldi	r20, 0xF4	; 244
    3b3e:	50 e0       	ldi	r21, 0x00	; 0
    3b40:	60 e0       	ldi	r22, 0x00	; 0
    3b42:	87 e2       	ldi	r24, 0x27	; 39
    3b44:	0e 94 33 29 	call	0x5266	; 0x5266 <twiCreate>
    3b48:	90 93 69 19 	sts	0x1969, r25	; 0x801969 <_hih8120Handler+0x1>
    3b4c:	80 93 68 19 	sts	0x1968, r24	; 0x801968 <_hih8120Handler>
    3b50:	21 e0       	ldi	r18, 0x01	; 1
    3b52:	89 2b       	or	r24, r25
    3b54:	09 f0       	breq	.+2      	; 0x3b58 <hih8120Create+0x28>
    3b56:	20 e0       	ldi	r18, 0x00	; 0
    3b58:	82 2f       	mov	r24, r18
    3b5a:	1f 91       	pop	r17
    3b5c:	0f 91       	pop	r16
    3b5e:	08 95       	ret

00003b60 <hih8120IsReady>:
    3b60:	80 91 67 19 	lds	r24, 0x1967	; 0x801967 <_measuringIsReady>
    3b64:	08 95       	ret

00003b66 <hih8120Wakeup>:
    3b66:	80 91 68 19 	lds	r24, 0x1968	; 0x801968 <_hih8120Handler>
    3b6a:	90 91 69 19 	lds	r25, 0x1969	; 0x801969 <_hih8120Handler+0x1>
    3b6e:	00 97       	sbiw	r24, 0x00	; 0
    3b70:	59 f0       	breq	.+22     	; 0x3b88 <hih8120Wakeup+0x22>
    3b72:	40 e0       	ldi	r20, 0x00	; 0
    3b74:	60 e0       	ldi	r22, 0x00	; 0
    3b76:	70 e0       	ldi	r23, 0x00	; 0
    3b78:	0e 94 84 29 	call	0x5308	; 0x5308 <twiTransmit>
    3b7c:	84 30       	cpi	r24, 0x04	; 4
    3b7e:	31 f4       	brne	.+12     	; 0x3b8c <hih8120Wakeup+0x26>
    3b80:	10 92 67 19 	sts	0x1967, r1	; 0x801967 <_measuringIsReady>
    3b84:	80 e0       	ldi	r24, 0x00	; 0
    3b86:	08 95       	ret
    3b88:	82 e0       	ldi	r24, 0x02	; 2
    3b8a:	08 95       	ret
    3b8c:	83 e0       	ldi	r24, 0x03	; 3
    3b8e:	08 95       	ret

00003b90 <hih8120Meassure>:
    3b90:	80 91 68 19 	lds	r24, 0x1968	; 0x801968 <_hih8120Handler>
    3b94:	90 91 69 19 	lds	r25, 0x1969	; 0x801969 <_hih8120Handler+0x1>
    3b98:	00 97       	sbiw	r24, 0x00	; 0
    3b9a:	39 f0       	breq	.+14     	; 0x3baa <hih8120Meassure+0x1a>
    3b9c:	64 e0       	ldi	r22, 0x04	; 4
    3b9e:	0e 94 d0 29 	call	0x53a0	; 0x53a0 <twiReceive>
    3ba2:	85 30       	cpi	r24, 0x05	; 5
    3ba4:	21 f0       	breq	.+8      	; 0x3bae <hih8120Meassure+0x1e>
    3ba6:	83 e0       	ldi	r24, 0x03	; 3
    3ba8:	08 95       	ret
    3baa:	82 e0       	ldi	r24, 0x02	; 2
    3bac:	08 95       	ret
    3bae:	80 e0       	ldi	r24, 0x00	; 0
    3bb0:	08 95       	ret

00003bb2 <hih8120GetHumidity>:
    3bb2:	60 91 08 02 	lds	r22, 0x0208	; 0x800208 <_hum>
    3bb6:	70 91 09 02 	lds	r23, 0x0209	; 0x800209 <_hum+0x1>
    3bba:	80 e0       	ldi	r24, 0x00	; 0
    3bbc:	90 e0       	ldi	r25, 0x00	; 0
    3bbe:	0e 94 da 2b 	call	0x57b4	; 0x57b4 <__floatunsisf>
    3bc2:	20 e0       	ldi	r18, 0x00	; 0
    3bc4:	30 e0       	ldi	r19, 0x00	; 0
    3bc6:	48 ec       	ldi	r20, 0xC8	; 200
    3bc8:	52 e4       	ldi	r21, 0x42	; 66
    3bca:	0e 94 68 2c 	call	0x58d0	; 0x58d0 <__mulsf3>
    3bce:	20 e0       	ldi	r18, 0x00	; 0
    3bd0:	38 ef       	ldi	r19, 0xF8	; 248
    3bd2:	4f e7       	ldi	r20, 0x7F	; 127
    3bd4:	56 e4       	ldi	r21, 0x46	; 70
    3bd6:	0c 94 41 2b 	jmp	0x5682	; 0x5682 <__divsf3>
    3bda:	08 95       	ret

00003bdc <hih8120GetHumidityPercent_x10>:
    3bdc:	ea df       	rcall	.-44     	; 0x3bb2 <hih8120GetHumidity>
    3bde:	20 e0       	ldi	r18, 0x00	; 0
    3be0:	30 e0       	ldi	r19, 0x00	; 0
    3be2:	40 e2       	ldi	r20, 0x20	; 32
    3be4:	51 e4       	ldi	r21, 0x41	; 65
    3be6:	0e 94 68 2c 	call	0x58d0	; 0x58d0 <__mulsf3>
    3bea:	0e 94 ae 2b 	call	0x575c	; 0x575c <__fixunssfsi>
    3bee:	cb 01       	movw	r24, r22
    3bf0:	08 95       	ret

00003bf2 <hih8120GetTemperature>:
    3bf2:	60 91 06 02 	lds	r22, 0x0206	; 0x800206 <_temp>
    3bf6:	70 91 07 02 	lds	r23, 0x0207	; 0x800207 <_temp+0x1>
    3bfa:	80 e0       	ldi	r24, 0x00	; 0
    3bfc:	90 e0       	ldi	r25, 0x00	; 0
    3bfe:	0e 94 da 2b 	call	0x57b4	; 0x57b4 <__floatunsisf>
    3c02:	20 e0       	ldi	r18, 0x00	; 0
    3c04:	30 e0       	ldi	r19, 0x00	; 0
    3c06:	45 e2       	ldi	r20, 0x25	; 37
    3c08:	53 e4       	ldi	r21, 0x43	; 67
    3c0a:	0e 94 68 2c 	call	0x58d0	; 0x58d0 <__mulsf3>
    3c0e:	20 e0       	ldi	r18, 0x00	; 0
    3c10:	38 ef       	ldi	r19, 0xF8	; 248
    3c12:	4f e7       	ldi	r20, 0x7F	; 127
    3c14:	56 e4       	ldi	r21, 0x46	; 70
    3c16:	0e 94 41 2b 	call	0x5682	; 0x5682 <__divsf3>
    3c1a:	20 e0       	ldi	r18, 0x00	; 0
    3c1c:	30 e0       	ldi	r19, 0x00	; 0
    3c1e:	40 e2       	ldi	r20, 0x20	; 32
    3c20:	52 e4       	ldi	r21, 0x42	; 66
    3c22:	0c 94 dc 2a 	jmp	0x55b8	; 0x55b8 <__subsf3>
    3c26:	08 95       	ret

00003c28 <hih8120GetTemperature_x10>:
    3c28:	e4 df       	rcall	.-56     	; 0x3bf2 <hih8120GetTemperature>
    3c2a:	20 e0       	ldi	r18, 0x00	; 0
    3c2c:	30 e0       	ldi	r19, 0x00	; 0
    3c2e:	40 e2       	ldi	r20, 0x20	; 32
    3c30:	51 e4       	ldi	r21, 0x41	; 65
    3c32:	0e 94 68 2c 	call	0x58d0	; 0x58d0 <__mulsf3>
    3c36:	0e 94 a9 2b 	call	0x5752	; 0x5752 <__fixsfsi>
    3c3a:	cb 01       	movw	r24, r22
    3c3c:	08 95       	ret

00003c3e <_turn_off>:
    3c3e:	cf 93       	push	r28
    3c40:	df 93       	push	r29
    3c42:	90 e0       	ldi	r25, 0x00	; 0
    3c44:	fc 01       	movw	r30, r24
    3c46:	ee 0f       	add	r30, r30
    3c48:	ff 1f       	adc	r31, r31
    3c4a:	e8 0f       	add	r30, r24
    3c4c:	f9 1f       	adc	r31, r25
    3c4e:	ee 0f       	add	r30, r30
    3c50:	ff 1f       	adc	r31, r31
    3c52:	e6 59       	subi	r30, 0x96	; 150
    3c54:	f6 4e       	sbci	r31, 0xE6	; 230
    3c56:	23 81       	ldd	r18, Z+3	; 0x03
    3c58:	21 11       	cpse	r18, r1
    3c5a:	0a c0       	rjmp	.+20     	; 0x3c70 <_turn_off+0x32>
    3c5c:	ef 01       	movw	r28, r30
    3c5e:	e0 91 eb 1a 	lds	r30, 0x1AEB	; 0x801aeb <register_access+0x8>
    3c62:	f0 91 ec 1a 	lds	r31, 0x1AEC	; 0x801aec <register_access+0x9>
    3c66:	6a 81       	ldd	r22, Y+2	; 0x02
    3c68:	88 81       	ld	r24, Y
    3c6a:	99 81       	ldd	r25, Y+1	; 0x01
    3c6c:	19 95       	eicall
    3c6e:	12 c0       	rjmp	.+36     	; 0x3c94 <_turn_off+0x56>
    3c70:	dc 01       	movw	r26, r24
    3c72:	aa 0f       	add	r26, r26
    3c74:	bb 1f       	adc	r27, r27
    3c76:	ed 01       	movw	r28, r26
    3c78:	c8 0f       	add	r28, r24
    3c7a:	d9 1f       	adc	r29, r25
    3c7c:	cc 0f       	add	r28, r28
    3c7e:	dd 1f       	adc	r29, r29
    3c80:	c6 59       	subi	r28, 0x96	; 150
    3c82:	d6 4e       	sbci	r29, 0xE6	; 230
    3c84:	e0 91 f5 1a 	lds	r30, 0x1AF5	; 0x801af5 <register_access+0x12>
    3c88:	f0 91 f6 1a 	lds	r31, 0x1AF6	; 0x801af6 <register_access+0x13>
    3c8c:	6a 81       	ldd	r22, Y+2	; 0x02
    3c8e:	88 81       	ld	r24, Y
    3c90:	99 81       	ldd	r25, Y+1	; 0x01
    3c92:	19 95       	eicall
    3c94:	df 91       	pop	r29
    3c96:	cf 91       	pop	r28
    3c98:	08 95       	ret

00003c9a <_turn_on>:
    3c9a:	cf 93       	push	r28
    3c9c:	df 93       	push	r29
    3c9e:	90 e0       	ldi	r25, 0x00	; 0
    3ca0:	fc 01       	movw	r30, r24
    3ca2:	ee 0f       	add	r30, r30
    3ca4:	ff 1f       	adc	r31, r31
    3ca6:	e8 0f       	add	r30, r24
    3ca8:	f9 1f       	adc	r31, r25
    3caa:	ee 0f       	add	r30, r30
    3cac:	ff 1f       	adc	r31, r31
    3cae:	e6 59       	subi	r30, 0x96	; 150
    3cb0:	f6 4e       	sbci	r31, 0xE6	; 230
    3cb2:	23 81       	ldd	r18, Z+3	; 0x03
    3cb4:	21 11       	cpse	r18, r1
    3cb6:	0a c0       	rjmp	.+20     	; 0x3ccc <_turn_on+0x32>
    3cb8:	ef 01       	movw	r28, r30
    3cba:	e0 91 f5 1a 	lds	r30, 0x1AF5	; 0x801af5 <register_access+0x12>
    3cbe:	f0 91 f6 1a 	lds	r31, 0x1AF6	; 0x801af6 <register_access+0x13>
    3cc2:	6a 81       	ldd	r22, Y+2	; 0x02
    3cc4:	88 81       	ld	r24, Y
    3cc6:	99 81       	ldd	r25, Y+1	; 0x01
    3cc8:	19 95       	eicall
    3cca:	12 c0       	rjmp	.+36     	; 0x3cf0 <_turn_on+0x56>
    3ccc:	dc 01       	movw	r26, r24
    3cce:	aa 0f       	add	r26, r26
    3cd0:	bb 1f       	adc	r27, r27
    3cd2:	ed 01       	movw	r28, r26
    3cd4:	c8 0f       	add	r28, r24
    3cd6:	d9 1f       	adc	r29, r25
    3cd8:	cc 0f       	add	r28, r28
    3cda:	dd 1f       	adc	r29, r29
    3cdc:	c6 59       	subi	r28, 0x96	; 150
    3cde:	d6 4e       	sbci	r29, 0xE6	; 230
    3ce0:	e0 91 eb 1a 	lds	r30, 0x1AEB	; 0x801aeb <register_access+0x8>
    3ce4:	f0 91 ec 1a 	lds	r31, 0x1AEC	; 0x801aec <register_access+0x9>
    3ce8:	6a 81       	ldd	r22, Y+2	; 0x02
    3cea:	88 81       	ld	r24, Y
    3cec:	99 81       	ldd	r25, Y+1	; 0x01
    3cee:	19 95       	eicall
    3cf0:	df 91       	pop	r29
    3cf2:	cf 91       	pop	r28
    3cf4:	08 95       	ret

00003cf6 <_hal_led_task>:
    3cf6:	0f 2e       	mov	r0, r31
    3cf8:	f3 ee       	ldi	r31, 0xE3	; 227
    3cfa:	cf 2e       	mov	r12, r31
    3cfc:	fa e1       	ldi	r31, 0x1A	; 26
    3cfe:	df 2e       	mov	r13, r31
    3d00:	f0 2d       	mov	r31, r0
    3d02:	04 e0       	ldi	r16, 0x04	; 4
    3d04:	ca e6       	ldi	r28, 0x6A	; 106
    3d06:	d9 e1       	ldi	r29, 0x19	; 25
    3d08:	10 e0       	ldi	r17, 0x00	; 0
    3d0a:	8c 81       	ldd	r24, Y+4	; 0x04
    3d0c:	81 30       	cpi	r24, 0x01	; 1
    3d0e:	69 f0       	breq	.+26     	; 0x3d2a <_hal_led_task+0x34>
    3d10:	e8 f0       	brcs	.+58     	; 0x3d4c <_hal_led_task+0x56>
    3d12:	82 30       	cpi	r24, 0x02	; 2
    3d14:	39 f5       	brne	.+78     	; 0x3d64 <_hal_led_task+0x6e>
    3d16:	d6 01       	movw	r26, r12
    3d18:	1c 96       	adiw	r26, 0x0c	; 12
    3d1a:	ed 91       	ld	r30, X+
    3d1c:	fc 91       	ld	r31, X
    3d1e:	1d 97       	sbiw	r26, 0x0d	; 13
    3d20:	6a 81       	ldd	r22, Y+2	; 0x02
    3d22:	88 81       	ld	r24, Y
    3d24:	99 81       	ldd	r25, Y+1	; 0x01
    3d26:	19 95       	eicall
    3d28:	1d c0       	rjmp	.+58     	; 0x3d64 <_hal_led_task+0x6e>
    3d2a:	8d 81       	ldd	r24, Y+5	; 0x05
    3d2c:	8f 5f       	subi	r24, 0xFF	; 255
    3d2e:	8a 30       	cpi	r24, 0x0A	; 10
    3d30:	10 f4       	brcc	.+4      	; 0x3d36 <_hal_led_task+0x40>
    3d32:	8d 83       	std	Y+5, r24	; 0x05
    3d34:	17 c0       	rjmp	.+46     	; 0x3d64 <_hal_led_task+0x6e>
    3d36:	1d 82       	std	Y+5, r1	; 0x05
    3d38:	d6 01       	movw	r26, r12
    3d3a:	1c 96       	adiw	r26, 0x0c	; 12
    3d3c:	ed 91       	ld	r30, X+
    3d3e:	fc 91       	ld	r31, X
    3d40:	1d 97       	sbiw	r26, 0x0d	; 13
    3d42:	6a 81       	ldd	r22, Y+2	; 0x02
    3d44:	88 81       	ld	r24, Y
    3d46:	99 81       	ldd	r25, Y+1	; 0x01
    3d48:	19 95       	eicall
    3d4a:	0c c0       	rjmp	.+24     	; 0x3d64 <_hal_led_task+0x6e>
    3d4c:	8d 81       	ldd	r24, Y+5	; 0x05
    3d4e:	88 23       	and	r24, r24
    3d50:	31 f0       	breq	.+12     	; 0x3d5e <_hal_led_task+0x68>
    3d52:	81 2f       	mov	r24, r17
    3d54:	a2 df       	rcall	.-188    	; 0x3c9a <_turn_on>
    3d56:	8d 81       	ldd	r24, Y+5	; 0x05
    3d58:	81 50       	subi	r24, 0x01	; 1
    3d5a:	8d 83       	std	Y+5, r24	; 0x05
    3d5c:	03 c0       	rjmp	.+6      	; 0x3d64 <_hal_led_task+0x6e>
    3d5e:	0c 83       	std	Y+4, r16	; 0x04
    3d60:	81 2f       	mov	r24, r17
    3d62:	6d df       	rcall	.-294    	; 0x3c3e <_turn_off>
    3d64:	1f 5f       	subi	r17, 0xFF	; 255
    3d66:	26 96       	adiw	r28, 0x06	; 6
    3d68:	14 30       	cpi	r17, 0x04	; 4
    3d6a:	79 f6       	brne	.-98     	; 0x3d0a <_hal_led_task+0x14>
    3d6c:	65 e0       	ldi	r22, 0x05	; 5
    3d6e:	70 e0       	ldi	r23, 0x00	; 0
    3d70:	80 e0       	ldi	r24, 0x00	; 0
    3d72:	90 e0       	ldi	r25, 0x00	; 0
    3d74:	0e 94 19 16 	call	0x2c32	; 0x2c32 <vTaskDelay>
    3d78:	c5 cf       	rjmp	.-118    	; 0x3d04 <_hal_led_task+0xe>

00003d7a <led_create>:
    3d7a:	cf 92       	push	r12
    3d7c:	df 92       	push	r13
    3d7e:	ef 92       	push	r14
    3d80:	ff 92       	push	r15
    3d82:	0f 93       	push	r16
    3d84:	1f 93       	push	r17
    3d86:	cf 93       	push	r28
    3d88:	df 93       	push	r29
    3d8a:	06 2f       	mov	r16, r22
    3d8c:	0f 2e       	mov	r0, r31
    3d8e:	f3 ee       	ldi	r31, 0xE3	; 227
    3d90:	ef 2e       	mov	r14, r31
    3d92:	fa e1       	ldi	r31, 0x1A	; 26
    3d94:	ff 2e       	mov	r15, r31
    3d96:	f0 2d       	mov	r31, r0
    3d98:	d7 01       	movw	r26, r14
    3d9a:	18 96       	adiw	r26, 0x08	; 8
    3d9c:	ed 91       	ld	r30, X+
    3d9e:	fc 91       	ld	r31, X
    3da0:	19 97       	sbiw	r26, 0x09	; 9
    3da2:	66 e0       	ldi	r22, 0x06	; 6
    3da4:	87 e2       	ldi	r24, 0x27	; 39
    3da6:	90 e0       	ldi	r25, 0x00	; 0
    3da8:	19 95       	eicall
    3daa:	ca e6       	ldi	r28, 0x6A	; 106
    3dac:	d9 e1       	ldi	r29, 0x19	; 25
    3dae:	0f 2e       	mov	r0, r31
    3db0:	f8 e2       	ldi	r31, 0x28	; 40
    3db2:	cf 2e       	mov	r12, r31
    3db4:	d1 2c       	mov	r13, r1
    3db6:	f0 2d       	mov	r31, r0
    3db8:	d9 82       	std	Y+1, r13	; 0x01
    3dba:	c8 82       	st	Y, r12
    3dbc:	86 e0       	ldi	r24, 0x06	; 6
    3dbe:	8a 83       	std	Y+2, r24	; 0x02
    3dc0:	1b 82       	std	Y+3, r1	; 0x03
    3dc2:	14 e0       	ldi	r17, 0x04	; 4
    3dc4:	1c 83       	std	Y+4, r17	; 0x04
    3dc6:	80 e0       	ldi	r24, 0x00	; 0
    3dc8:	3a df       	rcall	.-396    	; 0x3c3e <_turn_off>
    3dca:	d7 01       	movw	r26, r14
    3dcc:	18 96       	adiw	r26, 0x08	; 8
    3dce:	ed 91       	ld	r30, X+
    3dd0:	fc 91       	ld	r31, X
    3dd2:	19 97       	sbiw	r26, 0x09	; 9
    3dd4:	67 e0       	ldi	r22, 0x07	; 7
    3dd6:	87 e2       	ldi	r24, 0x27	; 39
    3dd8:	90 e0       	ldi	r25, 0x00	; 0
    3dda:	19 95       	eicall
    3ddc:	df 82       	std	Y+7, r13	; 0x07
    3dde:	ce 82       	std	Y+6, r12	; 0x06
    3de0:	87 e0       	ldi	r24, 0x07	; 7
    3de2:	88 87       	std	Y+8, r24	; 0x08
    3de4:	19 86       	std	Y+9, r1	; 0x09
    3de6:	1a 87       	std	Y+10, r17	; 0x0a
    3de8:	81 e0       	ldi	r24, 0x01	; 1
    3dea:	29 df       	rcall	.-430    	; 0x3c3e <_turn_off>
    3dec:	d7 01       	movw	r26, r14
    3dee:	18 96       	adiw	r26, 0x08	; 8
    3df0:	ed 91       	ld	r30, X+
    3df2:	fc 91       	ld	r31, X
    3df4:	19 97       	sbiw	r26, 0x09	; 9
    3df6:	65 e0       	ldi	r22, 0x05	; 5
    3df8:	83 e3       	ldi	r24, 0x33	; 51
    3dfa:	90 e0       	ldi	r25, 0x00	; 0
    3dfc:	19 95       	eicall
    3dfe:	d7 01       	movw	r26, r14
    3e00:	18 96       	adiw	r26, 0x08	; 8
    3e02:	ed 91       	ld	r30, X+
    3e04:	fc 91       	ld	r31, X
    3e06:	19 97       	sbiw	r26, 0x09	; 9
    3e08:	61 e0       	ldi	r22, 0x01	; 1
    3e0a:	84 e3       	ldi	r24, 0x34	; 52
    3e0c:	90 e0       	ldi	r25, 0x00	; 0
    3e0e:	19 95       	eicall
    3e10:	84 e3       	ldi	r24, 0x34	; 52
    3e12:	90 e0       	ldi	r25, 0x00	; 0
    3e14:	9d 87       	std	Y+13, r25	; 0x0d
    3e16:	8c 87       	std	Y+12, r24	; 0x0c
    3e18:	85 e0       	ldi	r24, 0x05	; 5
    3e1a:	8e 87       	std	Y+14, r24	; 0x0e
    3e1c:	1f 86       	std	Y+15, r1	; 0x0f
    3e1e:	18 8b       	std	Y+16, r17	; 0x10
    3e20:	82 e0       	ldi	r24, 0x02	; 2
    3e22:	0d df       	rcall	.-486    	; 0x3c3e <_turn_off>
    3e24:	d7 01       	movw	r26, r14
    3e26:	18 96       	adiw	r26, 0x08	; 8
    3e28:	ed 91       	ld	r30, X+
    3e2a:	fc 91       	ld	r31, X
    3e2c:	19 97       	sbiw	r26, 0x09	; 9
    3e2e:	64 e0       	ldi	r22, 0x04	; 4
    3e30:	81 e0       	ldi	r24, 0x01	; 1
    3e32:	91 e0       	ldi	r25, 0x01	; 1
    3e34:	19 95       	eicall
    3e36:	d7 01       	movw	r26, r14
    3e38:	18 96       	adiw	r26, 0x08	; 8
    3e3a:	ed 91       	ld	r30, X+
    3e3c:	fc 91       	ld	r31, X
    3e3e:	19 97       	sbiw	r26, 0x09	; 9
    3e40:	61 e0       	ldi	r22, 0x01	; 1
    3e42:	82 e0       	ldi	r24, 0x02	; 2
    3e44:	91 e0       	ldi	r25, 0x01	; 1
    3e46:	19 95       	eicall
    3e48:	82 e0       	ldi	r24, 0x02	; 2
    3e4a:	91 e0       	ldi	r25, 0x01	; 1
    3e4c:	9b 8b       	std	Y+19, r25	; 0x13
    3e4e:	8a 8b       	std	Y+18, r24	; 0x12
    3e50:	1c 8b       	std	Y+20, r17	; 0x14
    3e52:	1d 8a       	std	Y+21, r1	; 0x15
    3e54:	1e 8b       	std	Y+22, r17	; 0x16
    3e56:	83 e0       	ldi	r24, 0x03	; 3
    3e58:	f2 de       	rcall	.-540    	; 0x3c3e <_turn_off>
    3e5a:	e1 2c       	mov	r14, r1
    3e5c:	f1 2c       	mov	r15, r1
    3e5e:	20 e0       	ldi	r18, 0x00	; 0
    3e60:	30 e0       	ldi	r19, 0x00	; 0
    3e62:	40 ec       	ldi	r20, 0xC0	; 192
    3e64:	50 e0       	ldi	r21, 0x00	; 0
    3e66:	6e e8       	ldi	r22, 0x8E	; 142
    3e68:	75 e0       	ldi	r23, 0x05	; 5
    3e6a:	8b e7       	ldi	r24, 0x7B	; 123
    3e6c:	9e e1       	ldi	r25, 0x1E	; 30
    3e6e:	0e 94 59 13 	call	0x26b2	; 0x26b2 <xTaskCreate>
    3e72:	df 91       	pop	r29
    3e74:	cf 91       	pop	r28
    3e76:	1f 91       	pop	r17
    3e78:	0f 91       	pop	r16
    3e7a:	ff 90       	pop	r15
    3e7c:	ef 90       	pop	r14
    3e7e:	df 90       	pop	r13
    3e80:	cf 90       	pop	r12
    3e82:	08 95       	ret

00003e84 <led_slow_blink>:
    3e84:	0f 93       	push	r16
    3e86:	1f 93       	push	r17
    3e88:	cf 93       	push	r28
    3e8a:	df 93       	push	r29
    3e8c:	c8 2f       	mov	r28, r24
    3e8e:	d0 e0       	ldi	r29, 0x00	; 0
    3e90:	8e 01       	movw	r16, r28
    3e92:	00 0f       	add	r16, r16
    3e94:	11 1f       	adc	r17, r17
    3e96:	d8 01       	movw	r26, r16
    3e98:	ac 0f       	add	r26, r28
    3e9a:	bd 1f       	adc	r27, r29
    3e9c:	aa 0f       	add	r26, r26
    3e9e:	bb 1f       	adc	r27, r27
    3ea0:	a6 59       	subi	r26, 0x96	; 150
    3ea2:	b6 4e       	sbci	r27, 0xE6	; 230
    3ea4:	e0 91 ef 1a 	lds	r30, 0x1AEF	; 0x801aef <register_access+0xc>
    3ea8:	f0 91 f0 1a 	lds	r31, 0x1AF0	; 0x801af0 <register_access+0xd>
    3eac:	12 96       	adiw	r26, 0x02	; 2
    3eae:	6c 91       	ld	r22, X
    3eb0:	12 97       	sbiw	r26, 0x02	; 2
    3eb2:	8d 91       	ld	r24, X+
    3eb4:	9c 91       	ld	r25, X
    3eb6:	19 95       	eicall
    3eb8:	c0 0f       	add	r28, r16
    3eba:	d1 1f       	adc	r29, r17
    3ebc:	cc 0f       	add	r28, r28
    3ebe:	dd 1f       	adc	r29, r29
    3ec0:	c6 59       	subi	r28, 0x96	; 150
    3ec2:	d6 4e       	sbci	r29, 0xE6	; 230
    3ec4:	81 e0       	ldi	r24, 0x01	; 1
    3ec6:	8c 83       	std	Y+4, r24	; 0x04
    3ec8:	df 91       	pop	r29
    3eca:	cf 91       	pop	r28
    3ecc:	1f 91       	pop	r17
    3ece:	0f 91       	pop	r16
    3ed0:	08 95       	ret

00003ed2 <led_fast_blink>:
    3ed2:	0f 93       	push	r16
    3ed4:	1f 93       	push	r17
    3ed6:	cf 93       	push	r28
    3ed8:	df 93       	push	r29
    3eda:	c8 2f       	mov	r28, r24
    3edc:	d0 e0       	ldi	r29, 0x00	; 0
    3ede:	8e 01       	movw	r16, r28
    3ee0:	00 0f       	add	r16, r16
    3ee2:	11 1f       	adc	r17, r17
    3ee4:	d8 01       	movw	r26, r16
    3ee6:	ac 0f       	add	r26, r28
    3ee8:	bd 1f       	adc	r27, r29
    3eea:	aa 0f       	add	r26, r26
    3eec:	bb 1f       	adc	r27, r27
    3eee:	a6 59       	subi	r26, 0x96	; 150
    3ef0:	b6 4e       	sbci	r27, 0xE6	; 230
    3ef2:	e0 91 ef 1a 	lds	r30, 0x1AEF	; 0x801aef <register_access+0xc>
    3ef6:	f0 91 f0 1a 	lds	r31, 0x1AF0	; 0x801af0 <register_access+0xd>
    3efa:	12 96       	adiw	r26, 0x02	; 2
    3efc:	6c 91       	ld	r22, X
    3efe:	12 97       	sbiw	r26, 0x02	; 2
    3f00:	8d 91       	ld	r24, X+
    3f02:	9c 91       	ld	r25, X
    3f04:	19 95       	eicall
    3f06:	c0 0f       	add	r28, r16
    3f08:	d1 1f       	adc	r29, r17
    3f0a:	cc 0f       	add	r28, r28
    3f0c:	dd 1f       	adc	r29, r29
    3f0e:	c6 59       	subi	r28, 0x96	; 150
    3f10:	d6 4e       	sbci	r29, 0xE6	; 230
    3f12:	82 e0       	ldi	r24, 0x02	; 2
    3f14:	8c 83       	std	Y+4, r24	; 0x04
    3f16:	df 91       	pop	r29
    3f18:	cf 91       	pop	r28
    3f1a:	1f 91       	pop	r17
    3f1c:	0f 91       	pop	r16
    3f1e:	08 95       	ret

00003f20 <led_led_on>:
    3f20:	28 2f       	mov	r18, r24
    3f22:	30 e0       	ldi	r19, 0x00	; 0
    3f24:	f9 01       	movw	r30, r18
    3f26:	ee 0f       	add	r30, r30
    3f28:	ff 1f       	adc	r31, r31
    3f2a:	e2 0f       	add	r30, r18
    3f2c:	f3 1f       	adc	r31, r19
    3f2e:	ee 0f       	add	r30, r30
    3f30:	ff 1f       	adc	r31, r31
    3f32:	e6 59       	subi	r30, 0x96	; 150
    3f34:	f6 4e       	sbci	r31, 0xE6	; 230
    3f36:	93 e0       	ldi	r25, 0x03	; 3
    3f38:	94 83       	std	Z+4, r25	; 0x04
    3f3a:	af ce       	rjmp	.-674    	; 0x3c9a <_turn_on>
    3f3c:	08 95       	ret

00003f3e <led_led_off>:
    3f3e:	28 2f       	mov	r18, r24
    3f40:	30 e0       	ldi	r19, 0x00	; 0
    3f42:	f9 01       	movw	r30, r18
    3f44:	ee 0f       	add	r30, r30
    3f46:	ff 1f       	adc	r31, r31
    3f48:	e2 0f       	add	r30, r18
    3f4a:	f3 1f       	adc	r31, r19
    3f4c:	ee 0f       	add	r30, r30
    3f4e:	ff 1f       	adc	r31, r31
    3f50:	e6 59       	subi	r30, 0x96	; 150
    3f52:	f6 4e       	sbci	r31, 0xE6	; 230
    3f54:	94 e0       	ldi	r25, 0x04	; 4
    3f56:	94 83       	std	Z+4, r25	; 0x04
    3f58:	72 ce       	rjmp	.-796    	; 0x3c3e <_turn_off>
    3f5a:	08 95       	ret

00003f5c <led_long_puls>:
    3f5c:	90 e0       	ldi	r25, 0x00	; 0
    3f5e:	fc 01       	movw	r30, r24
    3f60:	ee 0f       	add	r30, r30
    3f62:	ff 1f       	adc	r31, r31
    3f64:	df 01       	movw	r26, r30
    3f66:	a8 0f       	add	r26, r24
    3f68:	b9 1f       	adc	r27, r25
    3f6a:	aa 0f       	add	r26, r26
    3f6c:	bb 1f       	adc	r27, r27
    3f6e:	a6 59       	subi	r26, 0x96	; 150
    3f70:	b6 4e       	sbci	r27, 0xE6	; 230
    3f72:	24 e0       	ldi	r18, 0x04	; 4
    3f74:	15 96       	adiw	r26, 0x05	; 5
    3f76:	2c 93       	st	X, r18
    3f78:	15 97       	sbiw	r26, 0x05	; 5
    3f7a:	fd 01       	movw	r30, r26
    3f7c:	14 82       	std	Z+4, r1	; 0x04
    3f7e:	08 95       	ret

00003f80 <led_short_puls>:
    3f80:	90 e0       	ldi	r25, 0x00	; 0
    3f82:	fc 01       	movw	r30, r24
    3f84:	ee 0f       	add	r30, r30
    3f86:	ff 1f       	adc	r31, r31
    3f88:	df 01       	movw	r26, r30
    3f8a:	a8 0f       	add	r26, r24
    3f8c:	b9 1f       	adc	r27, r25
    3f8e:	aa 0f       	add	r26, r26
    3f90:	bb 1f       	adc	r27, r27
    3f92:	a6 59       	subi	r26, 0x96	; 150
    3f94:	b6 4e       	sbci	r27, 0xE6	; 230
    3f96:	21 e0       	ldi	r18, 0x01	; 1
    3f98:	15 96       	adiw	r26, 0x05	; 5
    3f9a:	2c 93       	st	X, r18
    3f9c:	15 97       	sbiw	r26, 0x05	; 5
    3f9e:	fd 01       	movw	r30, r26
    3fa0:	14 82       	std	Z+4, r1	; 0x04
    3fa2:	08 95       	ret

00003fa4 <_serial_call_back>:
    3fa4:	0f 93       	push	r16
    3fa6:	1f 93       	push	r17
    3fa8:	cf 93       	push	r28
    3faa:	df 93       	push	r29
    3fac:	1f 92       	push	r1
    3fae:	1f 92       	push	r1
    3fb0:	cd b7       	in	r28, 0x3d	; 61
    3fb2:	de b7       	in	r29, 0x3e	; 62
    3fb4:	8c 01       	movw	r16, r24
    3fb6:	19 82       	std	Y+1, r1	; 0x01
    3fb8:	2d c0       	rjmp	.+90     	; 0x4014 <_serial_call_back+0x70>
    3fba:	e0 91 e6 19 	lds	r30, 0x19E6	; 0x8019e6 <rec_buf_inp.2947>
    3fbe:	ec 32       	cpi	r30, 0x2C	; 44
    3fc0:	50 f4       	brcc	.+20     	; 0x3fd6 <_serial_call_back+0x32>
    3fc2:	81 e0       	ldi	r24, 0x01	; 1
    3fc4:	8e 0f       	add	r24, r30
    3fc6:	80 93 e6 19 	sts	0x19E6, r24	; 0x8019e6 <rec_buf_inp.2947>
    3fca:	f0 e0       	ldi	r31, 0x00	; 0
    3fcc:	e8 5e       	subi	r30, 0xE8	; 232
    3fce:	f5 4e       	sbci	r31, 0xE5	; 229
    3fd0:	8a 81       	ldd	r24, Y+2	; 0x02
    3fd2:	80 83       	st	Z, r24
    3fd4:	02 c0       	rjmp	.+4      	; 0x3fda <_serial_call_back+0x36>
    3fd6:	10 92 e6 19 	sts	0x19E6, r1	; 0x8019e6 <rec_buf_inp.2947>
    3fda:	8a 81       	ldd	r24, Y+2	; 0x02
    3fdc:	8a 30       	cpi	r24, 0x0A	; 10
    3fde:	d1 f4       	brne	.+52     	; 0x4014 <_serial_call_back+0x70>
    3fe0:	40 91 e6 19 	lds	r20, 0x19E6	; 0x8019e6 <rec_buf_inp.2947>
    3fe4:	50 e0       	ldi	r21, 0x00	; 0
    3fe6:	fa 01       	movw	r30, r20
    3fe8:	ea 5e       	subi	r30, 0xEA	; 234
    3fea:	f5 4e       	sbci	r31, 0xE5	; 229
    3fec:	10 82       	st	Z, r1
    3fee:	41 50       	subi	r20, 0x01	; 1
    3ff0:	51 09       	sbc	r21, r1
    3ff2:	9e 01       	movw	r18, r28
    3ff4:	2f 5f       	subi	r18, 0xFF	; 255
    3ff6:	3f 4f       	sbci	r19, 0xFF	; 255
    3ff8:	68 e1       	ldi	r22, 0x18	; 24
    3ffa:	7a e1       	ldi	r23, 0x1A	; 26
    3ffc:	80 91 e9 19 	lds	r24, 0x19E9	; 0x8019e9 <_serial_reply_buffer_handle>
    4000:	90 91 ea 19 	lds	r25, 0x19EA	; 0x8019ea <_serial_reply_buffer_handle+0x1>
    4004:	0e 94 d3 11 	call	0x23a6	; 0x23a6 <xStreamBufferSendFromISR>
    4008:	89 81       	ldd	r24, Y+1	; 0x01
    400a:	81 11       	cpse	r24, r1
    400c:	0e 94 57 0b 	call	0x16ae	; 0x16ae <vPortYield>
    4010:	10 92 e6 19 	sts	0x19E6, r1	; 0x8019e6 <rec_buf_inp.2947>
    4014:	be 01       	movw	r22, r28
    4016:	6e 5f       	subi	r22, 0xFE	; 254
    4018:	7f 4f       	sbci	r23, 0xFF	; 255
    401a:	c8 01       	movw	r24, r16
    401c:	58 d6       	rcall	.+3248   	; 0x4cce <serial_get_byte>
    401e:	88 23       	and	r24, r24
    4020:	61 f2       	breq	.-104    	; 0x3fba <_serial_call_back+0x16>
    4022:	0f 90       	pop	r0
    4024:	0f 90       	pop	r0
    4026:	df 91       	pop	r29
    4028:	cf 91       	pop	r28
    402a:	1f 91       	pop	r17
    402c:	0f 91       	pop	r16
    402e:	08 95       	ret

00004030 <_upload_message>:
    4030:	0f 93       	push	r16
    4032:	1f 93       	push	r17
    4034:	cf 93       	push	r28
    4036:	df 93       	push	r29
    4038:	8c 01       	movw	r16, r24
    403a:	eb 01       	movw	r28, r22
    403c:	80 91 e9 19 	lds	r24, 0x19E9	; 0x8019e9 <_serial_reply_buffer_handle>
    4040:	90 91 ea 19 	lds	r25, 0x19EA	; 0x8019ea <_serial_reply_buffer_handle+0x1>
    4044:	0e 94 ea 10 	call	0x21d4	; 0x21d4 <xStreamBufferReset>
    4048:	b8 01       	movw	r22, r16
    404a:	82 e8       	ldi	r24, 0x82	; 130
    404c:	99 e1       	ldi	r25, 0x19	; 25
    404e:	0e 94 74 2e 	call	0x5ce8	; 0x5ce8 <strcpy>
    4052:	20 97       	sbiw	r28, 0x00	; 0
    4054:	79 f0       	breq	.+30     	; 0x4074 <_upload_message+0x44>
    4056:	e2 e8       	ldi	r30, 0x82	; 130
    4058:	f9 e1       	ldi	r31, 0x19	; 25
    405a:	01 90       	ld	r0, Z+
    405c:	00 20       	and	r0, r0
    405e:	e9 f7       	brne	.-6      	; 0x405a <_upload_message+0x2a>
    4060:	31 97       	sbiw	r30, 0x01	; 1
    4062:	80 e2       	ldi	r24, 0x20	; 32
    4064:	90 e0       	ldi	r25, 0x00	; 0
    4066:	91 83       	std	Z+1, r25	; 0x01
    4068:	80 83       	st	Z, r24
    406a:	be 01       	movw	r22, r28
    406c:	82 e8       	ldi	r24, 0x82	; 130
    406e:	99 e1       	ldi	r25, 0x19	; 25
    4070:	0e 94 69 2e 	call	0x5cd2	; 0x5cd2 <strcat>
    4074:	e2 e8       	ldi	r30, 0x82	; 130
    4076:	f9 e1       	ldi	r31, 0x19	; 25
    4078:	df 01       	movw	r26, r30
    407a:	0d 90       	ld	r0, X+
    407c:	00 20       	and	r0, r0
    407e:	e9 f7       	brne	.-6      	; 0x407a <_upload_message+0x4a>
    4080:	11 97       	sbiw	r26, 0x01	; 1
    4082:	8d e0       	ldi	r24, 0x0D	; 13
    4084:	9a e0       	ldi	r25, 0x0A	; 10
    4086:	11 96       	adiw	r26, 0x01	; 1
    4088:	9c 93       	st	X, r25
    408a:	8e 93       	st	-X, r24
    408c:	12 96       	adiw	r26, 0x02	; 2
    408e:	1c 92       	st	X, r1
    4090:	01 90       	ld	r0, Z+
    4092:	00 20       	and	r0, r0
    4094:	e9 f7       	brne	.-6      	; 0x4090 <_upload_message+0x60>
    4096:	31 97       	sbiw	r30, 0x01	; 1
    4098:	e2 58       	subi	r30, 0x82	; 130
    409a:	f9 41       	sbci	r31, 0x19	; 25
    409c:	ae 2f       	mov	r26, r30
    409e:	82 e8       	ldi	r24, 0x82	; 130
    40a0:	99 e1       	ldi	r25, 0x19	; 25
    40a2:	ac 01       	movw	r20, r24
    40a4:	6a 2f       	mov	r22, r26
    40a6:	80 91 eb 19 	lds	r24, 0x19EB	; 0x8019eb <_rn2483_serial>
    40aa:	90 91 ec 19 	lds	r25, 0x19EC	; 0x8019ec <_rn2483_serial+0x1>
    40ae:	bf d5       	rcall	.+2942   	; 0x4c2e <serial_send_bytes>
    40b0:	81 11       	cpse	r24, r1
    40b2:	11 c0       	rjmp	.+34     	; 0x40d6 <_upload_message+0xa6>
    40b4:	08 e2       	ldi	r16, 0x28	; 40
    40b6:	15 e0       	ldi	r17, 0x05	; 5
    40b8:	20 e0       	ldi	r18, 0x00	; 0
    40ba:	30 e0       	ldi	r19, 0x00	; 0
    40bc:	4d e2       	ldi	r20, 0x2D	; 45
    40be:	50 e0       	ldi	r21, 0x00	; 0
    40c0:	62 e7       	ldi	r22, 0x72	; 114
    40c2:	7a e1       	ldi	r23, 0x1A	; 26
    40c4:	80 91 e9 19 	lds	r24, 0x19E9	; 0x8019e9 <_serial_reply_buffer_handle>
    40c8:	90 91 ea 19 	lds	r25, 0x19EA	; 0x8019ea <_serial_reply_buffer_handle+0x1>
    40cc:	0e 94 16 12 	call	0x242c	; 0x242c <xStreamBufferReceive>
    40d0:	82 e7       	ldi	r24, 0x72	; 114
    40d2:	9a e1       	ldi	r25, 0x1A	; 26
    40d4:	02 c0       	rjmp	.+4      	; 0x40da <_upload_message+0xaa>
    40d6:	80 e0       	ldi	r24, 0x00	; 0
    40d8:	90 e0       	ldi	r25, 0x00	; 0
    40da:	df 91       	pop	r29
    40dc:	cf 91       	pop	r28
    40de:	1f 91       	pop	r17
    40e0:	0f 91       	pop	r16
    40e2:	08 95       	ret

000040e4 <_reply2return_code>:
    40e4:	2f 92       	push	r2
    40e6:	3f 92       	push	r3
    40e8:	4f 92       	push	r4
    40ea:	5f 92       	push	r5
    40ec:	6f 92       	push	r6
    40ee:	7f 92       	push	r7
    40f0:	8f 92       	push	r8
    40f2:	9f 92       	push	r9
    40f4:	af 92       	push	r10
    40f6:	bf 92       	push	r11
    40f8:	cf 92       	push	r12
    40fa:	df 92       	push	r13
    40fc:	ef 92       	push	r14
    40fe:	ff 92       	push	r15
    4100:	0f 93       	push	r16
    4102:	1f 93       	push	r17
    4104:	cf 93       	push	r28
    4106:	df 93       	push	r29
    4108:	5c 01       	movw	r10, r24
    410a:	fc 01       	movw	r30, r24
    410c:	01 90       	ld	r0, Z+
    410e:	00 20       	and	r0, r0
    4110:	e9 f7       	brne	.-6      	; 0x410c <_reply2return_code+0x28>
    4112:	31 97       	sbiw	r30, 0x01	; 1
    4114:	6f 01       	movw	r12, r30
    4116:	c8 1a       	sub	r12, r24
    4118:	d9 0a       	sbc	r13, r25
    411a:	5c 2c       	mov	r5, r12
    411c:	0f 2e       	mov	r0, r31
    411e:	ff e2       	ldi	r31, 0x2F	; 47
    4120:	8f 2e       	mov	r8, r31
    4122:	f8 e0       	ldi	r31, 0x08	; 8
    4124:	9f 2e       	mov	r9, r31
    4126:	f0 2d       	mov	r31, r0
    4128:	e1 2c       	mov	r14, r1
    412a:	f1 2c       	mov	r15, r1
    412c:	4c 2c       	mov	r4, r12
    412e:	37 01       	movw	r6, r14
    4130:	f4 01       	movw	r30, r8
    4132:	01 81       	ldd	r16, Z+1	; 0x01
    4134:	12 81       	ldd	r17, Z+2	; 0x02
    4136:	e8 01       	movw	r28, r16
    4138:	09 90       	ld	r0, Y+
    413a:	00 20       	and	r0, r0
    413c:	e9 f7       	brne	.-6      	; 0x4138 <_reply2return_code+0x54>
    413e:	21 97       	sbiw	r28, 0x01	; 1
    4140:	c0 1b       	sub	r28, r16
    4142:	d1 0b       	sbc	r29, r17
    4144:	3c 2e       	mov	r3, r28
    4146:	f9 e0       	ldi	r31, 0x09	; 9
    4148:	cf 16       	cp	r12, r31
    414a:	d1 04       	cpc	r13, r1
    414c:	58 f0       	brcs	.+22     	; 0x4164 <_reply2return_code+0x80>
    414e:	f4 01       	movw	r30, r8
    4150:	20 80       	ld	r2, Z
    4152:	fe e0       	ldi	r31, 0x0E	; 14
    4154:	2f 12       	cpse	r2, r31
    4156:	06 c0       	rjmp	.+12     	; 0x4164 <_reply2return_code+0x80>
    4158:	b8 01       	movw	r22, r16
    415a:	c5 01       	movw	r24, r10
    415c:	0e 94 44 2e 	call	0x5c88	; 0x5c88 <strcasestr>
    4160:	89 2b       	or	r24, r25
    4162:	09 f5       	brne	.+66     	; 0x41a6 <_reply2return_code+0xc2>
    4164:	44 2d       	mov	r20, r4
    4166:	35 14       	cp	r3, r5
    4168:	08 f4       	brcc	.+2      	; 0x416c <_reply2return_code+0x88>
    416a:	4c 2f       	mov	r20, r28
    416c:	50 e0       	ldi	r21, 0x00	; 0
    416e:	b8 01       	movw	r22, r16
    4170:	c5 01       	movw	r24, r10
    4172:	0e 94 7b 2e 	call	0x5cf6	; 0x5cf6 <strncasecmp>
    4176:	89 2b       	or	r24, r25
    4178:	49 f4       	brne	.+18     	; 0x418c <_reply2return_code+0xa8>
    417a:	f3 01       	movw	r30, r6
    417c:	ee 0f       	add	r30, r30
    417e:	ff 1f       	adc	r31, r31
    4180:	e6 0d       	add	r30, r6
    4182:	f7 1d       	adc	r31, r7
    4184:	e1 5d       	subi	r30, 0xD1	; 209
    4186:	f7 4f       	sbci	r31, 0xF7	; 247
    4188:	20 80       	ld	r2, Z
    418a:	0d c0       	rjmp	.+26     	; 0x41a6 <_reply2return_code+0xc2>
    418c:	8f ef       	ldi	r24, 0xFF	; 255
    418e:	e8 1a       	sub	r14, r24
    4190:	f8 0a       	sbc	r15, r24
    4192:	e3 e0       	ldi	r30, 0x03	; 3
    4194:	8e 0e       	add	r8, r30
    4196:	91 1c       	adc	r9, r1
    4198:	f1 e1       	ldi	r31, 0x11	; 17
    419a:	ef 16       	cp	r14, r31
    419c:	f1 04       	cpc	r15, r1
    419e:	39 f6       	brne	.-114    	; 0x412e <_reply2return_code+0x4a>
    41a0:	68 94       	set
    41a2:	22 24       	eor	r2, r2
    41a4:	24 f8       	bld	r2, 4
    41a6:	82 2d       	mov	r24, r2
    41a8:	df 91       	pop	r29
    41aa:	cf 91       	pop	r28
    41ac:	1f 91       	pop	r17
    41ae:	0f 91       	pop	r16
    41b0:	ff 90       	pop	r15
    41b2:	ef 90       	pop	r14
    41b4:	df 90       	pop	r13
    41b6:	cf 90       	pop	r12
    41b8:	bf 90       	pop	r11
    41ba:	af 90       	pop	r10
    41bc:	9f 90       	pop	r9
    41be:	8f 90       	pop	r8
    41c0:	7f 90       	pop	r7
    41c2:	6f 90       	pop	r6
    41c4:	5f 90       	pop	r5
    41c6:	4f 90       	pop	r4
    41c8:	3f 90       	pop	r3
    41ca:	2f 90       	pop	r2
    41cc:	08 95       	ret

000041ce <_upload_message_rc>:
    41ce:	30 df       	rcall	.-416    	; 0x4030 <_upload_message>
    41d0:	89 cf       	rjmp	.-238    	; 0x40e4 <_reply2return_code>
    41d2:	08 95       	ret

000041d4 <lora_driver_flush_buffers>:
    41d4:	80 91 e9 19 	lds	r24, 0x19E9	; 0x8019e9 <_serial_reply_buffer_handle>
    41d8:	90 91 ea 19 	lds	r25, 0x19EA	; 0x8019ea <_serial_reply_buffer_handle+0x1>
    41dc:	0c 94 ea 10 	jmp	0x21d4	; 0x21d4 <xStreamBufferReset>
    41e0:	08 95       	ret

000041e2 <lora_driver_create>:
    41e2:	8f 92       	push	r8
    41e4:	9f 92       	push	r9
    41e6:	af 92       	push	r10
    41e8:	cf 92       	push	r12
    41ea:	ef 92       	push	r14
    41ec:	0f 93       	push	r16
    41ee:	1f 93       	push	r17
    41f0:	cf 93       	push	r28
    41f2:	c8 2f       	mov	r28, r24
    41f4:	8b 01       	movw	r16, r22
    41f6:	41 e0       	ldi	r20, 0x01	; 1
    41f8:	60 e0       	ldi	r22, 0x00	; 0
    41fa:	70 e0       	ldi	r23, 0x00	; 0
    41fc:	88 ec       	ldi	r24, 0xC8	; 200
    41fe:	90 e0       	ldi	r25, 0x00	; 0
    4200:	0e 94 be 10 	call	0x217c	; 0x217c <xStreamBufferGenericCreate>
    4204:	90 93 ea 19 	sts	0x19EA, r25	; 0x8019ea <_serial_reply_buffer_handle+0x1>
    4208:	80 93 e9 19 	sts	0x19E9, r24	; 0x8019e9 <_serial_reply_buffer_handle>
    420c:	10 93 e8 19 	sts	0x19E8, r17	; 0x8019e8 <_downlinkMessageBuffer+0x1>
    4210:	00 93 e7 19 	sts	0x19E7, r16	; 0x8019e7 <_downlinkMessageBuffer>
    4214:	0f 2e       	mov	r0, r31
    4216:	f2 ed       	ldi	r31, 0xD2	; 210
    4218:	8f 2e       	mov	r8, r31
    421a:	ff e1       	ldi	r31, 0x1F	; 31
    421c:	9f 2e       	mov	r9, r31
    421e:	f0 2d       	mov	r31, r0
    4220:	68 94       	set
    4222:	aa 24       	eor	r10, r10
    4224:	a6 f8       	bld	r10, 6
    4226:	68 94       	set
    4228:	cc 24       	eor	r12, r12
    422a:	c6 f8       	bld	r12, 6
    422c:	e1 2c       	mov	r14, r1
    422e:	00 e0       	ldi	r16, 0x00	; 0
    4230:	23 e0       	ldi	r18, 0x03	; 3
    4232:	40 e0       	ldi	r20, 0x00	; 0
    4234:	51 ee       	ldi	r21, 0xE1	; 225
    4236:	60 e0       	ldi	r22, 0x00	; 0
    4238:	70 e0       	ldi	r23, 0x00	; 0
    423a:	8c 2f       	mov	r24, r28
    423c:	3d d4       	rcall	.+2170   	; 0x4ab8 <serial_new_instance>
    423e:	90 93 ec 19 	sts	0x19EC, r25	; 0x8019ec <_rn2483_serial+0x1>
    4242:	80 93 eb 19 	sts	0x19EB, r24	; 0x8019eb <_rn2483_serial>
    4246:	e0 91 eb 1a 	lds	r30, 0x1AEB	; 0x801aeb <register_access+0x8>
    424a:	f0 91 ec 1a 	lds	r31, 0x1AEC	; 0x801aec <register_access+0x9>
    424e:	64 e0       	ldi	r22, 0x04	; 4
    4250:	87 e0       	ldi	r24, 0x07	; 7
    4252:	91 e0       	ldi	r25, 0x01	; 1
    4254:	19 95       	eicall
    4256:	cf 91       	pop	r28
    4258:	1f 91       	pop	r17
    425a:	0f 91       	pop	r16
    425c:	ef 90       	pop	r14
    425e:	cf 90       	pop	r12
    4260:	af 90       	pop	r10
    4262:	9f 90       	pop	r9
    4264:	8f 90       	pop	r8
    4266:	08 95       	ret

00004268 <lora_driver_reset_rn2483>:
    4268:	88 23       	and	r24, r24
    426a:	49 f0       	breq	.+18     	; 0x427e <lora_driver_reset_rn2483+0x16>
    426c:	e0 91 f5 1a 	lds	r30, 0x1AF5	; 0x801af5 <register_access+0x12>
    4270:	f0 91 f6 1a 	lds	r31, 0x1AF6	; 0x801af6 <register_access+0x13>
    4274:	64 e0       	ldi	r22, 0x04	; 4
    4276:	88 e0       	ldi	r24, 0x08	; 8
    4278:	91 e0       	ldi	r25, 0x01	; 1
    427a:	19 95       	eicall
    427c:	08 95       	ret
    427e:	e0 91 eb 1a 	lds	r30, 0x1AEB	; 0x801aeb <register_access+0x8>
    4282:	f0 91 ec 1a 	lds	r31, 0x1AEC	; 0x801aec <register_access+0x9>
    4286:	64 e0       	ldi	r22, 0x04	; 4
    4288:	88 e0       	ldi	r24, 0x08	; 8
    428a:	91 e0       	ldi	r25, 0x01	; 1
    428c:	19 95       	eicall
    428e:	08 95       	ret

00004290 <lora_driver_rn2483_factory_reset>:
    4290:	60 e0       	ldi	r22, 0x00	; 0
    4292:	70 e0       	ldi	r23, 0x00	; 0
    4294:	85 eb       	ldi	r24, 0xB5	; 181
    4296:	95 e0       	ldi	r25, 0x05	; 5
    4298:	cb de       	rcall	.-618    	; 0x4030 <_upload_message>
    429a:	e2 e7       	ldi	r30, 0x72	; 114
    429c:	fa e1       	ldi	r31, 0x1A	; 26
    429e:	01 90       	ld	r0, Z+
    42a0:	00 20       	and	r0, r0
    42a2:	e9 f7       	brne	.-6      	; 0x429e <lora_driver_rn2483_factory_reset+0xe>
    42a4:	31 97       	sbiw	r30, 0x01	; 1
    42a6:	e2 57       	subi	r30, 0x72	; 114
    42a8:	fa 41       	sbci	r31, 0x1A	; 26
    42aa:	81 e0       	ldi	r24, 0x01	; 1
    42ac:	75 97       	sbiw	r30, 0x15	; 21
    42ae:	08 f0       	brcs	.+2      	; 0x42b2 <lora_driver_rn2483_factory_reset+0x22>
    42b0:	80 e0       	ldi	r24, 0x00	; 0
    42b2:	08 95       	ret

000042b4 <lora_driver_get_rn2483_hweui>:
    42b4:	cf 93       	push	r28
    42b6:	df 93       	push	r29
    42b8:	ec 01       	movw	r28, r24
    42ba:	60 e0       	ldi	r22, 0x00	; 0
    42bc:	70 e0       	ldi	r23, 0x00	; 0
    42be:	86 ec       	ldi	r24, 0xC6	; 198
    42c0:	95 e0       	ldi	r25, 0x05	; 5
    42c2:	b6 de       	rcall	.-660    	; 0x4030 <_upload_message>
    42c4:	e2 e7       	ldi	r30, 0x72	; 114
    42c6:	fa e1       	ldi	r31, 0x1A	; 26
    42c8:	01 90       	ld	r0, Z+
    42ca:	00 20       	and	r0, r0
    42cc:	e9 f7       	brne	.-6      	; 0x42c8 <lora_driver_get_rn2483_hweui+0x14>
    42ce:	e3 58       	subi	r30, 0x83	; 131
    42d0:	fa 41       	sbci	r31, 0x1A	; 26
    42d2:	39 f4       	brne	.+14     	; 0x42e2 <lora_driver_get_rn2483_hweui+0x2e>
    42d4:	62 e7       	ldi	r22, 0x72	; 114
    42d6:	7a e1       	ldi	r23, 0x1A	; 26
    42d8:	ce 01       	movw	r24, r28
    42da:	0e 94 74 2e 	call	0x5ce8	; 0x5ce8 <strcpy>
    42de:	80 e0       	ldi	r24, 0x00	; 0
    42e0:	02 c0       	rjmp	.+4      	; 0x42e6 <lora_driver_get_rn2483_hweui+0x32>
    42e2:	18 82       	st	Y, r1
    42e4:	81 e0       	ldi	r24, 0x01	; 1
    42e6:	df 91       	pop	r29
    42e8:	cf 91       	pop	r28
    42ea:	08 95       	ret

000042ec <lora_driver_set_device_identifier>:
    42ec:	fc 01       	movw	r30, r24
    42ee:	01 90       	ld	r0, Z+
    42f0:	00 20       	and	r0, r0
    42f2:	e9 f7       	brne	.-6      	; 0x42ee <lora_driver_set_device_identifier+0x2>
    42f4:	9f 01       	movw	r18, r30
    42f6:	21 51       	subi	r18, 0x11	; 17
    42f8:	31 09       	sbc	r19, r1
    42fa:	28 17       	cp	r18, r24
    42fc:	39 07       	cpc	r19, r25
    42fe:	29 f4       	brne	.+10     	; 0x430a <lora_driver_set_device_identifier+0x1e>
    4300:	bc 01       	movw	r22, r24
    4302:	84 ef       	ldi	r24, 0xF4	; 244
    4304:	95 e0       	ldi	r25, 0x05	; 5
    4306:	63 cf       	rjmp	.-314    	; 0x41ce <_upload_message_rc>
    4308:	08 95       	ret
    430a:	89 e0       	ldi	r24, 0x09	; 9
    430c:	08 95       	ret

0000430e <lora_driver_set_application_identifier>:
    430e:	fc 01       	movw	r30, r24
    4310:	01 90       	ld	r0, Z+
    4312:	00 20       	and	r0, r0
    4314:	e9 f7       	brne	.-6      	; 0x4310 <lora_driver_set_application_identifier+0x2>
    4316:	9f 01       	movw	r18, r30
    4318:	21 51       	subi	r18, 0x11	; 17
    431a:	31 09       	sbc	r19, r1
    431c:	28 17       	cp	r18, r24
    431e:	39 07       	cpc	r19, r25
    4320:	29 f4       	brne	.+10     	; 0x432c <lora_driver_set_application_identifier+0x1e>
    4322:	bc 01       	movw	r22, r24
    4324:	83 e0       	ldi	r24, 0x03	; 3
    4326:	96 e0       	ldi	r25, 0x06	; 6
    4328:	52 cf       	rjmp	.-348    	; 0x41ce <_upload_message_rc>
    432a:	08 95       	ret
    432c:	89 e0       	ldi	r24, 0x09	; 9
    432e:	08 95       	ret

00004330 <lora_driver_set_application_key>:
    4330:	fc 01       	movw	r30, r24
    4332:	01 90       	ld	r0, Z+
    4334:	00 20       	and	r0, r0
    4336:	e9 f7       	brne	.-6      	; 0x4332 <lora_driver_set_application_key+0x2>
    4338:	9f 01       	movw	r18, r30
    433a:	21 52       	subi	r18, 0x21	; 33
    433c:	31 09       	sbc	r19, r1
    433e:	28 17       	cp	r18, r24
    4340:	39 07       	cpc	r19, r25
    4342:	29 f4       	brne	.+10     	; 0x434e <lora_driver_set_application_key+0x1e>
    4344:	bc 01       	movw	r22, r24
    4346:	82 e1       	ldi	r24, 0x12	; 18
    4348:	96 e0       	ldi	r25, 0x06	; 6
    434a:	41 cf       	rjmp	.-382    	; 0x41ce <_upload_message_rc>
    434c:	08 95       	ret
    434e:	89 e0       	ldi	r24, 0x09	; 9
    4350:	08 95       	ret

00004352 <lora_driver_save_mac>:
    4352:	60 e0       	ldi	r22, 0x00	; 0
    4354:	70 e0       	ldi	r23, 0x00	; 0
    4356:	81 e5       	ldi	r24, 0x51	; 81
    4358:	96 e0       	ldi	r25, 0x06	; 6
    435a:	39 cf       	rjmp	.-398    	; 0x41ce <_upload_message_rc>
    435c:	08 95       	ret

0000435e <lora_driver_join>:
    435e:	0f 93       	push	r16
    4360:	1f 93       	push	r17
    4362:	e8 2f       	mov	r30, r24
    4364:	f0 e0       	ldi	r31, 0x00	; 0
    4366:	ee 0f       	add	r30, r30
    4368:	ff 1f       	adc	r31, r31
    436a:	e5 5d       	subi	r30, 0xD5	; 213
    436c:	f7 4f       	sbci	r31, 0xF7	; 247
    436e:	60 81       	ld	r22, Z
    4370:	71 81       	ldd	r23, Z+1	; 0x01
    4372:	8a e5       	ldi	r24, 0x5A	; 90
    4374:	96 e0       	ldi	r25, 0x06	; 6
    4376:	2b df       	rcall	.-426    	; 0x41ce <_upload_message_rc>
    4378:	81 11       	cpse	r24, r1
    437a:	14 c0       	rjmp	.+40     	; 0x43a4 <lora_driver_join+0x46>
    437c:	08 e2       	ldi	r16, 0x28	; 40
    437e:	15 e0       	ldi	r17, 0x05	; 5
    4380:	20 e0       	ldi	r18, 0x00	; 0
    4382:	30 e0       	ldi	r19, 0x00	; 0
    4384:	4d e2       	ldi	r20, 0x2D	; 45
    4386:	50 e0       	ldi	r21, 0x00	; 0
    4388:	62 e7       	ldi	r22, 0x72	; 114
    438a:	7a e1       	ldi	r23, 0x1A	; 26
    438c:	80 91 e9 19 	lds	r24, 0x19E9	; 0x8019e9 <_serial_reply_buffer_handle>
    4390:	90 91 ea 19 	lds	r25, 0x19EA	; 0x8019ea <_serial_reply_buffer_handle+0x1>
    4394:	0e 94 16 12 	call	0x242c	; 0x242c <xStreamBufferReceive>
    4398:	88 23       	and	r24, r24
    439a:	21 f0       	breq	.+8      	; 0x43a4 <lora_driver_join+0x46>
    439c:	82 e7       	ldi	r24, 0x72	; 114
    439e:	9a e1       	ldi	r25, 0x1A	; 26
    43a0:	a1 de       	rcall	.-702    	; 0x40e4 <_reply2return_code>
    43a2:	03 c0       	rjmp	.+6      	; 0x43aa <lora_driver_join+0x4c>
    43a4:	82 e7       	ldi	r24, 0x72	; 114
    43a6:	9a e1       	ldi	r25, 0x1A	; 26
    43a8:	9d de       	rcall	.-710    	; 0x40e4 <_reply2return_code>
    43aa:	1f 91       	pop	r17
    43ac:	0f 91       	pop	r16
    43ae:	08 95       	ret

000043b0 <lora_driver_sent_upload_message>:
    43b0:	0f 93       	push	r16
    43b2:	1f 93       	push	r17
    43b4:	cf 93       	push	r28
    43b6:	df 93       	push	r29
    43b8:	1f 92       	push	r1
    43ba:	cd b7       	in	r28, 0x3d	; 61
    43bc:	de b7       	in	r29, 0x3e	; 62
    43be:	db 01       	movw	r26, r22
    43c0:	11 96       	adiw	r26, 0x01	; 1
    43c2:	9c 91       	ld	r25, X
    43c4:	11 97       	sbiw	r26, 0x01	; 1
    43c6:	95 31       	cpi	r25, 0x15	; 21
    43c8:	08 f0       	brcs	.+2      	; 0x43cc <lora_driver_sent_upload_message+0x1c>
    43ca:	b4 c0       	rjmp	.+360    	; 0x4534 <lora_driver_sent_upload_message+0x184>
    43cc:	99 23       	and	r25, r25
    43ce:	81 f1       	breq	.+96     	; 0x4430 <lora_driver_sent_upload_message+0x80>
    43d0:	60 e0       	ldi	r22, 0x00	; 0
    43d2:	70 e0       	ldi	r23, 0x00	; 0
    43d4:	27 2f       	mov	r18, r23
    43d6:	30 e0       	ldi	r19, 0x00	; 0
    43d8:	46 2f       	mov	r20, r22
    43da:	50 e0       	ldi	r21, 0x00	; 0
    43dc:	fd 01       	movw	r30, r26
    43de:	e4 0f       	add	r30, r20
    43e0:	f5 1f       	adc	r31, r21
    43e2:	92 81       	ldd	r25, Z+2	; 0x02
    43e4:	92 95       	swap	r25
    43e6:	9f 70       	andi	r25, 0x0F	; 15
    43e8:	9a 30       	cpi	r25, 0x0A	; 10
    43ea:	10 f0       	brcs	.+4      	; 0x43f0 <lora_driver_sent_upload_message+0x40>
    43ec:	99 5c       	subi	r25, 0xC9	; 201
    43ee:	01 c0       	rjmp	.+2      	; 0x43f2 <lora_driver_sent_upload_message+0x42>
    43f0:	90 5d       	subi	r25, 0xD0	; 208
    43f2:	f9 01       	movw	r30, r18
    43f4:	ed 5f       	subi	r30, 0xFD	; 253
    43f6:	f5 4e       	sbci	r31, 0xE5	; 229
    43f8:	90 83       	st	Z, r25
    43fa:	2f 5f       	subi	r18, 0xFF	; 255
    43fc:	3f 4f       	sbci	r19, 0xFF	; 255
    43fe:	fd 01       	movw	r30, r26
    4400:	e4 0f       	add	r30, r20
    4402:	f5 1f       	adc	r31, r21
    4404:	92 81       	ldd	r25, Z+2	; 0x02
    4406:	9f 70       	andi	r25, 0x0F	; 15
    4408:	49 2f       	mov	r20, r25
    440a:	50 e0       	ldi	r21, 0x00	; 0
    440c:	4a 30       	cpi	r20, 0x0A	; 10
    440e:	51 05       	cpc	r21, r1
    4410:	14 f0       	brlt	.+4      	; 0x4416 <lora_driver_sent_upload_message+0x66>
    4412:	99 5c       	subi	r25, 0xC9	; 201
    4414:	01 c0       	rjmp	.+2      	; 0x4418 <lora_driver_sent_upload_message+0x68>
    4416:	90 5d       	subi	r25, 0xD0	; 208
    4418:	f9 01       	movw	r30, r18
    441a:	ed 5f       	subi	r30, 0xFD	; 253
    441c:	f5 4e       	sbci	r31, 0xE5	; 229
    441e:	90 83       	st	Z, r25
    4420:	7e 5f       	subi	r23, 0xFE	; 254
    4422:	6f 5f       	subi	r22, 0xFF	; 255
    4424:	11 96       	adiw	r26, 0x01	; 1
    4426:	9c 91       	ld	r25, X
    4428:	11 97       	sbiw	r26, 0x01	; 1
    442a:	69 17       	cp	r22, r25
    442c:	98 f2       	brcs	.-90     	; 0x43d4 <lora_driver_sent_upload_message+0x24>
    442e:	01 c0       	rjmp	.+2      	; 0x4432 <lora_driver_sent_upload_message+0x82>
    4430:	70 e0       	ldi	r23, 0x00	; 0
    4432:	e7 2f       	mov	r30, r23
    4434:	f0 e0       	ldi	r31, 0x00	; 0
    4436:	ed 5f       	subi	r30, 0xFD	; 253
    4438:	f5 4e       	sbci	r31, 0xE5	; 229
    443a:	10 82       	st	Z, r1
    443c:	4c 91       	ld	r20, X
    443e:	81 11       	cpse	r24, r1
    4440:	03 c0       	rjmp	.+6      	; 0x4448 <lora_driver_sent_upload_message+0x98>
    4442:	83 e6       	ldi	r24, 0x63	; 99
    4444:	96 e0       	ldi	r25, 0x06	; 6
    4446:	02 c0       	rjmp	.+4      	; 0x444c <lora_driver_sent_upload_message+0x9c>
    4448:	85 e6       	ldi	r24, 0x65	; 101
    444a:	96 e0       	ldi	r25, 0x06	; 6
    444c:	23 e0       	ldi	r18, 0x03	; 3
    444e:	3a e1       	ldi	r19, 0x1A	; 26
    4450:	3f 93       	push	r19
    4452:	2f 93       	push	r18
    4454:	1f 92       	push	r1
    4456:	4f 93       	push	r20
    4458:	9f 93       	push	r25
    445a:	8f 93       	push	r24
    445c:	89 e6       	ldi	r24, 0x69	; 105
    445e:	96 e0       	ldi	r25, 0x06	; 6
    4460:	9f 93       	push	r25
    4462:	8f 93       	push	r24
    4464:	85 e4       	ldi	r24, 0x45	; 69
    4466:	9a e1       	ldi	r25, 0x1A	; 26
    4468:	9f 93       	push	r25
    446a:	8f 93       	push	r24
    446c:	0e 94 d6 2e 	call	0x5dac	; 0x5dac <sprintf>
    4470:	60 e0       	ldi	r22, 0x00	; 0
    4472:	70 e0       	ldi	r23, 0x00	; 0
    4474:	85 e4       	ldi	r24, 0x45	; 69
    4476:	9a e1       	ldi	r25, 0x1A	; 26
    4478:	aa de       	rcall	.-684    	; 0x41ce <_upload_message_rc>
    447a:	0f b6       	in	r0, 0x3f	; 63
    447c:	f8 94       	cli
    447e:	de bf       	out	0x3e, r29	; 62
    4480:	0f be       	out	0x3f, r0	; 63
    4482:	cd bf       	out	0x3d, r28	; 61
    4484:	81 11       	cpse	r24, r1
    4486:	59 c0       	rjmp	.+178    	; 0x453a <lora_driver_sent_upload_message+0x18a>
    4488:	08 e2       	ldi	r16, 0x28	; 40
    448a:	15 e0       	ldi	r17, 0x05	; 5
    448c:	20 e0       	ldi	r18, 0x00	; 0
    448e:	30 e0       	ldi	r19, 0x00	; 0
    4490:	4d e2       	ldi	r20, 0x2D	; 45
    4492:	50 e0       	ldi	r21, 0x00	; 0
    4494:	62 e7       	ldi	r22, 0x72	; 114
    4496:	7a e1       	ldi	r23, 0x1A	; 26
    4498:	80 91 e9 19 	lds	r24, 0x19E9	; 0x8019e9 <_serial_reply_buffer_handle>
    449c:	90 91 ea 19 	lds	r25, 0x19EA	; 0x8019ea <_serial_reply_buffer_handle+0x1>
    44a0:	0e 94 16 12 	call	0x242c	; 0x242c <xStreamBufferReceive>
    44a4:	88 23       	and	r24, r24
    44a6:	09 f4       	brne	.+2      	; 0x44aa <lora_driver_sent_upload_message+0xfa>
    44a8:	47 c0       	rjmp	.+142    	; 0x4538 <lora_driver_sent_upload_message+0x188>
    44aa:	82 e7       	ldi	r24, 0x72	; 114
    44ac:	9a e1       	ldi	r25, 0x1A	; 26
    44ae:	1a de       	rcall	.-972    	; 0x40e4 <_reply2return_code>
    44b0:	8e 30       	cpi	r24, 0x0E	; 14
    44b2:	09 f0       	breq	.+2      	; 0x44b6 <lora_driver_sent_upload_message+0x106>
    44b4:	42 c0       	rjmp	.+132    	; 0x453a <lora_driver_sent_upload_message+0x18a>
    44b6:	87 e0       	ldi	r24, 0x07	; 7
    44b8:	89 83       	std	Y+1, r24	; 0x01
    44ba:	80 91 e7 19 	lds	r24, 0x19E7	; 0x8019e7 <_downlinkMessageBuffer>
    44be:	90 91 e8 19 	lds	r25, 0x19E8	; 0x8019e8 <_downlinkMessageBuffer+0x1>
    44c2:	89 2b       	or	r24, r25
    44c4:	a9 f1       	breq	.+106    	; 0x4530 <lora_driver_sent_upload_message+0x180>
    44c6:	be 01       	movw	r22, r28
    44c8:	6f 5f       	subi	r22, 0xFF	; 255
    44ca:	7f 4f       	sbci	r23, 0xFF	; 255
    44cc:	82 e7       	ldi	r24, 0x72	; 114
    44ce:	9a e1       	ldi	r25, 0x1A	; 26
    44d0:	68 d1       	rcall	.+720    	; 0x47a2 <decode_port_no>
    44d2:	80 93 ed 19 	sts	0x19ED, r24	; 0x8019ed <_downlink_payload>
    44d6:	e9 81       	ldd	r30, Y+1	; 0x01
    44d8:	f0 e0       	ldi	r31, 0x00	; 0
    44da:	ee 58       	subi	r30, 0x8E	; 142
    44dc:	f5 4e       	sbci	r31, 0xE5	; 229
    44de:	df 01       	movw	r26, r30
    44e0:	0d 90       	ld	r0, X+
    44e2:	00 20       	and	r0, r0
    44e4:	e9 f7       	brne	.-6      	; 0x44e0 <lora_driver_sent_upload_message+0x130>
    44e6:	11 97       	sbiw	r26, 0x01	; 1
    44e8:	ae 1b       	sub	r26, r30
    44ea:	bf 0b       	sbc	r27, r31
    44ec:	aa 23       	and	r26, r26
    44ee:	91 f0       	breq	.+36     	; 0x4514 <lora_driver_sent_upload_message+0x164>
    44f0:	bb 27       	eor	r27, r27
    44f2:	cd 01       	movw	r24, r26
    44f4:	01 97       	sbiw	r24, 0x01	; 1
    44f6:	9c 01       	movw	r18, r24
    44f8:	12 f4       	brpl	.+4      	; 0x44fe <lora_driver_sent_upload_message+0x14e>
    44fa:	2f 5f       	subi	r18, 0xFF	; 255
    44fc:	3f 4f       	sbci	r19, 0xFF	; 255
    44fe:	35 95       	asr	r19
    4500:	27 95       	ror	r18
    4502:	20 93 ee 19 	sts	0x19EE, r18	; 0x8019ee <_downlink_payload+0x1>
    4506:	af 01       	movw	r20, r30
    4508:	4f 5f       	subi	r20, 0xFF	; 255
    450a:	5f 4f       	sbci	r21, 0xFF	; 255
    450c:	64 e1       	ldi	r22, 0x14	; 20
    450e:	8f ee       	ldi	r24, 0xEF	; 239
    4510:	99 e1       	ldi	r25, 0x19	; 25
    4512:	73 d1       	rcall	.+742    	; 0x47fa <decode_hexadecimal_string_bytes>
    4514:	01 e0       	ldi	r16, 0x01	; 1
    4516:	10 e0       	ldi	r17, 0x00	; 0
    4518:	20 e0       	ldi	r18, 0x00	; 0
    451a:	30 e0       	ldi	r19, 0x00	; 0
    451c:	46 e1       	ldi	r20, 0x16	; 22
    451e:	50 e0       	ldi	r21, 0x00	; 0
    4520:	6d ee       	ldi	r22, 0xED	; 237
    4522:	79 e1       	ldi	r23, 0x19	; 25
    4524:	80 91 e7 19 	lds	r24, 0x19E7	; 0x8019e7 <_downlinkMessageBuffer>
    4528:	90 91 e8 19 	lds	r25, 0x19E8	; 0x8019e8 <_downlinkMessageBuffer+0x1>
    452c:	0e 94 29 11 	call	0x2252	; 0x2252 <xStreamBufferSend>
    4530:	8e e0       	ldi	r24, 0x0E	; 14
    4532:	03 c0       	rjmp	.+6      	; 0x453a <lora_driver_sent_upload_message+0x18a>
    4534:	84 e1       	ldi	r24, 0x14	; 20
    4536:	01 c0       	rjmp	.+2      	; 0x453a <lora_driver_sent_upload_message+0x18a>
    4538:	80 e0       	ldi	r24, 0x00	; 0
    453a:	0f 90       	pop	r0
    453c:	df 91       	pop	r29
    453e:	cf 91       	pop	r28
    4540:	1f 91       	pop	r17
    4542:	0f 91       	pop	r16
    4544:	08 95       	ret

00004546 <lora_driver_set_adaptive_data_rate>:
    4546:	81 30       	cpi	r24, 0x01	; 1
    4548:	19 f0       	breq	.+6      	; 0x4550 <lora_driver_set_adaptive_data_rate+0xa>
    454a:	69 e7       	ldi	r22, 0x79	; 121
    454c:	76 e0       	ldi	r23, 0x06	; 6
    454e:	02 c0       	rjmp	.+4      	; 0x4554 <lora_driver_set_adaptive_data_rate+0xe>
    4550:	62 e5       	ldi	r22, 0x52	; 82
    4552:	77 e0       	ldi	r23, 0x07	; 7
    4554:	8d e7       	ldi	r24, 0x7D	; 125
    4556:	96 e0       	ldi	r25, 0x06	; 6
    4558:	3a ce       	rjmp	.-908    	; 0x41ce <_upload_message_rc>
    455a:	08 95       	ret

0000455c <lora_driver_set_receive_delay>:
    455c:	9f 93       	push	r25
    455e:	8f 93       	push	r24
    4560:	8e ea       	ldi	r24, 0xAE	; 174
    4562:	96 e0       	ldi	r25, 0x06	; 6
    4564:	9f 93       	push	r25
    4566:	8f 93       	push	r24
    4568:	85 e4       	ldi	r24, 0x45	; 69
    456a:	9a e1       	ldi	r25, 0x1A	; 26
    456c:	9f 93       	push	r25
    456e:	8f 93       	push	r24
    4570:	0e 94 d6 2e 	call	0x5dac	; 0x5dac <sprintf>
    4574:	60 e0       	ldi	r22, 0x00	; 0
    4576:	70 e0       	ldi	r23, 0x00	; 0
    4578:	85 e4       	ldi	r24, 0x45	; 69
    457a:	9a e1       	ldi	r25, 0x1A	; 26
    457c:	28 de       	rcall	.-944    	; 0x41ce <_upload_message_rc>
    457e:	0f 90       	pop	r0
    4580:	0f 90       	pop	r0
    4582:	0f 90       	pop	r0
    4584:	0f 90       	pop	r0
    4586:	0f 90       	pop	r0
    4588:	0f 90       	pop	r0
    458a:	08 95       	ret

0000458c <lora_driver_configure_to_eu868>:
    458c:	2f 92       	push	r2
    458e:	3f 92       	push	r3
    4590:	4f 92       	push	r4
    4592:	5f 92       	push	r5
    4594:	6f 92       	push	r6
    4596:	7f 92       	push	r7
    4598:	8f 92       	push	r8
    459a:	9f 92       	push	r9
    459c:	af 92       	push	r10
    459e:	bf 92       	push	r11
    45a0:	cf 92       	push	r12
    45a2:	df 92       	push	r13
    45a4:	ef 92       	push	r14
    45a6:	ff 92       	push	r15
    45a8:	0f 93       	push	r16
    45aa:	1f 93       	push	r17
    45ac:	cf 93       	push	r28
    45ae:	df 93       	push	r29
    45b0:	cd b7       	in	r28, 0x3d	; 61
    45b2:	de b7       	in	r29, 0x3e	; 62
    45b4:	a0 97       	sbiw	r28, 0x20	; 32
    45b6:	0f b6       	in	r0, 0x3f	; 63
    45b8:	f8 94       	cli
    45ba:	de bf       	out	0x3e, r29	; 62
    45bc:	0f be       	out	0x3f, r0	; 63
    45be:	cd bf       	out	0x3d, r28	; 61
    45c0:	6b ed       	ldi	r22, 0xDB	; 219
    45c2:	76 e0       	ldi	r23, 0x06	; 6
    45c4:	87 ee       	ldi	r24, 0xE7	; 231
    45c6:	96 e0       	ldi	r25, 0x06	; 6
    45c8:	33 dd       	rcall	.-1434   	; 0x4030 <_upload_message>
    45ca:	8c dd       	rcall	.-1256   	; 0x40e4 <_reply2return_code>
    45cc:	81 11       	cpse	r24, r1
    45ce:	a3 c0       	rjmp	.+326    	; 0x4716 <lora_driver_configure_to_eu868+0x18a>
    45d0:	80 e2       	ldi	r24, 0x20	; 32
    45d2:	e1 e2       	ldi	r30, 0x21	; 33
    45d4:	f2 e0       	ldi	r31, 0x02	; 2
    45d6:	de 01       	movw	r26, r28
    45d8:	11 96       	adiw	r26, 0x01	; 1
    45da:	01 90       	ld	r0, Z+
    45dc:	0d 92       	st	X+, r0
    45de:	8a 95       	dec	r24
    45e0:	e1 f7       	brne	.-8      	; 0x45da <lora_driver_configure_to_eu868+0x4e>
    45e2:	9e 01       	movw	r18, r28
    45e4:	2f 5f       	subi	r18, 0xFF	; 255
    45e6:	3f 4f       	sbci	r19, 0xFF	; 255
    45e8:	69 01       	movw	r12, r18
    45ea:	e1 2c       	mov	r14, r1
    45ec:	f1 2c       	mov	r15, r1
    45ee:	0f 2e       	mov	r0, r31
    45f0:	f3 ef       	ldi	r31, 0xF3	; 243
    45f2:	af 2e       	mov	r10, r31
    45f4:	f6 e0       	ldi	r31, 0x06	; 6
    45f6:	bf 2e       	mov	r11, r31
    45f8:	f0 2d       	mov	r31, r0
    45fa:	05 e4       	ldi	r16, 0x45	; 69
    45fc:	1a e1       	ldi	r17, 0x1A	; 26
    45fe:	0f 2e       	mov	r0, r31
    4600:	fc e0       	ldi	r31, 0x0C	; 12
    4602:	4f 2e       	mov	r4, r31
    4604:	f7 e0       	ldi	r31, 0x07	; 7
    4606:	5f 2e       	mov	r5, r31
    4608:	f0 2d       	mov	r31, r0
    460a:	0f 2e       	mov	r0, r31
    460c:	f3 e2       	ldi	r31, 0x23	; 35
    460e:	8f 2e       	mov	r8, r31
    4610:	f7 e0       	ldi	r31, 0x07	; 7
    4612:	9f 2e       	mov	r9, r31
    4614:	f0 2d       	mov	r31, r0
    4616:	0f 2e       	mov	r0, r31
    4618:	fd e3       	ldi	r31, 0x3D	; 61
    461a:	6f 2e       	mov	r6, r31
    461c:	f7 e0       	ldi	r31, 0x07	; 7
    461e:	7f 2e       	mov	r7, r31
    4620:	f0 2d       	mov	r31, r0
    4622:	3e 2c       	mov	r3, r14
    4624:	2f 2c       	mov	r2, r15
    4626:	ff 92       	push	r15
    4628:	ef 92       	push	r14
    462a:	bf 92       	push	r11
    462c:	af 92       	push	r10
    462e:	1f 93       	push	r17
    4630:	0f 93       	push	r16
    4632:	0e 94 d6 2e 	call	0x5dac	; 0x5dac <sprintf>
    4636:	60 e0       	ldi	r22, 0x00	; 0
    4638:	70 e0       	ldi	r23, 0x00	; 0
    463a:	c8 01       	movw	r24, r16
    463c:	f9 dc       	rcall	.-1550   	; 0x4030 <_upload_message>
    463e:	52 dd       	rcall	.-1372   	; 0x40e4 <_reply2return_code>
    4640:	0f 90       	pop	r0
    4642:	0f 90       	pop	r0
    4644:	0f 90       	pop	r0
    4646:	0f 90       	pop	r0
    4648:	0f 90       	pop	r0
    464a:	0f 90       	pop	r0
    464c:	81 11       	cpse	r24, r1
    464e:	63 c0       	rjmp	.+198    	; 0x4716 <lora_driver_configure_to_eu868+0x18a>
    4650:	32 e0       	ldi	r19, 0x02	; 2
    4652:	3e 15       	cp	r19, r14
    4654:	e8 f4       	brcc	.+58     	; 0x4690 <lora_driver_configure_to_eu868+0x104>
    4656:	f6 01       	movw	r30, r12
    4658:	83 81       	ldd	r24, Z+3	; 0x03
    465a:	8f 93       	push	r24
    465c:	82 81       	ldd	r24, Z+2	; 0x02
    465e:	8f 93       	push	r24
    4660:	81 81       	ldd	r24, Z+1	; 0x01
    4662:	8f 93       	push	r24
    4664:	80 81       	ld	r24, Z
    4666:	8f 93       	push	r24
    4668:	ff 92       	push	r15
    466a:	ef 92       	push	r14
    466c:	5f 92       	push	r5
    466e:	4f 92       	push	r4
    4670:	1f 93       	push	r17
    4672:	0f 93       	push	r16
    4674:	0e 94 d6 2e 	call	0x5dac	; 0x5dac <sprintf>
    4678:	60 e0       	ldi	r22, 0x00	; 0
    467a:	70 e0       	ldi	r23, 0x00	; 0
    467c:	c8 01       	movw	r24, r16
    467e:	d8 dc       	rcall	.-1616   	; 0x4030 <_upload_message>
    4680:	31 dd       	rcall	.-1438   	; 0x40e4 <_reply2return_code>
    4682:	0f b6       	in	r0, 0x3f	; 63
    4684:	f8 94       	cli
    4686:	de bf       	out	0x3e, r29	; 62
    4688:	0f be       	out	0x3f, r0	; 63
    468a:	cd bf       	out	0x3d, r28	; 61
    468c:	81 11       	cpse	r24, r1
    468e:	43 c0       	rjmp	.+134    	; 0x4716 <lora_driver_configure_to_eu868+0x18a>
    4690:	2f 92       	push	r2
    4692:	3f 92       	push	r3
    4694:	9f 92       	push	r9
    4696:	8f 92       	push	r8
    4698:	1f 93       	push	r17
    469a:	0f 93       	push	r16
    469c:	0e 94 d6 2e 	call	0x5dac	; 0x5dac <sprintf>
    46a0:	60 e0       	ldi	r22, 0x00	; 0
    46a2:	70 e0       	ldi	r23, 0x00	; 0
    46a4:	c8 01       	movw	r24, r16
    46a6:	c4 dc       	rcall	.-1656   	; 0x4030 <_upload_message>
    46a8:	1d dd       	rcall	.-1478   	; 0x40e4 <_reply2return_code>
    46aa:	0f 90       	pop	r0
    46ac:	0f 90       	pop	r0
    46ae:	0f 90       	pop	r0
    46b0:	0f 90       	pop	r0
    46b2:	0f 90       	pop	r0
    46b4:	0f 90       	pop	r0
    46b6:	81 11       	cpse	r24, r1
    46b8:	2e c0       	rjmp	.+92     	; 0x4716 <lora_driver_configure_to_eu868+0x18a>
    46ba:	2f 92       	push	r2
    46bc:	3f 92       	push	r3
    46be:	7f 92       	push	r7
    46c0:	6f 92       	push	r6
    46c2:	1f 93       	push	r17
    46c4:	0f 93       	push	r16
    46c6:	0e 94 d6 2e 	call	0x5dac	; 0x5dac <sprintf>
    46ca:	60 e0       	ldi	r22, 0x00	; 0
    46cc:	70 e0       	ldi	r23, 0x00	; 0
    46ce:	c8 01       	movw	r24, r16
    46d0:	af dc       	rcall	.-1698   	; 0x4030 <_upload_message>
    46d2:	08 dd       	rcall	.-1520   	; 0x40e4 <_reply2return_code>
    46d4:	0f 90       	pop	r0
    46d6:	0f 90       	pop	r0
    46d8:	0f 90       	pop	r0
    46da:	0f 90       	pop	r0
    46dc:	0f 90       	pop	r0
    46de:	0f 90       	pop	r0
    46e0:	81 11       	cpse	r24, r1
    46e2:	19 c0       	rjmp	.+50     	; 0x4716 <lora_driver_configure_to_eu868+0x18a>
    46e4:	3f ef       	ldi	r19, 0xFF	; 255
    46e6:	e3 1a       	sub	r14, r19
    46e8:	f3 0a       	sbc	r15, r19
    46ea:	84 e0       	ldi	r24, 0x04	; 4
    46ec:	c8 0e       	add	r12, r24
    46ee:	d1 1c       	adc	r13, r1
    46f0:	98 e0       	ldi	r25, 0x08	; 8
    46f2:	e9 16       	cp	r14, r25
    46f4:	f1 04       	cpc	r15, r1
    46f6:	09 f0       	breq	.+2      	; 0x46fa <lora_driver_configure_to_eu868+0x16e>
    46f8:	94 cf       	rjmp	.-216    	; 0x4622 <lora_driver_configure_to_eu868+0x96>
    46fa:	60 e0       	ldi	r22, 0x00	; 0
    46fc:	70 e0       	ldi	r23, 0x00	; 0
    46fe:	85 e5       	ldi	r24, 0x55	; 85
    4700:	97 e0       	ldi	r25, 0x07	; 7
    4702:	96 dc       	rcall	.-1748   	; 0x4030 <_upload_message>
    4704:	ef dc       	rcall	.-1570   	; 0x40e4 <_reply2return_code>
    4706:	81 11       	cpse	r24, r1
    4708:	06 c0       	rjmp	.+12     	; 0x4716 <lora_driver_configure_to_eu868+0x18a>
    470a:	60 e0       	ldi	r22, 0x00	; 0
    470c:	70 e0       	ldi	r23, 0x00	; 0
    470e:	86 e6       	ldi	r24, 0x66	; 102
    4710:	97 e0       	ldi	r25, 0x07	; 7
    4712:	8e dc       	rcall	.-1764   	; 0x4030 <_upload_message>
    4714:	e7 dc       	rcall	.-1586   	; 0x40e4 <_reply2return_code>
    4716:	a0 96       	adiw	r28, 0x20	; 32
    4718:	0f b6       	in	r0, 0x3f	; 63
    471a:	f8 94       	cli
    471c:	de bf       	out	0x3e, r29	; 62
    471e:	0f be       	out	0x3f, r0	; 63
    4720:	cd bf       	out	0x3d, r28	; 61
    4722:	df 91       	pop	r29
    4724:	cf 91       	pop	r28
    4726:	1f 91       	pop	r17
    4728:	0f 91       	pop	r16
    472a:	ff 90       	pop	r15
    472c:	ef 90       	pop	r14
    472e:	df 90       	pop	r13
    4730:	cf 90       	pop	r12
    4732:	bf 90       	pop	r11
    4734:	af 90       	pop	r10
    4736:	9f 90       	pop	r9
    4738:	8f 90       	pop	r8
    473a:	7f 90       	pop	r7
    473c:	6f 90       	pop	r6
    473e:	5f 90       	pop	r5
    4740:	4f 90       	pop	r4
    4742:	3f 90       	pop	r3
    4744:	2f 90       	pop	r2
    4746:	08 95       	ret

00004748 <lora_driver_set_otaa_identity>:
    4748:	ef 92       	push	r14
    474a:	ff 92       	push	r15
    474c:	0f 93       	push	r16
    474e:	1f 93       	push	r17
    4750:	cf 93       	push	r28
    4752:	df 93       	push	r29
    4754:	ec 01       	movw	r28, r24
    4756:	8b 01       	movw	r16, r22
    4758:	7a 01       	movw	r14, r20
    475a:	81 e0       	ldi	r24, 0x01	; 1
    475c:	f4 de       	rcall	.-536    	; 0x4546 <lora_driver_set_adaptive_data_rate>
    475e:	81 11       	cpse	r24, r1
    4760:	0d c0       	rjmp	.+26     	; 0x477c <lora_driver_set_otaa_identity+0x34>
    4762:	ce 01       	movw	r24, r28
    4764:	d4 dd       	rcall	.-1112   	; 0x430e <lora_driver_set_application_identifier>
    4766:	81 11       	cpse	r24, r1
    4768:	09 c0       	rjmp	.+18     	; 0x477c <lora_driver_set_otaa_identity+0x34>
    476a:	c8 01       	movw	r24, r16
    476c:	e1 dd       	rcall	.-1086   	; 0x4330 <lora_driver_set_application_key>
    476e:	81 11       	cpse	r24, r1
    4770:	05 c0       	rjmp	.+10     	; 0x477c <lora_driver_set_otaa_identity+0x34>
    4772:	c7 01       	movw	r24, r14
    4774:	bb dd       	rcall	.-1162   	; 0x42ec <lora_driver_set_device_identifier>
    4776:	81 11       	cpse	r24, r1
    4778:	01 c0       	rjmp	.+2      	; 0x477c <lora_driver_set_otaa_identity+0x34>
    477a:	eb dd       	rcall	.-1066   	; 0x4352 <lora_driver_save_mac>
    477c:	df 91       	pop	r29
    477e:	cf 91       	pop	r28
    4780:	1f 91       	pop	r17
    4782:	0f 91       	pop	r16
    4784:	ff 90       	pop	r15
    4786:	ef 90       	pop	r14
    4788:	08 95       	ret

0000478a <lora_driver_map_return_code_to_text>:
    478a:	90 e0       	ldi	r25, 0x00	; 0
    478c:	fc 01       	movw	r30, r24
    478e:	ee 0f       	add	r30, r30
    4790:	ff 1f       	adc	r31, r31
    4792:	8e 0f       	add	r24, r30
    4794:	9f 1f       	adc	r25, r31
    4796:	fc 01       	movw	r30, r24
    4798:	e1 5d       	subi	r30, 0xD1	; 209
    479a:	f7 4f       	sbci	r31, 0xF7	; 247
    479c:	81 81       	ldd	r24, Z+1	; 0x01
    479e:	92 81       	ldd	r25, Z+2	; 0x02
    47a0:	08 95       	ret

000047a2 <decode_port_no>:
    47a2:	dc 01       	movw	r26, r24
    47a4:	00 97       	sbiw	r24, 0x00	; 0
    47a6:	29 f1       	breq	.+74     	; 0x47f2 <decode_port_no+0x50>
    47a8:	fb 01       	movw	r30, r22
    47aa:	20 81       	ld	r18, Z
    47ac:	fc 01       	movw	r30, r24
    47ae:	01 90       	ld	r0, Z+
    47b0:	00 20       	and	r0, r0
    47b2:	e9 f7       	brne	.-6      	; 0x47ae <decode_port_no+0xc>
    47b4:	31 97       	sbiw	r30, 0x01	; 1
    47b6:	e8 1b       	sub	r30, r24
    47b8:	f9 0b       	sbc	r31, r25
    47ba:	82 2f       	mov	r24, r18
    47bc:	90 e0       	ldi	r25, 0x00	; 0
    47be:	e8 17       	cp	r30, r24
    47c0:	f9 07       	cpc	r31, r25
    47c2:	c8 f0       	brcs	.+50     	; 0x47f6 <decode_port_no+0x54>
    47c4:	80 e0       	ldi	r24, 0x00	; 0
    47c6:	08 c0       	rjmp	.+16     	; 0x47d8 <decode_port_no+0x36>
    47c8:	88 0f       	add	r24, r24
    47ca:	38 2f       	mov	r19, r24
    47cc:	33 0f       	add	r19, r19
    47ce:	33 0f       	add	r19, r19
    47d0:	83 0f       	add	r24, r19
    47d2:	80 53       	subi	r24, 0x30	; 48
    47d4:	89 0f       	add	r24, r25
    47d6:	2f 5f       	subi	r18, 0xFF	; 255
    47d8:	fd 01       	movw	r30, r26
    47da:	e2 0f       	add	r30, r18
    47dc:	f1 1d       	adc	r31, r1
    47de:	90 81       	ld	r25, Z
    47e0:	30 ed       	ldi	r19, 0xD0	; 208
    47e2:	39 0f       	add	r19, r25
    47e4:	3a 30       	cpi	r19, 0x0A	; 10
    47e6:	10 f4       	brcc	.+4      	; 0x47ec <decode_port_no+0x4a>
    47e8:	91 11       	cpse	r25, r1
    47ea:	ee cf       	rjmp	.-36     	; 0x47c8 <decode_port_no+0x26>
    47ec:	fb 01       	movw	r30, r22
    47ee:	20 83       	st	Z, r18
    47f0:	08 95       	ret
    47f2:	80 e0       	ldi	r24, 0x00	; 0
    47f4:	08 95       	ret
    47f6:	80 e0       	ldi	r24, 0x00	; 0
    47f8:	08 95       	ret

000047fa <decode_hexadecimal_string_bytes>:
    47fa:	0f 93       	push	r16
    47fc:	1f 93       	push	r17
    47fe:	cf 93       	push	r28
    4800:	df 93       	push	r29
    4802:	dc 01       	movw	r26, r24
    4804:	ea 01       	movw	r28, r20
    4806:	20 97       	sbiw	r28, 0x00	; 0
    4808:	e1 f1       	breq	.+120    	; 0x4882 <decode_hexadecimal_string_bytes+0x88>
    480a:	fa 01       	movw	r30, r20
    480c:	01 90       	ld	r0, Z+
    480e:	00 20       	and	r0, r0
    4810:	e9 f7       	brne	.-6      	; 0x480c <decode_hexadecimal_string_bytes+0x12>
    4812:	31 97       	sbiw	r30, 0x01	; 1
    4814:	e4 1b       	sub	r30, r20
    4816:	f5 0b       	sbc	r31, r21
    4818:	32 97       	sbiw	r30, 0x02	; 2
    481a:	10 f5       	brcc	.+68     	; 0x4860 <decode_hexadecimal_string_bytes+0x66>
    481c:	32 c0       	rjmp	.+100    	; 0x4882 <decode_hexadecimal_string_bytes+0x88>
    481e:	8d 01       	movw	r16, r26
    4820:	04 0f       	add	r16, r20
    4822:	15 1f       	adc	r17, r21
    4824:	30 e0       	ldi	r19, 0x00	; 0
    4826:	ae 01       	movw	r20, r28
    4828:	42 0f       	add	r20, r18
    482a:	53 1f       	adc	r21, r19
    482c:	fa 01       	movw	r30, r20
    482e:	90 81       	ld	r25, Z
    4830:	91 34       	cpi	r25, 0x41	; 65
    4832:	28 f0       	brcs	.+10     	; 0x483e <decode_hexadecimal_string_bytes+0x44>
    4834:	97 53       	subi	r25, 0x37	; 55
    4836:	59 2f       	mov	r21, r25
    4838:	52 95       	swap	r21
    483a:	50 7f       	andi	r21, 0xF0	; 240
    483c:	03 c0       	rjmp	.+6      	; 0x4844 <decode_hexadecimal_string_bytes+0x4a>
    483e:	59 2f       	mov	r21, r25
    4840:	52 95       	swap	r21
    4842:	50 7f       	andi	r21, 0xF0	; 240
    4844:	2c 0f       	add	r18, r28
    4846:	3d 1f       	adc	r19, r29
    4848:	f9 01       	movw	r30, r18
    484a:	91 81       	ldd	r25, Z+1	; 0x01
    484c:	91 34       	cpi	r25, 0x41	; 65
    484e:	10 f0       	brcs	.+4      	; 0x4854 <decode_hexadecimal_string_bytes+0x5a>
    4850:	97 53       	subi	r25, 0x37	; 55
    4852:	01 c0       	rjmp	.+2      	; 0x4856 <decode_hexadecimal_string_bytes+0x5c>
    4854:	90 53       	subi	r25, 0x30	; 48
    4856:	95 0f       	add	r25, r21
    4858:	f8 01       	movw	r30, r16
    485a:	90 83       	st	Z, r25
    485c:	8f 5f       	subi	r24, 0xFF	; 255
    485e:	01 c0       	rjmp	.+2      	; 0x4862 <decode_hexadecimal_string_bytes+0x68>
    4860:	80 e0       	ldi	r24, 0x00	; 0
    4862:	28 2f       	mov	r18, r24
    4864:	22 0f       	add	r18, r18
    4866:	48 2f       	mov	r20, r24
    4868:	50 e0       	ldi	r21, 0x00	; 0
    486a:	fe 01       	movw	r30, r28
    486c:	01 90       	ld	r0, Z+
    486e:	00 20       	and	r0, r0
    4870:	e9 f7       	brne	.-6      	; 0x486c <decode_hexadecimal_string_bytes+0x72>
    4872:	31 97       	sbiw	r30, 0x01	; 1
    4874:	ec 1b       	sub	r30, r28
    4876:	fd 0b       	sbc	r31, r29
    4878:	4e 17       	cp	r20, r30
    487a:	5f 07       	cpc	r21, r31
    487c:	10 f4       	brcc	.+4      	; 0x4882 <decode_hexadecimal_string_bytes+0x88>
    487e:	86 13       	cpse	r24, r22
    4880:	ce cf       	rjmp	.-100    	; 0x481e <decode_hexadecimal_string_bytes+0x24>
    4882:	df 91       	pop	r29
    4884:	cf 91       	pop	r28
    4886:	1f 91       	pop	r17
    4888:	0f 91       	pop	r16
    488a:	08 95       	ret

0000488c <reg_read_register>:
    488c:	fc 01       	movw	r30, r24
    488e:	80 81       	ld	r24, Z
    4890:	08 95       	ret

00004892 <reg_read_bit>:
    4892:	fc 01       	movw	r30, r24
    4894:	20 81       	ld	r18, Z
    4896:	81 e0       	ldi	r24, 0x01	; 1
    4898:	90 e0       	ldi	r25, 0x00	; 0
    489a:	02 c0       	rjmp	.+4      	; 0x48a0 <reg_read_bit+0xe>
    489c:	88 0f       	add	r24, r24
    489e:	99 1f       	adc	r25, r25
    48a0:	6a 95       	dec	r22
    48a2:	e2 f7       	brpl	.-8      	; 0x489c <reg_read_bit+0xa>
    48a4:	82 23       	and	r24, r18
    48a6:	08 95       	ret

000048a8 <reg_read_bits>:
    48a8:	fc 01       	movw	r30, r24
    48aa:	80 81       	ld	r24, Z
    48ac:	86 23       	and	r24, r22
    48ae:	08 95       	ret

000048b0 <reg_set_register>:
    48b0:	fc 01       	movw	r30, r24
    48b2:	60 83       	st	Z, r22
    48b4:	08 95       	ret

000048b6 <reg_clear_register>:
    48b6:	fc 01       	movw	r30, r24
    48b8:	10 82       	st	Z, r1
    48ba:	08 95       	ret

000048bc <reg_set_bit>:
    48bc:	fc 01       	movw	r30, r24
    48be:	40 81       	ld	r20, Z
    48c0:	21 e0       	ldi	r18, 0x01	; 1
    48c2:	30 e0       	ldi	r19, 0x00	; 0
    48c4:	02 c0       	rjmp	.+4      	; 0x48ca <reg_set_bit+0xe>
    48c6:	22 0f       	add	r18, r18
    48c8:	33 1f       	adc	r19, r19
    48ca:	6a 95       	dec	r22
    48cc:	e2 f7       	brpl	.-8      	; 0x48c6 <reg_set_bit+0xa>
    48ce:	24 2b       	or	r18, r20
    48d0:	20 83       	st	Z, r18
    48d2:	08 95       	ret

000048d4 <reg_set_bits>:
    48d4:	fc 01       	movw	r30, r24
    48d6:	20 81       	ld	r18, Z
    48d8:	62 2b       	or	r22, r18
    48da:	60 83       	st	Z, r22
    48dc:	08 95       	ret

000048de <reg_toggle_bit>:
    48de:	fc 01       	movw	r30, r24
    48e0:	40 81       	ld	r20, Z
    48e2:	21 e0       	ldi	r18, 0x01	; 1
    48e4:	30 e0       	ldi	r19, 0x00	; 0
    48e6:	02 c0       	rjmp	.+4      	; 0x48ec <reg_toggle_bit+0xe>
    48e8:	22 0f       	add	r18, r18
    48ea:	33 1f       	adc	r19, r19
    48ec:	6a 95       	dec	r22
    48ee:	e2 f7       	brpl	.-8      	; 0x48e8 <reg_toggle_bit+0xa>
    48f0:	24 27       	eor	r18, r20
    48f2:	20 83       	st	Z, r18
    48f4:	08 95       	ret

000048f6 <reg_toggle_bits>:
    48f6:	fc 01       	movw	r30, r24
    48f8:	20 81       	ld	r18, Z
    48fa:	62 27       	eor	r22, r18
    48fc:	60 83       	st	Z, r22
    48fe:	08 95       	ret

00004900 <reg_clear_bit>:
    4900:	fc 01       	movw	r30, r24
    4902:	90 81       	ld	r25, Z
    4904:	21 e0       	ldi	r18, 0x01	; 1
    4906:	30 e0       	ldi	r19, 0x00	; 0
    4908:	02 c0       	rjmp	.+4      	; 0x490e <reg_clear_bit+0xe>
    490a:	22 0f       	add	r18, r18
    490c:	33 1f       	adc	r19, r19
    490e:	6a 95       	dec	r22
    4910:	e2 f7       	brpl	.-8      	; 0x490a <reg_clear_bit+0xa>
    4912:	20 95       	com	r18
    4914:	29 23       	and	r18, r25
    4916:	20 83       	st	Z, r18
    4918:	08 95       	ret

0000491a <reg_clear_bits>:
    491a:	fc 01       	movw	r30, r24
    491c:	90 81       	ld	r25, Z
    491e:	60 95       	com	r22
    4920:	69 23       	and	r22, r25
    4922:	60 83       	st	Z, r22
    4924:	08 95       	ret

00004926 <_serial_call_back>:
    4926:	80 91 a2 1a 	lds	r24, 0x1AA2	; 0x801aa2 <crc_sum.1941>
    492a:	86 0f       	add	r24, r22
    492c:	80 93 a2 1a 	sts	0x1AA2, r24	; 0x801aa2 <crc_sum.1941>
    4930:	90 91 a5 1a 	lds	r25, 0x1AA5	; 0x801aa5 <_mh_state>
    4934:	91 30       	cpi	r25, 0x01	; 1
    4936:	79 f0       	breq	.+30     	; 0x4956 <_serial_call_back+0x30>
    4938:	28 f0       	brcs	.+10     	; 0x4944 <_serial_call_back+0x1e>
    493a:	92 30       	cpi	r25, 0x02	; 2
    493c:	a9 f0       	breq	.+42     	; 0x4968 <_serial_call_back+0x42>
    493e:	93 30       	cpi	r25, 0x03	; 3
    4940:	19 f1       	breq	.+70     	; 0x4988 <_serial_call_back+0x62>
    4942:	08 95       	ret
    4944:	6f 3f       	cpi	r22, 0xFF	; 255
    4946:	09 f0       	breq	.+2      	; 0x494a <_serial_call_back+0x24>
    4948:	48 c0       	rjmp	.+144    	; 0x49da <_serial_call_back+0xb4>
    494a:	10 92 a2 1a 	sts	0x1AA2, r1	; 0x801aa2 <crc_sum.1941>
    494e:	81 e0       	ldi	r24, 0x01	; 1
    4950:	80 93 a5 1a 	sts	0x1AA5, r24	; 0x801aa5 <_mh_state>
    4954:	08 95       	ret
    4956:	66 38       	cpi	r22, 0x86	; 134
    4958:	09 f0       	breq	.+2      	; 0x495c <_serial_call_back+0x36>
    495a:	3f c0       	rjmp	.+126    	; 0x49da <_serial_call_back+0xb4>
    495c:	10 92 a1 1a 	sts	0x1AA1, r1	; 0x801aa1 <inDex.1939>
    4960:	82 e0       	ldi	r24, 0x02	; 2
    4962:	80 93 a5 1a 	sts	0x1AA5, r24	; 0x801aa5 <_mh_state>
    4966:	08 95       	ret
    4968:	e0 91 a1 1a 	lds	r30, 0x1AA1	; 0x801aa1 <inDex.1939>
    496c:	81 e0       	ldi	r24, 0x01	; 1
    496e:	8e 0f       	add	r24, r30
    4970:	80 93 a1 1a 	sts	0x1AA1, r24	; 0x801aa1 <inDex.1939>
    4974:	f0 e0       	ldi	r31, 0x00	; 0
    4976:	e1 56       	subi	r30, 0x61	; 97
    4978:	f5 4e       	sbci	r31, 0xE5	; 229
    497a:	60 83       	st	Z, r22
    497c:	82 30       	cpi	r24, 0x02	; 2
    497e:	69 f5       	brne	.+90     	; 0x49da <_serial_call_back+0xb4>
    4980:	83 e0       	ldi	r24, 0x03	; 3
    4982:	80 93 a5 1a 	sts	0x1AA5, r24	; 0x801aa5 <_mh_state>
    4986:	08 95       	ret
    4988:	90 91 a1 1a 	lds	r25, 0x1AA1	; 0x801aa1 <inDex.1939>
    498c:	21 e0       	ldi	r18, 0x01	; 1
    498e:	29 0f       	add	r18, r25
    4990:	20 93 a1 1a 	sts	0x1AA1, r18	; 0x801aa1 <inDex.1939>
    4994:	96 30       	cpi	r25, 0x06	; 6
    4996:	09 f5       	brne	.+66     	; 0x49da <_serial_call_back+0xb4>
    4998:	81 11       	cpse	r24, r1
    499a:	0e c0       	rjmp	.+28     	; 0x49b8 <_serial_call_back+0x92>
    499c:	ef e9       	ldi	r30, 0x9F	; 159
    499e:	fa e1       	ldi	r31, 0x1A	; 26
    49a0:	80 81       	ld	r24, Z
    49a2:	90 e0       	ldi	r25, 0x00	; 0
    49a4:	98 2f       	mov	r25, r24
    49a6:	88 27       	eor	r24, r24
    49a8:	21 81       	ldd	r18, Z+1	; 0x01
    49aa:	82 0f       	add	r24, r18
    49ac:	91 1d       	adc	r25, r1
    49ae:	90 93 a7 1a 	sts	0x1AA7, r25	; 0x801aa7 <_ppm+0x1>
    49b2:	80 93 a6 1a 	sts	0x1AA6, r24	; 0x801aa6 <_ppm>
    49b6:	04 c0       	rjmp	.+8      	; 0x49c0 <_serial_call_back+0x9a>
    49b8:	10 92 a7 1a 	sts	0x1AA7, r1	; 0x801aa7 <_ppm+0x1>
    49bc:	10 92 a6 1a 	sts	0x1AA6, r1	; 0x801aa6 <_ppm>
    49c0:	10 92 a5 1a 	sts	0x1AA5, r1	; 0x801aa5 <_mh_state>
    49c4:	e0 91 a3 1a 	lds	r30, 0x1AA3	; 0x801aa3 <_app_call_back>
    49c8:	f0 91 a4 1a 	lds	r31, 0x1AA4	; 0x801aa4 <_app_call_back+0x1>
    49cc:	30 97       	sbiw	r30, 0x00	; 0
    49ce:	29 f0       	breq	.+10     	; 0x49da <_serial_call_back+0xb4>
    49d0:	80 91 a6 1a 	lds	r24, 0x1AA6	; 0x801aa6 <_ppm>
    49d4:	90 91 a7 1a 	lds	r25, 0x1AA7	; 0x801aa7 <_ppm+0x1>
    49d8:	19 95       	eicall
    49da:	08 95       	ret

000049dc <mh_z19_create>:
    49dc:	8f 92       	push	r8
    49de:	9f 92       	push	r9
    49e0:	af 92       	push	r10
    49e2:	cf 92       	push	r12
    49e4:	ef 92       	push	r14
    49e6:	0f 93       	push	r16
    49e8:	cf 93       	push	r28
    49ea:	df 93       	push	r29
    49ec:	eb 01       	movw	r28, r22
    49ee:	0f 2e       	mov	r0, r31
    49f0:	f3 e9       	ldi	r31, 0x93	; 147
    49f2:	8f 2e       	mov	r8, r31
    49f4:	f4 e2       	ldi	r31, 0x24	; 36
    49f6:	9f 2e       	mov	r9, r31
    49f8:	f0 2d       	mov	r31, r0
    49fa:	68 94       	set
    49fc:	aa 24       	eor	r10, r10
    49fe:	a4 f8       	bld	r10, 4
    4a00:	68 94       	set
    4a02:	cc 24       	eor	r12, r12
    4a04:	c4 f8       	bld	r12, 4
    4a06:	e1 2c       	mov	r14, r1
    4a08:	00 e0       	ldi	r16, 0x00	; 0
    4a0a:	23 e0       	ldi	r18, 0x03	; 3
    4a0c:	40 e8       	ldi	r20, 0x80	; 128
    4a0e:	55 e2       	ldi	r21, 0x25	; 37
    4a10:	60 e0       	ldi	r22, 0x00	; 0
    4a12:	70 e0       	ldi	r23, 0x00	; 0
    4a14:	51 d0       	rcall	.+162    	; 0x4ab8 <serial_new_instance>
    4a16:	90 93 a9 1a 	sts	0x1AA9, r25	; 0x801aa9 <_serial+0x1>
    4a1a:	80 93 a8 1a 	sts	0x1AA8, r24	; 0x801aa8 <_serial>
    4a1e:	d0 93 a4 1a 	sts	0x1AA4, r29	; 0x801aa4 <_app_call_back+0x1>
    4a22:	c0 93 a3 1a 	sts	0x1AA3, r28	; 0x801aa3 <_app_call_back>
    4a26:	df 91       	pop	r29
    4a28:	cf 91       	pop	r28
    4a2a:	0f 91       	pop	r16
    4a2c:	ef 90       	pop	r14
    4a2e:	cf 90       	pop	r12
    4a30:	af 90       	pop	r10
    4a32:	9f 90       	pop	r9
    4a34:	8f 90       	pop	r8
    4a36:	08 95       	ret

00004a38 <mh_z19_take_meassuring>:
    4a38:	cf 93       	push	r28
    4a3a:	df 93       	push	r29
    4a3c:	cd b7       	in	r28, 0x3d	; 61
    4a3e:	de b7       	in	r29, 0x3e	; 62
    4a40:	29 97       	sbiw	r28, 0x09	; 9
    4a42:	0f b6       	in	r0, 0x3f	; 63
    4a44:	f8 94       	cli
    4a46:	de bf       	out	0x3e, r29	; 62
    4a48:	0f be       	out	0x3f, r0	; 63
    4a4a:	cd bf       	out	0x3d, r28	; 61
    4a4c:	89 e0       	ldi	r24, 0x09	; 9
    4a4e:	e1 e4       	ldi	r30, 0x41	; 65
    4a50:	f2 e0       	ldi	r31, 0x02	; 2
    4a52:	9e 01       	movw	r18, r28
    4a54:	2f 5f       	subi	r18, 0xFF	; 255
    4a56:	3f 4f       	sbci	r19, 0xFF	; 255
    4a58:	d9 01       	movw	r26, r18
    4a5a:	01 90       	ld	r0, Z+
    4a5c:	0d 92       	st	X+, r0
    4a5e:	8a 95       	dec	r24
    4a60:	e1 f7       	brne	.-8      	; 0x4a5a <mh_z19_take_meassuring+0x22>
    4a62:	10 92 a7 1a 	sts	0x1AA7, r1	; 0x801aa7 <_ppm+0x1>
    4a66:	10 92 a6 1a 	sts	0x1AA6, r1	; 0x801aa6 <_ppm>
    4a6a:	80 91 a8 1a 	lds	r24, 0x1AA8	; 0x801aa8 <_serial>
    4a6e:	90 91 a9 1a 	lds	r25, 0x1AA9	; 0x801aa9 <_serial+0x1>
    4a72:	00 97       	sbiw	r24, 0x00	; 0
    4a74:	31 f0       	breq	.+12     	; 0x4a82 <mh_z19_take_meassuring+0x4a>
    4a76:	42 2f       	mov	r20, r18
    4a78:	53 2f       	mov	r21, r19
    4a7a:	69 e0       	ldi	r22, 0x09	; 9
    4a7c:	d8 d0       	rcall	.+432    	; 0x4c2e <serial_send_bytes>
    4a7e:	80 e0       	ldi	r24, 0x00	; 0
    4a80:	01 c0       	rjmp	.+2      	; 0x4a84 <mh_z19_take_meassuring+0x4c>
    4a82:	82 e0       	ldi	r24, 0x02	; 2
    4a84:	29 96       	adiw	r28, 0x09	; 9
    4a86:	0f b6       	in	r0, 0x3f	; 63
    4a88:	f8 94       	cli
    4a8a:	de bf       	out	0x3e, r29	; 62
    4a8c:	0f be       	out	0x3f, r0	; 63
    4a8e:	cd bf       	out	0x3d, r28	; 61
    4a90:	df 91       	pop	r29
    4a92:	cf 91       	pop	r28
    4a94:	08 95       	ret

00004a96 <mh_z19_get_co2_ppm>:
    4a96:	20 91 a6 1a 	lds	r18, 0x1AA6	; 0x801aa6 <_ppm>
    4a9a:	30 91 a7 1a 	lds	r19, 0x1AA7	; 0x801aa7 <_ppm+0x1>
    4a9e:	21 15       	cp	r18, r1
    4aa0:	31 05       	cpc	r19, r1
    4aa2:	29 f4       	brne	.+10     	; 0x4aae <mh_z19_get_co2_ppm+0x18>
    4aa4:	fc 01       	movw	r30, r24
    4aa6:	11 82       	std	Z+1, r1	; 0x01
    4aa8:	10 82       	st	Z, r1
    4aaa:	81 e0       	ldi	r24, 0x01	; 1
    4aac:	08 95       	ret
    4aae:	fc 01       	movw	r30, r24
    4ab0:	31 83       	std	Z+1, r19	; 0x01
    4ab2:	20 83       	st	Z, r18
    4ab4:	80 e0       	ldi	r24, 0x00	; 0
    4ab6:	08 95       	ret

00004ab8 <serial_new_instance>:
    4ab8:	2f 92       	push	r2
    4aba:	3f 92       	push	r3
    4abc:	4f 92       	push	r4
    4abe:	5f 92       	push	r5
    4ac0:	6f 92       	push	r6
    4ac2:	7f 92       	push	r7
    4ac4:	8f 92       	push	r8
    4ac6:	9f 92       	push	r9
    4ac8:	af 92       	push	r10
    4aca:	cf 92       	push	r12
    4acc:	ef 92       	push	r14
    4ace:	ff 92       	push	r15
    4ad0:	0f 93       	push	r16
    4ad2:	1f 93       	push	r17
    4ad4:	cf 93       	push	r28
    4ad6:	df 93       	push	r29
    4ad8:	cd b7       	in	r28, 0x3d	; 61
    4ada:	de b7       	in	r29, 0x3e	; 62
    4adc:	f8 2e       	mov	r15, r24
    4ade:	2a 01       	movw	r4, r20
    4ae0:	3b 01       	movw	r6, r22
    4ae2:	88 e0       	ldi	r24, 0x08	; 8
    4ae4:	90 e0       	ldi	r25, 0x00	; 0
    4ae6:	9b d7       	rcall	.+3894   	; 0x5a1e <malloc>
    4ae8:	8c 01       	movw	r16, r24
    4aea:	8f 2d       	mov	r24, r15
    4aec:	90 e0       	ldi	r25, 0x00	; 0
    4aee:	88 0f       	add	r24, r24
    4af0:	99 1f       	adc	r25, r25
    4af2:	fc 01       	movw	r30, r24
    4af4:	e6 55       	subi	r30, 0x56	; 86
    4af6:	f5 4e       	sbci	r31, 0xE5	; 229
    4af8:	11 83       	std	Z+1, r17	; 0x01
    4afa:	00 83       	st	Z, r16
    4afc:	fc 01       	movw	r30, r24
    4afe:	e6 5f       	subi	r30, 0xF6	; 246
    4b00:	fd 4f       	sbci	r31, 0xFD	; 253
    4b02:	80 81       	ld	r24, Z
    4b04:	91 81       	ldd	r25, Z+1	; 0x01
    4b06:	d8 01       	movw	r26, r16
    4b08:	8d 93       	st	X+, r24
    4b0a:	9c 93       	st	X, r25
    4b0c:	6c 2d       	mov	r22, r12
    4b0e:	70 e0       	ldi	r23, 0x00	; 0
    4b10:	84 e0       	ldi	r24, 0x04	; 4
    4b12:	90 e0       	ldi	r25, 0x00	; 0
    4b14:	6a d7       	rcall	.+3796   	; 0x59ea <calloc>
    4b16:	1c 01       	movw	r2, r24
    4b18:	61 e0       	ldi	r22, 0x01	; 1
    4b1a:	70 e0       	ldi	r23, 0x00	; 0
    4b1c:	86 e0       	ldi	r24, 0x06	; 6
    4b1e:	90 e0       	ldi	r25, 0x00	; 0
    4b20:	64 d7       	rcall	.+3784   	; 0x59ea <calloc>
    4b22:	7c 01       	movw	r14, r24
    4b24:	4c 2d       	mov	r20, r12
    4b26:	b1 01       	movw	r22, r2
    4b28:	2b d5       	rcall	.+2646   	; 0x5580 <fifo_init>
    4b2a:	f8 01       	movw	r30, r16
    4b2c:	f5 82       	std	Z+5, r15	; 0x05
    4b2e:	e4 82       	std	Z+4, r14	; 0x04
    4b30:	6a 2d       	mov	r22, r10
    4b32:	70 e0       	ldi	r23, 0x00	; 0
    4b34:	84 e0       	ldi	r24, 0x04	; 4
    4b36:	90 e0       	ldi	r25, 0x00	; 0
    4b38:	58 d7       	rcall	.+3760   	; 0x59ea <calloc>
    4b3a:	1c 01       	movw	r2, r24
    4b3c:	61 e0       	ldi	r22, 0x01	; 1
    4b3e:	70 e0       	ldi	r23, 0x00	; 0
    4b40:	86 e0       	ldi	r24, 0x06	; 6
    4b42:	90 e0       	ldi	r25, 0x00	; 0
    4b44:	52 d7       	rcall	.+3748   	; 0x59ea <calloc>
    4b46:	7c 01       	movw	r14, r24
    4b48:	4a 2d       	mov	r20, r10
    4b4a:	b1 01       	movw	r22, r2
    4b4c:	19 d5       	rcall	.+2610   	; 0x5580 <fifo_init>
    4b4e:	d8 01       	movw	r26, r16
    4b50:	13 96       	adiw	r26, 0x03	; 3
    4b52:	fc 92       	st	X, r15
    4b54:	ee 92       	st	-X, r14
    4b56:	12 97       	sbiw	r26, 0x02	; 2
    4b58:	17 96       	adiw	r26, 0x07	; 7
    4b5a:	9c 92       	st	X, r9
    4b5c:	8e 92       	st	-X, r8
    4b5e:	16 97       	sbiw	r26, 0x06	; 6
    4b60:	ff b6       	in	r15, 0x3f	; 63
    4b62:	f8 94       	cli
    4b64:	ed 91       	ld	r30, X+
    4b66:	fc 91       	ld	r31, X
    4b68:	11 97       	sbiw	r26, 0x01	; 1
    4b6a:	36 97       	sbiw	r30, 0x06	; 6
    4b6c:	80 81       	ld	r24, Z
    4b6e:	82 60       	ori	r24, 0x02	; 2
    4b70:	80 83       	st	Z, r24
    4b72:	8d 90       	ld	r8, X+
    4b74:	9c 90       	ld	r9, X
    4b76:	c3 01       	movw	r24, r6
    4b78:	b2 01       	movw	r22, r4
    4b7a:	1c d6       	rcall	.+3128   	; 0x57b4 <__floatunsisf>
    4b7c:	20 e0       	ldi	r18, 0x00	; 0
    4b7e:	30 e0       	ldi	r19, 0x00	; 0
    4b80:	40 e0       	ldi	r20, 0x00	; 0
    4b82:	51 e4       	ldi	r21, 0x41	; 65
    4b84:	a5 d6       	rcall	.+3402   	; 0x58d0 <__mulsf3>
    4b86:	9b 01       	movw	r18, r22
    4b88:	ac 01       	movw	r20, r24
    4b8a:	60 e0       	ldi	r22, 0x00	; 0
    4b8c:	74 e2       	ldi	r23, 0x24	; 36
    4b8e:	84 e7       	ldi	r24, 0x74	; 116
    4b90:	9b e4       	ldi	r25, 0x4B	; 75
    4b92:	77 d5       	rcall	.+2798   	; 0x5682 <__divsf3>
    4b94:	20 e0       	ldi	r18, 0x00	; 0
    4b96:	30 e0       	ldi	r19, 0x00	; 0
    4b98:	40 e8       	ldi	r20, 0x80	; 128
    4b9a:	5f e3       	ldi	r21, 0x3F	; 63
    4b9c:	0d d5       	rcall	.+2586   	; 0x55b8 <__subsf3>
    4b9e:	de d5       	rcall	.+3004   	; 0x575c <__fixunssfsi>
    4ba0:	f4 01       	movw	r30, r8
    4ba2:	32 97       	sbiw	r30, 0x02	; 2
    4ba4:	60 83       	st	Z, r22
    4ba6:	d8 01       	movw	r26, r16
    4ba8:	ed 91       	ld	r30, X+
    4baa:	fc 91       	ld	r31, X
    4bac:	11 97       	sbiw	r26, 0x01	; 1
    4bae:	35 97       	sbiw	r30, 0x05	; 5
    4bb0:	88 e9       	ldi	r24, 0x98	; 152
    4bb2:	80 83       	st	Z, r24
    4bb4:	ed 91       	ld	r30, X+
    4bb6:	fc 91       	ld	r31, X
    4bb8:	34 97       	sbiw	r30, 0x04	; 4
    4bba:	86 e0       	ldi	r24, 0x06	; 6
    4bbc:	80 83       	st	Z, r24
    4bbe:	ff be       	out	0x3f, r15	; 63
    4bc0:	c8 01       	movw	r24, r16
    4bc2:	df 91       	pop	r29
    4bc4:	cf 91       	pop	r28
    4bc6:	1f 91       	pop	r17
    4bc8:	0f 91       	pop	r16
    4bca:	ff 90       	pop	r15
    4bcc:	ef 90       	pop	r14
    4bce:	cf 90       	pop	r12
    4bd0:	af 90       	pop	r10
    4bd2:	9f 90       	pop	r9
    4bd4:	8f 90       	pop	r8
    4bd6:	7f 90       	pop	r7
    4bd8:	6f 90       	pop	r6
    4bda:	5f 90       	pop	r5
    4bdc:	4f 90       	pop	r4
    4bde:	3f 90       	pop	r3
    4be0:	2f 90       	pop	r2
    4be2:	08 95       	ret

00004be4 <serial_send_byte>:
    4be4:	cf 93       	push	r28
    4be6:	df 93       	push	r29
    4be8:	ec 01       	movw	r28, r24
    4bea:	ea 81       	ldd	r30, Y+2	; 0x02
    4bec:	fb 81       	ldd	r31, Y+3	; 0x03
    4bee:	93 81       	ldd	r25, Z+3	; 0x03
    4bf0:	82 81       	ldd	r24, Z+2	; 0x02
    4bf2:	25 81       	ldd	r18, Z+5	; 0x05
    4bf4:	98 1b       	sub	r25, r24
    4bf6:	92 23       	and	r25, r18
    4bf8:	84 81       	ldd	r24, Z+4	; 0x04
    4bfa:	98 17       	cp	r25, r24
    4bfc:	a1 f0       	breq	.+40     	; 0x4c26 <serial_send_byte+0x42>
    4bfe:	93 81       	ldd	r25, Z+3	; 0x03
    4c00:	26 95       	lsr	r18
    4c02:	29 23       	and	r18, r25
    4c04:	a0 81       	ld	r26, Z
    4c06:	b1 81       	ldd	r27, Z+1	; 0x01
    4c08:	a2 0f       	add	r26, r18
    4c0a:	b1 1d       	adc	r27, r1
    4c0c:	6c 93       	st	X, r22
    4c0e:	9f 5f       	subi	r25, 0xFF	; 255
    4c10:	25 81       	ldd	r18, Z+5	; 0x05
    4c12:	92 23       	and	r25, r18
    4c14:	93 83       	std	Z+3, r25	; 0x03
    4c16:	e8 81       	ld	r30, Y
    4c18:	f9 81       	ldd	r31, Y+1	; 0x01
    4c1a:	35 97       	sbiw	r30, 0x05	; 5
    4c1c:	80 81       	ld	r24, Z
    4c1e:	80 62       	ori	r24, 0x20	; 32
    4c20:	80 83       	st	Z, r24
    4c22:	80 e0       	ldi	r24, 0x00	; 0
    4c24:	01 c0       	rjmp	.+2      	; 0x4c28 <serial_send_byte+0x44>
    4c26:	82 e0       	ldi	r24, 0x02	; 2
    4c28:	df 91       	pop	r29
    4c2a:	cf 91       	pop	r28
    4c2c:	08 95       	ret

00004c2e <serial_send_bytes>:
    4c2e:	ef 92       	push	r14
    4c30:	ff 92       	push	r15
    4c32:	0f 93       	push	r16
    4c34:	1f 93       	push	r17
    4c36:	cf 93       	push	r28
    4c38:	df 93       	push	r29
    4c3a:	7c 01       	movw	r14, r24
    4c3c:	dc 01       	movw	r26, r24
    4c3e:	12 96       	adiw	r26, 0x02	; 2
    4c40:	ed 91       	ld	r30, X+
    4c42:	fc 91       	ld	r31, X
    4c44:	13 97       	sbiw	r26, 0x03	; 3
    4c46:	93 81       	ldd	r25, Z+3	; 0x03
    4c48:	82 81       	ldd	r24, Z+2	; 0x02
    4c4a:	98 1b       	sub	r25, r24
    4c4c:	85 81       	ldd	r24, Z+5	; 0x05
    4c4e:	98 23       	and	r25, r24
    4c50:	84 81       	ldd	r24, Z+4	; 0x04
    4c52:	89 1b       	sub	r24, r25
    4c54:	86 17       	cp	r24, r22
    4c56:	98 f1       	brcs	.+102    	; 0x4cbe <serial_send_bytes+0x90>
    4c58:	66 23       	and	r22, r22
    4c5a:	41 f1       	breq	.+80     	; 0x4cac <serial_send_bytes+0x7e>
    4c5c:	84 2f       	mov	r24, r20
    4c5e:	95 2f       	mov	r25, r21
    4c60:	dc 01       	movw	r26, r24
    4c62:	61 50       	subi	r22, 0x01	; 1
    4c64:	46 2f       	mov	r20, r22
    4c66:	50 e0       	ldi	r21, 0x00	; 0
    4c68:	4f 5f       	subi	r20, 0xFF	; 255
    4c6a:	5f 4f       	sbci	r21, 0xFF	; 255
    4c6c:	48 0f       	add	r20, r24
    4c6e:	59 1f       	adc	r21, r25
    4c70:	e7 01       	movw	r28, r14
    4c72:	ea 81       	ldd	r30, Y+2	; 0x02
    4c74:	fb 81       	ldd	r31, Y+3	; 0x03
    4c76:	93 81       	ldd	r25, Z+3	; 0x03
    4c78:	82 81       	ldd	r24, Z+2	; 0x02
    4c7a:	25 81       	ldd	r18, Z+5	; 0x05
    4c7c:	98 1b       	sub	r25, r24
    4c7e:	92 23       	and	r25, r18
    4c80:	84 81       	ldd	r24, Z+4	; 0x04
    4c82:	98 17       	cp	r25, r24
    4c84:	79 f0       	breq	.+30     	; 0x4ca4 <serial_send_bytes+0x76>
    4c86:	8c 91       	ld	r24, X
    4c88:	93 81       	ldd	r25, Z+3	; 0x03
    4c8a:	26 95       	lsr	r18
    4c8c:	29 23       	and	r18, r25
    4c8e:	60 81       	ld	r22, Z
    4c90:	71 81       	ldd	r23, Z+1	; 0x01
    4c92:	8b 01       	movw	r16, r22
    4c94:	02 0f       	add	r16, r18
    4c96:	11 1d       	adc	r17, r1
    4c98:	e8 01       	movw	r28, r16
    4c9a:	88 83       	st	Y, r24
    4c9c:	9f 5f       	subi	r25, 0xFF	; 255
    4c9e:	85 81       	ldd	r24, Z+5	; 0x05
    4ca0:	98 23       	and	r25, r24
    4ca2:	93 83       	std	Z+3, r25	; 0x03
    4ca4:	11 96       	adiw	r26, 0x01	; 1
    4ca6:	a4 17       	cp	r26, r20
    4ca8:	b5 07       	cpc	r27, r21
    4caa:	11 f7       	brne	.-60     	; 0x4c70 <serial_send_bytes+0x42>
    4cac:	d7 01       	movw	r26, r14
    4cae:	ed 91       	ld	r30, X+
    4cb0:	fc 91       	ld	r31, X
    4cb2:	35 97       	sbiw	r30, 0x05	; 5
    4cb4:	80 81       	ld	r24, Z
    4cb6:	80 62       	ori	r24, 0x20	; 32
    4cb8:	80 83       	st	Z, r24
    4cba:	80 e0       	ldi	r24, 0x00	; 0
    4cbc:	01 c0       	rjmp	.+2      	; 0x4cc0 <serial_send_bytes+0x92>
    4cbe:	82 e0       	ldi	r24, 0x02	; 2
    4cc0:	df 91       	pop	r29
    4cc2:	cf 91       	pop	r28
    4cc4:	1f 91       	pop	r17
    4cc6:	0f 91       	pop	r16
    4cc8:	ff 90       	pop	r15
    4cca:	ef 90       	pop	r14
    4ccc:	08 95       	ret

00004cce <serial_get_byte>:
    4cce:	dc 01       	movw	r26, r24
    4cd0:	14 96       	adiw	r26, 0x04	; 4
    4cd2:	ed 91       	ld	r30, X+
    4cd4:	fc 91       	ld	r31, X
    4cd6:	15 97       	sbiw	r26, 0x05	; 5
    4cd8:	93 81       	ldd	r25, Z+3	; 0x03
    4cda:	82 81       	ldd	r24, Z+2	; 0x02
    4cdc:	98 17       	cp	r25, r24
    4cde:	89 f0       	breq	.+34     	; 0x4d02 <serial_get_byte+0x34>
    4ce0:	92 81       	ldd	r25, Z+2	; 0x02
    4ce2:	85 81       	ldd	r24, Z+5	; 0x05
    4ce4:	86 95       	lsr	r24
    4ce6:	89 23       	and	r24, r25
    4ce8:	a0 81       	ld	r26, Z
    4cea:	b1 81       	ldd	r27, Z+1	; 0x01
    4cec:	a8 0f       	add	r26, r24
    4cee:	b1 1d       	adc	r27, r1
    4cf0:	8c 91       	ld	r24, X
    4cf2:	db 01       	movw	r26, r22
    4cf4:	8c 93       	st	X, r24
    4cf6:	9f 5f       	subi	r25, 0xFF	; 255
    4cf8:	85 81       	ldd	r24, Z+5	; 0x05
    4cfa:	98 23       	and	r25, r24
    4cfc:	92 83       	std	Z+2, r25	; 0x02
    4cfe:	80 e0       	ldi	r24, 0x00	; 0
    4d00:	08 95       	ret
    4d02:	83 e0       	ldi	r24, 0x03	; 3
    4d04:	08 95       	ret

00004d06 <__vector_25>:
    4d06:	1f 92       	push	r1
    4d08:	0f 92       	push	r0
    4d0a:	0f b6       	in	r0, 0x3f	; 63
    4d0c:	0f 92       	push	r0
    4d0e:	11 24       	eor	r1, r1
    4d10:	0b b6       	in	r0, 0x3b	; 59
    4d12:	0f 92       	push	r0
    4d14:	2f 93       	push	r18
    4d16:	3f 93       	push	r19
    4d18:	4f 93       	push	r20
    4d1a:	5f 93       	push	r21
    4d1c:	6f 93       	push	r22
    4d1e:	7f 93       	push	r23
    4d20:	8f 93       	push	r24
    4d22:	9f 93       	push	r25
    4d24:	af 93       	push	r26
    4d26:	bf 93       	push	r27
    4d28:	cf 93       	push	r28
    4d2a:	df 93       	push	r29
    4d2c:	ef 93       	push	r30
    4d2e:	ff 93       	push	r31
    4d30:	a0 91 aa 1a 	lds	r26, 0x1AAA	; 0x801aaa <_ser_handle>
    4d34:	b0 91 ab 1a 	lds	r27, 0x1AAB	; 0x801aab <_ser_handle+0x1>
    4d38:	10 97       	sbiw	r26, 0x00	; 0
    4d3a:	11 f1       	breq	.+68     	; 0x4d80 <__vector_25+0x7a>
    4d3c:	60 91 c6 00 	lds	r22, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
    4d40:	14 96       	adiw	r26, 0x04	; 4
    4d42:	ed 91       	ld	r30, X+
    4d44:	fc 91       	ld	r31, X
    4d46:	15 97       	sbiw	r26, 0x05	; 5
    4d48:	93 81       	ldd	r25, Z+3	; 0x03
    4d4a:	82 81       	ldd	r24, Z+2	; 0x02
    4d4c:	25 81       	ldd	r18, Z+5	; 0x05
    4d4e:	98 1b       	sub	r25, r24
    4d50:	92 23       	and	r25, r18
    4d52:	84 81       	ldd	r24, Z+4	; 0x04
    4d54:	98 17       	cp	r25, r24
    4d56:	61 f0       	breq	.+24     	; 0x4d70 <__vector_25+0x6a>
    4d58:	83 81       	ldd	r24, Z+3	; 0x03
    4d5a:	26 95       	lsr	r18
    4d5c:	28 23       	and	r18, r24
    4d5e:	c0 81       	ld	r28, Z
    4d60:	d1 81       	ldd	r29, Z+1	; 0x01
    4d62:	c2 0f       	add	r28, r18
    4d64:	d1 1d       	adc	r29, r1
    4d66:	68 83       	st	Y, r22
    4d68:	8f 5f       	subi	r24, 0xFF	; 255
    4d6a:	95 81       	ldd	r25, Z+5	; 0x05
    4d6c:	89 23       	and	r24, r25
    4d6e:	83 83       	std	Z+3, r24	; 0x03
    4d70:	16 96       	adiw	r26, 0x06	; 6
    4d72:	ed 91       	ld	r30, X+
    4d74:	fc 91       	ld	r31, X
    4d76:	17 97       	sbiw	r26, 0x07	; 7
    4d78:	30 97       	sbiw	r30, 0x00	; 0
    4d7a:	11 f0       	breq	.+4      	; 0x4d80 <__vector_25+0x7a>
    4d7c:	cd 01       	movw	r24, r26
    4d7e:	19 95       	eicall
    4d80:	ff 91       	pop	r31
    4d82:	ef 91       	pop	r30
    4d84:	df 91       	pop	r29
    4d86:	cf 91       	pop	r28
    4d88:	bf 91       	pop	r27
    4d8a:	af 91       	pop	r26
    4d8c:	9f 91       	pop	r25
    4d8e:	8f 91       	pop	r24
    4d90:	7f 91       	pop	r23
    4d92:	6f 91       	pop	r22
    4d94:	5f 91       	pop	r21
    4d96:	4f 91       	pop	r20
    4d98:	3f 91       	pop	r19
    4d9a:	2f 91       	pop	r18
    4d9c:	0f 90       	pop	r0
    4d9e:	0b be       	out	0x3b, r0	; 59
    4da0:	0f 90       	pop	r0
    4da2:	0f be       	out	0x3f, r0	; 63
    4da4:	0f 90       	pop	r0
    4da6:	1f 90       	pop	r1
    4da8:	18 95       	reti

00004daa <__vector_26>:
    4daa:	1f 92       	push	r1
    4dac:	0f 92       	push	r0
    4dae:	0f b6       	in	r0, 0x3f	; 63
    4db0:	0f 92       	push	r0
    4db2:	11 24       	eor	r1, r1
    4db4:	0b b6       	in	r0, 0x3b	; 59
    4db6:	0f 92       	push	r0
    4db8:	2f 93       	push	r18
    4dba:	8f 93       	push	r24
    4dbc:	9f 93       	push	r25
    4dbe:	af 93       	push	r26
    4dc0:	bf 93       	push	r27
    4dc2:	ef 93       	push	r30
    4dc4:	ff 93       	push	r31
    4dc6:	e0 91 aa 1a 	lds	r30, 0x1AAA	; 0x801aaa <_ser_handle>
    4dca:	f0 91 ab 1a 	lds	r31, 0x1AAB	; 0x801aab <_ser_handle+0x1>
    4dce:	30 97       	sbiw	r30, 0x00	; 0
    4dd0:	b9 f0       	breq	.+46     	; 0x4e00 <__vector_26+0x56>
    4dd2:	02 80       	ldd	r0, Z+2	; 0x02
    4dd4:	f3 81       	ldd	r31, Z+3	; 0x03
    4dd6:	e0 2d       	mov	r30, r0
    4dd8:	93 81       	ldd	r25, Z+3	; 0x03
    4dda:	82 81       	ldd	r24, Z+2	; 0x02
    4ddc:	98 17       	cp	r25, r24
    4dde:	b1 f0       	breq	.+44     	; 0x4e0c <__vector_26+0x62>
    4de0:	92 81       	ldd	r25, Z+2	; 0x02
    4de2:	85 81       	ldd	r24, Z+5	; 0x05
    4de4:	28 2f       	mov	r18, r24
    4de6:	26 95       	lsr	r18
    4de8:	29 23       	and	r18, r25
    4dea:	a0 81       	ld	r26, Z
    4dec:	b1 81       	ldd	r27, Z+1	; 0x01
    4dee:	a2 0f       	add	r26, r18
    4df0:	b1 1d       	adc	r27, r1
    4df2:	2c 91       	ld	r18, X
    4df4:	9f 5f       	subi	r25, 0xFF	; 255
    4df6:	89 23       	and	r24, r25
    4df8:	82 83       	std	Z+2, r24	; 0x02
    4dfa:	20 93 c6 00 	sts	0x00C6, r18	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
    4dfe:	0b c0       	rjmp	.+22     	; 0x4e16 <__vector_26+0x6c>
    4e00:	e1 ec       	ldi	r30, 0xC1	; 193
    4e02:	f0 e0       	ldi	r31, 0x00	; 0
    4e04:	80 81       	ld	r24, Z
    4e06:	8f 7d       	andi	r24, 0xDF	; 223
    4e08:	80 83       	st	Z, r24
    4e0a:	05 c0       	rjmp	.+10     	; 0x4e16 <__vector_26+0x6c>
    4e0c:	e1 ec       	ldi	r30, 0xC1	; 193
    4e0e:	f0 e0       	ldi	r31, 0x00	; 0
    4e10:	80 81       	ld	r24, Z
    4e12:	8f 7d       	andi	r24, 0xDF	; 223
    4e14:	80 83       	st	Z, r24
    4e16:	ff 91       	pop	r31
    4e18:	ef 91       	pop	r30
    4e1a:	bf 91       	pop	r27
    4e1c:	af 91       	pop	r26
    4e1e:	9f 91       	pop	r25
    4e20:	8f 91       	pop	r24
    4e22:	2f 91       	pop	r18
    4e24:	0f 90       	pop	r0
    4e26:	0b be       	out	0x3b, r0	; 59
    4e28:	0f 90       	pop	r0
    4e2a:	0f be       	out	0x3f, r0	; 63
    4e2c:	0f 90       	pop	r0
    4e2e:	1f 90       	pop	r1
    4e30:	18 95       	reti

00004e32 <__vector_36>:
    4e32:	1f 92       	push	r1
    4e34:	0f 92       	push	r0
    4e36:	0f b6       	in	r0, 0x3f	; 63
    4e38:	0f 92       	push	r0
    4e3a:	11 24       	eor	r1, r1
    4e3c:	0b b6       	in	r0, 0x3b	; 59
    4e3e:	0f 92       	push	r0
    4e40:	2f 93       	push	r18
    4e42:	3f 93       	push	r19
    4e44:	4f 93       	push	r20
    4e46:	5f 93       	push	r21
    4e48:	6f 93       	push	r22
    4e4a:	7f 93       	push	r23
    4e4c:	8f 93       	push	r24
    4e4e:	9f 93       	push	r25
    4e50:	af 93       	push	r26
    4e52:	bf 93       	push	r27
    4e54:	cf 93       	push	r28
    4e56:	df 93       	push	r29
    4e58:	ef 93       	push	r30
    4e5a:	ff 93       	push	r31
    4e5c:	a0 91 ac 1a 	lds	r26, 0x1AAC	; 0x801aac <_ser_handle+0x2>
    4e60:	b0 91 ad 1a 	lds	r27, 0x1AAD	; 0x801aad <_ser_handle+0x3>
    4e64:	10 97       	sbiw	r26, 0x00	; 0
    4e66:	11 f1       	breq	.+68     	; 0x4eac <__vector_36+0x7a>
    4e68:	60 91 ce 00 	lds	r22, 0x00CE	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7000ce>
    4e6c:	14 96       	adiw	r26, 0x04	; 4
    4e6e:	ed 91       	ld	r30, X+
    4e70:	fc 91       	ld	r31, X
    4e72:	15 97       	sbiw	r26, 0x05	; 5
    4e74:	93 81       	ldd	r25, Z+3	; 0x03
    4e76:	82 81       	ldd	r24, Z+2	; 0x02
    4e78:	25 81       	ldd	r18, Z+5	; 0x05
    4e7a:	98 1b       	sub	r25, r24
    4e7c:	92 23       	and	r25, r18
    4e7e:	84 81       	ldd	r24, Z+4	; 0x04
    4e80:	98 17       	cp	r25, r24
    4e82:	61 f0       	breq	.+24     	; 0x4e9c <__vector_36+0x6a>
    4e84:	83 81       	ldd	r24, Z+3	; 0x03
    4e86:	26 95       	lsr	r18
    4e88:	28 23       	and	r18, r24
    4e8a:	c0 81       	ld	r28, Z
    4e8c:	d1 81       	ldd	r29, Z+1	; 0x01
    4e8e:	c2 0f       	add	r28, r18
    4e90:	d1 1d       	adc	r29, r1
    4e92:	68 83       	st	Y, r22
    4e94:	8f 5f       	subi	r24, 0xFF	; 255
    4e96:	95 81       	ldd	r25, Z+5	; 0x05
    4e98:	89 23       	and	r24, r25
    4e9a:	83 83       	std	Z+3, r24	; 0x03
    4e9c:	16 96       	adiw	r26, 0x06	; 6
    4e9e:	ed 91       	ld	r30, X+
    4ea0:	fc 91       	ld	r31, X
    4ea2:	17 97       	sbiw	r26, 0x07	; 7
    4ea4:	30 97       	sbiw	r30, 0x00	; 0
    4ea6:	11 f0       	breq	.+4      	; 0x4eac <__vector_36+0x7a>
    4ea8:	cd 01       	movw	r24, r26
    4eaa:	19 95       	eicall
    4eac:	ff 91       	pop	r31
    4eae:	ef 91       	pop	r30
    4eb0:	df 91       	pop	r29
    4eb2:	cf 91       	pop	r28
    4eb4:	bf 91       	pop	r27
    4eb6:	af 91       	pop	r26
    4eb8:	9f 91       	pop	r25
    4eba:	8f 91       	pop	r24
    4ebc:	7f 91       	pop	r23
    4ebe:	6f 91       	pop	r22
    4ec0:	5f 91       	pop	r21
    4ec2:	4f 91       	pop	r20
    4ec4:	3f 91       	pop	r19
    4ec6:	2f 91       	pop	r18
    4ec8:	0f 90       	pop	r0
    4eca:	0b be       	out	0x3b, r0	; 59
    4ecc:	0f 90       	pop	r0
    4ece:	0f be       	out	0x3f, r0	; 63
    4ed0:	0f 90       	pop	r0
    4ed2:	1f 90       	pop	r1
    4ed4:	18 95       	reti

00004ed6 <__vector_37>:
    4ed6:	1f 92       	push	r1
    4ed8:	0f 92       	push	r0
    4eda:	0f b6       	in	r0, 0x3f	; 63
    4edc:	0f 92       	push	r0
    4ede:	11 24       	eor	r1, r1
    4ee0:	0b b6       	in	r0, 0x3b	; 59
    4ee2:	0f 92       	push	r0
    4ee4:	2f 93       	push	r18
    4ee6:	8f 93       	push	r24
    4ee8:	9f 93       	push	r25
    4eea:	af 93       	push	r26
    4eec:	bf 93       	push	r27
    4eee:	ef 93       	push	r30
    4ef0:	ff 93       	push	r31
    4ef2:	e0 91 ac 1a 	lds	r30, 0x1AAC	; 0x801aac <_ser_handle+0x2>
    4ef6:	f0 91 ad 1a 	lds	r31, 0x1AAD	; 0x801aad <_ser_handle+0x3>
    4efa:	30 97       	sbiw	r30, 0x00	; 0
    4efc:	b9 f0       	breq	.+46     	; 0x4f2c <__vector_37+0x56>
    4efe:	02 80       	ldd	r0, Z+2	; 0x02
    4f00:	f3 81       	ldd	r31, Z+3	; 0x03
    4f02:	e0 2d       	mov	r30, r0
    4f04:	93 81       	ldd	r25, Z+3	; 0x03
    4f06:	82 81       	ldd	r24, Z+2	; 0x02
    4f08:	98 17       	cp	r25, r24
    4f0a:	b1 f0       	breq	.+44     	; 0x4f38 <__vector_37+0x62>
    4f0c:	92 81       	ldd	r25, Z+2	; 0x02
    4f0e:	85 81       	ldd	r24, Z+5	; 0x05
    4f10:	28 2f       	mov	r18, r24
    4f12:	26 95       	lsr	r18
    4f14:	29 23       	and	r18, r25
    4f16:	a0 81       	ld	r26, Z
    4f18:	b1 81       	ldd	r27, Z+1	; 0x01
    4f1a:	a2 0f       	add	r26, r18
    4f1c:	b1 1d       	adc	r27, r1
    4f1e:	2c 91       	ld	r18, X
    4f20:	9f 5f       	subi	r25, 0xFF	; 255
    4f22:	89 23       	and	r24, r25
    4f24:	82 83       	std	Z+2, r24	; 0x02
    4f26:	20 93 ce 00 	sts	0x00CE, r18	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7000ce>
    4f2a:	0b c0       	rjmp	.+22     	; 0x4f42 <__vector_37+0x6c>
    4f2c:	e9 ec       	ldi	r30, 0xC9	; 201
    4f2e:	f0 e0       	ldi	r31, 0x00	; 0
    4f30:	80 81       	ld	r24, Z
    4f32:	8f 7d       	andi	r24, 0xDF	; 223
    4f34:	80 83       	st	Z, r24
    4f36:	05 c0       	rjmp	.+10     	; 0x4f42 <__vector_37+0x6c>
    4f38:	e9 ec       	ldi	r30, 0xC9	; 201
    4f3a:	f0 e0       	ldi	r31, 0x00	; 0
    4f3c:	80 81       	ld	r24, Z
    4f3e:	8f 7d       	andi	r24, 0xDF	; 223
    4f40:	80 83       	st	Z, r24
    4f42:	ff 91       	pop	r31
    4f44:	ef 91       	pop	r30
    4f46:	bf 91       	pop	r27
    4f48:	af 91       	pop	r26
    4f4a:	9f 91       	pop	r25
    4f4c:	8f 91       	pop	r24
    4f4e:	2f 91       	pop	r18
    4f50:	0f 90       	pop	r0
    4f52:	0b be       	out	0x3b, r0	; 59
    4f54:	0f 90       	pop	r0
    4f56:	0f be       	out	0x3f, r0	; 63
    4f58:	0f 90       	pop	r0
    4f5a:	1f 90       	pop	r1
    4f5c:	18 95       	reti

00004f5e <__vector_51>:
    4f5e:	1f 92       	push	r1
    4f60:	0f 92       	push	r0
    4f62:	0f b6       	in	r0, 0x3f	; 63
    4f64:	0f 92       	push	r0
    4f66:	11 24       	eor	r1, r1
    4f68:	0b b6       	in	r0, 0x3b	; 59
    4f6a:	0f 92       	push	r0
    4f6c:	2f 93       	push	r18
    4f6e:	3f 93       	push	r19
    4f70:	4f 93       	push	r20
    4f72:	5f 93       	push	r21
    4f74:	6f 93       	push	r22
    4f76:	7f 93       	push	r23
    4f78:	8f 93       	push	r24
    4f7a:	9f 93       	push	r25
    4f7c:	af 93       	push	r26
    4f7e:	bf 93       	push	r27
    4f80:	cf 93       	push	r28
    4f82:	df 93       	push	r29
    4f84:	ef 93       	push	r30
    4f86:	ff 93       	push	r31
    4f88:	a0 91 ae 1a 	lds	r26, 0x1AAE	; 0x801aae <_ser_handle+0x4>
    4f8c:	b0 91 af 1a 	lds	r27, 0x1AAF	; 0x801aaf <_ser_handle+0x5>
    4f90:	10 97       	sbiw	r26, 0x00	; 0
    4f92:	11 f1       	breq	.+68     	; 0x4fd8 <__vector_51+0x7a>
    4f94:	60 91 d6 00 	lds	r22, 0x00D6	; 0x8000d6 <__TEXT_REGION_LENGTH__+0x7000d6>
    4f98:	14 96       	adiw	r26, 0x04	; 4
    4f9a:	ed 91       	ld	r30, X+
    4f9c:	fc 91       	ld	r31, X
    4f9e:	15 97       	sbiw	r26, 0x05	; 5
    4fa0:	93 81       	ldd	r25, Z+3	; 0x03
    4fa2:	82 81       	ldd	r24, Z+2	; 0x02
    4fa4:	25 81       	ldd	r18, Z+5	; 0x05
    4fa6:	98 1b       	sub	r25, r24
    4fa8:	92 23       	and	r25, r18
    4faa:	84 81       	ldd	r24, Z+4	; 0x04
    4fac:	98 17       	cp	r25, r24
    4fae:	61 f0       	breq	.+24     	; 0x4fc8 <__vector_51+0x6a>
    4fb0:	83 81       	ldd	r24, Z+3	; 0x03
    4fb2:	26 95       	lsr	r18
    4fb4:	28 23       	and	r18, r24
    4fb6:	c0 81       	ld	r28, Z
    4fb8:	d1 81       	ldd	r29, Z+1	; 0x01
    4fba:	c2 0f       	add	r28, r18
    4fbc:	d1 1d       	adc	r29, r1
    4fbe:	68 83       	st	Y, r22
    4fc0:	8f 5f       	subi	r24, 0xFF	; 255
    4fc2:	95 81       	ldd	r25, Z+5	; 0x05
    4fc4:	89 23       	and	r24, r25
    4fc6:	83 83       	std	Z+3, r24	; 0x03
    4fc8:	16 96       	adiw	r26, 0x06	; 6
    4fca:	ed 91       	ld	r30, X+
    4fcc:	fc 91       	ld	r31, X
    4fce:	17 97       	sbiw	r26, 0x07	; 7
    4fd0:	30 97       	sbiw	r30, 0x00	; 0
    4fd2:	11 f0       	breq	.+4      	; 0x4fd8 <__vector_51+0x7a>
    4fd4:	cd 01       	movw	r24, r26
    4fd6:	19 95       	eicall
    4fd8:	ff 91       	pop	r31
    4fda:	ef 91       	pop	r30
    4fdc:	df 91       	pop	r29
    4fde:	cf 91       	pop	r28
    4fe0:	bf 91       	pop	r27
    4fe2:	af 91       	pop	r26
    4fe4:	9f 91       	pop	r25
    4fe6:	8f 91       	pop	r24
    4fe8:	7f 91       	pop	r23
    4fea:	6f 91       	pop	r22
    4fec:	5f 91       	pop	r21
    4fee:	4f 91       	pop	r20
    4ff0:	3f 91       	pop	r19
    4ff2:	2f 91       	pop	r18
    4ff4:	0f 90       	pop	r0
    4ff6:	0b be       	out	0x3b, r0	; 59
    4ff8:	0f 90       	pop	r0
    4ffa:	0f be       	out	0x3f, r0	; 63
    4ffc:	0f 90       	pop	r0
    4ffe:	1f 90       	pop	r1
    5000:	18 95       	reti

00005002 <__vector_52>:
    5002:	1f 92       	push	r1
    5004:	0f 92       	push	r0
    5006:	0f b6       	in	r0, 0x3f	; 63
    5008:	0f 92       	push	r0
    500a:	11 24       	eor	r1, r1
    500c:	0b b6       	in	r0, 0x3b	; 59
    500e:	0f 92       	push	r0
    5010:	2f 93       	push	r18
    5012:	8f 93       	push	r24
    5014:	9f 93       	push	r25
    5016:	af 93       	push	r26
    5018:	bf 93       	push	r27
    501a:	ef 93       	push	r30
    501c:	ff 93       	push	r31
    501e:	e0 91 ae 1a 	lds	r30, 0x1AAE	; 0x801aae <_ser_handle+0x4>
    5022:	f0 91 af 1a 	lds	r31, 0x1AAF	; 0x801aaf <_ser_handle+0x5>
    5026:	30 97       	sbiw	r30, 0x00	; 0
    5028:	b9 f0       	breq	.+46     	; 0x5058 <__vector_52+0x56>
    502a:	02 80       	ldd	r0, Z+2	; 0x02
    502c:	f3 81       	ldd	r31, Z+3	; 0x03
    502e:	e0 2d       	mov	r30, r0
    5030:	93 81       	ldd	r25, Z+3	; 0x03
    5032:	82 81       	ldd	r24, Z+2	; 0x02
    5034:	98 17       	cp	r25, r24
    5036:	b1 f0       	breq	.+44     	; 0x5064 <__vector_52+0x62>
    5038:	92 81       	ldd	r25, Z+2	; 0x02
    503a:	85 81       	ldd	r24, Z+5	; 0x05
    503c:	28 2f       	mov	r18, r24
    503e:	26 95       	lsr	r18
    5040:	29 23       	and	r18, r25
    5042:	a0 81       	ld	r26, Z
    5044:	b1 81       	ldd	r27, Z+1	; 0x01
    5046:	a2 0f       	add	r26, r18
    5048:	b1 1d       	adc	r27, r1
    504a:	2c 91       	ld	r18, X
    504c:	9f 5f       	subi	r25, 0xFF	; 255
    504e:	89 23       	and	r24, r25
    5050:	82 83       	std	Z+2, r24	; 0x02
    5052:	20 93 d6 00 	sts	0x00D6, r18	; 0x8000d6 <__TEXT_REGION_LENGTH__+0x7000d6>
    5056:	0b c0       	rjmp	.+22     	; 0x506e <__vector_52+0x6c>
    5058:	e1 ed       	ldi	r30, 0xD1	; 209
    505a:	f0 e0       	ldi	r31, 0x00	; 0
    505c:	80 81       	ld	r24, Z
    505e:	8f 7d       	andi	r24, 0xDF	; 223
    5060:	80 83       	st	Z, r24
    5062:	05 c0       	rjmp	.+10     	; 0x506e <__vector_52+0x6c>
    5064:	e1 ed       	ldi	r30, 0xD1	; 209
    5066:	f0 e0       	ldi	r31, 0x00	; 0
    5068:	80 81       	ld	r24, Z
    506a:	8f 7d       	andi	r24, 0xDF	; 223
    506c:	80 83       	st	Z, r24
    506e:	ff 91       	pop	r31
    5070:	ef 91       	pop	r30
    5072:	bf 91       	pop	r27
    5074:	af 91       	pop	r26
    5076:	9f 91       	pop	r25
    5078:	8f 91       	pop	r24
    507a:	2f 91       	pop	r18
    507c:	0f 90       	pop	r0
    507e:	0b be       	out	0x3b, r0	; 59
    5080:	0f 90       	pop	r0
    5082:	0f be       	out	0x3f, r0	; 63
    5084:	0f 90       	pop	r0
    5086:	1f 90       	pop	r1
    5088:	18 95       	reti

0000508a <__vector_54>:
    508a:	1f 92       	push	r1
    508c:	0f 92       	push	r0
    508e:	0f b6       	in	r0, 0x3f	; 63
    5090:	0f 92       	push	r0
    5092:	11 24       	eor	r1, r1
    5094:	0b b6       	in	r0, 0x3b	; 59
    5096:	0f 92       	push	r0
    5098:	2f 93       	push	r18
    509a:	3f 93       	push	r19
    509c:	4f 93       	push	r20
    509e:	5f 93       	push	r21
    50a0:	6f 93       	push	r22
    50a2:	7f 93       	push	r23
    50a4:	8f 93       	push	r24
    50a6:	9f 93       	push	r25
    50a8:	af 93       	push	r26
    50aa:	bf 93       	push	r27
    50ac:	cf 93       	push	r28
    50ae:	df 93       	push	r29
    50b0:	ef 93       	push	r30
    50b2:	ff 93       	push	r31
    50b4:	a0 91 b0 1a 	lds	r26, 0x1AB0	; 0x801ab0 <_ser_handle+0x6>
    50b8:	b0 91 b1 1a 	lds	r27, 0x1AB1	; 0x801ab1 <_ser_handle+0x7>
    50bc:	10 97       	sbiw	r26, 0x00	; 0
    50be:	11 f1       	breq	.+68     	; 0x5104 <__vector_54+0x7a>
    50c0:	60 91 36 01 	lds	r22, 0x0136	; 0x800136 <__TEXT_REGION_LENGTH__+0x700136>
    50c4:	14 96       	adiw	r26, 0x04	; 4
    50c6:	ed 91       	ld	r30, X+
    50c8:	fc 91       	ld	r31, X
    50ca:	15 97       	sbiw	r26, 0x05	; 5
    50cc:	93 81       	ldd	r25, Z+3	; 0x03
    50ce:	82 81       	ldd	r24, Z+2	; 0x02
    50d0:	25 81       	ldd	r18, Z+5	; 0x05
    50d2:	98 1b       	sub	r25, r24
    50d4:	92 23       	and	r25, r18
    50d6:	84 81       	ldd	r24, Z+4	; 0x04
    50d8:	98 17       	cp	r25, r24
    50da:	61 f0       	breq	.+24     	; 0x50f4 <__vector_54+0x6a>
    50dc:	83 81       	ldd	r24, Z+3	; 0x03
    50de:	26 95       	lsr	r18
    50e0:	28 23       	and	r18, r24
    50e2:	c0 81       	ld	r28, Z
    50e4:	d1 81       	ldd	r29, Z+1	; 0x01
    50e6:	c2 0f       	add	r28, r18
    50e8:	d1 1d       	adc	r29, r1
    50ea:	68 83       	st	Y, r22
    50ec:	8f 5f       	subi	r24, 0xFF	; 255
    50ee:	95 81       	ldd	r25, Z+5	; 0x05
    50f0:	89 23       	and	r24, r25
    50f2:	83 83       	std	Z+3, r24	; 0x03
    50f4:	16 96       	adiw	r26, 0x06	; 6
    50f6:	ed 91       	ld	r30, X+
    50f8:	fc 91       	ld	r31, X
    50fa:	17 97       	sbiw	r26, 0x07	; 7
    50fc:	30 97       	sbiw	r30, 0x00	; 0
    50fe:	11 f0       	breq	.+4      	; 0x5104 <__vector_54+0x7a>
    5100:	cd 01       	movw	r24, r26
    5102:	19 95       	eicall
    5104:	ff 91       	pop	r31
    5106:	ef 91       	pop	r30
    5108:	df 91       	pop	r29
    510a:	cf 91       	pop	r28
    510c:	bf 91       	pop	r27
    510e:	af 91       	pop	r26
    5110:	9f 91       	pop	r25
    5112:	8f 91       	pop	r24
    5114:	7f 91       	pop	r23
    5116:	6f 91       	pop	r22
    5118:	5f 91       	pop	r21
    511a:	4f 91       	pop	r20
    511c:	3f 91       	pop	r19
    511e:	2f 91       	pop	r18
    5120:	0f 90       	pop	r0
    5122:	0b be       	out	0x3b, r0	; 59
    5124:	0f 90       	pop	r0
    5126:	0f be       	out	0x3f, r0	; 63
    5128:	0f 90       	pop	r0
    512a:	1f 90       	pop	r1
    512c:	18 95       	reti

0000512e <__vector_55>:
    512e:	1f 92       	push	r1
    5130:	0f 92       	push	r0
    5132:	0f b6       	in	r0, 0x3f	; 63
    5134:	0f 92       	push	r0
    5136:	11 24       	eor	r1, r1
    5138:	0b b6       	in	r0, 0x3b	; 59
    513a:	0f 92       	push	r0
    513c:	2f 93       	push	r18
    513e:	8f 93       	push	r24
    5140:	9f 93       	push	r25
    5142:	af 93       	push	r26
    5144:	bf 93       	push	r27
    5146:	ef 93       	push	r30
    5148:	ff 93       	push	r31
    514a:	e0 91 b0 1a 	lds	r30, 0x1AB0	; 0x801ab0 <_ser_handle+0x6>
    514e:	f0 91 b1 1a 	lds	r31, 0x1AB1	; 0x801ab1 <_ser_handle+0x7>
    5152:	30 97       	sbiw	r30, 0x00	; 0
    5154:	b9 f0       	breq	.+46     	; 0x5184 <__vector_55+0x56>
    5156:	02 80       	ldd	r0, Z+2	; 0x02
    5158:	f3 81       	ldd	r31, Z+3	; 0x03
    515a:	e0 2d       	mov	r30, r0
    515c:	93 81       	ldd	r25, Z+3	; 0x03
    515e:	82 81       	ldd	r24, Z+2	; 0x02
    5160:	98 17       	cp	r25, r24
    5162:	b1 f0       	breq	.+44     	; 0x5190 <__vector_55+0x62>
    5164:	92 81       	ldd	r25, Z+2	; 0x02
    5166:	85 81       	ldd	r24, Z+5	; 0x05
    5168:	28 2f       	mov	r18, r24
    516a:	26 95       	lsr	r18
    516c:	29 23       	and	r18, r25
    516e:	a0 81       	ld	r26, Z
    5170:	b1 81       	ldd	r27, Z+1	; 0x01
    5172:	a2 0f       	add	r26, r18
    5174:	b1 1d       	adc	r27, r1
    5176:	2c 91       	ld	r18, X
    5178:	9f 5f       	subi	r25, 0xFF	; 255
    517a:	89 23       	and	r24, r25
    517c:	82 83       	std	Z+2, r24	; 0x02
    517e:	20 93 36 01 	sts	0x0136, r18	; 0x800136 <__TEXT_REGION_LENGTH__+0x700136>
    5182:	0b c0       	rjmp	.+22     	; 0x519a <__vector_55+0x6c>
    5184:	e1 e3       	ldi	r30, 0x31	; 49
    5186:	f1 e0       	ldi	r31, 0x01	; 1
    5188:	80 81       	ld	r24, Z
    518a:	8f 7d       	andi	r24, 0xDF	; 223
    518c:	80 83       	st	Z, r24
    518e:	05 c0       	rjmp	.+10     	; 0x519a <__vector_55+0x6c>
    5190:	e1 e3       	ldi	r30, 0x31	; 49
    5192:	f1 e0       	ldi	r31, 0x01	; 1
    5194:	80 81       	ld	r24, Z
    5196:	8f 7d       	andi	r24, 0xDF	; 223
    5198:	80 83       	st	Z, r24
    519a:	ff 91       	pop	r31
    519c:	ef 91       	pop	r30
    519e:	bf 91       	pop	r27
    51a0:	af 91       	pop	r26
    51a2:	9f 91       	pop	r25
    51a4:	8f 91       	pop	r24
    51a6:	2f 91       	pop	r18
    51a8:	0f 90       	pop	r0
    51aa:	0b be       	out	0x3b, r0	; 59
    51ac:	0f 90       	pop	r0
    51ae:	0f be       	out	0x3f, r0	; 63
    51b0:	0f 90       	pop	r0
    51b2:	1f 90       	pop	r1
    51b4:	18 95       	reti

000051b6 <usart_getchar>:
    51b6:	cf 93       	push	r28
    51b8:	df 93       	push	r29
    51ba:	1f 92       	push	r1
    51bc:	cd b7       	in	r28, 0x3d	; 61
    51be:	de b7       	in	r29, 0x3e	; 62
    51c0:	be 01       	movw	r22, r28
    51c2:	6f 5f       	subi	r22, 0xFF	; 255
    51c4:	7f 4f       	sbci	r23, 0xFF	; 255
    51c6:	80 91 b2 1a 	lds	r24, 0x1AB2	; 0x801ab2 <_com_serial_instance>
    51ca:	90 91 b3 1a 	lds	r25, 0x1AB3	; 0x801ab3 <_com_serial_instance+0x1>
    51ce:	7f dd       	rcall	.-1282   	; 0x4cce <serial_get_byte>
    51d0:	81 11       	cpse	r24, r1
    51d2:	f6 cf       	rjmp	.-20     	; 0x51c0 <usart_getchar+0xa>
    51d4:	89 81       	ldd	r24, Y+1	; 0x01
    51d6:	90 e0       	ldi	r25, 0x00	; 0
    51d8:	0f 90       	pop	r0
    51da:	df 91       	pop	r29
    51dc:	cf 91       	pop	r28
    51de:	08 95       	ret

000051e0 <usart_putchar>:
    51e0:	68 2f       	mov	r22, r24
    51e2:	80 91 b2 1a 	lds	r24, 0x1AB2	; 0x801ab2 <_com_serial_instance>
    51e6:	90 91 b3 1a 	lds	r25, 0x1AB3	; 0x801ab3 <_com_serial_instance+0x1>
    51ea:	fc dc       	rcall	.-1544   	; 0x4be4 <serial_send_byte>
    51ec:	80 e0       	ldi	r24, 0x00	; 0
    51ee:	90 e0       	ldi	r25, 0x00	; 0
    51f0:	08 95       	ret

000051f2 <stdioCreate>:
    51f2:	8f 92       	push	r8
    51f4:	9f 92       	push	r9
    51f6:	af 92       	push	r10
    51f8:	cf 92       	push	r12
    51fa:	ef 92       	push	r14
    51fc:	0f 93       	push	r16
    51fe:	81 2c       	mov	r8, r1
    5200:	91 2c       	mov	r9, r1
    5202:	68 94       	set
    5204:	aa 24       	eor	r10, r10
    5206:	a7 f8       	bld	r10, 7
    5208:	68 94       	set
    520a:	cc 24       	eor	r12, r12
    520c:	c7 f8       	bld	r12, 7
    520e:	e1 2c       	mov	r14, r1
    5210:	00 e0       	ldi	r16, 0x00	; 0
    5212:	23 e0       	ldi	r18, 0x03	; 3
    5214:	40 e0       	ldi	r20, 0x00	; 0
    5216:	51 ee       	ldi	r21, 0xE1	; 225
    5218:	60 e0       	ldi	r22, 0x00	; 0
    521a:	70 e0       	ldi	r23, 0x00	; 0
    521c:	4d dc       	rcall	.-1894   	; 0x4ab8 <serial_new_instance>
    521e:	90 93 b3 1a 	sts	0x1AB3, r25	; 0x801ab3 <_com_serial_instance+0x1>
    5222:	80 93 b2 1a 	sts	0x1AB2, r24	; 0x801ab2 <_com_serial_instance>
    5226:	ed ef       	ldi	r30, 0xFD	; 253
    5228:	fa e1       	ldi	r31, 0x1A	; 26
    522a:	82 e1       	ldi	r24, 0x12	; 18
    522c:	92 e0       	ldi	r25, 0x02	; 2
    522e:	91 83       	std	Z+1, r25	; 0x01
    5230:	80 83       	st	Z, r24
    5232:	93 83       	std	Z+3, r25	; 0x03
    5234:	82 83       	std	Z+2, r24	; 0x02
    5236:	0f 91       	pop	r16
    5238:	ef 90       	pop	r14
    523a:	cf 90       	pop	r12
    523c:	af 90       	pop	r10
    523e:	9f 90       	pop	r9
    5240:	8f 90       	pop	r8
    5242:	08 95       	ret

00005244 <_initTwiInterface>:
    5244:	80 91 c2 1a 	lds	r24, 0x1AC2	; 0x801ac2 <_twiIsInitiated>
    5248:	81 11       	cpse	r24, r1
    524a:	0c c0       	rjmp	.+24     	; 0x5264 <_initTwiInterface+0x20>
    524c:	8c e0       	ldi	r24, 0x0C	; 12
    524e:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7000b8>
    5252:	8f ef       	ldi	r24, 0xFF	; 255
    5254:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
    5258:	84 e0       	ldi	r24, 0x04	; 4
    525a:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
    525e:	81 e0       	ldi	r24, 0x01	; 1
    5260:	80 93 c2 1a 	sts	0x1AC2, r24	; 0x801ac2 <_twiIsInitiated>
    5264:	08 95       	ret

00005266 <twiCreate>:
    5266:	af 92       	push	r10
    5268:	bf 92       	push	r11
    526a:	cf 92       	push	r12
    526c:	df 92       	push	r13
    526e:	ef 92       	push	r14
    5270:	ff 92       	push	r15
    5272:	0f 93       	push	r16
    5274:	1f 93       	push	r17
    5276:	cf 93       	push	r28
    5278:	df 93       	push	r29
    527a:	a8 2e       	mov	r10, r24
    527c:	b6 2e       	mov	r11, r22
    527e:	69 01       	movw	r12, r18
    5280:	7a 01       	movw	r14, r20
    5282:	84 e0       	ldi	r24, 0x04	; 4
    5284:	90 e0       	ldi	r25, 0x00	; 0
    5286:	cb d3       	rcall	.+1942   	; 0x5a1e <malloc>
    5288:	ec 01       	movw	r28, r24
    528a:	89 2b       	or	r24, r25
    528c:	61 f1       	breq	.+88     	; 0x52e6 <twiCreate+0x80>
    528e:	a8 82       	st	Y, r10
    5290:	81 e0       	ldi	r24, 0x01	; 1
    5292:	b8 12       	cpse	r11, r24
    5294:	12 c0       	rjmp	.+36     	; 0x52ba <twiCreate+0x54>
    5296:	c7 01       	movw	r24, r14
    5298:	b6 01       	movw	r22, r12
    529a:	20 ea       	ldi	r18, 0xA0	; 160
    529c:	36 e8       	ldi	r19, 0x86	; 134
    529e:	41 e0       	ldi	r20, 0x01	; 1
    52a0:	50 e0       	ldi	r21, 0x00	; 0
    52a2:	79 d3       	rcall	.+1778   	; 0x5996 <__udivmodsi4>
    52a4:	da 01       	movw	r26, r20
    52a6:	c9 01       	movw	r24, r18
    52a8:	40 97       	sbiw	r24, 0x10	; 16
    52aa:	a1 09       	sbc	r26, r1
    52ac:	b1 09       	sbc	r27, r1
    52ae:	b6 95       	lsr	r27
    52b0:	a7 95       	ror	r26
    52b2:	97 95       	ror	r25
    52b4:	87 95       	ror	r24
    52b6:	89 83       	std	Y+1, r24	; 0x01
    52b8:	11 c0       	rjmp	.+34     	; 0x52dc <twiCreate+0x76>
    52ba:	c7 01       	movw	r24, r14
    52bc:	b6 01       	movw	r22, r12
    52be:	20 e8       	ldi	r18, 0x80	; 128
    52c0:	3a e1       	ldi	r19, 0x1A	; 26
    52c2:	46 e0       	ldi	r20, 0x06	; 6
    52c4:	50 e0       	ldi	r21, 0x00	; 0
    52c6:	67 d3       	rcall	.+1742   	; 0x5996 <__udivmodsi4>
    52c8:	da 01       	movw	r26, r20
    52ca:	c9 01       	movw	r24, r18
    52cc:	40 97       	sbiw	r24, 0x10	; 16
    52ce:	a1 09       	sbc	r26, r1
    52d0:	b1 09       	sbc	r27, r1
    52d2:	b6 95       	lsr	r27
    52d4:	a7 95       	ror	r26
    52d6:	97 95       	ror	r25
    52d8:	87 95       	ror	r24
    52da:	89 83       	std	Y+1, r24	; 0x01
    52dc:	1b 83       	std	Y+3, r17	; 0x03
    52de:	0a 83       	std	Y+2, r16	; 0x02
    52e0:	8c 2f       	mov	r24, r28
    52e2:	9d 2f       	mov	r25, r29
    52e4:	02 c0       	rjmp	.+4      	; 0x52ea <twiCreate+0x84>
    52e6:	80 e0       	ldi	r24, 0x00	; 0
    52e8:	90 e0       	ldi	r25, 0x00	; 0
    52ea:	df 91       	pop	r29
    52ec:	cf 91       	pop	r28
    52ee:	1f 91       	pop	r17
    52f0:	0f 91       	pop	r16
    52f2:	ff 90       	pop	r15
    52f4:	ef 90       	pop	r14
    52f6:	df 90       	pop	r13
    52f8:	cf 90       	pop	r12
    52fa:	bf 90       	pop	r11
    52fc:	af 90       	pop	r10
    52fe:	08 95       	ret

00005300 <twiIsBusy>:
    5300:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
    5304:	81 70       	andi	r24, 0x01	; 1
    5306:	08 95       	ret

00005308 <twiTransmit>:
    5308:	ff 92       	push	r15
    530a:	0f 93       	push	r16
    530c:	1f 93       	push	r17
    530e:	cf 93       	push	r28
    5310:	df 93       	push	r29
    5312:	00 97       	sbiw	r24, 0x00	; 0
    5314:	d1 f1       	breq	.+116    	; 0x538a <twiTransmit+0x82>
    5316:	4a 30       	cpi	r20, 0x0A	; 10
    5318:	d0 f5       	brcc	.+116    	; 0x538e <twiTransmit+0x86>
    531a:	f4 2e       	mov	r15, r20
    531c:	8b 01       	movw	r16, r22
    531e:	ec 01       	movw	r28, r24
    5320:	ef df       	rcall	.-34     	; 0x5300 <twiIsBusy>
    5322:	81 11       	cpse	r24, r1
    5324:	36 c0       	rjmp	.+108    	; 0x5392 <twiTransmit+0x8a>
    5326:	80 91 b5 1a 	lds	r24, 0x1AB5	; 0x801ab5 <_twiCurrentHandler>
    532a:	90 91 b6 1a 	lds	r25, 0x1AB6	; 0x801ab6 <_twiCurrentHandler+0x1>
    532e:	c8 17       	cp	r28, r24
    5330:	d9 07       	cpc	r29, r25
    5332:	41 f0       	breq	.+16     	; 0x5344 <twiTransmit+0x3c>
    5334:	87 df       	rcall	.-242    	; 0x5244 <_initTwiInterface>
    5336:	89 81       	ldd	r24, Y+1	; 0x01
    5338:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7000b8>
    533c:	d0 93 b6 1a 	sts	0x1AB6, r29	; 0x801ab6 <_twiCurrentHandler+0x1>
    5340:	c0 93 b5 1a 	sts	0x1AB5, r28	; 0x801ab5 <_twiCurrentHandler>
    5344:	81 e0       	ldi	r24, 0x01	; 1
    5346:	8f 0d       	add	r24, r15
    5348:	80 93 b7 1a 	sts	0x1AB7, r24	; 0x801ab7 <_twiMessageLen>
    534c:	88 81       	ld	r24, Y
    534e:	88 0f       	add	r24, r24
    5350:	80 93 b8 1a 	sts	0x1AB8, r24	; 0x801ab8 <_twiMessageBuffer>
    5354:	ff 20       	and	r15, r15
    5356:	89 f0       	breq	.+34     	; 0x537a <twiTransmit+0x72>
    5358:	f8 01       	movw	r30, r16
    535a:	a9 eb       	ldi	r26, 0xB9	; 185
    535c:	ba e1       	ldi	r27, 0x1A	; 26
    535e:	4f ef       	ldi	r20, 0xFF	; 255
    5360:	4f 0d       	add	r20, r15
    5362:	64 2f       	mov	r22, r20
    5364:	70 e0       	ldi	r23, 0x00	; 0
    5366:	cb 01       	movw	r24, r22
    5368:	01 96       	adiw	r24, 0x01	; 1
    536a:	b8 01       	movw	r22, r16
    536c:	68 0f       	add	r22, r24
    536e:	79 1f       	adc	r23, r25
    5370:	81 91       	ld	r24, Z+
    5372:	8d 93       	st	X+, r24
    5374:	e6 17       	cp	r30, r22
    5376:	f7 07       	cpc	r31, r23
    5378:	d9 f7       	brne	.-10     	; 0x5370 <twiTransmit+0x68>
    537a:	88 ef       	ldi	r24, 0xF8	; 248
    537c:	80 93 20 02 	sts	0x0220, r24	; 0x800220 <_twiCurrentState>
    5380:	85 ea       	ldi	r24, 0xA5	; 165
    5382:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
    5386:	84 e0       	ldi	r24, 0x04	; 4
    5388:	05 c0       	rjmp	.+10     	; 0x5394 <twiTransmit+0x8c>
    538a:	86 e0       	ldi	r24, 0x06	; 6
    538c:	03 c0       	rjmp	.+6      	; 0x5394 <twiTransmit+0x8c>
    538e:	87 e0       	ldi	r24, 0x07	; 7
    5390:	01 c0       	rjmp	.+2      	; 0x5394 <twiTransmit+0x8c>
    5392:	82 e0       	ldi	r24, 0x02	; 2
    5394:	df 91       	pop	r29
    5396:	cf 91       	pop	r28
    5398:	1f 91       	pop	r17
    539a:	0f 91       	pop	r16
    539c:	ff 90       	pop	r15
    539e:	08 95       	ret

000053a0 <twiReceive>:
    53a0:	1f 93       	push	r17
    53a2:	cf 93       	push	r28
    53a4:	df 93       	push	r29
    53a6:	00 97       	sbiw	r24, 0x00	; 0
    53a8:	29 f1       	breq	.+74     	; 0x53f4 <twiReceive+0x54>
    53aa:	6b 30       	cpi	r22, 0x0B	; 11
    53ac:	28 f5       	brcc	.+74     	; 0x53f8 <twiReceive+0x58>
    53ae:	16 2f       	mov	r17, r22
    53b0:	ec 01       	movw	r28, r24
    53b2:	a6 df       	rcall	.-180    	; 0x5300 <twiIsBusy>
    53b4:	81 11       	cpse	r24, r1
    53b6:	22 c0       	rjmp	.+68     	; 0x53fc <twiReceive+0x5c>
    53b8:	80 91 b5 1a 	lds	r24, 0x1AB5	; 0x801ab5 <_twiCurrentHandler>
    53bc:	90 91 b6 1a 	lds	r25, 0x1AB6	; 0x801ab6 <_twiCurrentHandler+0x1>
    53c0:	c8 17       	cp	r28, r24
    53c2:	d9 07       	cpc	r29, r25
    53c4:	41 f0       	breq	.+16     	; 0x53d6 <twiReceive+0x36>
    53c6:	3e df       	rcall	.-388    	; 0x5244 <_initTwiInterface>
    53c8:	89 81       	ldd	r24, Y+1	; 0x01
    53ca:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7000b8>
    53ce:	d0 93 b6 1a 	sts	0x1AB6, r29	; 0x801ab6 <_twiCurrentHandler+0x1>
    53d2:	c0 93 b5 1a 	sts	0x1AB5, r28	; 0x801ab5 <_twiCurrentHandler>
    53d6:	10 93 b7 1a 	sts	0x1AB7, r17	; 0x801ab7 <_twiMessageLen>
    53da:	88 81       	ld	r24, Y
    53dc:	88 0f       	add	r24, r24
    53de:	81 60       	ori	r24, 0x01	; 1
    53e0:	80 93 b8 1a 	sts	0x1AB8, r24	; 0x801ab8 <_twiMessageBuffer>
    53e4:	88 ef       	ldi	r24, 0xF8	; 248
    53e6:	80 93 20 02 	sts	0x0220, r24	; 0x800220 <_twiCurrentState>
    53ea:	85 ea       	ldi	r24, 0xA5	; 165
    53ec:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
    53f0:	85 e0       	ldi	r24, 0x05	; 5
    53f2:	05 c0       	rjmp	.+10     	; 0x53fe <twiReceive+0x5e>
    53f4:	86 e0       	ldi	r24, 0x06	; 6
    53f6:	03 c0       	rjmp	.+6      	; 0x53fe <twiReceive+0x5e>
    53f8:	87 e0       	ldi	r24, 0x07	; 7
    53fa:	01 c0       	rjmp	.+2      	; 0x53fe <twiReceive+0x5e>
    53fc:	82 e0       	ldi	r24, 0x02	; 2
    53fe:	df 91       	pop	r29
    5400:	cf 91       	pop	r28
    5402:	1f 91       	pop	r17
    5404:	08 95       	ret

00005406 <__vector_39>:
    5406:	1f 92       	push	r1
    5408:	0f 92       	push	r0
    540a:	0f b6       	in	r0, 0x3f	; 63
    540c:	0f 92       	push	r0
    540e:	11 24       	eor	r1, r1
    5410:	0b b6       	in	r0, 0x3b	; 59
    5412:	0f 92       	push	r0
    5414:	2f 93       	push	r18
    5416:	3f 93       	push	r19
    5418:	4f 93       	push	r20
    541a:	5f 93       	push	r21
    541c:	6f 93       	push	r22
    541e:	7f 93       	push	r23
    5420:	8f 93       	push	r24
    5422:	9f 93       	push	r25
    5424:	af 93       	push	r26
    5426:	bf 93       	push	r27
    5428:	ef 93       	push	r30
    542a:	ff 93       	push	r31
    542c:	e0 91 b9 00 	lds	r30, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7000b9>
    5430:	8e 2f       	mov	r24, r30
    5432:	90 e0       	ldi	r25, 0x00	; 0
    5434:	fc 01       	movw	r30, r24
    5436:	38 97       	sbiw	r30, 0x08	; 8
    5438:	e1 35       	cpi	r30, 0x51	; 81
    543a:	f1 05       	cpc	r31, r1
    543c:	08 f0       	brcs	.+2      	; 0x5440 <__vector_39+0x3a>
    543e:	75 c0       	rjmp	.+234    	; 0x552a <__vector_39+0x124>
    5440:	88 27       	eor	r24, r24
    5442:	e4 58       	subi	r30, 0x84	; 132
    5444:	ff 4f       	sbci	r31, 0xFF	; 255
    5446:	8f 4f       	sbci	r24, 0xFF	; 255
    5448:	c8 c2       	rjmp	.+1424   	; 0x59da <__tablejump2__>
    544a:	10 92 b4 1a 	sts	0x1AB4, r1	; 0x801ab4 <_index.1885>
    544e:	e0 91 b4 1a 	lds	r30, 0x1AB4	; 0x801ab4 <_index.1885>
    5452:	80 91 b7 1a 	lds	r24, 0x1AB7	; 0x801ab7 <_twiMessageLen>
    5456:	e8 17       	cp	r30, r24
    5458:	70 f4       	brcc	.+28     	; 0x5476 <__vector_39+0x70>
    545a:	81 e0       	ldi	r24, 0x01	; 1
    545c:	8e 0f       	add	r24, r30
    545e:	80 93 b4 1a 	sts	0x1AB4, r24	; 0x801ab4 <_index.1885>
    5462:	f0 e0       	ldi	r31, 0x00	; 0
    5464:	e8 54       	subi	r30, 0x48	; 72
    5466:	f5 4e       	sbci	r31, 0xE5	; 229
    5468:	80 81       	ld	r24, Z
    546a:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
    546e:	85 e8       	ldi	r24, 0x85	; 133
    5470:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
    5474:	72 c0       	rjmp	.+228    	; 0x555a <__vector_39+0x154>
    5476:	84 e9       	ldi	r24, 0x94	; 148
    5478:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
    547c:	80 91 b5 1a 	lds	r24, 0x1AB5	; 0x801ab5 <_twiCurrentHandler>
    5480:	90 91 b6 1a 	lds	r25, 0x1AB6	; 0x801ab6 <_twiCurrentHandler+0x1>
    5484:	dc 01       	movw	r26, r24
    5486:	12 96       	adiw	r26, 0x02	; 2
    5488:	ed 91       	ld	r30, X+
    548a:	fc 91       	ld	r31, X
    548c:	13 97       	sbiw	r26, 0x03	; 3
    548e:	30 97       	sbiw	r30, 0x00	; 0
    5490:	09 f4       	brne	.+2      	; 0x5494 <__vector_39+0x8e>
    5492:	63 c0       	rjmp	.+198    	; 0x555a <__vector_39+0x154>
    5494:	20 e0       	ldi	r18, 0x00	; 0
    5496:	40 e0       	ldi	r20, 0x00	; 0
    5498:	50 e0       	ldi	r21, 0x00	; 0
    549a:	64 e0       	ldi	r22, 0x04	; 4
    549c:	19 95       	eicall
    549e:	5d c0       	rjmp	.+186    	; 0x555a <__vector_39+0x154>
    54a0:	e0 91 b4 1a 	lds	r30, 0x1AB4	; 0x801ab4 <_index.1885>
    54a4:	81 e0       	ldi	r24, 0x01	; 1
    54a6:	8e 0f       	add	r24, r30
    54a8:	80 93 b4 1a 	sts	0x1AB4, r24	; 0x801ab4 <_index.1885>
    54ac:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
    54b0:	f0 e0       	ldi	r31, 0x00	; 0
    54b2:	e8 54       	subi	r30, 0x48	; 72
    54b4:	f5 4e       	sbci	r31, 0xE5	; 229
    54b6:	80 83       	st	Z, r24
    54b8:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7000b9>
    54bc:	80 34       	cpi	r24, 0x40	; 64
    54be:	11 f4       	brne	.+4      	; 0x54c4 <__vector_39+0xbe>
    54c0:	10 92 b4 1a 	sts	0x1AB4, r1	; 0x801ab4 <_index.1885>
    54c4:	20 91 b4 1a 	lds	r18, 0x1AB4	; 0x801ab4 <_index.1885>
    54c8:	30 e0       	ldi	r19, 0x00	; 0
    54ca:	80 91 b7 1a 	lds	r24, 0x1AB7	; 0x801ab7 <_twiMessageLen>
    54ce:	90 e0       	ldi	r25, 0x00	; 0
    54d0:	01 97       	sbiw	r24, 0x01	; 1
    54d2:	28 17       	cp	r18, r24
    54d4:	39 07       	cpc	r19, r25
    54d6:	24 f4       	brge	.+8      	; 0x54e0 <__vector_39+0xda>
    54d8:	85 ec       	ldi	r24, 0xC5	; 197
    54da:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
    54de:	3d c0       	rjmp	.+122    	; 0x555a <__vector_39+0x154>
    54e0:	85 e8       	ldi	r24, 0x85	; 133
    54e2:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
    54e6:	39 c0       	rjmp	.+114    	; 0x555a <__vector_39+0x154>
    54e8:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
    54ec:	e0 91 b4 1a 	lds	r30, 0x1AB4	; 0x801ab4 <_index.1885>
    54f0:	f0 e0       	ldi	r31, 0x00	; 0
    54f2:	e8 54       	subi	r30, 0x48	; 72
    54f4:	f5 4e       	sbci	r31, 0xE5	; 229
    54f6:	80 83       	st	Z, r24
    54f8:	84 e9       	ldi	r24, 0x94	; 148
    54fa:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
    54fe:	80 91 b5 1a 	lds	r24, 0x1AB5	; 0x801ab5 <_twiCurrentHandler>
    5502:	90 91 b6 1a 	lds	r25, 0x1AB6	; 0x801ab6 <_twiCurrentHandler+0x1>
    5506:	dc 01       	movw	r26, r24
    5508:	12 96       	adiw	r26, 0x02	; 2
    550a:	ed 91       	ld	r30, X+
    550c:	fc 91       	ld	r31, X
    550e:	13 97       	sbiw	r26, 0x03	; 3
    5510:	30 97       	sbiw	r30, 0x00	; 0
    5512:	19 f1       	breq	.+70     	; 0x555a <__vector_39+0x154>
    5514:	20 91 b7 1a 	lds	r18, 0x1AB7	; 0x801ab7 <_twiMessageLen>
    5518:	48 eb       	ldi	r20, 0xB8	; 184
    551a:	5a e1       	ldi	r21, 0x1A	; 26
    551c:	65 e0       	ldi	r22, 0x05	; 5
    551e:	19 95       	eicall
    5520:	1c c0       	rjmp	.+56     	; 0x555a <__vector_39+0x154>
    5522:	85 ea       	ldi	r24, 0xA5	; 165
    5524:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
    5528:	18 c0       	rjmp	.+48     	; 0x555a <__vector_39+0x154>
    552a:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7000b9>
    552e:	80 93 20 02 	sts	0x0220, r24	; 0x800220 <_twiCurrentState>
    5532:	84 e0       	ldi	r24, 0x04	; 4
    5534:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
    5538:	80 91 b5 1a 	lds	r24, 0x1AB5	; 0x801ab5 <_twiCurrentHandler>
    553c:	90 91 b6 1a 	lds	r25, 0x1AB6	; 0x801ab6 <_twiCurrentHandler+0x1>
    5540:	dc 01       	movw	r26, r24
    5542:	12 96       	adiw	r26, 0x02	; 2
    5544:	ed 91       	ld	r30, X+
    5546:	fc 91       	ld	r31, X
    5548:	13 97       	sbiw	r26, 0x03	; 3
    554a:	30 97       	sbiw	r30, 0x00	; 0
    554c:	31 f0       	breq	.+12     	; 0x555a <__vector_39+0x154>
    554e:	20 e0       	ldi	r18, 0x00	; 0
    5550:	40 e0       	ldi	r20, 0x00	; 0
    5552:	50 e0       	ldi	r21, 0x00	; 0
    5554:	60 91 20 02 	lds	r22, 0x0220	; 0x800220 <_twiCurrentState>
    5558:	19 95       	eicall
    555a:	ff 91       	pop	r31
    555c:	ef 91       	pop	r30
    555e:	bf 91       	pop	r27
    5560:	af 91       	pop	r26
    5562:	9f 91       	pop	r25
    5564:	8f 91       	pop	r24
    5566:	7f 91       	pop	r23
    5568:	6f 91       	pop	r22
    556a:	5f 91       	pop	r21
    556c:	4f 91       	pop	r20
    556e:	3f 91       	pop	r19
    5570:	2f 91       	pop	r18
    5572:	0f 90       	pop	r0
    5574:	0b be       	out	0x3b, r0	; 59
    5576:	0f 90       	pop	r0
    5578:	0f be       	out	0x3f, r0	; 63
    557a:	0f 90       	pop	r0
    557c:	1f 90       	pop	r1
    557e:	18 95       	reti

00005580 <fifo_init>:
    5580:	fc 01       	movw	r30, r24
    5582:	41 11       	cpse	r20, r1
    5584:	01 c0       	rjmp	.+2      	; 0x5588 <fifo_init+0x8>
    5586:	6c d3       	rcall	.+1752   	; 0x5c60 <abort>
    5588:	84 2f       	mov	r24, r20
    558a:	90 e0       	ldi	r25, 0x00	; 0
    558c:	9c 01       	movw	r18, r24
    558e:	21 50       	subi	r18, 0x01	; 1
    5590:	31 09       	sbc	r19, r1
    5592:	82 23       	and	r24, r18
    5594:	93 23       	and	r25, r19
    5596:	89 2b       	or	r24, r25
    5598:	09 f0       	breq	.+2      	; 0x559c <fifo_init+0x1c>
    559a:	62 d3       	rcall	.+1732   	; 0x5c60 <abort>
    559c:	41 38       	cpi	r20, 0x81	; 129
    559e:	08 f0       	brcs	.+2      	; 0x55a2 <fifo_init+0x22>
    55a0:	5f d3       	rcall	.+1726   	; 0x5c60 <abort>
    55a2:	12 82       	std	Z+2, r1	; 0x02
    55a4:	13 82       	std	Z+3, r1	; 0x03
    55a6:	44 83       	std	Z+4, r20	; 0x04
    55a8:	44 0f       	add	r20, r20
    55aa:	41 50       	subi	r20, 0x01	; 1
    55ac:	45 83       	std	Z+5, r20	; 0x05
    55ae:	71 83       	std	Z+1, r23	; 0x01
    55b0:	60 83       	st	Z, r22
    55b2:	80 e0       	ldi	r24, 0x00	; 0
    55b4:	90 e0       	ldi	r25, 0x00	; 0
    55b6:	08 95       	ret

000055b8 <__subsf3>:
    55b8:	50 58       	subi	r21, 0x80	; 128

000055ba <__addsf3>:
    55ba:	bb 27       	eor	r27, r27
    55bc:	aa 27       	eor	r26, r26
    55be:	0e d0       	rcall	.+28     	; 0x55dc <__addsf3x>
    55c0:	4d c1       	rjmp	.+666    	; 0x585c <__fp_round>
    55c2:	3e d1       	rcall	.+636    	; 0x5840 <__fp_pscA>
    55c4:	30 f0       	brcs	.+12     	; 0x55d2 <__addsf3+0x18>
    55c6:	43 d1       	rcall	.+646    	; 0x584e <__fp_pscB>
    55c8:	20 f0       	brcs	.+8      	; 0x55d2 <__addsf3+0x18>
    55ca:	31 f4       	brne	.+12     	; 0x55d8 <__addsf3+0x1e>
    55cc:	9f 3f       	cpi	r25, 0xFF	; 255
    55ce:	11 f4       	brne	.+4      	; 0x55d4 <__addsf3+0x1a>
    55d0:	1e f4       	brtc	.+6      	; 0x55d8 <__addsf3+0x1e>
    55d2:	33 c1       	rjmp	.+614    	; 0x583a <__fp_nan>
    55d4:	0e f4       	brtc	.+2      	; 0x55d8 <__addsf3+0x1e>
    55d6:	e0 95       	com	r30
    55d8:	e7 fb       	bst	r30, 7
    55da:	29 c1       	rjmp	.+594    	; 0x582e <__fp_inf>

000055dc <__addsf3x>:
    55dc:	e9 2f       	mov	r30, r25
    55de:	4f d1       	rcall	.+670    	; 0x587e <__fp_split3>
    55e0:	80 f3       	brcs	.-32     	; 0x55c2 <__addsf3+0x8>
    55e2:	ba 17       	cp	r27, r26
    55e4:	62 07       	cpc	r22, r18
    55e6:	73 07       	cpc	r23, r19
    55e8:	84 07       	cpc	r24, r20
    55ea:	95 07       	cpc	r25, r21
    55ec:	18 f0       	brcs	.+6      	; 0x55f4 <__addsf3x+0x18>
    55ee:	71 f4       	brne	.+28     	; 0x560c <__addsf3x+0x30>
    55f0:	9e f5       	brtc	.+102    	; 0x5658 <__addsf3x+0x7c>
    55f2:	67 c1       	rjmp	.+718    	; 0x58c2 <__fp_zero>
    55f4:	0e f4       	brtc	.+2      	; 0x55f8 <__addsf3x+0x1c>
    55f6:	e0 95       	com	r30
    55f8:	0b 2e       	mov	r0, r27
    55fa:	ba 2f       	mov	r27, r26
    55fc:	a0 2d       	mov	r26, r0
    55fe:	0b 01       	movw	r0, r22
    5600:	b9 01       	movw	r22, r18
    5602:	90 01       	movw	r18, r0
    5604:	0c 01       	movw	r0, r24
    5606:	ca 01       	movw	r24, r20
    5608:	a0 01       	movw	r20, r0
    560a:	11 24       	eor	r1, r1
    560c:	ff 27       	eor	r31, r31
    560e:	59 1b       	sub	r21, r25
    5610:	99 f0       	breq	.+38     	; 0x5638 <__addsf3x+0x5c>
    5612:	59 3f       	cpi	r21, 0xF9	; 249
    5614:	50 f4       	brcc	.+20     	; 0x562a <__addsf3x+0x4e>
    5616:	50 3e       	cpi	r21, 0xE0	; 224
    5618:	68 f1       	brcs	.+90     	; 0x5674 <__addsf3x+0x98>
    561a:	1a 16       	cp	r1, r26
    561c:	f0 40       	sbci	r31, 0x00	; 0
    561e:	a2 2f       	mov	r26, r18
    5620:	23 2f       	mov	r18, r19
    5622:	34 2f       	mov	r19, r20
    5624:	44 27       	eor	r20, r20
    5626:	58 5f       	subi	r21, 0xF8	; 248
    5628:	f3 cf       	rjmp	.-26     	; 0x5610 <__addsf3x+0x34>
    562a:	46 95       	lsr	r20
    562c:	37 95       	ror	r19
    562e:	27 95       	ror	r18
    5630:	a7 95       	ror	r26
    5632:	f0 40       	sbci	r31, 0x00	; 0
    5634:	53 95       	inc	r21
    5636:	c9 f7       	brne	.-14     	; 0x562a <__addsf3x+0x4e>
    5638:	7e f4       	brtc	.+30     	; 0x5658 <__addsf3x+0x7c>
    563a:	1f 16       	cp	r1, r31
    563c:	ba 0b       	sbc	r27, r26
    563e:	62 0b       	sbc	r22, r18
    5640:	73 0b       	sbc	r23, r19
    5642:	84 0b       	sbc	r24, r20
    5644:	ba f0       	brmi	.+46     	; 0x5674 <__addsf3x+0x98>
    5646:	91 50       	subi	r25, 0x01	; 1
    5648:	a1 f0       	breq	.+40     	; 0x5672 <__addsf3x+0x96>
    564a:	ff 0f       	add	r31, r31
    564c:	bb 1f       	adc	r27, r27
    564e:	66 1f       	adc	r22, r22
    5650:	77 1f       	adc	r23, r23
    5652:	88 1f       	adc	r24, r24
    5654:	c2 f7       	brpl	.-16     	; 0x5646 <__addsf3x+0x6a>
    5656:	0e c0       	rjmp	.+28     	; 0x5674 <__addsf3x+0x98>
    5658:	ba 0f       	add	r27, r26
    565a:	62 1f       	adc	r22, r18
    565c:	73 1f       	adc	r23, r19
    565e:	84 1f       	adc	r24, r20
    5660:	48 f4       	brcc	.+18     	; 0x5674 <__addsf3x+0x98>
    5662:	87 95       	ror	r24
    5664:	77 95       	ror	r23
    5666:	67 95       	ror	r22
    5668:	b7 95       	ror	r27
    566a:	f7 95       	ror	r31
    566c:	9e 3f       	cpi	r25, 0xFE	; 254
    566e:	08 f0       	brcs	.+2      	; 0x5672 <__addsf3x+0x96>
    5670:	b3 cf       	rjmp	.-154    	; 0x55d8 <__addsf3+0x1e>
    5672:	93 95       	inc	r25
    5674:	88 0f       	add	r24, r24
    5676:	08 f0       	brcs	.+2      	; 0x567a <__addsf3x+0x9e>
    5678:	99 27       	eor	r25, r25
    567a:	ee 0f       	add	r30, r30
    567c:	97 95       	ror	r25
    567e:	87 95       	ror	r24
    5680:	08 95       	ret

00005682 <__divsf3>:
    5682:	0c d0       	rcall	.+24     	; 0x569c <__divsf3x>
    5684:	eb c0       	rjmp	.+470    	; 0x585c <__fp_round>
    5686:	e3 d0       	rcall	.+454    	; 0x584e <__fp_pscB>
    5688:	40 f0       	brcs	.+16     	; 0x569a <__divsf3+0x18>
    568a:	da d0       	rcall	.+436    	; 0x5840 <__fp_pscA>
    568c:	30 f0       	brcs	.+12     	; 0x569a <__divsf3+0x18>
    568e:	21 f4       	brne	.+8      	; 0x5698 <__divsf3+0x16>
    5690:	5f 3f       	cpi	r21, 0xFF	; 255
    5692:	19 f0       	breq	.+6      	; 0x569a <__divsf3+0x18>
    5694:	cc c0       	rjmp	.+408    	; 0x582e <__fp_inf>
    5696:	51 11       	cpse	r21, r1
    5698:	15 c1       	rjmp	.+554    	; 0x58c4 <__fp_szero>
    569a:	cf c0       	rjmp	.+414    	; 0x583a <__fp_nan>

0000569c <__divsf3x>:
    569c:	f0 d0       	rcall	.+480    	; 0x587e <__fp_split3>
    569e:	98 f3       	brcs	.-26     	; 0x5686 <__divsf3+0x4>

000056a0 <__divsf3_pse>:
    56a0:	99 23       	and	r25, r25
    56a2:	c9 f3       	breq	.-14     	; 0x5696 <__divsf3+0x14>
    56a4:	55 23       	and	r21, r21
    56a6:	b1 f3       	breq	.-20     	; 0x5694 <__divsf3+0x12>
    56a8:	95 1b       	sub	r25, r21
    56aa:	55 0b       	sbc	r21, r21
    56ac:	bb 27       	eor	r27, r27
    56ae:	aa 27       	eor	r26, r26
    56b0:	62 17       	cp	r22, r18
    56b2:	73 07       	cpc	r23, r19
    56b4:	84 07       	cpc	r24, r20
    56b6:	38 f0       	brcs	.+14     	; 0x56c6 <__divsf3_pse+0x26>
    56b8:	9f 5f       	subi	r25, 0xFF	; 255
    56ba:	5f 4f       	sbci	r21, 0xFF	; 255
    56bc:	22 0f       	add	r18, r18
    56be:	33 1f       	adc	r19, r19
    56c0:	44 1f       	adc	r20, r20
    56c2:	aa 1f       	adc	r26, r26
    56c4:	a9 f3       	breq	.-22     	; 0x56b0 <__divsf3_pse+0x10>
    56c6:	33 d0       	rcall	.+102    	; 0x572e <__divsf3_pse+0x8e>
    56c8:	0e 2e       	mov	r0, r30
    56ca:	3a f0       	brmi	.+14     	; 0x56da <__divsf3_pse+0x3a>
    56cc:	e0 e8       	ldi	r30, 0x80	; 128
    56ce:	30 d0       	rcall	.+96     	; 0x5730 <__divsf3_pse+0x90>
    56d0:	91 50       	subi	r25, 0x01	; 1
    56d2:	50 40       	sbci	r21, 0x00	; 0
    56d4:	e6 95       	lsr	r30
    56d6:	00 1c       	adc	r0, r0
    56d8:	ca f7       	brpl	.-14     	; 0x56cc <__divsf3_pse+0x2c>
    56da:	29 d0       	rcall	.+82     	; 0x572e <__divsf3_pse+0x8e>
    56dc:	fe 2f       	mov	r31, r30
    56de:	27 d0       	rcall	.+78     	; 0x572e <__divsf3_pse+0x8e>
    56e0:	66 0f       	add	r22, r22
    56e2:	77 1f       	adc	r23, r23
    56e4:	88 1f       	adc	r24, r24
    56e6:	bb 1f       	adc	r27, r27
    56e8:	26 17       	cp	r18, r22
    56ea:	37 07       	cpc	r19, r23
    56ec:	48 07       	cpc	r20, r24
    56ee:	ab 07       	cpc	r26, r27
    56f0:	b0 e8       	ldi	r27, 0x80	; 128
    56f2:	09 f0       	breq	.+2      	; 0x56f6 <__divsf3_pse+0x56>
    56f4:	bb 0b       	sbc	r27, r27
    56f6:	80 2d       	mov	r24, r0
    56f8:	bf 01       	movw	r22, r30
    56fa:	ff 27       	eor	r31, r31
    56fc:	93 58       	subi	r25, 0x83	; 131
    56fe:	5f 4f       	sbci	r21, 0xFF	; 255
    5700:	2a f0       	brmi	.+10     	; 0x570c <__divsf3_pse+0x6c>
    5702:	9e 3f       	cpi	r25, 0xFE	; 254
    5704:	51 05       	cpc	r21, r1
    5706:	68 f0       	brcs	.+26     	; 0x5722 <__divsf3_pse+0x82>
    5708:	92 c0       	rjmp	.+292    	; 0x582e <__fp_inf>
    570a:	dc c0       	rjmp	.+440    	; 0x58c4 <__fp_szero>
    570c:	5f 3f       	cpi	r21, 0xFF	; 255
    570e:	ec f3       	brlt	.-6      	; 0x570a <__divsf3_pse+0x6a>
    5710:	98 3e       	cpi	r25, 0xE8	; 232
    5712:	dc f3       	brlt	.-10     	; 0x570a <__divsf3_pse+0x6a>
    5714:	86 95       	lsr	r24
    5716:	77 95       	ror	r23
    5718:	67 95       	ror	r22
    571a:	b7 95       	ror	r27
    571c:	f7 95       	ror	r31
    571e:	9f 5f       	subi	r25, 0xFF	; 255
    5720:	c9 f7       	brne	.-14     	; 0x5714 <__divsf3_pse+0x74>
    5722:	88 0f       	add	r24, r24
    5724:	91 1d       	adc	r25, r1
    5726:	96 95       	lsr	r25
    5728:	87 95       	ror	r24
    572a:	97 f9       	bld	r25, 7
    572c:	08 95       	ret
    572e:	e1 e0       	ldi	r30, 0x01	; 1
    5730:	66 0f       	add	r22, r22
    5732:	77 1f       	adc	r23, r23
    5734:	88 1f       	adc	r24, r24
    5736:	bb 1f       	adc	r27, r27
    5738:	62 17       	cp	r22, r18
    573a:	73 07       	cpc	r23, r19
    573c:	84 07       	cpc	r24, r20
    573e:	ba 07       	cpc	r27, r26
    5740:	20 f0       	brcs	.+8      	; 0x574a <__divsf3_pse+0xaa>
    5742:	62 1b       	sub	r22, r18
    5744:	73 0b       	sbc	r23, r19
    5746:	84 0b       	sbc	r24, r20
    5748:	ba 0b       	sbc	r27, r26
    574a:	ee 1f       	adc	r30, r30
    574c:	88 f7       	brcc	.-30     	; 0x5730 <__divsf3_pse+0x90>
    574e:	e0 95       	com	r30
    5750:	08 95       	ret

00005752 <__fixsfsi>:
    5752:	04 d0       	rcall	.+8      	; 0x575c <__fixunssfsi>
    5754:	68 94       	set
    5756:	b1 11       	cpse	r27, r1
    5758:	b5 c0       	rjmp	.+362    	; 0x58c4 <__fp_szero>
    575a:	08 95       	ret

0000575c <__fixunssfsi>:
    575c:	98 d0       	rcall	.+304    	; 0x588e <__fp_splitA>
    575e:	88 f0       	brcs	.+34     	; 0x5782 <__fixunssfsi+0x26>
    5760:	9f 57       	subi	r25, 0x7F	; 127
    5762:	90 f0       	brcs	.+36     	; 0x5788 <__fixunssfsi+0x2c>
    5764:	b9 2f       	mov	r27, r25
    5766:	99 27       	eor	r25, r25
    5768:	b7 51       	subi	r27, 0x17	; 23
    576a:	a0 f0       	brcs	.+40     	; 0x5794 <__fixunssfsi+0x38>
    576c:	d1 f0       	breq	.+52     	; 0x57a2 <__fixunssfsi+0x46>
    576e:	66 0f       	add	r22, r22
    5770:	77 1f       	adc	r23, r23
    5772:	88 1f       	adc	r24, r24
    5774:	99 1f       	adc	r25, r25
    5776:	1a f0       	brmi	.+6      	; 0x577e <__fixunssfsi+0x22>
    5778:	ba 95       	dec	r27
    577a:	c9 f7       	brne	.-14     	; 0x576e <__fixunssfsi+0x12>
    577c:	12 c0       	rjmp	.+36     	; 0x57a2 <__fixunssfsi+0x46>
    577e:	b1 30       	cpi	r27, 0x01	; 1
    5780:	81 f0       	breq	.+32     	; 0x57a2 <__fixunssfsi+0x46>
    5782:	9f d0       	rcall	.+318    	; 0x58c2 <__fp_zero>
    5784:	b1 e0       	ldi	r27, 0x01	; 1
    5786:	08 95       	ret
    5788:	9c c0       	rjmp	.+312    	; 0x58c2 <__fp_zero>
    578a:	67 2f       	mov	r22, r23
    578c:	78 2f       	mov	r23, r24
    578e:	88 27       	eor	r24, r24
    5790:	b8 5f       	subi	r27, 0xF8	; 248
    5792:	39 f0       	breq	.+14     	; 0x57a2 <__fixunssfsi+0x46>
    5794:	b9 3f       	cpi	r27, 0xF9	; 249
    5796:	cc f3       	brlt	.-14     	; 0x578a <__fixunssfsi+0x2e>
    5798:	86 95       	lsr	r24
    579a:	77 95       	ror	r23
    579c:	67 95       	ror	r22
    579e:	b3 95       	inc	r27
    57a0:	d9 f7       	brne	.-10     	; 0x5798 <__fixunssfsi+0x3c>
    57a2:	3e f4       	brtc	.+14     	; 0x57b2 <__fixunssfsi+0x56>
    57a4:	90 95       	com	r25
    57a6:	80 95       	com	r24
    57a8:	70 95       	com	r23
    57aa:	61 95       	neg	r22
    57ac:	7f 4f       	sbci	r23, 0xFF	; 255
    57ae:	8f 4f       	sbci	r24, 0xFF	; 255
    57b0:	9f 4f       	sbci	r25, 0xFF	; 255
    57b2:	08 95       	ret

000057b4 <__floatunsisf>:
    57b4:	e8 94       	clt
    57b6:	09 c0       	rjmp	.+18     	; 0x57ca <__floatsisf+0x12>

000057b8 <__floatsisf>:
    57b8:	97 fb       	bst	r25, 7
    57ba:	3e f4       	brtc	.+14     	; 0x57ca <__floatsisf+0x12>
    57bc:	90 95       	com	r25
    57be:	80 95       	com	r24
    57c0:	70 95       	com	r23
    57c2:	61 95       	neg	r22
    57c4:	7f 4f       	sbci	r23, 0xFF	; 255
    57c6:	8f 4f       	sbci	r24, 0xFF	; 255
    57c8:	9f 4f       	sbci	r25, 0xFF	; 255
    57ca:	99 23       	and	r25, r25
    57cc:	a9 f0       	breq	.+42     	; 0x57f8 <__floatsisf+0x40>
    57ce:	f9 2f       	mov	r31, r25
    57d0:	96 e9       	ldi	r25, 0x96	; 150
    57d2:	bb 27       	eor	r27, r27
    57d4:	93 95       	inc	r25
    57d6:	f6 95       	lsr	r31
    57d8:	87 95       	ror	r24
    57da:	77 95       	ror	r23
    57dc:	67 95       	ror	r22
    57de:	b7 95       	ror	r27
    57e0:	f1 11       	cpse	r31, r1
    57e2:	f8 cf       	rjmp	.-16     	; 0x57d4 <__floatsisf+0x1c>
    57e4:	fa f4       	brpl	.+62     	; 0x5824 <__floatsisf+0x6c>
    57e6:	bb 0f       	add	r27, r27
    57e8:	11 f4       	brne	.+4      	; 0x57ee <__floatsisf+0x36>
    57ea:	60 ff       	sbrs	r22, 0
    57ec:	1b c0       	rjmp	.+54     	; 0x5824 <__floatsisf+0x6c>
    57ee:	6f 5f       	subi	r22, 0xFF	; 255
    57f0:	7f 4f       	sbci	r23, 0xFF	; 255
    57f2:	8f 4f       	sbci	r24, 0xFF	; 255
    57f4:	9f 4f       	sbci	r25, 0xFF	; 255
    57f6:	16 c0       	rjmp	.+44     	; 0x5824 <__floatsisf+0x6c>
    57f8:	88 23       	and	r24, r24
    57fa:	11 f0       	breq	.+4      	; 0x5800 <__floatsisf+0x48>
    57fc:	96 e9       	ldi	r25, 0x96	; 150
    57fe:	11 c0       	rjmp	.+34     	; 0x5822 <__floatsisf+0x6a>
    5800:	77 23       	and	r23, r23
    5802:	21 f0       	breq	.+8      	; 0x580c <__floatsisf+0x54>
    5804:	9e e8       	ldi	r25, 0x8E	; 142
    5806:	87 2f       	mov	r24, r23
    5808:	76 2f       	mov	r23, r22
    580a:	05 c0       	rjmp	.+10     	; 0x5816 <__floatsisf+0x5e>
    580c:	66 23       	and	r22, r22
    580e:	71 f0       	breq	.+28     	; 0x582c <__floatsisf+0x74>
    5810:	96 e8       	ldi	r25, 0x86	; 134
    5812:	86 2f       	mov	r24, r22
    5814:	70 e0       	ldi	r23, 0x00	; 0
    5816:	60 e0       	ldi	r22, 0x00	; 0
    5818:	2a f0       	brmi	.+10     	; 0x5824 <__floatsisf+0x6c>
    581a:	9a 95       	dec	r25
    581c:	66 0f       	add	r22, r22
    581e:	77 1f       	adc	r23, r23
    5820:	88 1f       	adc	r24, r24
    5822:	da f7       	brpl	.-10     	; 0x581a <__floatsisf+0x62>
    5824:	88 0f       	add	r24, r24
    5826:	96 95       	lsr	r25
    5828:	87 95       	ror	r24
    582a:	97 f9       	bld	r25, 7
    582c:	08 95       	ret

0000582e <__fp_inf>:
    582e:	97 f9       	bld	r25, 7
    5830:	9f 67       	ori	r25, 0x7F	; 127
    5832:	80 e8       	ldi	r24, 0x80	; 128
    5834:	70 e0       	ldi	r23, 0x00	; 0
    5836:	60 e0       	ldi	r22, 0x00	; 0
    5838:	08 95       	ret

0000583a <__fp_nan>:
    583a:	9f ef       	ldi	r25, 0xFF	; 255
    583c:	80 ec       	ldi	r24, 0xC0	; 192
    583e:	08 95       	ret

00005840 <__fp_pscA>:
    5840:	00 24       	eor	r0, r0
    5842:	0a 94       	dec	r0
    5844:	16 16       	cp	r1, r22
    5846:	17 06       	cpc	r1, r23
    5848:	18 06       	cpc	r1, r24
    584a:	09 06       	cpc	r0, r25
    584c:	08 95       	ret

0000584e <__fp_pscB>:
    584e:	00 24       	eor	r0, r0
    5850:	0a 94       	dec	r0
    5852:	12 16       	cp	r1, r18
    5854:	13 06       	cpc	r1, r19
    5856:	14 06       	cpc	r1, r20
    5858:	05 06       	cpc	r0, r21
    585a:	08 95       	ret

0000585c <__fp_round>:
    585c:	09 2e       	mov	r0, r25
    585e:	03 94       	inc	r0
    5860:	00 0c       	add	r0, r0
    5862:	11 f4       	brne	.+4      	; 0x5868 <__fp_round+0xc>
    5864:	88 23       	and	r24, r24
    5866:	52 f0       	brmi	.+20     	; 0x587c <__fp_round+0x20>
    5868:	bb 0f       	add	r27, r27
    586a:	40 f4       	brcc	.+16     	; 0x587c <__fp_round+0x20>
    586c:	bf 2b       	or	r27, r31
    586e:	11 f4       	brne	.+4      	; 0x5874 <__fp_round+0x18>
    5870:	60 ff       	sbrs	r22, 0
    5872:	04 c0       	rjmp	.+8      	; 0x587c <__fp_round+0x20>
    5874:	6f 5f       	subi	r22, 0xFF	; 255
    5876:	7f 4f       	sbci	r23, 0xFF	; 255
    5878:	8f 4f       	sbci	r24, 0xFF	; 255
    587a:	9f 4f       	sbci	r25, 0xFF	; 255
    587c:	08 95       	ret

0000587e <__fp_split3>:
    587e:	57 fd       	sbrc	r21, 7
    5880:	90 58       	subi	r25, 0x80	; 128
    5882:	44 0f       	add	r20, r20
    5884:	55 1f       	adc	r21, r21
    5886:	59 f0       	breq	.+22     	; 0x589e <__fp_splitA+0x10>
    5888:	5f 3f       	cpi	r21, 0xFF	; 255
    588a:	71 f0       	breq	.+28     	; 0x58a8 <__fp_splitA+0x1a>
    588c:	47 95       	ror	r20

0000588e <__fp_splitA>:
    588e:	88 0f       	add	r24, r24
    5890:	97 fb       	bst	r25, 7
    5892:	99 1f       	adc	r25, r25
    5894:	61 f0       	breq	.+24     	; 0x58ae <__fp_splitA+0x20>
    5896:	9f 3f       	cpi	r25, 0xFF	; 255
    5898:	79 f0       	breq	.+30     	; 0x58b8 <__fp_splitA+0x2a>
    589a:	87 95       	ror	r24
    589c:	08 95       	ret
    589e:	12 16       	cp	r1, r18
    58a0:	13 06       	cpc	r1, r19
    58a2:	14 06       	cpc	r1, r20
    58a4:	55 1f       	adc	r21, r21
    58a6:	f2 cf       	rjmp	.-28     	; 0x588c <__fp_split3+0xe>
    58a8:	46 95       	lsr	r20
    58aa:	f1 df       	rcall	.-30     	; 0x588e <__fp_splitA>
    58ac:	08 c0       	rjmp	.+16     	; 0x58be <__fp_splitA+0x30>
    58ae:	16 16       	cp	r1, r22
    58b0:	17 06       	cpc	r1, r23
    58b2:	18 06       	cpc	r1, r24
    58b4:	99 1f       	adc	r25, r25
    58b6:	f1 cf       	rjmp	.-30     	; 0x589a <__fp_splitA+0xc>
    58b8:	86 95       	lsr	r24
    58ba:	71 05       	cpc	r23, r1
    58bc:	61 05       	cpc	r22, r1
    58be:	08 94       	sec
    58c0:	08 95       	ret

000058c2 <__fp_zero>:
    58c2:	e8 94       	clt

000058c4 <__fp_szero>:
    58c4:	bb 27       	eor	r27, r27
    58c6:	66 27       	eor	r22, r22
    58c8:	77 27       	eor	r23, r23
    58ca:	cb 01       	movw	r24, r22
    58cc:	97 f9       	bld	r25, 7
    58ce:	08 95       	ret

000058d0 <__mulsf3>:
    58d0:	0b d0       	rcall	.+22     	; 0x58e8 <__mulsf3x>
    58d2:	c4 cf       	rjmp	.-120    	; 0x585c <__fp_round>
    58d4:	b5 df       	rcall	.-150    	; 0x5840 <__fp_pscA>
    58d6:	28 f0       	brcs	.+10     	; 0x58e2 <__mulsf3+0x12>
    58d8:	ba df       	rcall	.-140    	; 0x584e <__fp_pscB>
    58da:	18 f0       	brcs	.+6      	; 0x58e2 <__mulsf3+0x12>
    58dc:	95 23       	and	r25, r21
    58de:	09 f0       	breq	.+2      	; 0x58e2 <__mulsf3+0x12>
    58e0:	a6 cf       	rjmp	.-180    	; 0x582e <__fp_inf>
    58e2:	ab cf       	rjmp	.-170    	; 0x583a <__fp_nan>
    58e4:	11 24       	eor	r1, r1
    58e6:	ee cf       	rjmp	.-36     	; 0x58c4 <__fp_szero>

000058e8 <__mulsf3x>:
    58e8:	ca df       	rcall	.-108    	; 0x587e <__fp_split3>
    58ea:	a0 f3       	brcs	.-24     	; 0x58d4 <__mulsf3+0x4>

000058ec <__mulsf3_pse>:
    58ec:	95 9f       	mul	r25, r21
    58ee:	d1 f3       	breq	.-12     	; 0x58e4 <__mulsf3+0x14>
    58f0:	95 0f       	add	r25, r21
    58f2:	50 e0       	ldi	r21, 0x00	; 0
    58f4:	55 1f       	adc	r21, r21
    58f6:	62 9f       	mul	r22, r18
    58f8:	f0 01       	movw	r30, r0
    58fa:	72 9f       	mul	r23, r18
    58fc:	bb 27       	eor	r27, r27
    58fe:	f0 0d       	add	r31, r0
    5900:	b1 1d       	adc	r27, r1
    5902:	63 9f       	mul	r22, r19
    5904:	aa 27       	eor	r26, r26
    5906:	f0 0d       	add	r31, r0
    5908:	b1 1d       	adc	r27, r1
    590a:	aa 1f       	adc	r26, r26
    590c:	64 9f       	mul	r22, r20
    590e:	66 27       	eor	r22, r22
    5910:	b0 0d       	add	r27, r0
    5912:	a1 1d       	adc	r26, r1
    5914:	66 1f       	adc	r22, r22
    5916:	82 9f       	mul	r24, r18
    5918:	22 27       	eor	r18, r18
    591a:	b0 0d       	add	r27, r0
    591c:	a1 1d       	adc	r26, r1
    591e:	62 1f       	adc	r22, r18
    5920:	73 9f       	mul	r23, r19
    5922:	b0 0d       	add	r27, r0
    5924:	a1 1d       	adc	r26, r1
    5926:	62 1f       	adc	r22, r18
    5928:	83 9f       	mul	r24, r19
    592a:	a0 0d       	add	r26, r0
    592c:	61 1d       	adc	r22, r1
    592e:	22 1f       	adc	r18, r18
    5930:	74 9f       	mul	r23, r20
    5932:	33 27       	eor	r19, r19
    5934:	a0 0d       	add	r26, r0
    5936:	61 1d       	adc	r22, r1
    5938:	23 1f       	adc	r18, r19
    593a:	84 9f       	mul	r24, r20
    593c:	60 0d       	add	r22, r0
    593e:	21 1d       	adc	r18, r1
    5940:	82 2f       	mov	r24, r18
    5942:	76 2f       	mov	r23, r22
    5944:	6a 2f       	mov	r22, r26
    5946:	11 24       	eor	r1, r1
    5948:	9f 57       	subi	r25, 0x7F	; 127
    594a:	50 40       	sbci	r21, 0x00	; 0
    594c:	8a f0       	brmi	.+34     	; 0x5970 <__mulsf3_pse+0x84>
    594e:	e1 f0       	breq	.+56     	; 0x5988 <__mulsf3_pse+0x9c>
    5950:	88 23       	and	r24, r24
    5952:	4a f0       	brmi	.+18     	; 0x5966 <__mulsf3_pse+0x7a>
    5954:	ee 0f       	add	r30, r30
    5956:	ff 1f       	adc	r31, r31
    5958:	bb 1f       	adc	r27, r27
    595a:	66 1f       	adc	r22, r22
    595c:	77 1f       	adc	r23, r23
    595e:	88 1f       	adc	r24, r24
    5960:	91 50       	subi	r25, 0x01	; 1
    5962:	50 40       	sbci	r21, 0x00	; 0
    5964:	a9 f7       	brne	.-22     	; 0x5950 <__mulsf3_pse+0x64>
    5966:	9e 3f       	cpi	r25, 0xFE	; 254
    5968:	51 05       	cpc	r21, r1
    596a:	70 f0       	brcs	.+28     	; 0x5988 <__mulsf3_pse+0x9c>
    596c:	60 cf       	rjmp	.-320    	; 0x582e <__fp_inf>
    596e:	aa cf       	rjmp	.-172    	; 0x58c4 <__fp_szero>
    5970:	5f 3f       	cpi	r21, 0xFF	; 255
    5972:	ec f3       	brlt	.-6      	; 0x596e <__mulsf3_pse+0x82>
    5974:	98 3e       	cpi	r25, 0xE8	; 232
    5976:	dc f3       	brlt	.-10     	; 0x596e <__mulsf3_pse+0x82>
    5978:	86 95       	lsr	r24
    597a:	77 95       	ror	r23
    597c:	67 95       	ror	r22
    597e:	b7 95       	ror	r27
    5980:	f7 95       	ror	r31
    5982:	e7 95       	ror	r30
    5984:	9f 5f       	subi	r25, 0xFF	; 255
    5986:	c1 f7       	brne	.-16     	; 0x5978 <__mulsf3_pse+0x8c>
    5988:	fe 2b       	or	r31, r30
    598a:	88 0f       	add	r24, r24
    598c:	91 1d       	adc	r25, r1
    598e:	96 95       	lsr	r25
    5990:	87 95       	ror	r24
    5992:	97 f9       	bld	r25, 7
    5994:	08 95       	ret

00005996 <__udivmodsi4>:
    5996:	a1 e2       	ldi	r26, 0x21	; 33
    5998:	1a 2e       	mov	r1, r26
    599a:	aa 1b       	sub	r26, r26
    599c:	bb 1b       	sub	r27, r27
    599e:	fd 01       	movw	r30, r26
    59a0:	0d c0       	rjmp	.+26     	; 0x59bc <__udivmodsi4_ep>

000059a2 <__udivmodsi4_loop>:
    59a2:	aa 1f       	adc	r26, r26
    59a4:	bb 1f       	adc	r27, r27
    59a6:	ee 1f       	adc	r30, r30
    59a8:	ff 1f       	adc	r31, r31
    59aa:	a2 17       	cp	r26, r18
    59ac:	b3 07       	cpc	r27, r19
    59ae:	e4 07       	cpc	r30, r20
    59b0:	f5 07       	cpc	r31, r21
    59b2:	20 f0       	brcs	.+8      	; 0x59bc <__udivmodsi4_ep>
    59b4:	a2 1b       	sub	r26, r18
    59b6:	b3 0b       	sbc	r27, r19
    59b8:	e4 0b       	sbc	r30, r20
    59ba:	f5 0b       	sbc	r31, r21

000059bc <__udivmodsi4_ep>:
    59bc:	66 1f       	adc	r22, r22
    59be:	77 1f       	adc	r23, r23
    59c0:	88 1f       	adc	r24, r24
    59c2:	99 1f       	adc	r25, r25
    59c4:	1a 94       	dec	r1
    59c6:	69 f7       	brne	.-38     	; 0x59a2 <__udivmodsi4_loop>
    59c8:	60 95       	com	r22
    59ca:	70 95       	com	r23
    59cc:	80 95       	com	r24
    59ce:	90 95       	com	r25
    59d0:	9b 01       	movw	r18, r22
    59d2:	ac 01       	movw	r20, r24
    59d4:	bd 01       	movw	r22, r26
    59d6:	cf 01       	movw	r24, r30
    59d8:	08 95       	ret

000059da <__tablejump2__>:
    59da:	ee 0f       	add	r30, r30
    59dc:	ff 1f       	adc	r31, r31
    59de:	88 1f       	adc	r24, r24
    59e0:	8b bf       	out	0x3b, r24	; 59
    59e2:	07 90       	elpm	r0, Z+
    59e4:	f6 91       	elpm	r31, Z
    59e6:	e0 2d       	mov	r30, r0
    59e8:	19 94       	eijmp

000059ea <calloc>:
    59ea:	0f 93       	push	r16
    59ec:	1f 93       	push	r17
    59ee:	cf 93       	push	r28
    59f0:	df 93       	push	r29
    59f2:	86 9f       	mul	r24, r22
    59f4:	80 01       	movw	r16, r0
    59f6:	87 9f       	mul	r24, r23
    59f8:	10 0d       	add	r17, r0
    59fa:	96 9f       	mul	r25, r22
    59fc:	10 0d       	add	r17, r0
    59fe:	11 24       	eor	r1, r1
    5a00:	c8 01       	movw	r24, r16
    5a02:	0d d0       	rcall	.+26     	; 0x5a1e <malloc>
    5a04:	ec 01       	movw	r28, r24
    5a06:	00 97       	sbiw	r24, 0x00	; 0
    5a08:	21 f0       	breq	.+8      	; 0x5a12 <calloc+0x28>
    5a0a:	a8 01       	movw	r20, r16
    5a0c:	60 e0       	ldi	r22, 0x00	; 0
    5a0e:	70 e0       	ldi	r23, 0x00	; 0
    5a10:	34 d1       	rcall	.+616    	; 0x5c7a <memset>
    5a12:	ce 01       	movw	r24, r28
    5a14:	df 91       	pop	r29
    5a16:	cf 91       	pop	r28
    5a18:	1f 91       	pop	r17
    5a1a:	0f 91       	pop	r16
    5a1c:	08 95       	ret

00005a1e <malloc>:
    5a1e:	0f 93       	push	r16
    5a20:	1f 93       	push	r17
    5a22:	cf 93       	push	r28
    5a24:	df 93       	push	r29
    5a26:	82 30       	cpi	r24, 0x02	; 2
    5a28:	91 05       	cpc	r25, r1
    5a2a:	10 f4       	brcc	.+4      	; 0x5a30 <malloc+0x12>
    5a2c:	82 e0       	ldi	r24, 0x02	; 2
    5a2e:	90 e0       	ldi	r25, 0x00	; 0
    5a30:	e0 91 fb 1a 	lds	r30, 0x1AFB	; 0x801afb <__flp>
    5a34:	f0 91 fc 1a 	lds	r31, 0x1AFC	; 0x801afc <__flp+0x1>
    5a38:	20 e0       	ldi	r18, 0x00	; 0
    5a3a:	30 e0       	ldi	r19, 0x00	; 0
    5a3c:	a0 e0       	ldi	r26, 0x00	; 0
    5a3e:	b0 e0       	ldi	r27, 0x00	; 0
    5a40:	30 97       	sbiw	r30, 0x00	; 0
    5a42:	19 f1       	breq	.+70     	; 0x5a8a <malloc+0x6c>
    5a44:	40 81       	ld	r20, Z
    5a46:	51 81       	ldd	r21, Z+1	; 0x01
    5a48:	02 81       	ldd	r16, Z+2	; 0x02
    5a4a:	13 81       	ldd	r17, Z+3	; 0x03
    5a4c:	48 17       	cp	r20, r24
    5a4e:	59 07       	cpc	r21, r25
    5a50:	c8 f0       	brcs	.+50     	; 0x5a84 <malloc+0x66>
    5a52:	84 17       	cp	r24, r20
    5a54:	95 07       	cpc	r25, r21
    5a56:	69 f4       	brne	.+26     	; 0x5a72 <malloc+0x54>
    5a58:	10 97       	sbiw	r26, 0x00	; 0
    5a5a:	31 f0       	breq	.+12     	; 0x5a68 <malloc+0x4a>
    5a5c:	12 96       	adiw	r26, 0x02	; 2
    5a5e:	0c 93       	st	X, r16
    5a60:	12 97       	sbiw	r26, 0x02	; 2
    5a62:	13 96       	adiw	r26, 0x03	; 3
    5a64:	1c 93       	st	X, r17
    5a66:	27 c0       	rjmp	.+78     	; 0x5ab6 <malloc+0x98>
    5a68:	00 93 fb 1a 	sts	0x1AFB, r16	; 0x801afb <__flp>
    5a6c:	10 93 fc 1a 	sts	0x1AFC, r17	; 0x801afc <__flp+0x1>
    5a70:	22 c0       	rjmp	.+68     	; 0x5ab6 <malloc+0x98>
    5a72:	21 15       	cp	r18, r1
    5a74:	31 05       	cpc	r19, r1
    5a76:	19 f0       	breq	.+6      	; 0x5a7e <malloc+0x60>
    5a78:	42 17       	cp	r20, r18
    5a7a:	53 07       	cpc	r21, r19
    5a7c:	18 f4       	brcc	.+6      	; 0x5a84 <malloc+0x66>
    5a7e:	9a 01       	movw	r18, r20
    5a80:	bd 01       	movw	r22, r26
    5a82:	ef 01       	movw	r28, r30
    5a84:	df 01       	movw	r26, r30
    5a86:	f8 01       	movw	r30, r16
    5a88:	db cf       	rjmp	.-74     	; 0x5a40 <malloc+0x22>
    5a8a:	21 15       	cp	r18, r1
    5a8c:	31 05       	cpc	r19, r1
    5a8e:	f9 f0       	breq	.+62     	; 0x5ace <malloc+0xb0>
    5a90:	28 1b       	sub	r18, r24
    5a92:	39 0b       	sbc	r19, r25
    5a94:	24 30       	cpi	r18, 0x04	; 4
    5a96:	31 05       	cpc	r19, r1
    5a98:	80 f4       	brcc	.+32     	; 0x5aba <malloc+0x9c>
    5a9a:	8a 81       	ldd	r24, Y+2	; 0x02
    5a9c:	9b 81       	ldd	r25, Y+3	; 0x03
    5a9e:	61 15       	cp	r22, r1
    5aa0:	71 05       	cpc	r23, r1
    5aa2:	21 f0       	breq	.+8      	; 0x5aac <malloc+0x8e>
    5aa4:	fb 01       	movw	r30, r22
    5aa6:	93 83       	std	Z+3, r25	; 0x03
    5aa8:	82 83       	std	Z+2, r24	; 0x02
    5aaa:	04 c0       	rjmp	.+8      	; 0x5ab4 <malloc+0x96>
    5aac:	90 93 fc 1a 	sts	0x1AFC, r25	; 0x801afc <__flp+0x1>
    5ab0:	80 93 fb 1a 	sts	0x1AFB, r24	; 0x801afb <__flp>
    5ab4:	fe 01       	movw	r30, r28
    5ab6:	32 96       	adiw	r30, 0x02	; 2
    5ab8:	44 c0       	rjmp	.+136    	; 0x5b42 <malloc+0x124>
    5aba:	fe 01       	movw	r30, r28
    5abc:	e2 0f       	add	r30, r18
    5abe:	f3 1f       	adc	r31, r19
    5ac0:	81 93       	st	Z+, r24
    5ac2:	91 93       	st	Z+, r25
    5ac4:	22 50       	subi	r18, 0x02	; 2
    5ac6:	31 09       	sbc	r19, r1
    5ac8:	39 83       	std	Y+1, r19	; 0x01
    5aca:	28 83       	st	Y, r18
    5acc:	3a c0       	rjmp	.+116    	; 0x5b42 <malloc+0x124>
    5ace:	20 91 f9 1a 	lds	r18, 0x1AF9	; 0x801af9 <__brkval>
    5ad2:	30 91 fa 1a 	lds	r19, 0x1AFA	; 0x801afa <__brkval+0x1>
    5ad6:	23 2b       	or	r18, r19
    5ad8:	41 f4       	brne	.+16     	; 0x5aea <malloc+0xcc>
    5ada:	20 91 02 02 	lds	r18, 0x0202	; 0x800202 <__malloc_heap_start>
    5ade:	30 91 03 02 	lds	r19, 0x0203	; 0x800203 <__malloc_heap_start+0x1>
    5ae2:	30 93 fa 1a 	sts	0x1AFA, r19	; 0x801afa <__brkval+0x1>
    5ae6:	20 93 f9 1a 	sts	0x1AF9, r18	; 0x801af9 <__brkval>
    5aea:	20 91 00 02 	lds	r18, 0x0200	; 0x800200 <__data_start>
    5aee:	30 91 01 02 	lds	r19, 0x0201	; 0x800201 <__data_start+0x1>
    5af2:	21 15       	cp	r18, r1
    5af4:	31 05       	cpc	r19, r1
    5af6:	41 f4       	brne	.+16     	; 0x5b08 <malloc+0xea>
    5af8:	2d b7       	in	r18, 0x3d	; 61
    5afa:	3e b7       	in	r19, 0x3e	; 62
    5afc:	40 91 04 02 	lds	r20, 0x0204	; 0x800204 <__malloc_margin>
    5b00:	50 91 05 02 	lds	r21, 0x0205	; 0x800205 <__malloc_margin+0x1>
    5b04:	24 1b       	sub	r18, r20
    5b06:	35 0b       	sbc	r19, r21
    5b08:	e0 91 f9 1a 	lds	r30, 0x1AF9	; 0x801af9 <__brkval>
    5b0c:	f0 91 fa 1a 	lds	r31, 0x1AFA	; 0x801afa <__brkval+0x1>
    5b10:	e2 17       	cp	r30, r18
    5b12:	f3 07       	cpc	r31, r19
    5b14:	a0 f4       	brcc	.+40     	; 0x5b3e <malloc+0x120>
    5b16:	2e 1b       	sub	r18, r30
    5b18:	3f 0b       	sbc	r19, r31
    5b1a:	28 17       	cp	r18, r24
    5b1c:	39 07       	cpc	r19, r25
    5b1e:	78 f0       	brcs	.+30     	; 0x5b3e <malloc+0x120>
    5b20:	ac 01       	movw	r20, r24
    5b22:	4e 5f       	subi	r20, 0xFE	; 254
    5b24:	5f 4f       	sbci	r21, 0xFF	; 255
    5b26:	24 17       	cp	r18, r20
    5b28:	35 07       	cpc	r19, r21
    5b2a:	48 f0       	brcs	.+18     	; 0x5b3e <malloc+0x120>
    5b2c:	4e 0f       	add	r20, r30
    5b2e:	5f 1f       	adc	r21, r31
    5b30:	50 93 fa 1a 	sts	0x1AFA, r21	; 0x801afa <__brkval+0x1>
    5b34:	40 93 f9 1a 	sts	0x1AF9, r20	; 0x801af9 <__brkval>
    5b38:	81 93       	st	Z+, r24
    5b3a:	91 93       	st	Z+, r25
    5b3c:	02 c0       	rjmp	.+4      	; 0x5b42 <malloc+0x124>
    5b3e:	e0 e0       	ldi	r30, 0x00	; 0
    5b40:	f0 e0       	ldi	r31, 0x00	; 0
    5b42:	cf 01       	movw	r24, r30
    5b44:	df 91       	pop	r29
    5b46:	cf 91       	pop	r28
    5b48:	1f 91       	pop	r17
    5b4a:	0f 91       	pop	r16
    5b4c:	08 95       	ret

00005b4e <free>:
    5b4e:	cf 93       	push	r28
    5b50:	df 93       	push	r29
    5b52:	00 97       	sbiw	r24, 0x00	; 0
    5b54:	09 f4       	brne	.+2      	; 0x5b58 <free+0xa>
    5b56:	81 c0       	rjmp	.+258    	; 0x5c5a <free+0x10c>
    5b58:	fc 01       	movw	r30, r24
    5b5a:	32 97       	sbiw	r30, 0x02	; 2
    5b5c:	13 82       	std	Z+3, r1	; 0x03
    5b5e:	12 82       	std	Z+2, r1	; 0x02
    5b60:	a0 91 fb 1a 	lds	r26, 0x1AFB	; 0x801afb <__flp>
    5b64:	b0 91 fc 1a 	lds	r27, 0x1AFC	; 0x801afc <__flp+0x1>
    5b68:	10 97       	sbiw	r26, 0x00	; 0
    5b6a:	81 f4       	brne	.+32     	; 0x5b8c <free+0x3e>
    5b6c:	20 81       	ld	r18, Z
    5b6e:	31 81       	ldd	r19, Z+1	; 0x01
    5b70:	82 0f       	add	r24, r18
    5b72:	93 1f       	adc	r25, r19
    5b74:	20 91 f9 1a 	lds	r18, 0x1AF9	; 0x801af9 <__brkval>
    5b78:	30 91 fa 1a 	lds	r19, 0x1AFA	; 0x801afa <__brkval+0x1>
    5b7c:	28 17       	cp	r18, r24
    5b7e:	39 07       	cpc	r19, r25
    5b80:	51 f5       	brne	.+84     	; 0x5bd6 <free+0x88>
    5b82:	f0 93 fa 1a 	sts	0x1AFA, r31	; 0x801afa <__brkval+0x1>
    5b86:	e0 93 f9 1a 	sts	0x1AF9, r30	; 0x801af9 <__brkval>
    5b8a:	67 c0       	rjmp	.+206    	; 0x5c5a <free+0x10c>
    5b8c:	ed 01       	movw	r28, r26
    5b8e:	20 e0       	ldi	r18, 0x00	; 0
    5b90:	30 e0       	ldi	r19, 0x00	; 0
    5b92:	ce 17       	cp	r28, r30
    5b94:	df 07       	cpc	r29, r31
    5b96:	40 f4       	brcc	.+16     	; 0x5ba8 <free+0x5a>
    5b98:	4a 81       	ldd	r20, Y+2	; 0x02
    5b9a:	5b 81       	ldd	r21, Y+3	; 0x03
    5b9c:	9e 01       	movw	r18, r28
    5b9e:	41 15       	cp	r20, r1
    5ba0:	51 05       	cpc	r21, r1
    5ba2:	f1 f0       	breq	.+60     	; 0x5be0 <free+0x92>
    5ba4:	ea 01       	movw	r28, r20
    5ba6:	f5 cf       	rjmp	.-22     	; 0x5b92 <free+0x44>
    5ba8:	d3 83       	std	Z+3, r29	; 0x03
    5baa:	c2 83       	std	Z+2, r28	; 0x02
    5bac:	40 81       	ld	r20, Z
    5bae:	51 81       	ldd	r21, Z+1	; 0x01
    5bb0:	84 0f       	add	r24, r20
    5bb2:	95 1f       	adc	r25, r21
    5bb4:	c8 17       	cp	r28, r24
    5bb6:	d9 07       	cpc	r29, r25
    5bb8:	59 f4       	brne	.+22     	; 0x5bd0 <free+0x82>
    5bba:	88 81       	ld	r24, Y
    5bbc:	99 81       	ldd	r25, Y+1	; 0x01
    5bbe:	84 0f       	add	r24, r20
    5bc0:	95 1f       	adc	r25, r21
    5bc2:	02 96       	adiw	r24, 0x02	; 2
    5bc4:	91 83       	std	Z+1, r25	; 0x01
    5bc6:	80 83       	st	Z, r24
    5bc8:	8a 81       	ldd	r24, Y+2	; 0x02
    5bca:	9b 81       	ldd	r25, Y+3	; 0x03
    5bcc:	93 83       	std	Z+3, r25	; 0x03
    5bce:	82 83       	std	Z+2, r24	; 0x02
    5bd0:	21 15       	cp	r18, r1
    5bd2:	31 05       	cpc	r19, r1
    5bd4:	29 f4       	brne	.+10     	; 0x5be0 <free+0x92>
    5bd6:	f0 93 fc 1a 	sts	0x1AFC, r31	; 0x801afc <__flp+0x1>
    5bda:	e0 93 fb 1a 	sts	0x1AFB, r30	; 0x801afb <__flp>
    5bde:	3d c0       	rjmp	.+122    	; 0x5c5a <free+0x10c>
    5be0:	e9 01       	movw	r28, r18
    5be2:	fb 83       	std	Y+3, r31	; 0x03
    5be4:	ea 83       	std	Y+2, r30	; 0x02
    5be6:	49 91       	ld	r20, Y+
    5be8:	59 91       	ld	r21, Y+
    5bea:	c4 0f       	add	r28, r20
    5bec:	d5 1f       	adc	r29, r21
    5bee:	ec 17       	cp	r30, r28
    5bf0:	fd 07       	cpc	r31, r29
    5bf2:	61 f4       	brne	.+24     	; 0x5c0c <free+0xbe>
    5bf4:	80 81       	ld	r24, Z
    5bf6:	91 81       	ldd	r25, Z+1	; 0x01
    5bf8:	84 0f       	add	r24, r20
    5bfa:	95 1f       	adc	r25, r21
    5bfc:	02 96       	adiw	r24, 0x02	; 2
    5bfe:	e9 01       	movw	r28, r18
    5c00:	99 83       	std	Y+1, r25	; 0x01
    5c02:	88 83       	st	Y, r24
    5c04:	82 81       	ldd	r24, Z+2	; 0x02
    5c06:	93 81       	ldd	r25, Z+3	; 0x03
    5c08:	9b 83       	std	Y+3, r25	; 0x03
    5c0a:	8a 83       	std	Y+2, r24	; 0x02
    5c0c:	e0 e0       	ldi	r30, 0x00	; 0
    5c0e:	f0 e0       	ldi	r31, 0x00	; 0
    5c10:	12 96       	adiw	r26, 0x02	; 2
    5c12:	8d 91       	ld	r24, X+
    5c14:	9c 91       	ld	r25, X
    5c16:	13 97       	sbiw	r26, 0x03	; 3
    5c18:	00 97       	sbiw	r24, 0x00	; 0
    5c1a:	19 f0       	breq	.+6      	; 0x5c22 <free+0xd4>
    5c1c:	fd 01       	movw	r30, r26
    5c1e:	dc 01       	movw	r26, r24
    5c20:	f7 cf       	rjmp	.-18     	; 0x5c10 <free+0xc2>
    5c22:	8d 91       	ld	r24, X+
    5c24:	9c 91       	ld	r25, X
    5c26:	11 97       	sbiw	r26, 0x01	; 1
    5c28:	9d 01       	movw	r18, r26
    5c2a:	2e 5f       	subi	r18, 0xFE	; 254
    5c2c:	3f 4f       	sbci	r19, 0xFF	; 255
    5c2e:	82 0f       	add	r24, r18
    5c30:	93 1f       	adc	r25, r19
    5c32:	20 91 f9 1a 	lds	r18, 0x1AF9	; 0x801af9 <__brkval>
    5c36:	30 91 fa 1a 	lds	r19, 0x1AFA	; 0x801afa <__brkval+0x1>
    5c3a:	28 17       	cp	r18, r24
    5c3c:	39 07       	cpc	r19, r25
    5c3e:	69 f4       	brne	.+26     	; 0x5c5a <free+0x10c>
    5c40:	30 97       	sbiw	r30, 0x00	; 0
    5c42:	29 f4       	brne	.+10     	; 0x5c4e <free+0x100>
    5c44:	10 92 fc 1a 	sts	0x1AFC, r1	; 0x801afc <__flp+0x1>
    5c48:	10 92 fb 1a 	sts	0x1AFB, r1	; 0x801afb <__flp>
    5c4c:	02 c0       	rjmp	.+4      	; 0x5c52 <free+0x104>
    5c4e:	13 82       	std	Z+3, r1	; 0x03
    5c50:	12 82       	std	Z+2, r1	; 0x02
    5c52:	b0 93 fa 1a 	sts	0x1AFA, r27	; 0x801afa <__brkval+0x1>
    5c56:	a0 93 f9 1a 	sts	0x1AF9, r26	; 0x801af9 <__brkval>
    5c5a:	df 91       	pop	r29
    5c5c:	cf 91       	pop	r28
    5c5e:	08 95       	ret

00005c60 <abort>:
    5c60:	81 e0       	ldi	r24, 0x01	; 1
    5c62:	90 e0       	ldi	r25, 0x00	; 0
    5c64:	f8 94       	cli
    5c66:	7d c3       	rjmp	.+1786   	; 0x6362 <_exit>

00005c68 <memcpy>:
    5c68:	fb 01       	movw	r30, r22
    5c6a:	dc 01       	movw	r26, r24
    5c6c:	02 c0       	rjmp	.+4      	; 0x5c72 <memcpy+0xa>
    5c6e:	01 90       	ld	r0, Z+
    5c70:	0d 92       	st	X+, r0
    5c72:	41 50       	subi	r20, 0x01	; 1
    5c74:	50 40       	sbci	r21, 0x00	; 0
    5c76:	d8 f7       	brcc	.-10     	; 0x5c6e <memcpy+0x6>
    5c78:	08 95       	ret

00005c7a <memset>:
    5c7a:	dc 01       	movw	r26, r24
    5c7c:	01 c0       	rjmp	.+2      	; 0x5c80 <memset+0x6>
    5c7e:	6d 93       	st	X+, r22
    5c80:	41 50       	subi	r20, 0x01	; 1
    5c82:	50 40       	sbci	r21, 0x00	; 0
    5c84:	e0 f7       	brcc	.-8      	; 0x5c7e <memset+0x4>
    5c86:	08 95       	ret

00005c88 <strcasestr>:
    5c88:	fb 01       	movw	r30, r22
    5c8a:	51 91       	ld	r21, Z+
    5c8c:	55 23       	and	r21, r21
    5c8e:	b1 f0       	breq	.+44     	; 0x5cbc <strcasestr+0x34>
    5c90:	bf 01       	movw	r22, r30
    5c92:	dc 01       	movw	r26, r24
    5c94:	05 2e       	mov	r0, r21
    5c96:	4d 91       	ld	r20, X+
    5c98:	44 23       	and	r20, r20
    5c9a:	69 f0       	breq	.+26     	; 0x5cb6 <strcasestr+0x2e>
    5c9c:	10 d0       	rcall	.+32     	; 0x5cbe <strcasestr+0x36>
    5c9e:	d9 f7       	brne	.-10     	; 0x5c96 <strcasestr+0xe>
    5ca0:	cd 01       	movw	r24, r26
    5ca2:	01 90       	ld	r0, Z+
    5ca4:	00 20       	and	r0, r0
    5ca6:	49 f0       	breq	.+18     	; 0x5cba <strcasestr+0x32>
    5ca8:	4d 91       	ld	r20, X+
    5caa:	41 11       	cpse	r20, r1
    5cac:	08 d0       	rcall	.+16     	; 0x5cbe <strcasestr+0x36>
    5cae:	c9 f3       	breq	.-14     	; 0x5ca2 <strcasestr+0x1a>
    5cb0:	fb 01       	movw	r30, r22
    5cb2:	41 11       	cpse	r20, r1
    5cb4:	ee cf       	rjmp	.-36     	; 0x5c92 <strcasestr+0xa>
    5cb6:	81 e0       	ldi	r24, 0x01	; 1
    5cb8:	90 e0       	ldi	r25, 0x00	; 0
    5cba:	01 97       	sbiw	r24, 0x01	; 1
    5cbc:	08 95       	ret
    5cbe:	40 25       	eor	r20, r0
    5cc0:	39 f0       	breq	.+14     	; 0x5cd0 <strcasestr+0x48>
    5cc2:	40 32       	cpi	r20, 0x20	; 32
    5cc4:	29 f4       	brne	.+10     	; 0x5cd0 <strcasestr+0x48>
    5cc6:	40 29       	or	r20, r0
    5cc8:	4b 57       	subi	r20, 0x7B	; 123
    5cca:	46 5e       	subi	r20, 0xE6	; 230
    5ccc:	08 f0       	brcs	.+2      	; 0x5cd0 <strcasestr+0x48>
    5cce:	18 94       	sez
    5cd0:	08 95       	ret

00005cd2 <strcat>:
    5cd2:	fb 01       	movw	r30, r22
    5cd4:	dc 01       	movw	r26, r24
    5cd6:	0d 90       	ld	r0, X+
    5cd8:	00 20       	and	r0, r0
    5cda:	e9 f7       	brne	.-6      	; 0x5cd6 <strcat+0x4>
    5cdc:	11 97       	sbiw	r26, 0x01	; 1
    5cde:	01 90       	ld	r0, Z+
    5ce0:	0d 92       	st	X+, r0
    5ce2:	00 20       	and	r0, r0
    5ce4:	e1 f7       	brne	.-8      	; 0x5cde <strcat+0xc>
    5ce6:	08 95       	ret

00005ce8 <strcpy>:
    5ce8:	fb 01       	movw	r30, r22
    5cea:	dc 01       	movw	r26, r24
    5cec:	01 90       	ld	r0, Z+
    5cee:	0d 92       	st	X+, r0
    5cf0:	00 20       	and	r0, r0
    5cf2:	e1 f7       	brne	.-8      	; 0x5cec <strcpy+0x4>
    5cf4:	08 95       	ret

00005cf6 <strncasecmp>:
    5cf6:	fb 01       	movw	r30, r22
    5cf8:	dc 01       	movw	r26, r24
    5cfa:	41 50       	subi	r20, 0x01	; 1
    5cfc:	50 40       	sbci	r21, 0x00	; 0
    5cfe:	88 f0       	brcs	.+34     	; 0x5d22 <strncasecmp+0x2c>
    5d00:	8d 91       	ld	r24, X+
    5d02:	81 34       	cpi	r24, 0x41	; 65
    5d04:	1c f0       	brlt	.+6      	; 0x5d0c <strncasecmp+0x16>
    5d06:	8b 35       	cpi	r24, 0x5B	; 91
    5d08:	0c f4       	brge	.+2      	; 0x5d0c <strncasecmp+0x16>
    5d0a:	80 5e       	subi	r24, 0xE0	; 224
    5d0c:	61 91       	ld	r22, Z+
    5d0e:	61 34       	cpi	r22, 0x41	; 65
    5d10:	1c f0       	brlt	.+6      	; 0x5d18 <strncasecmp+0x22>
    5d12:	6b 35       	cpi	r22, 0x5B	; 91
    5d14:	0c f4       	brge	.+2      	; 0x5d18 <strncasecmp+0x22>
    5d16:	60 5e       	subi	r22, 0xE0	; 224
    5d18:	86 1b       	sub	r24, r22
    5d1a:	61 11       	cpse	r22, r1
    5d1c:	71 f3       	breq	.-36     	; 0x5cfa <strncasecmp+0x4>
    5d1e:	99 0b       	sbc	r25, r25
    5d20:	08 95       	ret
    5d22:	88 1b       	sub	r24, r24
    5d24:	fc cf       	rjmp	.-8      	; 0x5d1e <strncasecmp+0x28>

00005d26 <printf>:
    5d26:	cf 93       	push	r28
    5d28:	df 93       	push	r29
    5d2a:	cd b7       	in	r28, 0x3d	; 61
    5d2c:	de b7       	in	r29, 0x3e	; 62
    5d2e:	ae 01       	movw	r20, r28
    5d30:	4a 5f       	subi	r20, 0xFA	; 250
    5d32:	5f 4f       	sbci	r21, 0xFF	; 255
    5d34:	fa 01       	movw	r30, r20
    5d36:	61 91       	ld	r22, Z+
    5d38:	71 91       	ld	r23, Z+
    5d3a:	af 01       	movw	r20, r30
    5d3c:	80 91 ff 1a 	lds	r24, 0x1AFF	; 0x801aff <__iob+0x2>
    5d40:	90 91 00 1b 	lds	r25, 0x1B00	; 0x801b00 <__iob+0x3>
    5d44:	61 d0       	rcall	.+194    	; 0x5e08 <vfprintf>
    5d46:	df 91       	pop	r29
    5d48:	cf 91       	pop	r28
    5d4a:	08 95       	ret

00005d4c <puts>:
    5d4c:	0f 93       	push	r16
    5d4e:	1f 93       	push	r17
    5d50:	cf 93       	push	r28
    5d52:	df 93       	push	r29
    5d54:	e0 91 ff 1a 	lds	r30, 0x1AFF	; 0x801aff <__iob+0x2>
    5d58:	f0 91 00 1b 	lds	r31, 0x1B00	; 0x801b00 <__iob+0x3>
    5d5c:	23 81       	ldd	r18, Z+3	; 0x03
    5d5e:	21 ff       	sbrs	r18, 1
    5d60:	1b c0       	rjmp	.+54     	; 0x5d98 <puts+0x4c>
    5d62:	8c 01       	movw	r16, r24
    5d64:	d0 e0       	ldi	r29, 0x00	; 0
    5d66:	c0 e0       	ldi	r28, 0x00	; 0
    5d68:	f8 01       	movw	r30, r16
    5d6a:	81 91       	ld	r24, Z+
    5d6c:	8f 01       	movw	r16, r30
    5d6e:	60 91 ff 1a 	lds	r22, 0x1AFF	; 0x801aff <__iob+0x2>
    5d72:	70 91 00 1b 	lds	r23, 0x1B00	; 0x801b00 <__iob+0x3>
    5d76:	db 01       	movw	r26, r22
    5d78:	18 96       	adiw	r26, 0x08	; 8
    5d7a:	ed 91       	ld	r30, X+
    5d7c:	fc 91       	ld	r31, X
    5d7e:	19 97       	sbiw	r26, 0x09	; 9
    5d80:	88 23       	and	r24, r24
    5d82:	31 f0       	breq	.+12     	; 0x5d90 <puts+0x44>
    5d84:	19 95       	eicall
    5d86:	89 2b       	or	r24, r25
    5d88:	79 f3       	breq	.-34     	; 0x5d68 <puts+0x1c>
    5d8a:	df ef       	ldi	r29, 0xFF	; 255
    5d8c:	cf ef       	ldi	r28, 0xFF	; 255
    5d8e:	ec cf       	rjmp	.-40     	; 0x5d68 <puts+0x1c>
    5d90:	8a e0       	ldi	r24, 0x0A	; 10
    5d92:	19 95       	eicall
    5d94:	89 2b       	or	r24, r25
    5d96:	19 f0       	breq	.+6      	; 0x5d9e <puts+0x52>
    5d98:	8f ef       	ldi	r24, 0xFF	; 255
    5d9a:	9f ef       	ldi	r25, 0xFF	; 255
    5d9c:	02 c0       	rjmp	.+4      	; 0x5da2 <puts+0x56>
    5d9e:	8d 2f       	mov	r24, r29
    5da0:	9c 2f       	mov	r25, r28
    5da2:	df 91       	pop	r29
    5da4:	cf 91       	pop	r28
    5da6:	1f 91       	pop	r17
    5da8:	0f 91       	pop	r16
    5daa:	08 95       	ret

00005dac <sprintf>:
    5dac:	0f 93       	push	r16
    5dae:	1f 93       	push	r17
    5db0:	cf 93       	push	r28
    5db2:	df 93       	push	r29
    5db4:	cd b7       	in	r28, 0x3d	; 61
    5db6:	de b7       	in	r29, 0x3e	; 62
    5db8:	2e 97       	sbiw	r28, 0x0e	; 14
    5dba:	0f b6       	in	r0, 0x3f	; 63
    5dbc:	f8 94       	cli
    5dbe:	de bf       	out	0x3e, r29	; 62
    5dc0:	0f be       	out	0x3f, r0	; 63
    5dc2:	cd bf       	out	0x3d, r28	; 61
    5dc4:	0e 89       	ldd	r16, Y+22	; 0x16
    5dc6:	1f 89       	ldd	r17, Y+23	; 0x17
    5dc8:	86 e0       	ldi	r24, 0x06	; 6
    5dca:	8c 83       	std	Y+4, r24	; 0x04
    5dcc:	1a 83       	std	Y+2, r17	; 0x02
    5dce:	09 83       	std	Y+1, r16	; 0x01
    5dd0:	8f ef       	ldi	r24, 0xFF	; 255
    5dd2:	9f e7       	ldi	r25, 0x7F	; 127
    5dd4:	9e 83       	std	Y+6, r25	; 0x06
    5dd6:	8d 83       	std	Y+5, r24	; 0x05
    5dd8:	ae 01       	movw	r20, r28
    5dda:	46 5e       	subi	r20, 0xE6	; 230
    5ddc:	5f 4f       	sbci	r21, 0xFF	; 255
    5dde:	68 8d       	ldd	r22, Y+24	; 0x18
    5de0:	79 8d       	ldd	r23, Y+25	; 0x19
    5de2:	ce 01       	movw	r24, r28
    5de4:	01 96       	adiw	r24, 0x01	; 1
    5de6:	10 d0       	rcall	.+32     	; 0x5e08 <vfprintf>
    5de8:	ef 81       	ldd	r30, Y+7	; 0x07
    5dea:	f8 85       	ldd	r31, Y+8	; 0x08
    5dec:	e0 0f       	add	r30, r16
    5dee:	f1 1f       	adc	r31, r17
    5df0:	10 82       	st	Z, r1
    5df2:	2e 96       	adiw	r28, 0x0e	; 14
    5df4:	0f b6       	in	r0, 0x3f	; 63
    5df6:	f8 94       	cli
    5df8:	de bf       	out	0x3e, r29	; 62
    5dfa:	0f be       	out	0x3f, r0	; 63
    5dfc:	cd bf       	out	0x3d, r28	; 61
    5dfe:	df 91       	pop	r29
    5e00:	cf 91       	pop	r28
    5e02:	1f 91       	pop	r17
    5e04:	0f 91       	pop	r16
    5e06:	08 95       	ret

00005e08 <vfprintf>:
    5e08:	2f 92       	push	r2
    5e0a:	3f 92       	push	r3
    5e0c:	4f 92       	push	r4
    5e0e:	5f 92       	push	r5
    5e10:	6f 92       	push	r6
    5e12:	7f 92       	push	r7
    5e14:	8f 92       	push	r8
    5e16:	9f 92       	push	r9
    5e18:	af 92       	push	r10
    5e1a:	bf 92       	push	r11
    5e1c:	cf 92       	push	r12
    5e1e:	df 92       	push	r13
    5e20:	ef 92       	push	r14
    5e22:	ff 92       	push	r15
    5e24:	0f 93       	push	r16
    5e26:	1f 93       	push	r17
    5e28:	cf 93       	push	r28
    5e2a:	df 93       	push	r29
    5e2c:	cd b7       	in	r28, 0x3d	; 61
    5e2e:	de b7       	in	r29, 0x3e	; 62
    5e30:	2b 97       	sbiw	r28, 0x0b	; 11
    5e32:	0f b6       	in	r0, 0x3f	; 63
    5e34:	f8 94       	cli
    5e36:	de bf       	out	0x3e, r29	; 62
    5e38:	0f be       	out	0x3f, r0	; 63
    5e3a:	cd bf       	out	0x3d, r28	; 61
    5e3c:	6c 01       	movw	r12, r24
    5e3e:	7b 01       	movw	r14, r22
    5e40:	8a 01       	movw	r16, r20
    5e42:	fc 01       	movw	r30, r24
    5e44:	17 82       	std	Z+7, r1	; 0x07
    5e46:	16 82       	std	Z+6, r1	; 0x06
    5e48:	83 81       	ldd	r24, Z+3	; 0x03
    5e4a:	81 ff       	sbrs	r24, 1
    5e4c:	bf c1       	rjmp	.+894    	; 0x61cc <vfprintf+0x3c4>
    5e4e:	ce 01       	movw	r24, r28
    5e50:	01 96       	adiw	r24, 0x01	; 1
    5e52:	3c 01       	movw	r6, r24
    5e54:	f6 01       	movw	r30, r12
    5e56:	93 81       	ldd	r25, Z+3	; 0x03
    5e58:	f7 01       	movw	r30, r14
    5e5a:	93 fd       	sbrc	r25, 3
    5e5c:	85 91       	lpm	r24, Z+
    5e5e:	93 ff       	sbrs	r25, 3
    5e60:	81 91       	ld	r24, Z+
    5e62:	7f 01       	movw	r14, r30
    5e64:	88 23       	and	r24, r24
    5e66:	09 f4       	brne	.+2      	; 0x5e6a <vfprintf+0x62>
    5e68:	ad c1       	rjmp	.+858    	; 0x61c4 <vfprintf+0x3bc>
    5e6a:	85 32       	cpi	r24, 0x25	; 37
    5e6c:	39 f4       	brne	.+14     	; 0x5e7c <vfprintf+0x74>
    5e6e:	93 fd       	sbrc	r25, 3
    5e70:	85 91       	lpm	r24, Z+
    5e72:	93 ff       	sbrs	r25, 3
    5e74:	81 91       	ld	r24, Z+
    5e76:	7f 01       	movw	r14, r30
    5e78:	85 32       	cpi	r24, 0x25	; 37
    5e7a:	21 f4       	brne	.+8      	; 0x5e84 <vfprintf+0x7c>
    5e7c:	b6 01       	movw	r22, r12
    5e7e:	90 e0       	ldi	r25, 0x00	; 0
    5e80:	d6 d1       	rcall	.+940    	; 0x622e <fputc>
    5e82:	e8 cf       	rjmp	.-48     	; 0x5e54 <vfprintf+0x4c>
    5e84:	91 2c       	mov	r9, r1
    5e86:	21 2c       	mov	r2, r1
    5e88:	31 2c       	mov	r3, r1
    5e8a:	ff e1       	ldi	r31, 0x1F	; 31
    5e8c:	f3 15       	cp	r31, r3
    5e8e:	d8 f0       	brcs	.+54     	; 0x5ec6 <vfprintf+0xbe>
    5e90:	8b 32       	cpi	r24, 0x2B	; 43
    5e92:	79 f0       	breq	.+30     	; 0x5eb2 <vfprintf+0xaa>
    5e94:	38 f4       	brcc	.+14     	; 0x5ea4 <vfprintf+0x9c>
    5e96:	80 32       	cpi	r24, 0x20	; 32
    5e98:	79 f0       	breq	.+30     	; 0x5eb8 <vfprintf+0xb0>
    5e9a:	83 32       	cpi	r24, 0x23	; 35
    5e9c:	a1 f4       	brne	.+40     	; 0x5ec6 <vfprintf+0xbe>
    5e9e:	23 2d       	mov	r18, r3
    5ea0:	20 61       	ori	r18, 0x10	; 16
    5ea2:	1d c0       	rjmp	.+58     	; 0x5ede <vfprintf+0xd6>
    5ea4:	8d 32       	cpi	r24, 0x2D	; 45
    5ea6:	61 f0       	breq	.+24     	; 0x5ec0 <vfprintf+0xb8>
    5ea8:	80 33       	cpi	r24, 0x30	; 48
    5eaa:	69 f4       	brne	.+26     	; 0x5ec6 <vfprintf+0xbe>
    5eac:	23 2d       	mov	r18, r3
    5eae:	21 60       	ori	r18, 0x01	; 1
    5eb0:	16 c0       	rjmp	.+44     	; 0x5ede <vfprintf+0xd6>
    5eb2:	83 2d       	mov	r24, r3
    5eb4:	82 60       	ori	r24, 0x02	; 2
    5eb6:	38 2e       	mov	r3, r24
    5eb8:	e3 2d       	mov	r30, r3
    5eba:	e4 60       	ori	r30, 0x04	; 4
    5ebc:	3e 2e       	mov	r3, r30
    5ebe:	2a c0       	rjmp	.+84     	; 0x5f14 <vfprintf+0x10c>
    5ec0:	f3 2d       	mov	r31, r3
    5ec2:	f8 60       	ori	r31, 0x08	; 8
    5ec4:	1d c0       	rjmp	.+58     	; 0x5f00 <vfprintf+0xf8>
    5ec6:	37 fc       	sbrc	r3, 7
    5ec8:	2d c0       	rjmp	.+90     	; 0x5f24 <vfprintf+0x11c>
    5eca:	20 ed       	ldi	r18, 0xD0	; 208
    5ecc:	28 0f       	add	r18, r24
    5ece:	2a 30       	cpi	r18, 0x0A	; 10
    5ed0:	40 f0       	brcs	.+16     	; 0x5ee2 <vfprintf+0xda>
    5ed2:	8e 32       	cpi	r24, 0x2E	; 46
    5ed4:	b9 f4       	brne	.+46     	; 0x5f04 <vfprintf+0xfc>
    5ed6:	36 fc       	sbrc	r3, 6
    5ed8:	75 c1       	rjmp	.+746    	; 0x61c4 <vfprintf+0x3bc>
    5eda:	23 2d       	mov	r18, r3
    5edc:	20 64       	ori	r18, 0x40	; 64
    5ede:	32 2e       	mov	r3, r18
    5ee0:	19 c0       	rjmp	.+50     	; 0x5f14 <vfprintf+0x10c>
    5ee2:	36 fe       	sbrs	r3, 6
    5ee4:	06 c0       	rjmp	.+12     	; 0x5ef2 <vfprintf+0xea>
    5ee6:	8a e0       	ldi	r24, 0x0A	; 10
    5ee8:	98 9e       	mul	r9, r24
    5eea:	20 0d       	add	r18, r0
    5eec:	11 24       	eor	r1, r1
    5eee:	92 2e       	mov	r9, r18
    5ef0:	11 c0       	rjmp	.+34     	; 0x5f14 <vfprintf+0x10c>
    5ef2:	ea e0       	ldi	r30, 0x0A	; 10
    5ef4:	2e 9e       	mul	r2, r30
    5ef6:	20 0d       	add	r18, r0
    5ef8:	11 24       	eor	r1, r1
    5efa:	22 2e       	mov	r2, r18
    5efc:	f3 2d       	mov	r31, r3
    5efe:	f0 62       	ori	r31, 0x20	; 32
    5f00:	3f 2e       	mov	r3, r31
    5f02:	08 c0       	rjmp	.+16     	; 0x5f14 <vfprintf+0x10c>
    5f04:	8c 36       	cpi	r24, 0x6C	; 108
    5f06:	21 f4       	brne	.+8      	; 0x5f10 <vfprintf+0x108>
    5f08:	83 2d       	mov	r24, r3
    5f0a:	80 68       	ori	r24, 0x80	; 128
    5f0c:	38 2e       	mov	r3, r24
    5f0e:	02 c0       	rjmp	.+4      	; 0x5f14 <vfprintf+0x10c>
    5f10:	88 36       	cpi	r24, 0x68	; 104
    5f12:	41 f4       	brne	.+16     	; 0x5f24 <vfprintf+0x11c>
    5f14:	f7 01       	movw	r30, r14
    5f16:	93 fd       	sbrc	r25, 3
    5f18:	85 91       	lpm	r24, Z+
    5f1a:	93 ff       	sbrs	r25, 3
    5f1c:	81 91       	ld	r24, Z+
    5f1e:	7f 01       	movw	r14, r30
    5f20:	81 11       	cpse	r24, r1
    5f22:	b3 cf       	rjmp	.-154    	; 0x5e8a <vfprintf+0x82>
    5f24:	98 2f       	mov	r25, r24
    5f26:	9f 7d       	andi	r25, 0xDF	; 223
    5f28:	95 54       	subi	r25, 0x45	; 69
    5f2a:	93 30       	cpi	r25, 0x03	; 3
    5f2c:	28 f4       	brcc	.+10     	; 0x5f38 <vfprintf+0x130>
    5f2e:	0c 5f       	subi	r16, 0xFC	; 252
    5f30:	1f 4f       	sbci	r17, 0xFF	; 255
    5f32:	9f e3       	ldi	r25, 0x3F	; 63
    5f34:	99 83       	std	Y+1, r25	; 0x01
    5f36:	0d c0       	rjmp	.+26     	; 0x5f52 <vfprintf+0x14a>
    5f38:	83 36       	cpi	r24, 0x63	; 99
    5f3a:	31 f0       	breq	.+12     	; 0x5f48 <vfprintf+0x140>
    5f3c:	83 37       	cpi	r24, 0x73	; 115
    5f3e:	71 f0       	breq	.+28     	; 0x5f5c <vfprintf+0x154>
    5f40:	83 35       	cpi	r24, 0x53	; 83
    5f42:	09 f0       	breq	.+2      	; 0x5f46 <vfprintf+0x13e>
    5f44:	55 c0       	rjmp	.+170    	; 0x5ff0 <vfprintf+0x1e8>
    5f46:	20 c0       	rjmp	.+64     	; 0x5f88 <vfprintf+0x180>
    5f48:	f8 01       	movw	r30, r16
    5f4a:	80 81       	ld	r24, Z
    5f4c:	89 83       	std	Y+1, r24	; 0x01
    5f4e:	0e 5f       	subi	r16, 0xFE	; 254
    5f50:	1f 4f       	sbci	r17, 0xFF	; 255
    5f52:	88 24       	eor	r8, r8
    5f54:	83 94       	inc	r8
    5f56:	91 2c       	mov	r9, r1
    5f58:	53 01       	movw	r10, r6
    5f5a:	12 c0       	rjmp	.+36     	; 0x5f80 <vfprintf+0x178>
    5f5c:	28 01       	movw	r4, r16
    5f5e:	f2 e0       	ldi	r31, 0x02	; 2
    5f60:	4f 0e       	add	r4, r31
    5f62:	51 1c       	adc	r5, r1
    5f64:	f8 01       	movw	r30, r16
    5f66:	a0 80       	ld	r10, Z
    5f68:	b1 80       	ldd	r11, Z+1	; 0x01
    5f6a:	36 fe       	sbrs	r3, 6
    5f6c:	03 c0       	rjmp	.+6      	; 0x5f74 <vfprintf+0x16c>
    5f6e:	69 2d       	mov	r22, r9
    5f70:	70 e0       	ldi	r23, 0x00	; 0
    5f72:	02 c0       	rjmp	.+4      	; 0x5f78 <vfprintf+0x170>
    5f74:	6f ef       	ldi	r22, 0xFF	; 255
    5f76:	7f ef       	ldi	r23, 0xFF	; 255
    5f78:	c5 01       	movw	r24, r10
    5f7a:	4e d1       	rcall	.+668    	; 0x6218 <strnlen>
    5f7c:	4c 01       	movw	r8, r24
    5f7e:	82 01       	movw	r16, r4
    5f80:	f3 2d       	mov	r31, r3
    5f82:	ff 77       	andi	r31, 0x7F	; 127
    5f84:	3f 2e       	mov	r3, r31
    5f86:	15 c0       	rjmp	.+42     	; 0x5fb2 <vfprintf+0x1aa>
    5f88:	28 01       	movw	r4, r16
    5f8a:	22 e0       	ldi	r18, 0x02	; 2
    5f8c:	42 0e       	add	r4, r18
    5f8e:	51 1c       	adc	r5, r1
    5f90:	f8 01       	movw	r30, r16
    5f92:	a0 80       	ld	r10, Z
    5f94:	b1 80       	ldd	r11, Z+1	; 0x01
    5f96:	36 fe       	sbrs	r3, 6
    5f98:	03 c0       	rjmp	.+6      	; 0x5fa0 <vfprintf+0x198>
    5f9a:	69 2d       	mov	r22, r9
    5f9c:	70 e0       	ldi	r23, 0x00	; 0
    5f9e:	02 c0       	rjmp	.+4      	; 0x5fa4 <vfprintf+0x19c>
    5fa0:	6f ef       	ldi	r22, 0xFF	; 255
    5fa2:	7f ef       	ldi	r23, 0xFF	; 255
    5fa4:	c5 01       	movw	r24, r10
    5fa6:	2d d1       	rcall	.+602    	; 0x6202 <strnlen_P>
    5fa8:	4c 01       	movw	r8, r24
    5faa:	f3 2d       	mov	r31, r3
    5fac:	f0 68       	ori	r31, 0x80	; 128
    5fae:	3f 2e       	mov	r3, r31
    5fb0:	82 01       	movw	r16, r4
    5fb2:	33 fc       	sbrc	r3, 3
    5fb4:	19 c0       	rjmp	.+50     	; 0x5fe8 <vfprintf+0x1e0>
    5fb6:	82 2d       	mov	r24, r2
    5fb8:	90 e0       	ldi	r25, 0x00	; 0
    5fba:	88 16       	cp	r8, r24
    5fbc:	99 06       	cpc	r9, r25
    5fbe:	a0 f4       	brcc	.+40     	; 0x5fe8 <vfprintf+0x1e0>
    5fc0:	b6 01       	movw	r22, r12
    5fc2:	80 e2       	ldi	r24, 0x20	; 32
    5fc4:	90 e0       	ldi	r25, 0x00	; 0
    5fc6:	33 d1       	rcall	.+614    	; 0x622e <fputc>
    5fc8:	2a 94       	dec	r2
    5fca:	f5 cf       	rjmp	.-22     	; 0x5fb6 <vfprintf+0x1ae>
    5fcc:	f5 01       	movw	r30, r10
    5fce:	37 fc       	sbrc	r3, 7
    5fd0:	85 91       	lpm	r24, Z+
    5fd2:	37 fe       	sbrs	r3, 7
    5fd4:	81 91       	ld	r24, Z+
    5fd6:	5f 01       	movw	r10, r30
    5fd8:	b6 01       	movw	r22, r12
    5fda:	90 e0       	ldi	r25, 0x00	; 0
    5fdc:	28 d1       	rcall	.+592    	; 0x622e <fputc>
    5fde:	21 10       	cpse	r2, r1
    5fe0:	2a 94       	dec	r2
    5fe2:	21 e0       	ldi	r18, 0x01	; 1
    5fe4:	82 1a       	sub	r8, r18
    5fe6:	91 08       	sbc	r9, r1
    5fe8:	81 14       	cp	r8, r1
    5fea:	91 04       	cpc	r9, r1
    5fec:	79 f7       	brne	.-34     	; 0x5fcc <vfprintf+0x1c4>
    5fee:	e1 c0       	rjmp	.+450    	; 0x61b2 <vfprintf+0x3aa>
    5ff0:	84 36       	cpi	r24, 0x64	; 100
    5ff2:	11 f0       	breq	.+4      	; 0x5ff8 <vfprintf+0x1f0>
    5ff4:	89 36       	cpi	r24, 0x69	; 105
    5ff6:	39 f5       	brne	.+78     	; 0x6046 <vfprintf+0x23e>
    5ff8:	f8 01       	movw	r30, r16
    5ffa:	37 fe       	sbrs	r3, 7
    5ffc:	07 c0       	rjmp	.+14     	; 0x600c <vfprintf+0x204>
    5ffe:	60 81       	ld	r22, Z
    6000:	71 81       	ldd	r23, Z+1	; 0x01
    6002:	82 81       	ldd	r24, Z+2	; 0x02
    6004:	93 81       	ldd	r25, Z+3	; 0x03
    6006:	0c 5f       	subi	r16, 0xFC	; 252
    6008:	1f 4f       	sbci	r17, 0xFF	; 255
    600a:	08 c0       	rjmp	.+16     	; 0x601c <vfprintf+0x214>
    600c:	60 81       	ld	r22, Z
    600e:	71 81       	ldd	r23, Z+1	; 0x01
    6010:	07 2e       	mov	r0, r23
    6012:	00 0c       	add	r0, r0
    6014:	88 0b       	sbc	r24, r24
    6016:	99 0b       	sbc	r25, r25
    6018:	0e 5f       	subi	r16, 0xFE	; 254
    601a:	1f 4f       	sbci	r17, 0xFF	; 255
    601c:	f3 2d       	mov	r31, r3
    601e:	ff 76       	andi	r31, 0x6F	; 111
    6020:	3f 2e       	mov	r3, r31
    6022:	97 ff       	sbrs	r25, 7
    6024:	09 c0       	rjmp	.+18     	; 0x6038 <vfprintf+0x230>
    6026:	90 95       	com	r25
    6028:	80 95       	com	r24
    602a:	70 95       	com	r23
    602c:	61 95       	neg	r22
    602e:	7f 4f       	sbci	r23, 0xFF	; 255
    6030:	8f 4f       	sbci	r24, 0xFF	; 255
    6032:	9f 4f       	sbci	r25, 0xFF	; 255
    6034:	f0 68       	ori	r31, 0x80	; 128
    6036:	3f 2e       	mov	r3, r31
    6038:	2a e0       	ldi	r18, 0x0A	; 10
    603a:	30 e0       	ldi	r19, 0x00	; 0
    603c:	a3 01       	movw	r20, r6
    603e:	33 d1       	rcall	.+614    	; 0x62a6 <__ultoa_invert>
    6040:	88 2e       	mov	r8, r24
    6042:	86 18       	sub	r8, r6
    6044:	44 c0       	rjmp	.+136    	; 0x60ce <vfprintf+0x2c6>
    6046:	85 37       	cpi	r24, 0x75	; 117
    6048:	31 f4       	brne	.+12     	; 0x6056 <vfprintf+0x24e>
    604a:	23 2d       	mov	r18, r3
    604c:	2f 7e       	andi	r18, 0xEF	; 239
    604e:	b2 2e       	mov	r11, r18
    6050:	2a e0       	ldi	r18, 0x0A	; 10
    6052:	30 e0       	ldi	r19, 0x00	; 0
    6054:	25 c0       	rjmp	.+74     	; 0x60a0 <vfprintf+0x298>
    6056:	93 2d       	mov	r25, r3
    6058:	99 7f       	andi	r25, 0xF9	; 249
    605a:	b9 2e       	mov	r11, r25
    605c:	8f 36       	cpi	r24, 0x6F	; 111
    605e:	c1 f0       	breq	.+48     	; 0x6090 <vfprintf+0x288>
    6060:	18 f4       	brcc	.+6      	; 0x6068 <vfprintf+0x260>
    6062:	88 35       	cpi	r24, 0x58	; 88
    6064:	79 f0       	breq	.+30     	; 0x6084 <vfprintf+0x27c>
    6066:	ae c0       	rjmp	.+348    	; 0x61c4 <vfprintf+0x3bc>
    6068:	80 37       	cpi	r24, 0x70	; 112
    606a:	19 f0       	breq	.+6      	; 0x6072 <vfprintf+0x26a>
    606c:	88 37       	cpi	r24, 0x78	; 120
    606e:	21 f0       	breq	.+8      	; 0x6078 <vfprintf+0x270>
    6070:	a9 c0       	rjmp	.+338    	; 0x61c4 <vfprintf+0x3bc>
    6072:	e9 2f       	mov	r30, r25
    6074:	e0 61       	ori	r30, 0x10	; 16
    6076:	be 2e       	mov	r11, r30
    6078:	b4 fe       	sbrs	r11, 4
    607a:	0d c0       	rjmp	.+26     	; 0x6096 <vfprintf+0x28e>
    607c:	fb 2d       	mov	r31, r11
    607e:	f4 60       	ori	r31, 0x04	; 4
    6080:	bf 2e       	mov	r11, r31
    6082:	09 c0       	rjmp	.+18     	; 0x6096 <vfprintf+0x28e>
    6084:	34 fe       	sbrs	r3, 4
    6086:	0a c0       	rjmp	.+20     	; 0x609c <vfprintf+0x294>
    6088:	29 2f       	mov	r18, r25
    608a:	26 60       	ori	r18, 0x06	; 6
    608c:	b2 2e       	mov	r11, r18
    608e:	06 c0       	rjmp	.+12     	; 0x609c <vfprintf+0x294>
    6090:	28 e0       	ldi	r18, 0x08	; 8
    6092:	30 e0       	ldi	r19, 0x00	; 0
    6094:	05 c0       	rjmp	.+10     	; 0x60a0 <vfprintf+0x298>
    6096:	20 e1       	ldi	r18, 0x10	; 16
    6098:	30 e0       	ldi	r19, 0x00	; 0
    609a:	02 c0       	rjmp	.+4      	; 0x60a0 <vfprintf+0x298>
    609c:	20 e1       	ldi	r18, 0x10	; 16
    609e:	32 e0       	ldi	r19, 0x02	; 2
    60a0:	f8 01       	movw	r30, r16
    60a2:	b7 fe       	sbrs	r11, 7
    60a4:	07 c0       	rjmp	.+14     	; 0x60b4 <vfprintf+0x2ac>
    60a6:	60 81       	ld	r22, Z
    60a8:	71 81       	ldd	r23, Z+1	; 0x01
    60aa:	82 81       	ldd	r24, Z+2	; 0x02
    60ac:	93 81       	ldd	r25, Z+3	; 0x03
    60ae:	0c 5f       	subi	r16, 0xFC	; 252
    60b0:	1f 4f       	sbci	r17, 0xFF	; 255
    60b2:	06 c0       	rjmp	.+12     	; 0x60c0 <vfprintf+0x2b8>
    60b4:	60 81       	ld	r22, Z
    60b6:	71 81       	ldd	r23, Z+1	; 0x01
    60b8:	80 e0       	ldi	r24, 0x00	; 0
    60ba:	90 e0       	ldi	r25, 0x00	; 0
    60bc:	0e 5f       	subi	r16, 0xFE	; 254
    60be:	1f 4f       	sbci	r17, 0xFF	; 255
    60c0:	a3 01       	movw	r20, r6
    60c2:	f1 d0       	rcall	.+482    	; 0x62a6 <__ultoa_invert>
    60c4:	88 2e       	mov	r8, r24
    60c6:	86 18       	sub	r8, r6
    60c8:	fb 2d       	mov	r31, r11
    60ca:	ff 77       	andi	r31, 0x7F	; 127
    60cc:	3f 2e       	mov	r3, r31
    60ce:	36 fe       	sbrs	r3, 6
    60d0:	0d c0       	rjmp	.+26     	; 0x60ec <vfprintf+0x2e4>
    60d2:	23 2d       	mov	r18, r3
    60d4:	2e 7f       	andi	r18, 0xFE	; 254
    60d6:	a2 2e       	mov	r10, r18
    60d8:	89 14       	cp	r8, r9
    60da:	58 f4       	brcc	.+22     	; 0x60f2 <vfprintf+0x2ea>
    60dc:	34 fe       	sbrs	r3, 4
    60de:	0b c0       	rjmp	.+22     	; 0x60f6 <vfprintf+0x2ee>
    60e0:	32 fc       	sbrc	r3, 2
    60e2:	09 c0       	rjmp	.+18     	; 0x60f6 <vfprintf+0x2ee>
    60e4:	83 2d       	mov	r24, r3
    60e6:	8e 7e       	andi	r24, 0xEE	; 238
    60e8:	a8 2e       	mov	r10, r24
    60ea:	05 c0       	rjmp	.+10     	; 0x60f6 <vfprintf+0x2ee>
    60ec:	b8 2c       	mov	r11, r8
    60ee:	a3 2c       	mov	r10, r3
    60f0:	03 c0       	rjmp	.+6      	; 0x60f8 <vfprintf+0x2f0>
    60f2:	b8 2c       	mov	r11, r8
    60f4:	01 c0       	rjmp	.+2      	; 0x60f8 <vfprintf+0x2f0>
    60f6:	b9 2c       	mov	r11, r9
    60f8:	a4 fe       	sbrs	r10, 4
    60fa:	0f c0       	rjmp	.+30     	; 0x611a <vfprintf+0x312>
    60fc:	fe 01       	movw	r30, r28
    60fe:	e8 0d       	add	r30, r8
    6100:	f1 1d       	adc	r31, r1
    6102:	80 81       	ld	r24, Z
    6104:	80 33       	cpi	r24, 0x30	; 48
    6106:	21 f4       	brne	.+8      	; 0x6110 <vfprintf+0x308>
    6108:	9a 2d       	mov	r25, r10
    610a:	99 7e       	andi	r25, 0xE9	; 233
    610c:	a9 2e       	mov	r10, r25
    610e:	09 c0       	rjmp	.+18     	; 0x6122 <vfprintf+0x31a>
    6110:	a2 fe       	sbrs	r10, 2
    6112:	06 c0       	rjmp	.+12     	; 0x6120 <vfprintf+0x318>
    6114:	b3 94       	inc	r11
    6116:	b3 94       	inc	r11
    6118:	04 c0       	rjmp	.+8      	; 0x6122 <vfprintf+0x31a>
    611a:	8a 2d       	mov	r24, r10
    611c:	86 78       	andi	r24, 0x86	; 134
    611e:	09 f0       	breq	.+2      	; 0x6122 <vfprintf+0x31a>
    6120:	b3 94       	inc	r11
    6122:	a3 fc       	sbrc	r10, 3
    6124:	10 c0       	rjmp	.+32     	; 0x6146 <vfprintf+0x33e>
    6126:	a0 fe       	sbrs	r10, 0
    6128:	06 c0       	rjmp	.+12     	; 0x6136 <vfprintf+0x32e>
    612a:	b2 14       	cp	r11, r2
    612c:	80 f4       	brcc	.+32     	; 0x614e <vfprintf+0x346>
    612e:	28 0c       	add	r2, r8
    6130:	92 2c       	mov	r9, r2
    6132:	9b 18       	sub	r9, r11
    6134:	0d c0       	rjmp	.+26     	; 0x6150 <vfprintf+0x348>
    6136:	b2 14       	cp	r11, r2
    6138:	58 f4       	brcc	.+22     	; 0x6150 <vfprintf+0x348>
    613a:	b6 01       	movw	r22, r12
    613c:	80 e2       	ldi	r24, 0x20	; 32
    613e:	90 e0       	ldi	r25, 0x00	; 0
    6140:	76 d0       	rcall	.+236    	; 0x622e <fputc>
    6142:	b3 94       	inc	r11
    6144:	f8 cf       	rjmp	.-16     	; 0x6136 <vfprintf+0x32e>
    6146:	b2 14       	cp	r11, r2
    6148:	18 f4       	brcc	.+6      	; 0x6150 <vfprintf+0x348>
    614a:	2b 18       	sub	r2, r11
    614c:	02 c0       	rjmp	.+4      	; 0x6152 <vfprintf+0x34a>
    614e:	98 2c       	mov	r9, r8
    6150:	21 2c       	mov	r2, r1
    6152:	a4 fe       	sbrs	r10, 4
    6154:	0f c0       	rjmp	.+30     	; 0x6174 <vfprintf+0x36c>
    6156:	b6 01       	movw	r22, r12
    6158:	80 e3       	ldi	r24, 0x30	; 48
    615a:	90 e0       	ldi	r25, 0x00	; 0
    615c:	68 d0       	rcall	.+208    	; 0x622e <fputc>
    615e:	a2 fe       	sbrs	r10, 2
    6160:	16 c0       	rjmp	.+44     	; 0x618e <vfprintf+0x386>
    6162:	a1 fc       	sbrc	r10, 1
    6164:	03 c0       	rjmp	.+6      	; 0x616c <vfprintf+0x364>
    6166:	88 e7       	ldi	r24, 0x78	; 120
    6168:	90 e0       	ldi	r25, 0x00	; 0
    616a:	02 c0       	rjmp	.+4      	; 0x6170 <vfprintf+0x368>
    616c:	88 e5       	ldi	r24, 0x58	; 88
    616e:	90 e0       	ldi	r25, 0x00	; 0
    6170:	b6 01       	movw	r22, r12
    6172:	0c c0       	rjmp	.+24     	; 0x618c <vfprintf+0x384>
    6174:	8a 2d       	mov	r24, r10
    6176:	86 78       	andi	r24, 0x86	; 134
    6178:	51 f0       	breq	.+20     	; 0x618e <vfprintf+0x386>
    617a:	a1 fe       	sbrs	r10, 1
    617c:	02 c0       	rjmp	.+4      	; 0x6182 <vfprintf+0x37a>
    617e:	8b e2       	ldi	r24, 0x2B	; 43
    6180:	01 c0       	rjmp	.+2      	; 0x6184 <vfprintf+0x37c>
    6182:	80 e2       	ldi	r24, 0x20	; 32
    6184:	a7 fc       	sbrc	r10, 7
    6186:	8d e2       	ldi	r24, 0x2D	; 45
    6188:	b6 01       	movw	r22, r12
    618a:	90 e0       	ldi	r25, 0x00	; 0
    618c:	50 d0       	rcall	.+160    	; 0x622e <fputc>
    618e:	89 14       	cp	r8, r9
    6190:	30 f4       	brcc	.+12     	; 0x619e <vfprintf+0x396>
    6192:	b6 01       	movw	r22, r12
    6194:	80 e3       	ldi	r24, 0x30	; 48
    6196:	90 e0       	ldi	r25, 0x00	; 0
    6198:	4a d0       	rcall	.+148    	; 0x622e <fputc>
    619a:	9a 94       	dec	r9
    619c:	f8 cf       	rjmp	.-16     	; 0x618e <vfprintf+0x386>
    619e:	8a 94       	dec	r8
    61a0:	f3 01       	movw	r30, r6
    61a2:	e8 0d       	add	r30, r8
    61a4:	f1 1d       	adc	r31, r1
    61a6:	80 81       	ld	r24, Z
    61a8:	b6 01       	movw	r22, r12
    61aa:	90 e0       	ldi	r25, 0x00	; 0
    61ac:	40 d0       	rcall	.+128    	; 0x622e <fputc>
    61ae:	81 10       	cpse	r8, r1
    61b0:	f6 cf       	rjmp	.-20     	; 0x619e <vfprintf+0x396>
    61b2:	22 20       	and	r2, r2
    61b4:	09 f4       	brne	.+2      	; 0x61b8 <vfprintf+0x3b0>
    61b6:	4e ce       	rjmp	.-868    	; 0x5e54 <vfprintf+0x4c>
    61b8:	b6 01       	movw	r22, r12
    61ba:	80 e2       	ldi	r24, 0x20	; 32
    61bc:	90 e0       	ldi	r25, 0x00	; 0
    61be:	37 d0       	rcall	.+110    	; 0x622e <fputc>
    61c0:	2a 94       	dec	r2
    61c2:	f7 cf       	rjmp	.-18     	; 0x61b2 <vfprintf+0x3aa>
    61c4:	f6 01       	movw	r30, r12
    61c6:	86 81       	ldd	r24, Z+6	; 0x06
    61c8:	97 81       	ldd	r25, Z+7	; 0x07
    61ca:	02 c0       	rjmp	.+4      	; 0x61d0 <vfprintf+0x3c8>
    61cc:	8f ef       	ldi	r24, 0xFF	; 255
    61ce:	9f ef       	ldi	r25, 0xFF	; 255
    61d0:	2b 96       	adiw	r28, 0x0b	; 11
    61d2:	0f b6       	in	r0, 0x3f	; 63
    61d4:	f8 94       	cli
    61d6:	de bf       	out	0x3e, r29	; 62
    61d8:	0f be       	out	0x3f, r0	; 63
    61da:	cd bf       	out	0x3d, r28	; 61
    61dc:	df 91       	pop	r29
    61de:	cf 91       	pop	r28
    61e0:	1f 91       	pop	r17
    61e2:	0f 91       	pop	r16
    61e4:	ff 90       	pop	r15
    61e6:	ef 90       	pop	r14
    61e8:	df 90       	pop	r13
    61ea:	cf 90       	pop	r12
    61ec:	bf 90       	pop	r11
    61ee:	af 90       	pop	r10
    61f0:	9f 90       	pop	r9
    61f2:	8f 90       	pop	r8
    61f4:	7f 90       	pop	r7
    61f6:	6f 90       	pop	r6
    61f8:	5f 90       	pop	r5
    61fa:	4f 90       	pop	r4
    61fc:	3f 90       	pop	r3
    61fe:	2f 90       	pop	r2
    6200:	08 95       	ret

00006202 <strnlen_P>:
    6202:	fc 01       	movw	r30, r24
    6204:	05 90       	lpm	r0, Z+
    6206:	61 50       	subi	r22, 0x01	; 1
    6208:	70 40       	sbci	r23, 0x00	; 0
    620a:	01 10       	cpse	r0, r1
    620c:	d8 f7       	brcc	.-10     	; 0x6204 <strnlen_P+0x2>
    620e:	80 95       	com	r24
    6210:	90 95       	com	r25
    6212:	8e 0f       	add	r24, r30
    6214:	9f 1f       	adc	r25, r31
    6216:	08 95       	ret

00006218 <strnlen>:
    6218:	fc 01       	movw	r30, r24
    621a:	61 50       	subi	r22, 0x01	; 1
    621c:	70 40       	sbci	r23, 0x00	; 0
    621e:	01 90       	ld	r0, Z+
    6220:	01 10       	cpse	r0, r1
    6222:	d8 f7       	brcc	.-10     	; 0x621a <strnlen+0x2>
    6224:	80 95       	com	r24
    6226:	90 95       	com	r25
    6228:	8e 0f       	add	r24, r30
    622a:	9f 1f       	adc	r25, r31
    622c:	08 95       	ret

0000622e <fputc>:
    622e:	0f 93       	push	r16
    6230:	1f 93       	push	r17
    6232:	cf 93       	push	r28
    6234:	df 93       	push	r29
    6236:	fb 01       	movw	r30, r22
    6238:	23 81       	ldd	r18, Z+3	; 0x03
    623a:	21 fd       	sbrc	r18, 1
    623c:	03 c0       	rjmp	.+6      	; 0x6244 <fputc+0x16>
    623e:	8f ef       	ldi	r24, 0xFF	; 255
    6240:	9f ef       	ldi	r25, 0xFF	; 255
    6242:	2c c0       	rjmp	.+88     	; 0x629c <fputc+0x6e>
    6244:	22 ff       	sbrs	r18, 2
    6246:	16 c0       	rjmp	.+44     	; 0x6274 <fputc+0x46>
    6248:	46 81       	ldd	r20, Z+6	; 0x06
    624a:	57 81       	ldd	r21, Z+7	; 0x07
    624c:	24 81       	ldd	r18, Z+4	; 0x04
    624e:	35 81       	ldd	r19, Z+5	; 0x05
    6250:	42 17       	cp	r20, r18
    6252:	53 07       	cpc	r21, r19
    6254:	44 f4       	brge	.+16     	; 0x6266 <fputc+0x38>
    6256:	a0 81       	ld	r26, Z
    6258:	b1 81       	ldd	r27, Z+1	; 0x01
    625a:	9d 01       	movw	r18, r26
    625c:	2f 5f       	subi	r18, 0xFF	; 255
    625e:	3f 4f       	sbci	r19, 0xFF	; 255
    6260:	31 83       	std	Z+1, r19	; 0x01
    6262:	20 83       	st	Z, r18
    6264:	8c 93       	st	X, r24
    6266:	26 81       	ldd	r18, Z+6	; 0x06
    6268:	37 81       	ldd	r19, Z+7	; 0x07
    626a:	2f 5f       	subi	r18, 0xFF	; 255
    626c:	3f 4f       	sbci	r19, 0xFF	; 255
    626e:	37 83       	std	Z+7, r19	; 0x07
    6270:	26 83       	std	Z+6, r18	; 0x06
    6272:	14 c0       	rjmp	.+40     	; 0x629c <fputc+0x6e>
    6274:	8b 01       	movw	r16, r22
    6276:	ec 01       	movw	r28, r24
    6278:	fb 01       	movw	r30, r22
    627a:	00 84       	ldd	r0, Z+8	; 0x08
    627c:	f1 85       	ldd	r31, Z+9	; 0x09
    627e:	e0 2d       	mov	r30, r0
    6280:	19 95       	eicall
    6282:	89 2b       	or	r24, r25
    6284:	e1 f6       	brne	.-72     	; 0x623e <fputc+0x10>
    6286:	d8 01       	movw	r26, r16
    6288:	16 96       	adiw	r26, 0x06	; 6
    628a:	8d 91       	ld	r24, X+
    628c:	9c 91       	ld	r25, X
    628e:	17 97       	sbiw	r26, 0x07	; 7
    6290:	01 96       	adiw	r24, 0x01	; 1
    6292:	17 96       	adiw	r26, 0x07	; 7
    6294:	9c 93       	st	X, r25
    6296:	8e 93       	st	-X, r24
    6298:	16 97       	sbiw	r26, 0x06	; 6
    629a:	ce 01       	movw	r24, r28
    629c:	df 91       	pop	r29
    629e:	cf 91       	pop	r28
    62a0:	1f 91       	pop	r17
    62a2:	0f 91       	pop	r16
    62a4:	08 95       	ret

000062a6 <__ultoa_invert>:
    62a6:	fa 01       	movw	r30, r20
    62a8:	aa 27       	eor	r26, r26
    62aa:	28 30       	cpi	r18, 0x08	; 8
    62ac:	51 f1       	breq	.+84     	; 0x6302 <__ultoa_invert+0x5c>
    62ae:	20 31       	cpi	r18, 0x10	; 16
    62b0:	81 f1       	breq	.+96     	; 0x6312 <__ultoa_invert+0x6c>
    62b2:	e8 94       	clt
    62b4:	6f 93       	push	r22
    62b6:	6e 7f       	andi	r22, 0xFE	; 254
    62b8:	6e 5f       	subi	r22, 0xFE	; 254
    62ba:	7f 4f       	sbci	r23, 0xFF	; 255
    62bc:	8f 4f       	sbci	r24, 0xFF	; 255
    62be:	9f 4f       	sbci	r25, 0xFF	; 255
    62c0:	af 4f       	sbci	r26, 0xFF	; 255
    62c2:	b1 e0       	ldi	r27, 0x01	; 1
    62c4:	3e d0       	rcall	.+124    	; 0x6342 <__ultoa_invert+0x9c>
    62c6:	b4 e0       	ldi	r27, 0x04	; 4
    62c8:	3c d0       	rcall	.+120    	; 0x6342 <__ultoa_invert+0x9c>
    62ca:	67 0f       	add	r22, r23
    62cc:	78 1f       	adc	r23, r24
    62ce:	89 1f       	adc	r24, r25
    62d0:	9a 1f       	adc	r25, r26
    62d2:	a1 1d       	adc	r26, r1
    62d4:	68 0f       	add	r22, r24
    62d6:	79 1f       	adc	r23, r25
    62d8:	8a 1f       	adc	r24, r26
    62da:	91 1d       	adc	r25, r1
    62dc:	a1 1d       	adc	r26, r1
    62de:	6a 0f       	add	r22, r26
    62e0:	71 1d       	adc	r23, r1
    62e2:	81 1d       	adc	r24, r1
    62e4:	91 1d       	adc	r25, r1
    62e6:	a1 1d       	adc	r26, r1
    62e8:	20 d0       	rcall	.+64     	; 0x632a <__ultoa_invert+0x84>
    62ea:	09 f4       	brne	.+2      	; 0x62ee <__ultoa_invert+0x48>
    62ec:	68 94       	set
    62ee:	3f 91       	pop	r19
    62f0:	2a e0       	ldi	r18, 0x0A	; 10
    62f2:	26 9f       	mul	r18, r22
    62f4:	11 24       	eor	r1, r1
    62f6:	30 19       	sub	r19, r0
    62f8:	30 5d       	subi	r19, 0xD0	; 208
    62fa:	31 93       	st	Z+, r19
    62fc:	de f6       	brtc	.-74     	; 0x62b4 <__ultoa_invert+0xe>
    62fe:	cf 01       	movw	r24, r30
    6300:	08 95       	ret
    6302:	46 2f       	mov	r20, r22
    6304:	47 70       	andi	r20, 0x07	; 7
    6306:	40 5d       	subi	r20, 0xD0	; 208
    6308:	41 93       	st	Z+, r20
    630a:	b3 e0       	ldi	r27, 0x03	; 3
    630c:	0f d0       	rcall	.+30     	; 0x632c <__ultoa_invert+0x86>
    630e:	c9 f7       	brne	.-14     	; 0x6302 <__ultoa_invert+0x5c>
    6310:	f6 cf       	rjmp	.-20     	; 0x62fe <__ultoa_invert+0x58>
    6312:	46 2f       	mov	r20, r22
    6314:	4f 70       	andi	r20, 0x0F	; 15
    6316:	40 5d       	subi	r20, 0xD0	; 208
    6318:	4a 33       	cpi	r20, 0x3A	; 58
    631a:	18 f0       	brcs	.+6      	; 0x6322 <__ultoa_invert+0x7c>
    631c:	49 5d       	subi	r20, 0xD9	; 217
    631e:	31 fd       	sbrc	r19, 1
    6320:	40 52       	subi	r20, 0x20	; 32
    6322:	41 93       	st	Z+, r20
    6324:	02 d0       	rcall	.+4      	; 0x632a <__ultoa_invert+0x84>
    6326:	a9 f7       	brne	.-22     	; 0x6312 <__ultoa_invert+0x6c>
    6328:	ea cf       	rjmp	.-44     	; 0x62fe <__ultoa_invert+0x58>
    632a:	b4 e0       	ldi	r27, 0x04	; 4
    632c:	a6 95       	lsr	r26
    632e:	97 95       	ror	r25
    6330:	87 95       	ror	r24
    6332:	77 95       	ror	r23
    6334:	67 95       	ror	r22
    6336:	ba 95       	dec	r27
    6338:	c9 f7       	brne	.-14     	; 0x632c <__ultoa_invert+0x86>
    633a:	00 97       	sbiw	r24, 0x00	; 0
    633c:	61 05       	cpc	r22, r1
    633e:	71 05       	cpc	r23, r1
    6340:	08 95       	ret
    6342:	9b 01       	movw	r18, r22
    6344:	ac 01       	movw	r20, r24
    6346:	0a 2e       	mov	r0, r26
    6348:	06 94       	lsr	r0
    634a:	57 95       	ror	r21
    634c:	47 95       	ror	r20
    634e:	37 95       	ror	r19
    6350:	27 95       	ror	r18
    6352:	ba 95       	dec	r27
    6354:	c9 f7       	brne	.-14     	; 0x6348 <__ultoa_invert+0xa2>
    6356:	62 0f       	add	r22, r18
    6358:	73 1f       	adc	r23, r19
    635a:	84 1f       	adc	r24, r20
    635c:	95 1f       	adc	r25, r21
    635e:	a0 1d       	adc	r26, r0
    6360:	08 95       	ret

00006362 <_exit>:
    6362:	f8 94       	cli

00006364 <__stop_program>:
    6364:	ff cf       	rjmp	.-2      	; 0x6364 <__stop_program>
