
SEP4IOT.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000001a  00800200  00001376  0000140a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001376  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000053  0080021a  0080021a  00001424  2**0
                  ALLOC
  3 .comment      0000008c  00000000  00000000  00001424  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000014b0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000003d8  00000000  00000000  000014f0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00004ee9  00000000  00000000  000018c8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001906  00000000  00000000  000067b1  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000295b  00000000  00000000  000080b7  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000d78  00000000  00000000  0000aa14  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00001cc9  00000000  00000000  0000b78c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00004a71  00000000  00000000  0000d455  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000003d8  00000000  00000000  00011ec6  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
       2:	00 00       	nop
       4:	8f c0       	rjmp	.+286    	; 0x124 <__bad_interrupt>
       6:	00 00       	nop
       8:	8d c0       	rjmp	.+282    	; 0x124 <__bad_interrupt>
       a:	00 00       	nop
       c:	8b c0       	rjmp	.+278    	; 0x124 <__bad_interrupt>
       e:	00 00       	nop
      10:	89 c0       	rjmp	.+274    	; 0x124 <__bad_interrupt>
      12:	00 00       	nop
      14:	87 c0       	rjmp	.+270    	; 0x124 <__bad_interrupt>
      16:	00 00       	nop
      18:	85 c0       	rjmp	.+266    	; 0x124 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	83 c0       	rjmp	.+262    	; 0x124 <__bad_interrupt>
      1e:	00 00       	nop
      20:	81 c0       	rjmp	.+258    	; 0x124 <__bad_interrupt>
      22:	00 00       	nop
      24:	7f c0       	rjmp	.+254    	; 0x124 <__bad_interrupt>
      26:	00 00       	nop
      28:	7d c0       	rjmp	.+250    	; 0x124 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	7b c0       	rjmp	.+246    	; 0x124 <__bad_interrupt>
      2e:	00 00       	nop
      30:	63 c1       	rjmp	.+710    	; 0x2f8 <__vector_12>
      32:	00 00       	nop
      34:	77 c0       	rjmp	.+238    	; 0x124 <__bad_interrupt>
      36:	00 00       	nop
      38:	75 c0       	rjmp	.+234    	; 0x124 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	73 c0       	rjmp	.+230    	; 0x124 <__bad_interrupt>
      3e:	00 00       	nop
      40:	71 c0       	rjmp	.+226    	; 0x124 <__bad_interrupt>
      42:	00 00       	nop
      44:	6f c0       	rjmp	.+222    	; 0x124 <__bad_interrupt>
      46:	00 00       	nop
      48:	6d c0       	rjmp	.+218    	; 0x124 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	6b c0       	rjmp	.+214    	; 0x124 <__bad_interrupt>
      4e:	00 00       	nop
      50:	69 c0       	rjmp	.+210    	; 0x124 <__bad_interrupt>
      52:	00 00       	nop
      54:	67 c0       	rjmp	.+206    	; 0x124 <__bad_interrupt>
      56:	00 00       	nop
      58:	65 c0       	rjmp	.+202    	; 0x124 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	63 c0       	rjmp	.+198    	; 0x124 <__bad_interrupt>
      5e:	00 00       	nop
      60:	61 c0       	rjmp	.+194    	; 0x124 <__bad_interrupt>
      62:	00 00       	nop
      64:	fc c2       	rjmp	.+1528   	; 0x65e <__vector_25>
      66:	00 00       	nop
      68:	4c c3       	rjmp	.+1688   	; 0x702 <__vector_26>
      6a:	00 00       	nop
      6c:	5b c0       	rjmp	.+182    	; 0x124 <__bad_interrupt>
      6e:	00 00       	nop
      70:	59 c0       	rjmp	.+178    	; 0x124 <__bad_interrupt>
      72:	00 00       	nop
      74:	57 c0       	rjmp	.+174    	; 0x124 <__bad_interrupt>
      76:	00 00       	nop
      78:	55 c0       	rjmp	.+170    	; 0x124 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	53 c0       	rjmp	.+166    	; 0x124 <__bad_interrupt>
      7e:	00 00       	nop
      80:	51 c0       	rjmp	.+162    	; 0x124 <__bad_interrupt>
      82:	00 00       	nop
      84:	4f c0       	rjmp	.+158    	; 0x124 <__bad_interrupt>
      86:	00 00       	nop
      88:	4d c0       	rjmp	.+154    	; 0x124 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	4b c0       	rjmp	.+150    	; 0x124 <__bad_interrupt>
      8e:	00 00       	nop
      90:	7c c3       	rjmp	.+1784   	; 0x78a <__vector_36>
      92:	00 00       	nop
      94:	cc c3       	rjmp	.+1944   	; 0x82e <__vector_37>
      96:	00 00       	nop
      98:	45 c0       	rjmp	.+138    	; 0x124 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	43 c0       	rjmp	.+134    	; 0x124 <__bad_interrupt>
      9e:	00 00       	nop
      a0:	41 c0       	rjmp	.+130    	; 0x124 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	3f c0       	rjmp	.+126    	; 0x124 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	3d c0       	rjmp	.+122    	; 0x124 <__bad_interrupt>
      aa:	00 00       	nop
      ac:	3b c0       	rjmp	.+118    	; 0x124 <__bad_interrupt>
      ae:	00 00       	nop
      b0:	39 c0       	rjmp	.+114    	; 0x124 <__bad_interrupt>
      b2:	00 00       	nop
      b4:	37 c0       	rjmp	.+110    	; 0x124 <__bad_interrupt>
      b6:	00 00       	nop
      b8:	35 c0       	rjmp	.+106    	; 0x124 <__bad_interrupt>
      ba:	00 00       	nop
      bc:	33 c0       	rjmp	.+102    	; 0x124 <__bad_interrupt>
      be:	00 00       	nop
      c0:	31 c0       	rjmp	.+98     	; 0x124 <__bad_interrupt>
      c2:	00 00       	nop
      c4:	2f c0       	rjmp	.+94     	; 0x124 <__bad_interrupt>
      c6:	00 00       	nop
      c8:	2d c0       	rjmp	.+90     	; 0x124 <__bad_interrupt>
      ca:	00 00       	nop
      cc:	f4 c3       	rjmp	.+2024   	; 0x8b6 <__vector_51>
      ce:	00 00       	nop
      d0:	44 c4       	rjmp	.+2184   	; 0x95a <__vector_52>
      d2:	00 00       	nop
      d4:	27 c0       	rjmp	.+78     	; 0x124 <__bad_interrupt>
      d6:	00 00       	nop
      d8:	84 c4       	rjmp	.+2312   	; 0x9e2 <__vector_54>
      da:	00 00       	nop
      dc:	d4 c4       	rjmp	.+2472   	; 0xa86 <__vector_55>
      de:	00 00       	nop
      e0:	21 c0       	rjmp	.+66     	; 0x124 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
      e4:	11 24       	eor	r1, r1
      e6:	1f be       	out	0x3f, r1	; 63
      e8:	cf ef       	ldi	r28, 0xFF	; 255
      ea:	d1 e2       	ldi	r29, 0x21	; 33
      ec:	de bf       	out	0x3e, r29	; 62
      ee:	cd bf       	out	0x3d, r28	; 61
      f0:	00 e0       	ldi	r16, 0x00	; 0
      f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
      f4:	12 e0       	ldi	r17, 0x02	; 2
      f6:	a0 e0       	ldi	r26, 0x00	; 0
      f8:	b2 e0       	ldi	r27, 0x02	; 2
      fa:	e6 e7       	ldi	r30, 0x76	; 118
      fc:	f3 e1       	ldi	r31, 0x13	; 19
      fe:	00 e0       	ldi	r16, 0x00	; 0
     100:	0b bf       	out	0x3b, r16	; 59
     102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
     104:	07 90       	elpm	r0, Z+
     106:	0d 92       	st	X+, r0
     108:	aa 31       	cpi	r26, 0x1A	; 26
     10a:	b1 07       	cpc	r27, r17
     10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
     10e:	22 e0       	ldi	r18, 0x02	; 2
     110:	aa e1       	ldi	r26, 0x1A	; 26
     112:	b2 e0       	ldi	r27, 0x02	; 2
     114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
     116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
     118:	ad 36       	cpi	r26, 0x6D	; 109
     11a:	b2 07       	cpc	r27, r18
     11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
     11e:	74 d2       	rcall	.+1256   	; 0x608 <main>
     120:	0c 94 b9 09 	jmp	0x1372	; 0x1372 <_exit>

00000124 <__bad_interrupt>:
     124:	6d cf       	rjmp	.-294    	; 0x0 <__vectors>

00000126 <co2Reader_create>:
void co2Reader_destroy(co2reader_t self) {
	if (self == NULL)
		return;
	free(self->smth);
	free(self);
}
     126:	61 e0       	ldi	r22, 0x01	; 1
     128:	70 e0       	ldi	r23, 0x00	; 0
     12a:	82 e0       	ldi	r24, 0x02	; 2
     12c:	90 e0       	ldi	r25, 0x00	; 0
     12e:	ef d4       	rcall	.+2526   	; 0xb0e <calloc>
     130:	00 97       	sbiw	r24, 0x00	; 0
     132:	19 f0       	breq	.+6      	; 0x13a <co2Reader_create+0x14>
     134:	fc 01       	movw	r30, r24
     136:	11 82       	std	Z+1, r1	; 0x01
     138:	10 82       	st	Z, r1
     13a:	08 95       	ret

0000013c <co2Reader_getCO2>:

uint16_t co2Reader_getCO2(co2reader_t self) { //dummy
     13c:	fc 01       	movw	r30, r24
	int no = self->smth;
     13e:	20 81       	ld	r18, Z
     140:	31 81       	ldd	r19, Z+1	; 0x01
	no++;
     142:	c9 01       	movw	r24, r18
     144:	01 96       	adiw	r24, 0x01	; 1
	self->smth = no;
     146:	91 83       	std	Z+1, r25	; 0x01
     148:	80 83       	st	Z, r24
	return self->smth;
     14a:	08 95       	ret

0000014c <device_create>:
	 free(self);
 }

 currentCondition_t device_getCurrentCondition(uint16_t co2Data, uint16_t temperatureData, uint16_t humidityData, uint16_t soundData) {
	 return currentCondition_create(deviceId, co2Data, temperatureData, humidityData, soundData);
 }
     14c:	cf 93       	push	r28
     14e:	df 93       	push	r29
     150:	61 e0       	ldi	r22, 0x01	; 1
     152:	70 e0       	ldi	r23, 0x00	; 0
     154:	82 e0       	ldi	r24, 0x02	; 2
     156:	90 e0       	ldi	r25, 0x00	; 0
     158:	da d4       	rcall	.+2484   	; 0xb0e <calloc>
     15a:	ec 01       	movw	r28, r24
     15c:	89 2b       	or	r24, r25
     15e:	19 f0       	breq	.+6      	; 0x166 <device_create+0x1a>
     160:	e2 df       	rcall	.-60     	; 0x126 <co2Reader_create>
     162:	99 83       	std	Y+1, r25	; 0x01
     164:	88 83       	st	Y, r24
     166:	ce 01       	movw	r24, r28
     168:	df 91       	pop	r29
     16a:	cf 91       	pop	r28
     16c:	08 95       	ret

0000016e <device_getCO2Data>:

 uint16_t device_getCO2Data(device_t self) {
	 if (self->co2reader != NULL)
     16e:	fc 01       	movw	r30, r24
     170:	80 81       	ld	r24, Z
     172:	91 81       	ldd	r25, Z+1	; 0x01
     174:	00 97       	sbiw	r24, 0x00	; 0
     176:	11 f0       	breq	.+4      	; 0x17c <device_getCO2Data+0xe>
	 return co2Reader_getCO2(self->co2reader);
     178:	e1 cf       	rjmp	.-62     	; 0x13c <co2Reader_getCO2>
     17a:	08 95       	ret
	 else return -1;
     17c:	8f ef       	ldi	r24, 0xFF	; 255
     17e:	9f ef       	ldi	r25, 0xFF	; 255
     180:	08 95       	ret

00000182 <task_switch_in>:
	void task_switch_in(uint8_t task_no) {
		 #ifdef HAL_DEFS_H_

		 #else
		 // Used on VIA MEGA Shield rev. 2.0.0
		 PORTK &= 0b11110000;
     182:	e8 e0       	ldi	r30, 0x08	; 8
     184:	f1 e0       	ldi	r31, 0x01	; 1
     186:	90 81       	ld	r25, Z
     188:	90 7f       	andi	r25, 0xF0	; 240
     18a:	90 83       	st	Z, r25
		 PORTK |= (task_no & 0b00001111);
     18c:	90 81       	ld	r25, Z
     18e:	8f 70       	andi	r24, 0x0F	; 15
     190:	98 2b       	or	r25, r24
     192:	90 83       	st	Z, r25
     194:	08 95       	ret

00000196 <task_switch_out>:
	void task_switch_out(uint8_t task_no) {
		#ifdef HAL_DEFS_H_

		#else
		// Used on VIA MEGA Shield rev. 2.0.0
		PORTK &= 0b11110000;
     196:	e8 e0       	ldi	r30, 0x08	; 8
     198:	f1 e0       	ldi	r31, 0x01	; 1
     19a:	80 81       	ld	r24, Z
     19c:	80 7f       	andi	r24, 0xF0	; 240
     19e:	80 83       	st	Z, r24
     1a0:	08 95       	ret

000001a2 <vListInsertEnd>:
    /* Remember which list the item is in.  This allows fast removal of the
    item later. */
    pxNewListItem->pxContainer = pxList;

    ( pxList->uxNumberOfItems )++;
}
     1a2:	cf 93       	push	r28
     1a4:	df 93       	push	r29
     1a6:	9c 01       	movw	r18, r24
     1a8:	fb 01       	movw	r30, r22
     1aa:	dc 01       	movw	r26, r24
     1ac:	11 96       	adiw	r26, 0x01	; 1
     1ae:	cd 91       	ld	r28, X+
     1b0:	dc 91       	ld	r29, X
     1b2:	12 97       	sbiw	r26, 0x02	; 2
     1b4:	d5 83       	std	Z+5, r29	; 0x05
     1b6:	c4 83       	std	Z+4, r28	; 0x04
     1b8:	8e 81       	ldd	r24, Y+6	; 0x06
     1ba:	9f 81       	ldd	r25, Y+7	; 0x07
     1bc:	97 83       	std	Z+7, r25	; 0x07
     1be:	86 83       	std	Z+6, r24	; 0x06
     1c0:	8e 81       	ldd	r24, Y+6	; 0x06
     1c2:	9f 81       	ldd	r25, Y+7	; 0x07
     1c4:	dc 01       	movw	r26, r24
     1c6:	15 96       	adiw	r26, 0x05	; 5
     1c8:	7c 93       	st	X, r23
     1ca:	6e 93       	st	-X, r22
     1cc:	14 97       	sbiw	r26, 0x04	; 4
     1ce:	7f 83       	std	Y+7, r23	; 0x07
     1d0:	6e 83       	std	Y+6, r22	; 0x06
     1d2:	33 87       	std	Z+11, r19	; 0x0b
     1d4:	22 87       	std	Z+10, r18	; 0x0a
     1d6:	f9 01       	movw	r30, r18
     1d8:	80 81       	ld	r24, Z
     1da:	8f 5f       	subi	r24, 0xFF	; 255
     1dc:	80 83       	st	Z, r24
     1de:	df 91       	pop	r29
     1e0:	cf 91       	pop	r28
     1e2:	08 95       	ret

000001e4 <uxListRemove>:
/*-----------------------------------------------------------*/

UBaseType_t uxListRemove( ListItem_t * const pxItemToRemove )
{
     1e4:	cf 93       	push	r28
     1e6:	df 93       	push	r29
     1e8:	fc 01       	movw	r30, r24
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;
     1ea:	a2 85       	ldd	r26, Z+10	; 0x0a
     1ec:	b3 85       	ldd	r27, Z+11	; 0x0b

    pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
     1ee:	c4 81       	ldd	r28, Z+4	; 0x04
     1f0:	d5 81       	ldd	r29, Z+5	; 0x05
     1f2:	86 81       	ldd	r24, Z+6	; 0x06
     1f4:	97 81       	ldd	r25, Z+7	; 0x07
     1f6:	9f 83       	std	Y+7, r25	; 0x07
     1f8:	8e 83       	std	Y+6, r24	; 0x06
    pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
     1fa:	c6 81       	ldd	r28, Z+6	; 0x06
     1fc:	d7 81       	ldd	r29, Z+7	; 0x07
     1fe:	84 81       	ldd	r24, Z+4	; 0x04
     200:	95 81       	ldd	r25, Z+5	; 0x05
     202:	9d 83       	std	Y+5, r25	; 0x05
     204:	8c 83       	std	Y+4, r24	; 0x04

    /* Only used during decision coverage testing. */
    mtCOVERAGE_TEST_DELAY();

    /* Make sure the index is left pointing to a valid item. */
    if( pxList->pxIndex == pxItemToRemove )
     206:	11 96       	adiw	r26, 0x01	; 1
     208:	8d 91       	ld	r24, X+
     20a:	9c 91       	ld	r25, X
     20c:	12 97       	sbiw	r26, 0x02	; 2
     20e:	e8 17       	cp	r30, r24
     210:	f9 07       	cpc	r31, r25
     212:	31 f4       	brne	.+12     	; 0x220 <uxListRemove+0x3c>
    {
        pxList->pxIndex = pxItemToRemove->pxPrevious;
     214:	86 81       	ldd	r24, Z+6	; 0x06
     216:	97 81       	ldd	r25, Z+7	; 0x07
     218:	12 96       	adiw	r26, 0x02	; 2
     21a:	9c 93       	st	X, r25
     21c:	8e 93       	st	-X, r24
     21e:	11 97       	sbiw	r26, 0x01	; 1
    else
    {
        mtCOVERAGE_TEST_MARKER();
    }

    pxItemToRemove->pxContainer = NULL;
     220:	13 86       	std	Z+11, r1	; 0x0b
     222:	12 86       	std	Z+10, r1	; 0x0a
    ( pxList->uxNumberOfItems )--;
     224:	8c 91       	ld	r24, X
     226:	81 50       	subi	r24, 0x01	; 1
     228:	8c 93       	st	X, r24

    return pxList->uxNumberOfItems;
     22a:	8c 91       	ld	r24, X
}
     22c:	df 91       	pop	r29
     22e:	cf 91       	pop	r28
     230:	08 95       	ret

00000232 <vPortYieldFromTick>:
 * call comes from the tick ISR.
 */
void vPortYieldFromTick( void ) __attribute__ ( ( hot, flatten, naked ) );
void vPortYieldFromTick( void )
{
    portSAVE_CONTEXT();
     232:	0f 92       	push	r0
     234:	0f b6       	in	r0, 0x3f	; 63
     236:	f8 94       	cli
     238:	0f 92       	push	r0
     23a:	0b b6       	in	r0, 0x3b	; 59
     23c:	0f 92       	push	r0
     23e:	0c b6       	in	r0, 0x3c	; 60
     240:	0f 92       	push	r0
     242:	1f 92       	push	r1
     244:	11 24       	eor	r1, r1
     246:	2f 92       	push	r2
     248:	3f 92       	push	r3
     24a:	4f 92       	push	r4
     24c:	5f 92       	push	r5
     24e:	6f 92       	push	r6
     250:	7f 92       	push	r7
     252:	8f 92       	push	r8
     254:	9f 92       	push	r9
     256:	af 92       	push	r10
     258:	bf 92       	push	r11
     25a:	cf 92       	push	r12
     25c:	df 92       	push	r13
     25e:	ef 92       	push	r14
     260:	ff 92       	push	r15
     262:	0f 93       	push	r16
     264:	1f 93       	push	r17
     266:	2f 93       	push	r18
     268:	3f 93       	push	r19
     26a:	4f 93       	push	r20
     26c:	5f 93       	push	r21
     26e:	6f 93       	push	r22
     270:	7f 93       	push	r23
     272:	8f 93       	push	r24
     274:	9f 93       	push	r25
     276:	af 93       	push	r26
     278:	bf 93       	push	r27
     27a:	cf 93       	push	r28
     27c:	df 93       	push	r29
     27e:	ef 93       	push	r30
     280:	ff 93       	push	r31
     282:	a0 91 57 02 	lds	r26, 0x0257	; 0x800257 <pxCurrentTCB>
     286:	b0 91 58 02 	lds	r27, 0x0258	; 0x800258 <pxCurrentTCB+0x1>
     28a:	0d b6       	in	r0, 0x3d	; 61
     28c:	0d 92       	st	X+, r0
     28e:	0e b6       	in	r0, 0x3e	; 62
     290:	0d 92       	st	X+, r0

    sleep_reset();        //     reset the sleep_mode() faster than sleep_disable();
     292:	13 be       	out	0x33, r1	; 51

    if( xTaskIncrementTick() != pdFALSE )
     294:	5d d0       	rcall	.+186    	; 0x350 <xTaskIncrementTick>
     296:	81 11       	cpse	r24, r1
    {
        vTaskSwitchContext();
     298:	2d d1       	rcall	.+602    	; 0x4f4 <vTaskSwitchContext>
     29a:	a0 91 57 02 	lds	r26, 0x0257	; 0x800257 <pxCurrentTCB>
    }

    portRESTORE_CONTEXT();
     29e:	b0 91 58 02 	lds	r27, 0x0258	; 0x800258 <pxCurrentTCB+0x1>
     2a2:	cd 91       	ld	r28, X+
     2a4:	cd bf       	out	0x3d, r28	; 61
     2a6:	dd 91       	ld	r29, X+
     2a8:	de bf       	out	0x3e, r29	; 62
     2aa:	ff 91       	pop	r31
     2ac:	ef 91       	pop	r30
     2ae:	df 91       	pop	r29
     2b0:	cf 91       	pop	r28
     2b2:	bf 91       	pop	r27
     2b4:	af 91       	pop	r26
     2b6:	9f 91       	pop	r25
     2b8:	8f 91       	pop	r24
     2ba:	7f 91       	pop	r23
     2bc:	6f 91       	pop	r22
     2be:	5f 91       	pop	r21
     2c0:	4f 91       	pop	r20
     2c2:	3f 91       	pop	r19
     2c4:	2f 91       	pop	r18
     2c6:	1f 91       	pop	r17
     2c8:	0f 91       	pop	r16
     2ca:	ff 90       	pop	r15
     2cc:	ef 90       	pop	r14
     2ce:	df 90       	pop	r13
     2d0:	cf 90       	pop	r12
     2d2:	bf 90       	pop	r11
     2d4:	af 90       	pop	r10
     2d6:	9f 90       	pop	r9
     2d8:	8f 90       	pop	r8
     2da:	7f 90       	pop	r7
     2dc:	6f 90       	pop	r6
     2de:	5f 90       	pop	r5
     2e0:	4f 90       	pop	r4
     2e2:	3f 90       	pop	r3
     2e4:	2f 90       	pop	r2
     2e6:	1f 90       	pop	r1
     2e8:	0f 90       	pop	r0
     2ea:	0c be       	out	0x3c, r0	; 60
     2ec:	0f 90       	pop	r0
     2ee:	0b be       	out	0x3b, r0	; 59
     2f0:	0f 90       	pop	r0
     2f2:	0f be       	out	0x3f, r0	; 63
     2f4:	0f 90       	pop	r0
     2f6:	08 95       	ret

000002f8 <__vector_12>:

    __asm__ __volatile__ ( "ret" );
     2f8:	9c df       	rcall	.-200    	; 0x232 <vPortYieldFromTick>
    ISR(portSCHEDULER_ISR, ISR_NAKED) __attribute__ ((hot, flatten));
//  ISR(portSCHEDULER_ISR, ISR_NAKED ISR_NOBLOCK) __attribute__ ((hot, flatten));
    ISR(portSCHEDULER_ISR)
    {
        vPortYieldFromTick();
        __asm__ __volatile__ ( "reti" );
     2fa:	18 95       	reti

000002fc <prvResetNextTaskUnblockTime>:
        {
            xReturn = pdFAIL;
        }

        return xReturn;
    }
     2fc:	e0 91 29 02 	lds	r30, 0x0229	; 0x800229 <pxDelayedTaskList>
     300:	f0 91 2a 02 	lds	r31, 0x022A	; 0x80022a <pxDelayedTaskList+0x1>
     304:	80 81       	ld	r24, Z
     306:	81 11       	cpse	r24, r1
     308:	0c c0       	rjmp	.+24     	; 0x322 <prvResetNextTaskUnblockTime+0x26>
     30a:	8f ef       	ldi	r24, 0xFF	; 255
     30c:	9f ef       	ldi	r25, 0xFF	; 255
     30e:	dc 01       	movw	r26, r24
     310:	80 93 1b 02 	sts	0x021B, r24	; 0x80021b <xNextTaskUnblockTime>
     314:	90 93 1c 02 	sts	0x021C, r25	; 0x80021c <xNextTaskUnblockTime+0x1>
     318:	a0 93 1d 02 	sts	0x021D, r26	; 0x80021d <xNextTaskUnblockTime+0x2>
     31c:	b0 93 1e 02 	sts	0x021E, r27	; 0x80021e <xNextTaskUnblockTime+0x3>
     320:	08 95       	ret
     322:	e0 91 29 02 	lds	r30, 0x0229	; 0x800229 <pxDelayedTaskList>
     326:	f0 91 2a 02 	lds	r31, 0x022A	; 0x80022a <pxDelayedTaskList+0x1>
     32a:	07 80       	ldd	r0, Z+7	; 0x07
     32c:	f0 85       	ldd	r31, Z+8	; 0x08
     32e:	e0 2d       	mov	r30, r0
     330:	00 84       	ldd	r0, Z+8	; 0x08
     332:	f1 85       	ldd	r31, Z+9	; 0x09
     334:	e0 2d       	mov	r30, r0
     336:	82 81       	ldd	r24, Z+2	; 0x02
     338:	93 81       	ldd	r25, Z+3	; 0x03
     33a:	a4 81       	ldd	r26, Z+4	; 0x04
     33c:	b5 81       	ldd	r27, Z+5	; 0x05
     33e:	80 93 1b 02 	sts	0x021B, r24	; 0x80021b <xNextTaskUnblockTime>
     342:	90 93 1c 02 	sts	0x021C, r25	; 0x80021c <xNextTaskUnblockTime+0x1>
     346:	a0 93 1d 02 	sts	0x021D, r26	; 0x80021d <xNextTaskUnblockTime+0x2>
     34a:	b0 93 1e 02 	sts	0x021E, r27	; 0x80021e <xNextTaskUnblockTime+0x3>
     34e:	08 95       	ret

00000350 <xTaskIncrementTick>:
     350:	9f 92       	push	r9
     352:	af 92       	push	r10
     354:	bf 92       	push	r11
     356:	cf 92       	push	r12
     358:	df 92       	push	r13
     35a:	ef 92       	push	r14
     35c:	ff 92       	push	r15
     35e:	0f 93       	push	r16
     360:	1f 93       	push	r17
     362:	cf 93       	push	r28
     364:	df 93       	push	r29
     366:	80 91 1a 02 	lds	r24, 0x021A	; 0x80021a <__data_end>
     36a:	81 11       	cpse	r24, r1
     36c:	aa c0       	rjmp	.+340    	; 0x4c2 <__LOCK_REGION_LENGTH__+0xc2>
     36e:	c0 90 23 02 	lds	r12, 0x0223	; 0x800223 <xTickCount>
     372:	d0 90 24 02 	lds	r13, 0x0224	; 0x800224 <xTickCount+0x1>
     376:	e0 90 25 02 	lds	r14, 0x0225	; 0x800225 <xTickCount+0x2>
     37a:	f0 90 26 02 	lds	r15, 0x0226	; 0x800226 <xTickCount+0x3>
     37e:	8f ef       	ldi	r24, 0xFF	; 255
     380:	c8 1a       	sub	r12, r24
     382:	d8 0a       	sbc	r13, r24
     384:	e8 0a       	sbc	r14, r24
     386:	f8 0a       	sbc	r15, r24
     388:	c0 92 23 02 	sts	0x0223, r12	; 0x800223 <xTickCount>
     38c:	d0 92 24 02 	sts	0x0224, r13	; 0x800224 <xTickCount+0x1>
     390:	e0 92 25 02 	sts	0x0225, r14	; 0x800225 <xTickCount+0x2>
     394:	f0 92 26 02 	sts	0x0226, r15	; 0x800226 <xTickCount+0x3>
     398:	c1 14       	cp	r12, r1
     39a:	d1 04       	cpc	r13, r1
     39c:	e1 04       	cpc	r14, r1
     39e:	f1 04       	cpc	r15, r1
     3a0:	b1 f4       	brne	.+44     	; 0x3ce <xTaskIncrementTick+0x7e>
     3a2:	80 91 29 02 	lds	r24, 0x0229	; 0x800229 <pxDelayedTaskList>
     3a6:	90 91 2a 02 	lds	r25, 0x022A	; 0x80022a <pxDelayedTaskList+0x1>
     3aa:	20 91 27 02 	lds	r18, 0x0227	; 0x800227 <pxOverflowDelayedTaskList>
     3ae:	30 91 28 02 	lds	r19, 0x0228	; 0x800228 <pxOverflowDelayedTaskList+0x1>
     3b2:	30 93 2a 02 	sts	0x022A, r19	; 0x80022a <pxDelayedTaskList+0x1>
     3b6:	20 93 29 02 	sts	0x0229, r18	; 0x800229 <pxDelayedTaskList>
     3ba:	90 93 28 02 	sts	0x0228, r25	; 0x800228 <pxOverflowDelayedTaskList+0x1>
     3be:	80 93 27 02 	sts	0x0227, r24	; 0x800227 <pxOverflowDelayedTaskList>
     3c2:	80 91 1f 02 	lds	r24, 0x021F	; 0x80021f <xNumOfOverflows>
     3c6:	8f 5f       	subi	r24, 0xFF	; 255
     3c8:	80 93 1f 02 	sts	0x021F, r24	; 0x80021f <xNumOfOverflows>
     3cc:	97 df       	rcall	.-210    	; 0x2fc <prvResetNextTaskUnblockTime>
     3ce:	80 91 1b 02 	lds	r24, 0x021B	; 0x80021b <xNextTaskUnblockTime>
     3d2:	90 91 1c 02 	lds	r25, 0x021C	; 0x80021c <xNextTaskUnblockTime+0x1>
     3d6:	a0 91 1d 02 	lds	r26, 0x021D	; 0x80021d <xNextTaskUnblockTime+0x2>
     3da:	b0 91 1e 02 	lds	r27, 0x021E	; 0x80021e <xNextTaskUnblockTime+0x3>
     3de:	c8 16       	cp	r12, r24
     3e0:	d9 06       	cpc	r13, r25
     3e2:	ea 06       	cpc	r14, r26
     3e4:	fb 06       	cpc	r15, r27
     3e6:	10 f4       	brcc	.+4      	; 0x3ec <xTaskIncrementTick+0x9c>
     3e8:	b1 2c       	mov	r11, r1
     3ea:	5a c0       	rjmp	.+180    	; 0x4a0 <__LOCK_REGION_LENGTH__+0xa0>
     3ec:	b1 2c       	mov	r11, r1
     3ee:	0f 2e       	mov	r0, r31
     3f0:	fb e0       	ldi	r31, 0x0B	; 11
     3f2:	af 2e       	mov	r10, r31
     3f4:	f0 2d       	mov	r31, r0
     3f6:	99 24       	eor	r9, r9
     3f8:	93 94       	inc	r9
     3fa:	e0 91 29 02 	lds	r30, 0x0229	; 0x800229 <pxDelayedTaskList>
     3fe:	f0 91 2a 02 	lds	r31, 0x022A	; 0x80022a <pxDelayedTaskList+0x1>
     402:	80 81       	ld	r24, Z
     404:	81 11       	cpse	r24, r1
     406:	0c c0       	rjmp	.+24     	; 0x420 <__LOCK_REGION_LENGTH__+0x20>
     408:	8f ef       	ldi	r24, 0xFF	; 255
     40a:	9f ef       	ldi	r25, 0xFF	; 255
     40c:	dc 01       	movw	r26, r24
     40e:	80 93 1b 02 	sts	0x021B, r24	; 0x80021b <xNextTaskUnblockTime>
     412:	90 93 1c 02 	sts	0x021C, r25	; 0x80021c <xNextTaskUnblockTime+0x1>
     416:	a0 93 1d 02 	sts	0x021D, r26	; 0x80021d <xNextTaskUnblockTime+0x2>
     41a:	b0 93 1e 02 	sts	0x021E, r27	; 0x80021e <xNextTaskUnblockTime+0x3>
     41e:	40 c0       	rjmp	.+128    	; 0x4a0 <__LOCK_REGION_LENGTH__+0xa0>
     420:	e0 91 29 02 	lds	r30, 0x0229	; 0x800229 <pxDelayedTaskList>
     424:	f0 91 2a 02 	lds	r31, 0x022A	; 0x80022a <pxDelayedTaskList+0x1>
     428:	07 80       	ldd	r0, Z+7	; 0x07
     42a:	f0 85       	ldd	r31, Z+8	; 0x08
     42c:	e0 2d       	mov	r30, r0
     42e:	c0 85       	ldd	r28, Z+8	; 0x08
     430:	d1 85       	ldd	r29, Z+9	; 0x09
     432:	8a 81       	ldd	r24, Y+2	; 0x02
     434:	9b 81       	ldd	r25, Y+3	; 0x03
     436:	ac 81       	ldd	r26, Y+4	; 0x04
     438:	bd 81       	ldd	r27, Y+5	; 0x05
     43a:	c8 16       	cp	r12, r24
     43c:	d9 06       	cpc	r13, r25
     43e:	ea 06       	cpc	r14, r26
     440:	fb 06       	cpc	r15, r27
     442:	48 f4       	brcc	.+18     	; 0x456 <__LOCK_REGION_LENGTH__+0x56>
     444:	80 93 1b 02 	sts	0x021B, r24	; 0x80021b <xNextTaskUnblockTime>
     448:	90 93 1c 02 	sts	0x021C, r25	; 0x80021c <xNextTaskUnblockTime+0x1>
     44c:	a0 93 1d 02 	sts	0x021D, r26	; 0x80021d <xNextTaskUnblockTime+0x2>
     450:	b0 93 1e 02 	sts	0x021E, r27	; 0x80021e <xNextTaskUnblockTime+0x3>
     454:	25 c0       	rjmp	.+74     	; 0x4a0 <__LOCK_REGION_LENGTH__+0xa0>
     456:	8e 01       	movw	r16, r28
     458:	0e 5f       	subi	r16, 0xFE	; 254
     45a:	1f 4f       	sbci	r17, 0xFF	; 255
     45c:	c8 01       	movw	r24, r16
     45e:	c2 de       	rcall	.-636    	; 0x1e4 <uxListRemove>
     460:	88 8d       	ldd	r24, Y+24	; 0x18
     462:	99 8d       	ldd	r25, Y+25	; 0x19
     464:	89 2b       	or	r24, r25
     466:	19 f0       	breq	.+6      	; 0x46e <__LOCK_REGION_LENGTH__+0x6e>
     468:	ce 01       	movw	r24, r28
     46a:	0e 96       	adiw	r24, 0x0e	; 14
     46c:	bb de       	rcall	.-650    	; 0x1e4 <uxListRemove>
     46e:	8a 8d       	ldd	r24, Y+26	; 0x1a
     470:	90 91 22 02 	lds	r25, 0x0222	; 0x800222 <uxTopReadyPriority>
     474:	98 17       	cp	r25, r24
     476:	10 f4       	brcc	.+4      	; 0x47c <__LOCK_REGION_LENGTH__+0x7c>
     478:	80 93 22 02 	sts	0x0222, r24	; 0x800222 <uxTopReadyPriority>
     47c:	a8 9e       	mul	r10, r24
     47e:	c0 01       	movw	r24, r0
     480:	11 24       	eor	r1, r1
     482:	b8 01       	movw	r22, r16
     484:	85 5d       	subi	r24, 0xD5	; 213
     486:	9d 4f       	sbci	r25, 0xFD	; 253
     488:	8c de       	rcall	.-744    	; 0x1a2 <vListInsertEnd>
     48a:	e0 91 57 02 	lds	r30, 0x0257	; 0x800257 <pxCurrentTCB>
     48e:	f0 91 58 02 	lds	r31, 0x0258	; 0x800258 <pxCurrentTCB+0x1>
     492:	9a 8d       	ldd	r25, Y+26	; 0x1a
     494:	82 8d       	ldd	r24, Z+26	; 0x1a
     496:	98 17       	cp	r25, r24
     498:	08 f4       	brcc	.+2      	; 0x49c <__LOCK_REGION_LENGTH__+0x9c>
     49a:	af cf       	rjmp	.-162    	; 0x3fa <xTaskIncrementTick+0xaa>
     49c:	b9 2c       	mov	r11, r9
     49e:	ad cf       	rjmp	.-166    	; 0x3fa <xTaskIncrementTick+0xaa>
     4a0:	e0 91 57 02 	lds	r30, 0x0257	; 0x800257 <pxCurrentTCB>
     4a4:	f0 91 58 02 	lds	r31, 0x0258	; 0x800258 <pxCurrentTCB+0x1>
     4a8:	e2 8d       	ldd	r30, Z+26	; 0x1a
     4aa:	8b e0       	ldi	r24, 0x0B	; 11
     4ac:	e8 9f       	mul	r30, r24
     4ae:	f0 01       	movw	r30, r0
     4b0:	11 24       	eor	r1, r1
     4b2:	e5 5d       	subi	r30, 0xD5	; 213
     4b4:	fd 4f       	sbci	r31, 0xFD	; 253
     4b6:	80 81       	ld	r24, Z
     4b8:	82 30       	cpi	r24, 0x02	; 2
     4ba:	48 f0       	brcs	.+18     	; 0x4ce <__LOCK_REGION_LENGTH__+0xce>
     4bc:	bb 24       	eor	r11, r11
     4be:	b3 94       	inc	r11
     4c0:	06 c0       	rjmp	.+12     	; 0x4ce <__LOCK_REGION_LENGTH__+0xce>
     4c2:	80 91 21 02 	lds	r24, 0x0221	; 0x800221 <uxPendedTicks>
     4c6:	8f 5f       	subi	r24, 0xFF	; 255
     4c8:	80 93 21 02 	sts	0x0221, r24	; 0x800221 <uxPendedTicks>
     4cc:	b1 2c       	mov	r11, r1
     4ce:	80 91 20 02 	lds	r24, 0x0220	; 0x800220 <xYieldPending>
     4d2:	88 23       	and	r24, r24
     4d4:	11 f0       	breq	.+4      	; 0x4da <__LOCK_REGION_LENGTH__+0xda>
     4d6:	bb 24       	eor	r11, r11
     4d8:	b3 94       	inc	r11
     4da:	8b 2d       	mov	r24, r11
     4dc:	df 91       	pop	r29
     4de:	cf 91       	pop	r28
     4e0:	1f 91       	pop	r17
     4e2:	0f 91       	pop	r16
     4e4:	ff 90       	pop	r15
     4e6:	ef 90       	pop	r14
     4e8:	df 90       	pop	r13
     4ea:	cf 90       	pop	r12
     4ec:	bf 90       	pop	r11
     4ee:	af 90       	pop	r10
     4f0:	9f 90       	pop	r9
     4f2:	08 95       	ret

000004f4 <vTaskSwitchContext>:
#endif /* configUSE_APPLICATION_TASK_TAG */
/*-----------------------------------------------------------*/

void vTaskSwitchContext( void )
{
    if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
     4f4:	80 91 1a 02 	lds	r24, 0x021A	; 0x80021a <__data_end>
     4f8:	88 23       	and	r24, r24
     4fa:	21 f0       	breq	.+8      	; 0x504 <vTaskSwitchContext+0x10>
    {
        /* The scheduler is currently suspended - do not allow a context
        switch. */
        xYieldPending = pdTRUE;
     4fc:	81 e0       	ldi	r24, 0x01	; 1
     4fe:	80 93 20 02 	sts	0x0220, r24	; 0x800220 <xYieldPending>
     502:	08 95       	ret
    }
    else
    {
        xYieldPending = pdFALSE;
     504:	10 92 20 02 	sts	0x0220, r1	; 0x800220 <xYieldPending>
        traceTASK_SWITCHED_OUT();
     508:	e0 91 57 02 	lds	r30, 0x0257	; 0x800257 <pxCurrentTCB>
     50c:	f0 91 58 02 	lds	r31, 0x0258	; 0x800258 <pxCurrentTCB+0x1>
     510:	81 a5       	ldd	r24, Z+41	; 0x29
     512:	41 de       	rcall	.-894    	; 0x196 <task_switch_out>
                ulTaskSwitchedInTime = ulTotalRunTime;
        }
        #endif /* configGENERATE_RUN_TIME_STATS */

        /* Check for stack overflow, if configured. */
        taskCHECK_FOR_STACK_OVERFLOW();
     514:	a0 91 57 02 	lds	r26, 0x0257	; 0x800257 <pxCurrentTCB>
     518:	b0 91 58 02 	lds	r27, 0x0258	; 0x800258 <pxCurrentTCB+0x1>
     51c:	e0 91 57 02 	lds	r30, 0x0257	; 0x800257 <pxCurrentTCB>
     520:	f0 91 58 02 	lds	r31, 0x0258	; 0x800258 <pxCurrentTCB+0x1>
     524:	2d 91       	ld	r18, X+
     526:	3c 91       	ld	r19, X
     528:	83 8d       	ldd	r24, Z+27	; 0x1b
     52a:	94 8d       	ldd	r25, Z+28	; 0x1c
     52c:	82 17       	cp	r24, r18
     52e:	93 07       	cpc	r25, r19
     530:	58 f0       	brcs	.+22     	; 0x548 <vTaskSwitchContext+0x54>
     532:	60 91 57 02 	lds	r22, 0x0257	; 0x800257 <pxCurrentTCB>
     536:	70 91 58 02 	lds	r23, 0x0258	; 0x800258 <pxCurrentTCB+0x1>
     53a:	80 91 57 02 	lds	r24, 0x0257	; 0x800257 <pxCurrentTCB>
     53e:	90 91 58 02 	lds	r25, 0x0258	; 0x800258 <pxCurrentTCB+0x1>
     542:	63 5e       	subi	r22, 0xE3	; 227
     544:	7f 4f       	sbci	r23, 0xFF	; 255
     546:	53 d0       	rcall	.+166    	; 0x5ee <vApplicationStackOverflowHook>
        }
        #endif

        /* Select a new task to run using either the generic C or port
        optimised asm code. */
        taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
     548:	80 91 22 02 	lds	r24, 0x0222	; 0x800222 <uxTopReadyPriority>
     54c:	28 2f       	mov	r18, r24
     54e:	30 e0       	ldi	r19, 0x00	; 0
     550:	9b e0       	ldi	r25, 0x0B	; 11
     552:	89 9f       	mul	r24, r25
     554:	f0 01       	movw	r30, r0
     556:	11 24       	eor	r1, r1
     558:	e5 5d       	subi	r30, 0xD5	; 213
     55a:	fd 4f       	sbci	r31, 0xFD	; 253
     55c:	90 81       	ld	r25, Z
     55e:	91 11       	cpse	r25, r1
     560:	0e c0       	rjmp	.+28     	; 0x57e <vTaskSwitchContext+0x8a>
     562:	4b e0       	ldi	r20, 0x0B	; 11
     564:	81 50       	subi	r24, 0x01	; 1
     566:	28 2f       	mov	r18, r24
     568:	30 e0       	ldi	r19, 0x00	; 0
     56a:	42 9f       	mul	r20, r18
     56c:	f0 01       	movw	r30, r0
     56e:	43 9f       	mul	r20, r19
     570:	f0 0d       	add	r31, r0
     572:	11 24       	eor	r1, r1
     574:	e5 5d       	subi	r30, 0xD5	; 213
     576:	fd 4f       	sbci	r31, 0xFD	; 253
     578:	90 81       	ld	r25, Z
     57a:	99 23       	and	r25, r25
     57c:	99 f3       	breq	.-26     	; 0x564 <vTaskSwitchContext+0x70>
     57e:	9b e0       	ldi	r25, 0x0B	; 11
     580:	92 9f       	mul	r25, r18
     582:	a0 01       	movw	r20, r0
     584:	93 9f       	mul	r25, r19
     586:	50 0d       	add	r21, r0
     588:	11 24       	eor	r1, r1
     58a:	da 01       	movw	r26, r20
     58c:	a5 5d       	subi	r26, 0xD5	; 213
     58e:	bd 4f       	sbci	r27, 0xFD	; 253
     590:	11 96       	adiw	r26, 0x01	; 1
     592:	ed 91       	ld	r30, X+
     594:	fc 91       	ld	r31, X
     596:	12 97       	sbiw	r26, 0x02	; 2
     598:	04 80       	ldd	r0, Z+4	; 0x04
     59a:	f5 81       	ldd	r31, Z+5	; 0x05
     59c:	e0 2d       	mov	r30, r0
     59e:	12 96       	adiw	r26, 0x02	; 2
     5a0:	fc 93       	st	X, r31
     5a2:	ee 93       	st	-X, r30
     5a4:	11 97       	sbiw	r26, 0x01	; 1
     5a6:	42 5d       	subi	r20, 0xD2	; 210
     5a8:	5d 4f       	sbci	r21, 0xFD	; 253
     5aa:	e4 17       	cp	r30, r20
     5ac:	f5 07       	cpc	r31, r21
     5ae:	29 f4       	brne	.+10     	; 0x5ba <vTaskSwitchContext+0xc6>
     5b0:	44 81       	ldd	r20, Z+4	; 0x04
     5b2:	55 81       	ldd	r21, Z+5	; 0x05
     5b4:	fd 01       	movw	r30, r26
     5b6:	52 83       	std	Z+2, r21	; 0x02
     5b8:	41 83       	std	Z+1, r20	; 0x01
     5ba:	9b e0       	ldi	r25, 0x0B	; 11
     5bc:	92 9f       	mul	r25, r18
     5be:	f0 01       	movw	r30, r0
     5c0:	93 9f       	mul	r25, r19
     5c2:	f0 0d       	add	r31, r0
     5c4:	11 24       	eor	r1, r1
     5c6:	e5 5d       	subi	r30, 0xD5	; 213
     5c8:	fd 4f       	sbci	r31, 0xFD	; 253
     5ca:	01 80       	ldd	r0, Z+1	; 0x01
     5cc:	f2 81       	ldd	r31, Z+2	; 0x02
     5ce:	e0 2d       	mov	r30, r0
     5d0:	20 85       	ldd	r18, Z+8	; 0x08
     5d2:	31 85       	ldd	r19, Z+9	; 0x09
     5d4:	30 93 58 02 	sts	0x0258, r19	; 0x800258 <pxCurrentTCB+0x1>
     5d8:	20 93 57 02 	sts	0x0257, r18	; 0x800257 <pxCurrentTCB>
     5dc:	80 93 22 02 	sts	0x0222, r24	; 0x800222 <uxTopReadyPriority>
        traceTASK_SWITCHED_IN();
     5e0:	e0 91 57 02 	lds	r30, 0x0257	; 0x800257 <pxCurrentTCB>
     5e4:	f0 91 58 02 	lds	r31, 0x0258	; 0x800258 <pxCurrentTCB+0x1>
     5e8:	81 a5       	ldd	r24, Z+41	; 0x29
     5ea:	cb cd       	rjmp	.-1130   	; 0x182 <task_switch_in>
     5ec:	08 95       	ret

000005ee <vApplicationStackOverflowHook>:
void vApplicationStackOverflowHook( TaskHandle_t xTask, portCHAR *pcTaskName ) __attribute__((weak));

void vApplicationStackOverflowHook( TaskHandle_t xTask __attribute__((unused)), portCHAR *pcTaskName __attribute__((unused))  )
{
#if defined(__AVR_ATmega640__) || defined(__AVR_ATmega1280__) || defined(__AVR_ATmega1281__) || defined(__AVR_ATmega2560__) || defined(__AVR_ATmega2561__)  // Arduino Mega with 2560
    DDRB  |= _BV(DDB7);
     5ee:	27 9a       	sbi	0x04, 7	; 4
    PORTB |= _BV(PORTB7);       // Main (red PB7) LED on. Main LED on.
     5f0:	2f 9a       	sbi	0x05, 7	; 5
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     5f2:	2f ef       	ldi	r18, 0xFF	; 255
     5f4:	87 ea       	ldi	r24, 0xA7	; 167
     5f6:	91 e6       	ldi	r25, 0x61	; 97
     5f8:	21 50       	subi	r18, 0x01	; 1
     5fa:	80 40       	sbci	r24, 0x00	; 0
     5fc:	90 40       	sbci	r25, 0x00	; 0
     5fe:	e1 f7       	brne	.-8      	; 0x5f8 <vApplicationStackOverflowHook+0xa>
     600:	00 c0       	rjmp	.+0      	; 0x602 <vApplicationStackOverflowHook+0x14>
     602:	00 00       	nop
    for(;;)
    {
        _delay_ms(2000);

#if defined(__AVR_ATmega640__) || defined(__AVR_ATmega1280__) || defined(__AVR_ATmega1281__) || defined(__AVR_ATmega2560__) || defined(__AVR_ATmega2561__)  // Arduino Mega with 2560
        PINB  |= _BV(PINB7);       // Main (red PB7) LED toggle. Main LED slow blink.
     604:	1f 9a       	sbi	0x03, 7	; 3
     606:	f5 cf       	rjmp	.-22     	; 0x5f2 <vApplicationStackOverflowHook+0x4>

00000608 <main>:
			for(int c=0;c<200;c++)
			;
}

static void _setupApplication(void) {
	_device = device_create();
     608:	a1 dd       	rcall	.-1214   	; 0x14c <device_create>
     60a:	90 93 5a 02 	sts	0x025A, r25	; 0x80025a <_device+0x1>
     60e:	80 93 59 02 	sts	0x0259, r24	; 0x800259 <_device>
static void _runApplication(void) {
	while (1) {
		if (_device != NULL) {
			printf("co2 %d: %u",deviceId, device_getCO2Data(_device));
		}
		else printf("error");
     612:	03 e1       	ldi	r16, 0x13	; 19
     614:	12 e0       	ldi	r17, 0x02	; 2
}

static void _runApplication(void) {
	while (1) {
		if (_device != NULL) {
			printf("co2 %d: %u",deviceId, device_getCO2Data(_device));
     616:	c8 e0       	ldi	r28, 0x08	; 8
     618:	d2 e0       	ldi	r29, 0x02	; 2
	_device = device_create();
}

static void _runApplication(void) {
	while (1) {
		if (_device != NULL) {
     61a:	80 91 59 02 	lds	r24, 0x0259	; 0x800259 <_device>
     61e:	90 91 5a 02 	lds	r25, 0x025A	; 0x80025a <_device+0x1>
     622:	00 97       	sbiw	r24, 0x00	; 0
			printf("co2 %d: %u",deviceId, device_getCO2Data(_device));
     624:	99 f0       	breq	.+38     	; 0x64c <main+0x44>
     626:	a3 dd       	rcall	.-1210   	; 0x16e <device_getCO2Data>
     628:	9f 93       	push	r25
     62a:	8f 93       	push	r24
     62c:	80 91 07 02 	lds	r24, 0x0207	; 0x800207 <deviceId+0x1>
     630:	8f 93       	push	r24
     632:	80 91 06 02 	lds	r24, 0x0206	; 0x800206 <deviceId>
     636:	8f 93       	push	r24
     638:	df 93       	push	r29
     63a:	cf 93       	push	r28
     63c:	aa d3       	rcall	.+1876   	; 0xd92 <printf>
     63e:	0f 90       	pop	r0
     640:	0f 90       	pop	r0
     642:	0f 90       	pop	r0
     644:	0f 90       	pop	r0
     646:	0f 90       	pop	r0
     648:	0f 90       	pop	r0
     64a:	05 c0       	rjmp	.+10     	; 0x656 <main+0x4e>
		}
		else printf("error");
     64c:	1f 93       	push	r17
     64e:	0f 93       	push	r16
     650:	a0 d3       	rcall	.+1856   	; 0xd92 <printf>
     652:	0f 90       	pop	r0
     654:	0f 90       	pop	r0
		puts("");
     656:	88 e1       	ldi	r24, 0x18	; 24
     658:	92 e0       	ldi	r25, 0x02	; 2
     65a:	ae d3       	rcall	.+1884   	; 0xdb8 <puts>
     65c:	de cf       	rjmp	.-68     	; 0x61a <main+0x12>

0000065e <__vector_25>:
     65e:	1f 92       	push	r1
     660:	0f 92       	push	r0
     662:	0f b6       	in	r0, 0x3f	; 63
     664:	0f 92       	push	r0
     666:	11 24       	eor	r1, r1
     668:	0b b6       	in	r0, 0x3b	; 59
     66a:	0f 92       	push	r0
     66c:	2f 93       	push	r18
     66e:	3f 93       	push	r19
     670:	4f 93       	push	r20
     672:	5f 93       	push	r21
     674:	6f 93       	push	r22
     676:	7f 93       	push	r23
     678:	8f 93       	push	r24
     67a:	9f 93       	push	r25
     67c:	af 93       	push	r26
     67e:	bf 93       	push	r27
     680:	cf 93       	push	r28
     682:	df 93       	push	r29
     684:	ef 93       	push	r30
     686:	ff 93       	push	r31
     688:	a0 91 5b 02 	lds	r26, 0x025B	; 0x80025b <_ser_handle>
     68c:	b0 91 5c 02 	lds	r27, 0x025C	; 0x80025c <_ser_handle+0x1>
     690:	10 97       	sbiw	r26, 0x00	; 0
     692:	11 f1       	breq	.+68     	; 0x6d8 <__vector_25+0x7a>
     694:	60 91 c6 00 	lds	r22, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
     698:	14 96       	adiw	r26, 0x04	; 4
     69a:	ed 91       	ld	r30, X+
     69c:	fc 91       	ld	r31, X
     69e:	15 97       	sbiw	r26, 0x05	; 5
     6a0:	93 81       	ldd	r25, Z+3	; 0x03
     6a2:	82 81       	ldd	r24, Z+2	; 0x02
     6a4:	25 81       	ldd	r18, Z+5	; 0x05
     6a6:	98 1b       	sub	r25, r24
     6a8:	92 23       	and	r25, r18
     6aa:	84 81       	ldd	r24, Z+4	; 0x04
     6ac:	98 17       	cp	r25, r24
     6ae:	61 f0       	breq	.+24     	; 0x6c8 <__vector_25+0x6a>
     6b0:	83 81       	ldd	r24, Z+3	; 0x03
     6b2:	26 95       	lsr	r18
     6b4:	28 23       	and	r18, r24
     6b6:	c0 81       	ld	r28, Z
     6b8:	d1 81       	ldd	r29, Z+1	; 0x01
     6ba:	c2 0f       	add	r28, r18
     6bc:	d1 1d       	adc	r29, r1
     6be:	68 83       	st	Y, r22
     6c0:	8f 5f       	subi	r24, 0xFF	; 255
     6c2:	95 81       	ldd	r25, Z+5	; 0x05
     6c4:	89 23       	and	r24, r25
     6c6:	83 83       	std	Z+3, r24	; 0x03
     6c8:	16 96       	adiw	r26, 0x06	; 6
     6ca:	ed 91       	ld	r30, X+
     6cc:	fc 91       	ld	r31, X
     6ce:	17 97       	sbiw	r26, 0x07	; 7
     6d0:	30 97       	sbiw	r30, 0x00	; 0
     6d2:	11 f0       	breq	.+4      	; 0x6d8 <__vector_25+0x7a>
     6d4:	cd 01       	movw	r24, r26
     6d6:	19 95       	eicall
     6d8:	ff 91       	pop	r31
     6da:	ef 91       	pop	r30
     6dc:	df 91       	pop	r29
     6de:	cf 91       	pop	r28
     6e0:	bf 91       	pop	r27
     6e2:	af 91       	pop	r26
     6e4:	9f 91       	pop	r25
     6e6:	8f 91       	pop	r24
     6e8:	7f 91       	pop	r23
     6ea:	6f 91       	pop	r22
     6ec:	5f 91       	pop	r21
     6ee:	4f 91       	pop	r20
     6f0:	3f 91       	pop	r19
     6f2:	2f 91       	pop	r18
     6f4:	0f 90       	pop	r0
     6f6:	0b be       	out	0x3b, r0	; 59
     6f8:	0f 90       	pop	r0
     6fa:	0f be       	out	0x3f, r0	; 63
     6fc:	0f 90       	pop	r0
     6fe:	1f 90       	pop	r1
     700:	18 95       	reti

00000702 <__vector_26>:
     702:	1f 92       	push	r1
     704:	0f 92       	push	r0
     706:	0f b6       	in	r0, 0x3f	; 63
     708:	0f 92       	push	r0
     70a:	11 24       	eor	r1, r1
     70c:	0b b6       	in	r0, 0x3b	; 59
     70e:	0f 92       	push	r0
     710:	2f 93       	push	r18
     712:	8f 93       	push	r24
     714:	9f 93       	push	r25
     716:	af 93       	push	r26
     718:	bf 93       	push	r27
     71a:	ef 93       	push	r30
     71c:	ff 93       	push	r31
     71e:	e0 91 5b 02 	lds	r30, 0x025B	; 0x80025b <_ser_handle>
     722:	f0 91 5c 02 	lds	r31, 0x025C	; 0x80025c <_ser_handle+0x1>
     726:	30 97       	sbiw	r30, 0x00	; 0
     728:	b9 f0       	breq	.+46     	; 0x758 <__vector_26+0x56>
     72a:	02 80       	ldd	r0, Z+2	; 0x02
     72c:	f3 81       	ldd	r31, Z+3	; 0x03
     72e:	e0 2d       	mov	r30, r0
     730:	93 81       	ldd	r25, Z+3	; 0x03
     732:	82 81       	ldd	r24, Z+2	; 0x02
     734:	98 17       	cp	r25, r24
     736:	b1 f0       	breq	.+44     	; 0x764 <__vector_26+0x62>
     738:	92 81       	ldd	r25, Z+2	; 0x02
     73a:	85 81       	ldd	r24, Z+5	; 0x05
     73c:	28 2f       	mov	r18, r24
     73e:	26 95       	lsr	r18
     740:	29 23       	and	r18, r25
     742:	a0 81       	ld	r26, Z
     744:	b1 81       	ldd	r27, Z+1	; 0x01
     746:	a2 0f       	add	r26, r18
     748:	b1 1d       	adc	r27, r1
     74a:	2c 91       	ld	r18, X
     74c:	9f 5f       	subi	r25, 0xFF	; 255
     74e:	89 23       	and	r24, r25
     750:	82 83       	std	Z+2, r24	; 0x02
     752:	20 93 c6 00 	sts	0x00C6, r18	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
     756:	0b c0       	rjmp	.+22     	; 0x76e <__vector_26+0x6c>
     758:	e1 ec       	ldi	r30, 0xC1	; 193
     75a:	f0 e0       	ldi	r31, 0x00	; 0
     75c:	80 81       	ld	r24, Z
     75e:	8f 7d       	andi	r24, 0xDF	; 223
     760:	80 83       	st	Z, r24
     762:	05 c0       	rjmp	.+10     	; 0x76e <__vector_26+0x6c>
     764:	e1 ec       	ldi	r30, 0xC1	; 193
     766:	f0 e0       	ldi	r31, 0x00	; 0
     768:	80 81       	ld	r24, Z
     76a:	8f 7d       	andi	r24, 0xDF	; 223
     76c:	80 83       	st	Z, r24
     76e:	ff 91       	pop	r31
     770:	ef 91       	pop	r30
     772:	bf 91       	pop	r27
     774:	af 91       	pop	r26
     776:	9f 91       	pop	r25
     778:	8f 91       	pop	r24
     77a:	2f 91       	pop	r18
     77c:	0f 90       	pop	r0
     77e:	0b be       	out	0x3b, r0	; 59
     780:	0f 90       	pop	r0
     782:	0f be       	out	0x3f, r0	; 63
     784:	0f 90       	pop	r0
     786:	1f 90       	pop	r1
     788:	18 95       	reti

0000078a <__vector_36>:
     78a:	1f 92       	push	r1
     78c:	0f 92       	push	r0
     78e:	0f b6       	in	r0, 0x3f	; 63
     790:	0f 92       	push	r0
     792:	11 24       	eor	r1, r1
     794:	0b b6       	in	r0, 0x3b	; 59
     796:	0f 92       	push	r0
     798:	2f 93       	push	r18
     79a:	3f 93       	push	r19
     79c:	4f 93       	push	r20
     79e:	5f 93       	push	r21
     7a0:	6f 93       	push	r22
     7a2:	7f 93       	push	r23
     7a4:	8f 93       	push	r24
     7a6:	9f 93       	push	r25
     7a8:	af 93       	push	r26
     7aa:	bf 93       	push	r27
     7ac:	cf 93       	push	r28
     7ae:	df 93       	push	r29
     7b0:	ef 93       	push	r30
     7b2:	ff 93       	push	r31
     7b4:	a0 91 5d 02 	lds	r26, 0x025D	; 0x80025d <_ser_handle+0x2>
     7b8:	b0 91 5e 02 	lds	r27, 0x025E	; 0x80025e <_ser_handle+0x3>
     7bc:	10 97       	sbiw	r26, 0x00	; 0
     7be:	11 f1       	breq	.+68     	; 0x804 <__vector_36+0x7a>
     7c0:	60 91 ce 00 	lds	r22, 0x00CE	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7000ce>
     7c4:	14 96       	adiw	r26, 0x04	; 4
     7c6:	ed 91       	ld	r30, X+
     7c8:	fc 91       	ld	r31, X
     7ca:	15 97       	sbiw	r26, 0x05	; 5
     7cc:	93 81       	ldd	r25, Z+3	; 0x03
     7ce:	82 81       	ldd	r24, Z+2	; 0x02
     7d0:	25 81       	ldd	r18, Z+5	; 0x05
     7d2:	98 1b       	sub	r25, r24
     7d4:	92 23       	and	r25, r18
     7d6:	84 81       	ldd	r24, Z+4	; 0x04
     7d8:	98 17       	cp	r25, r24
     7da:	61 f0       	breq	.+24     	; 0x7f4 <__vector_36+0x6a>
     7dc:	83 81       	ldd	r24, Z+3	; 0x03
     7de:	26 95       	lsr	r18
     7e0:	28 23       	and	r18, r24
     7e2:	c0 81       	ld	r28, Z
     7e4:	d1 81       	ldd	r29, Z+1	; 0x01
     7e6:	c2 0f       	add	r28, r18
     7e8:	d1 1d       	adc	r29, r1
     7ea:	68 83       	st	Y, r22
     7ec:	8f 5f       	subi	r24, 0xFF	; 255
     7ee:	95 81       	ldd	r25, Z+5	; 0x05
     7f0:	89 23       	and	r24, r25
     7f2:	83 83       	std	Z+3, r24	; 0x03
     7f4:	16 96       	adiw	r26, 0x06	; 6
     7f6:	ed 91       	ld	r30, X+
     7f8:	fc 91       	ld	r31, X
     7fa:	17 97       	sbiw	r26, 0x07	; 7
     7fc:	30 97       	sbiw	r30, 0x00	; 0
     7fe:	11 f0       	breq	.+4      	; 0x804 <__vector_36+0x7a>
     800:	cd 01       	movw	r24, r26
     802:	19 95       	eicall
     804:	ff 91       	pop	r31
     806:	ef 91       	pop	r30
     808:	df 91       	pop	r29
     80a:	cf 91       	pop	r28
     80c:	bf 91       	pop	r27
     80e:	af 91       	pop	r26
     810:	9f 91       	pop	r25
     812:	8f 91       	pop	r24
     814:	7f 91       	pop	r23
     816:	6f 91       	pop	r22
     818:	5f 91       	pop	r21
     81a:	4f 91       	pop	r20
     81c:	3f 91       	pop	r19
     81e:	2f 91       	pop	r18
     820:	0f 90       	pop	r0
     822:	0b be       	out	0x3b, r0	; 59
     824:	0f 90       	pop	r0
     826:	0f be       	out	0x3f, r0	; 63
     828:	0f 90       	pop	r0
     82a:	1f 90       	pop	r1
     82c:	18 95       	reti

0000082e <__vector_37>:
     82e:	1f 92       	push	r1
     830:	0f 92       	push	r0
     832:	0f b6       	in	r0, 0x3f	; 63
     834:	0f 92       	push	r0
     836:	11 24       	eor	r1, r1
     838:	0b b6       	in	r0, 0x3b	; 59
     83a:	0f 92       	push	r0
     83c:	2f 93       	push	r18
     83e:	8f 93       	push	r24
     840:	9f 93       	push	r25
     842:	af 93       	push	r26
     844:	bf 93       	push	r27
     846:	ef 93       	push	r30
     848:	ff 93       	push	r31
     84a:	e0 91 5d 02 	lds	r30, 0x025D	; 0x80025d <_ser_handle+0x2>
     84e:	f0 91 5e 02 	lds	r31, 0x025E	; 0x80025e <_ser_handle+0x3>
     852:	30 97       	sbiw	r30, 0x00	; 0
     854:	b9 f0       	breq	.+46     	; 0x884 <__vector_37+0x56>
     856:	02 80       	ldd	r0, Z+2	; 0x02
     858:	f3 81       	ldd	r31, Z+3	; 0x03
     85a:	e0 2d       	mov	r30, r0
     85c:	93 81       	ldd	r25, Z+3	; 0x03
     85e:	82 81       	ldd	r24, Z+2	; 0x02
     860:	98 17       	cp	r25, r24
     862:	b1 f0       	breq	.+44     	; 0x890 <__vector_37+0x62>
     864:	92 81       	ldd	r25, Z+2	; 0x02
     866:	85 81       	ldd	r24, Z+5	; 0x05
     868:	28 2f       	mov	r18, r24
     86a:	26 95       	lsr	r18
     86c:	29 23       	and	r18, r25
     86e:	a0 81       	ld	r26, Z
     870:	b1 81       	ldd	r27, Z+1	; 0x01
     872:	a2 0f       	add	r26, r18
     874:	b1 1d       	adc	r27, r1
     876:	2c 91       	ld	r18, X
     878:	9f 5f       	subi	r25, 0xFF	; 255
     87a:	89 23       	and	r24, r25
     87c:	82 83       	std	Z+2, r24	; 0x02
     87e:	20 93 ce 00 	sts	0x00CE, r18	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7000ce>
     882:	0b c0       	rjmp	.+22     	; 0x89a <__vector_37+0x6c>
     884:	e9 ec       	ldi	r30, 0xC9	; 201
     886:	f0 e0       	ldi	r31, 0x00	; 0
     888:	80 81       	ld	r24, Z
     88a:	8f 7d       	andi	r24, 0xDF	; 223
     88c:	80 83       	st	Z, r24
     88e:	05 c0       	rjmp	.+10     	; 0x89a <__vector_37+0x6c>
     890:	e9 ec       	ldi	r30, 0xC9	; 201
     892:	f0 e0       	ldi	r31, 0x00	; 0
     894:	80 81       	ld	r24, Z
     896:	8f 7d       	andi	r24, 0xDF	; 223
     898:	80 83       	st	Z, r24
     89a:	ff 91       	pop	r31
     89c:	ef 91       	pop	r30
     89e:	bf 91       	pop	r27
     8a0:	af 91       	pop	r26
     8a2:	9f 91       	pop	r25
     8a4:	8f 91       	pop	r24
     8a6:	2f 91       	pop	r18
     8a8:	0f 90       	pop	r0
     8aa:	0b be       	out	0x3b, r0	; 59
     8ac:	0f 90       	pop	r0
     8ae:	0f be       	out	0x3f, r0	; 63
     8b0:	0f 90       	pop	r0
     8b2:	1f 90       	pop	r1
     8b4:	18 95       	reti

000008b6 <__vector_51>:
     8b6:	1f 92       	push	r1
     8b8:	0f 92       	push	r0
     8ba:	0f b6       	in	r0, 0x3f	; 63
     8bc:	0f 92       	push	r0
     8be:	11 24       	eor	r1, r1
     8c0:	0b b6       	in	r0, 0x3b	; 59
     8c2:	0f 92       	push	r0
     8c4:	2f 93       	push	r18
     8c6:	3f 93       	push	r19
     8c8:	4f 93       	push	r20
     8ca:	5f 93       	push	r21
     8cc:	6f 93       	push	r22
     8ce:	7f 93       	push	r23
     8d0:	8f 93       	push	r24
     8d2:	9f 93       	push	r25
     8d4:	af 93       	push	r26
     8d6:	bf 93       	push	r27
     8d8:	cf 93       	push	r28
     8da:	df 93       	push	r29
     8dc:	ef 93       	push	r30
     8de:	ff 93       	push	r31
     8e0:	a0 91 5f 02 	lds	r26, 0x025F	; 0x80025f <_ser_handle+0x4>
     8e4:	b0 91 60 02 	lds	r27, 0x0260	; 0x800260 <_ser_handle+0x5>
     8e8:	10 97       	sbiw	r26, 0x00	; 0
     8ea:	11 f1       	breq	.+68     	; 0x930 <__vector_51+0x7a>
     8ec:	60 91 d6 00 	lds	r22, 0x00D6	; 0x8000d6 <__TEXT_REGION_LENGTH__+0x7000d6>
     8f0:	14 96       	adiw	r26, 0x04	; 4
     8f2:	ed 91       	ld	r30, X+
     8f4:	fc 91       	ld	r31, X
     8f6:	15 97       	sbiw	r26, 0x05	; 5
     8f8:	93 81       	ldd	r25, Z+3	; 0x03
     8fa:	82 81       	ldd	r24, Z+2	; 0x02
     8fc:	25 81       	ldd	r18, Z+5	; 0x05
     8fe:	98 1b       	sub	r25, r24
     900:	92 23       	and	r25, r18
     902:	84 81       	ldd	r24, Z+4	; 0x04
     904:	98 17       	cp	r25, r24
     906:	61 f0       	breq	.+24     	; 0x920 <__vector_51+0x6a>
     908:	83 81       	ldd	r24, Z+3	; 0x03
     90a:	26 95       	lsr	r18
     90c:	28 23       	and	r18, r24
     90e:	c0 81       	ld	r28, Z
     910:	d1 81       	ldd	r29, Z+1	; 0x01
     912:	c2 0f       	add	r28, r18
     914:	d1 1d       	adc	r29, r1
     916:	68 83       	st	Y, r22
     918:	8f 5f       	subi	r24, 0xFF	; 255
     91a:	95 81       	ldd	r25, Z+5	; 0x05
     91c:	89 23       	and	r24, r25
     91e:	83 83       	std	Z+3, r24	; 0x03
     920:	16 96       	adiw	r26, 0x06	; 6
     922:	ed 91       	ld	r30, X+
     924:	fc 91       	ld	r31, X
     926:	17 97       	sbiw	r26, 0x07	; 7
     928:	30 97       	sbiw	r30, 0x00	; 0
     92a:	11 f0       	breq	.+4      	; 0x930 <__vector_51+0x7a>
     92c:	cd 01       	movw	r24, r26
     92e:	19 95       	eicall
     930:	ff 91       	pop	r31
     932:	ef 91       	pop	r30
     934:	df 91       	pop	r29
     936:	cf 91       	pop	r28
     938:	bf 91       	pop	r27
     93a:	af 91       	pop	r26
     93c:	9f 91       	pop	r25
     93e:	8f 91       	pop	r24
     940:	7f 91       	pop	r23
     942:	6f 91       	pop	r22
     944:	5f 91       	pop	r21
     946:	4f 91       	pop	r20
     948:	3f 91       	pop	r19
     94a:	2f 91       	pop	r18
     94c:	0f 90       	pop	r0
     94e:	0b be       	out	0x3b, r0	; 59
     950:	0f 90       	pop	r0
     952:	0f be       	out	0x3f, r0	; 63
     954:	0f 90       	pop	r0
     956:	1f 90       	pop	r1
     958:	18 95       	reti

0000095a <__vector_52>:
     95a:	1f 92       	push	r1
     95c:	0f 92       	push	r0
     95e:	0f b6       	in	r0, 0x3f	; 63
     960:	0f 92       	push	r0
     962:	11 24       	eor	r1, r1
     964:	0b b6       	in	r0, 0x3b	; 59
     966:	0f 92       	push	r0
     968:	2f 93       	push	r18
     96a:	8f 93       	push	r24
     96c:	9f 93       	push	r25
     96e:	af 93       	push	r26
     970:	bf 93       	push	r27
     972:	ef 93       	push	r30
     974:	ff 93       	push	r31
     976:	e0 91 5f 02 	lds	r30, 0x025F	; 0x80025f <_ser_handle+0x4>
     97a:	f0 91 60 02 	lds	r31, 0x0260	; 0x800260 <_ser_handle+0x5>
     97e:	30 97       	sbiw	r30, 0x00	; 0
     980:	b9 f0       	breq	.+46     	; 0x9b0 <__vector_52+0x56>
     982:	02 80       	ldd	r0, Z+2	; 0x02
     984:	f3 81       	ldd	r31, Z+3	; 0x03
     986:	e0 2d       	mov	r30, r0
     988:	93 81       	ldd	r25, Z+3	; 0x03
     98a:	82 81       	ldd	r24, Z+2	; 0x02
     98c:	98 17       	cp	r25, r24
     98e:	b1 f0       	breq	.+44     	; 0x9bc <__vector_52+0x62>
     990:	92 81       	ldd	r25, Z+2	; 0x02
     992:	85 81       	ldd	r24, Z+5	; 0x05
     994:	28 2f       	mov	r18, r24
     996:	26 95       	lsr	r18
     998:	29 23       	and	r18, r25
     99a:	a0 81       	ld	r26, Z
     99c:	b1 81       	ldd	r27, Z+1	; 0x01
     99e:	a2 0f       	add	r26, r18
     9a0:	b1 1d       	adc	r27, r1
     9a2:	2c 91       	ld	r18, X
     9a4:	9f 5f       	subi	r25, 0xFF	; 255
     9a6:	89 23       	and	r24, r25
     9a8:	82 83       	std	Z+2, r24	; 0x02
     9aa:	20 93 d6 00 	sts	0x00D6, r18	; 0x8000d6 <__TEXT_REGION_LENGTH__+0x7000d6>
     9ae:	0b c0       	rjmp	.+22     	; 0x9c6 <__vector_52+0x6c>
     9b0:	e1 ed       	ldi	r30, 0xD1	; 209
     9b2:	f0 e0       	ldi	r31, 0x00	; 0
     9b4:	80 81       	ld	r24, Z
     9b6:	8f 7d       	andi	r24, 0xDF	; 223
     9b8:	80 83       	st	Z, r24
     9ba:	05 c0       	rjmp	.+10     	; 0x9c6 <__vector_52+0x6c>
     9bc:	e1 ed       	ldi	r30, 0xD1	; 209
     9be:	f0 e0       	ldi	r31, 0x00	; 0
     9c0:	80 81       	ld	r24, Z
     9c2:	8f 7d       	andi	r24, 0xDF	; 223
     9c4:	80 83       	st	Z, r24
     9c6:	ff 91       	pop	r31
     9c8:	ef 91       	pop	r30
     9ca:	bf 91       	pop	r27
     9cc:	af 91       	pop	r26
     9ce:	9f 91       	pop	r25
     9d0:	8f 91       	pop	r24
     9d2:	2f 91       	pop	r18
     9d4:	0f 90       	pop	r0
     9d6:	0b be       	out	0x3b, r0	; 59
     9d8:	0f 90       	pop	r0
     9da:	0f be       	out	0x3f, r0	; 63
     9dc:	0f 90       	pop	r0
     9de:	1f 90       	pop	r1
     9e0:	18 95       	reti

000009e2 <__vector_54>:
     9e2:	1f 92       	push	r1
     9e4:	0f 92       	push	r0
     9e6:	0f b6       	in	r0, 0x3f	; 63
     9e8:	0f 92       	push	r0
     9ea:	11 24       	eor	r1, r1
     9ec:	0b b6       	in	r0, 0x3b	; 59
     9ee:	0f 92       	push	r0
     9f0:	2f 93       	push	r18
     9f2:	3f 93       	push	r19
     9f4:	4f 93       	push	r20
     9f6:	5f 93       	push	r21
     9f8:	6f 93       	push	r22
     9fa:	7f 93       	push	r23
     9fc:	8f 93       	push	r24
     9fe:	9f 93       	push	r25
     a00:	af 93       	push	r26
     a02:	bf 93       	push	r27
     a04:	cf 93       	push	r28
     a06:	df 93       	push	r29
     a08:	ef 93       	push	r30
     a0a:	ff 93       	push	r31
     a0c:	a0 91 61 02 	lds	r26, 0x0261	; 0x800261 <_ser_handle+0x6>
     a10:	b0 91 62 02 	lds	r27, 0x0262	; 0x800262 <_ser_handle+0x7>
     a14:	10 97       	sbiw	r26, 0x00	; 0
     a16:	11 f1       	breq	.+68     	; 0xa5c <__vector_54+0x7a>
     a18:	60 91 36 01 	lds	r22, 0x0136	; 0x800136 <__TEXT_REGION_LENGTH__+0x700136>
     a1c:	14 96       	adiw	r26, 0x04	; 4
     a1e:	ed 91       	ld	r30, X+
     a20:	fc 91       	ld	r31, X
     a22:	15 97       	sbiw	r26, 0x05	; 5
     a24:	93 81       	ldd	r25, Z+3	; 0x03
     a26:	82 81       	ldd	r24, Z+2	; 0x02
     a28:	25 81       	ldd	r18, Z+5	; 0x05
     a2a:	98 1b       	sub	r25, r24
     a2c:	92 23       	and	r25, r18
     a2e:	84 81       	ldd	r24, Z+4	; 0x04
     a30:	98 17       	cp	r25, r24
     a32:	61 f0       	breq	.+24     	; 0xa4c <__vector_54+0x6a>
     a34:	83 81       	ldd	r24, Z+3	; 0x03
     a36:	26 95       	lsr	r18
     a38:	28 23       	and	r18, r24
     a3a:	c0 81       	ld	r28, Z
     a3c:	d1 81       	ldd	r29, Z+1	; 0x01
     a3e:	c2 0f       	add	r28, r18
     a40:	d1 1d       	adc	r29, r1
     a42:	68 83       	st	Y, r22
     a44:	8f 5f       	subi	r24, 0xFF	; 255
     a46:	95 81       	ldd	r25, Z+5	; 0x05
     a48:	89 23       	and	r24, r25
     a4a:	83 83       	std	Z+3, r24	; 0x03
     a4c:	16 96       	adiw	r26, 0x06	; 6
     a4e:	ed 91       	ld	r30, X+
     a50:	fc 91       	ld	r31, X
     a52:	17 97       	sbiw	r26, 0x07	; 7
     a54:	30 97       	sbiw	r30, 0x00	; 0
     a56:	11 f0       	breq	.+4      	; 0xa5c <__vector_54+0x7a>
     a58:	cd 01       	movw	r24, r26
     a5a:	19 95       	eicall
     a5c:	ff 91       	pop	r31
     a5e:	ef 91       	pop	r30
     a60:	df 91       	pop	r29
     a62:	cf 91       	pop	r28
     a64:	bf 91       	pop	r27
     a66:	af 91       	pop	r26
     a68:	9f 91       	pop	r25
     a6a:	8f 91       	pop	r24
     a6c:	7f 91       	pop	r23
     a6e:	6f 91       	pop	r22
     a70:	5f 91       	pop	r21
     a72:	4f 91       	pop	r20
     a74:	3f 91       	pop	r19
     a76:	2f 91       	pop	r18
     a78:	0f 90       	pop	r0
     a7a:	0b be       	out	0x3b, r0	; 59
     a7c:	0f 90       	pop	r0
     a7e:	0f be       	out	0x3f, r0	; 63
     a80:	0f 90       	pop	r0
     a82:	1f 90       	pop	r1
     a84:	18 95       	reti

00000a86 <__vector_55>:
     a86:	1f 92       	push	r1
     a88:	0f 92       	push	r0
     a8a:	0f b6       	in	r0, 0x3f	; 63
     a8c:	0f 92       	push	r0
     a8e:	11 24       	eor	r1, r1
     a90:	0b b6       	in	r0, 0x3b	; 59
     a92:	0f 92       	push	r0
     a94:	2f 93       	push	r18
     a96:	8f 93       	push	r24
     a98:	9f 93       	push	r25
     a9a:	af 93       	push	r26
     a9c:	bf 93       	push	r27
     a9e:	ef 93       	push	r30
     aa0:	ff 93       	push	r31
     aa2:	e0 91 61 02 	lds	r30, 0x0261	; 0x800261 <_ser_handle+0x6>
     aa6:	f0 91 62 02 	lds	r31, 0x0262	; 0x800262 <_ser_handle+0x7>
     aaa:	30 97       	sbiw	r30, 0x00	; 0
     aac:	b9 f0       	breq	.+46     	; 0xadc <__vector_55+0x56>
     aae:	02 80       	ldd	r0, Z+2	; 0x02
     ab0:	f3 81       	ldd	r31, Z+3	; 0x03
     ab2:	e0 2d       	mov	r30, r0
     ab4:	93 81       	ldd	r25, Z+3	; 0x03
     ab6:	82 81       	ldd	r24, Z+2	; 0x02
     ab8:	98 17       	cp	r25, r24
     aba:	b1 f0       	breq	.+44     	; 0xae8 <__vector_55+0x62>
     abc:	92 81       	ldd	r25, Z+2	; 0x02
     abe:	85 81       	ldd	r24, Z+5	; 0x05
     ac0:	28 2f       	mov	r18, r24
     ac2:	26 95       	lsr	r18
     ac4:	29 23       	and	r18, r25
     ac6:	a0 81       	ld	r26, Z
     ac8:	b1 81       	ldd	r27, Z+1	; 0x01
     aca:	a2 0f       	add	r26, r18
     acc:	b1 1d       	adc	r27, r1
     ace:	2c 91       	ld	r18, X
     ad0:	9f 5f       	subi	r25, 0xFF	; 255
     ad2:	89 23       	and	r24, r25
     ad4:	82 83       	std	Z+2, r24	; 0x02
     ad6:	20 93 36 01 	sts	0x0136, r18	; 0x800136 <__TEXT_REGION_LENGTH__+0x700136>
     ada:	0b c0       	rjmp	.+22     	; 0xaf2 <__vector_55+0x6c>
     adc:	e1 e3       	ldi	r30, 0x31	; 49
     ade:	f1 e0       	ldi	r31, 0x01	; 1
     ae0:	80 81       	ld	r24, Z
     ae2:	8f 7d       	andi	r24, 0xDF	; 223
     ae4:	80 83       	st	Z, r24
     ae6:	05 c0       	rjmp	.+10     	; 0xaf2 <__vector_55+0x6c>
     ae8:	e1 e3       	ldi	r30, 0x31	; 49
     aea:	f1 e0       	ldi	r31, 0x01	; 1
     aec:	80 81       	ld	r24, Z
     aee:	8f 7d       	andi	r24, 0xDF	; 223
     af0:	80 83       	st	Z, r24
     af2:	ff 91       	pop	r31
     af4:	ef 91       	pop	r30
     af6:	bf 91       	pop	r27
     af8:	af 91       	pop	r26
     afa:	9f 91       	pop	r25
     afc:	8f 91       	pop	r24
     afe:	2f 91       	pop	r18
     b00:	0f 90       	pop	r0
     b02:	0b be       	out	0x3b, r0	; 59
     b04:	0f 90       	pop	r0
     b06:	0f be       	out	0x3f, r0	; 63
     b08:	0f 90       	pop	r0
     b0a:	1f 90       	pop	r1
     b0c:	18 95       	reti

00000b0e <calloc>:
     b0e:	0f 93       	push	r16
     b10:	1f 93       	push	r17
     b12:	cf 93       	push	r28
     b14:	df 93       	push	r29
     b16:	86 9f       	mul	r24, r22
     b18:	80 01       	movw	r16, r0
     b1a:	87 9f       	mul	r24, r23
     b1c:	10 0d       	add	r17, r0
     b1e:	96 9f       	mul	r25, r22
     b20:	10 0d       	add	r17, r0
     b22:	11 24       	eor	r1, r1
     b24:	c8 01       	movw	r24, r16
     b26:	0d d0       	rcall	.+26     	; 0xb42 <malloc>
     b28:	ec 01       	movw	r28, r24
     b2a:	00 97       	sbiw	r24, 0x00	; 0
     b2c:	21 f0       	breq	.+8      	; 0xb36 <calloc+0x28>
     b2e:	a8 01       	movw	r20, r16
     b30:	60 e0       	ldi	r22, 0x00	; 0
     b32:	70 e0       	ldi	r23, 0x00	; 0
     b34:	27 d1       	rcall	.+590    	; 0xd84 <memset>
     b36:	ce 01       	movw	r24, r28
     b38:	df 91       	pop	r29
     b3a:	cf 91       	pop	r28
     b3c:	1f 91       	pop	r17
     b3e:	0f 91       	pop	r16
     b40:	08 95       	ret

00000b42 <malloc>:
     b42:	0f 93       	push	r16
     b44:	1f 93       	push	r17
     b46:	cf 93       	push	r28
     b48:	df 93       	push	r29
     b4a:	82 30       	cpi	r24, 0x02	; 2
     b4c:	91 05       	cpc	r25, r1
     b4e:	10 f4       	brcc	.+4      	; 0xb54 <malloc+0x12>
     b50:	82 e0       	ldi	r24, 0x02	; 2
     b52:	90 e0       	ldi	r25, 0x00	; 0
     b54:	e0 91 65 02 	lds	r30, 0x0265	; 0x800265 <__flp>
     b58:	f0 91 66 02 	lds	r31, 0x0266	; 0x800266 <__flp+0x1>
     b5c:	20 e0       	ldi	r18, 0x00	; 0
     b5e:	30 e0       	ldi	r19, 0x00	; 0
     b60:	a0 e0       	ldi	r26, 0x00	; 0
     b62:	b0 e0       	ldi	r27, 0x00	; 0
     b64:	30 97       	sbiw	r30, 0x00	; 0
     b66:	19 f1       	breq	.+70     	; 0xbae <malloc+0x6c>
     b68:	40 81       	ld	r20, Z
     b6a:	51 81       	ldd	r21, Z+1	; 0x01
     b6c:	02 81       	ldd	r16, Z+2	; 0x02
     b6e:	13 81       	ldd	r17, Z+3	; 0x03
     b70:	48 17       	cp	r20, r24
     b72:	59 07       	cpc	r21, r25
     b74:	c8 f0       	brcs	.+50     	; 0xba8 <malloc+0x66>
     b76:	84 17       	cp	r24, r20
     b78:	95 07       	cpc	r25, r21
     b7a:	69 f4       	brne	.+26     	; 0xb96 <malloc+0x54>
     b7c:	10 97       	sbiw	r26, 0x00	; 0
     b7e:	31 f0       	breq	.+12     	; 0xb8c <malloc+0x4a>
     b80:	12 96       	adiw	r26, 0x02	; 2
     b82:	0c 93       	st	X, r16
     b84:	12 97       	sbiw	r26, 0x02	; 2
     b86:	13 96       	adiw	r26, 0x03	; 3
     b88:	1c 93       	st	X, r17
     b8a:	27 c0       	rjmp	.+78     	; 0xbda <malloc+0x98>
     b8c:	00 93 65 02 	sts	0x0265, r16	; 0x800265 <__flp>
     b90:	10 93 66 02 	sts	0x0266, r17	; 0x800266 <__flp+0x1>
     b94:	22 c0       	rjmp	.+68     	; 0xbda <malloc+0x98>
     b96:	21 15       	cp	r18, r1
     b98:	31 05       	cpc	r19, r1
     b9a:	19 f0       	breq	.+6      	; 0xba2 <malloc+0x60>
     b9c:	42 17       	cp	r20, r18
     b9e:	53 07       	cpc	r21, r19
     ba0:	18 f4       	brcc	.+6      	; 0xba8 <malloc+0x66>
     ba2:	9a 01       	movw	r18, r20
     ba4:	bd 01       	movw	r22, r26
     ba6:	ef 01       	movw	r28, r30
     ba8:	df 01       	movw	r26, r30
     baa:	f8 01       	movw	r30, r16
     bac:	db cf       	rjmp	.-74     	; 0xb64 <malloc+0x22>
     bae:	21 15       	cp	r18, r1
     bb0:	31 05       	cpc	r19, r1
     bb2:	f9 f0       	breq	.+62     	; 0xbf2 <malloc+0xb0>
     bb4:	28 1b       	sub	r18, r24
     bb6:	39 0b       	sbc	r19, r25
     bb8:	24 30       	cpi	r18, 0x04	; 4
     bba:	31 05       	cpc	r19, r1
     bbc:	80 f4       	brcc	.+32     	; 0xbde <malloc+0x9c>
     bbe:	8a 81       	ldd	r24, Y+2	; 0x02
     bc0:	9b 81       	ldd	r25, Y+3	; 0x03
     bc2:	61 15       	cp	r22, r1
     bc4:	71 05       	cpc	r23, r1
     bc6:	21 f0       	breq	.+8      	; 0xbd0 <malloc+0x8e>
     bc8:	fb 01       	movw	r30, r22
     bca:	93 83       	std	Z+3, r25	; 0x03
     bcc:	82 83       	std	Z+2, r24	; 0x02
     bce:	04 c0       	rjmp	.+8      	; 0xbd8 <malloc+0x96>
     bd0:	90 93 66 02 	sts	0x0266, r25	; 0x800266 <__flp+0x1>
     bd4:	80 93 65 02 	sts	0x0265, r24	; 0x800265 <__flp>
     bd8:	fe 01       	movw	r30, r28
     bda:	32 96       	adiw	r30, 0x02	; 2
     bdc:	44 c0       	rjmp	.+136    	; 0xc66 <malloc+0x124>
     bde:	fe 01       	movw	r30, r28
     be0:	e2 0f       	add	r30, r18
     be2:	f3 1f       	adc	r31, r19
     be4:	81 93       	st	Z+, r24
     be6:	91 93       	st	Z+, r25
     be8:	22 50       	subi	r18, 0x02	; 2
     bea:	31 09       	sbc	r19, r1
     bec:	39 83       	std	Y+1, r19	; 0x01
     bee:	28 83       	st	Y, r18
     bf0:	3a c0       	rjmp	.+116    	; 0xc66 <malloc+0x124>
     bf2:	20 91 63 02 	lds	r18, 0x0263	; 0x800263 <__brkval>
     bf6:	30 91 64 02 	lds	r19, 0x0264	; 0x800264 <__brkval+0x1>
     bfa:	23 2b       	or	r18, r19
     bfc:	41 f4       	brne	.+16     	; 0xc0e <malloc+0xcc>
     bfe:	20 91 02 02 	lds	r18, 0x0202	; 0x800202 <__malloc_heap_start>
     c02:	30 91 03 02 	lds	r19, 0x0203	; 0x800203 <__malloc_heap_start+0x1>
     c06:	30 93 64 02 	sts	0x0264, r19	; 0x800264 <__brkval+0x1>
     c0a:	20 93 63 02 	sts	0x0263, r18	; 0x800263 <__brkval>
     c0e:	20 91 00 02 	lds	r18, 0x0200	; 0x800200 <__data_start>
     c12:	30 91 01 02 	lds	r19, 0x0201	; 0x800201 <__data_start+0x1>
     c16:	21 15       	cp	r18, r1
     c18:	31 05       	cpc	r19, r1
     c1a:	41 f4       	brne	.+16     	; 0xc2c <malloc+0xea>
     c1c:	2d b7       	in	r18, 0x3d	; 61
     c1e:	3e b7       	in	r19, 0x3e	; 62
     c20:	40 91 04 02 	lds	r20, 0x0204	; 0x800204 <__malloc_margin>
     c24:	50 91 05 02 	lds	r21, 0x0205	; 0x800205 <__malloc_margin+0x1>
     c28:	24 1b       	sub	r18, r20
     c2a:	35 0b       	sbc	r19, r21
     c2c:	e0 91 63 02 	lds	r30, 0x0263	; 0x800263 <__brkval>
     c30:	f0 91 64 02 	lds	r31, 0x0264	; 0x800264 <__brkval+0x1>
     c34:	e2 17       	cp	r30, r18
     c36:	f3 07       	cpc	r31, r19
     c38:	a0 f4       	brcc	.+40     	; 0xc62 <malloc+0x120>
     c3a:	2e 1b       	sub	r18, r30
     c3c:	3f 0b       	sbc	r19, r31
     c3e:	28 17       	cp	r18, r24
     c40:	39 07       	cpc	r19, r25
     c42:	78 f0       	brcs	.+30     	; 0xc62 <malloc+0x120>
     c44:	ac 01       	movw	r20, r24
     c46:	4e 5f       	subi	r20, 0xFE	; 254
     c48:	5f 4f       	sbci	r21, 0xFF	; 255
     c4a:	24 17       	cp	r18, r20
     c4c:	35 07       	cpc	r19, r21
     c4e:	48 f0       	brcs	.+18     	; 0xc62 <malloc+0x120>
     c50:	4e 0f       	add	r20, r30
     c52:	5f 1f       	adc	r21, r31
     c54:	50 93 64 02 	sts	0x0264, r21	; 0x800264 <__brkval+0x1>
     c58:	40 93 63 02 	sts	0x0263, r20	; 0x800263 <__brkval>
     c5c:	81 93       	st	Z+, r24
     c5e:	91 93       	st	Z+, r25
     c60:	02 c0       	rjmp	.+4      	; 0xc66 <malloc+0x124>
     c62:	e0 e0       	ldi	r30, 0x00	; 0
     c64:	f0 e0       	ldi	r31, 0x00	; 0
     c66:	cf 01       	movw	r24, r30
     c68:	df 91       	pop	r29
     c6a:	cf 91       	pop	r28
     c6c:	1f 91       	pop	r17
     c6e:	0f 91       	pop	r16
     c70:	08 95       	ret

00000c72 <free>:
     c72:	cf 93       	push	r28
     c74:	df 93       	push	r29
     c76:	00 97       	sbiw	r24, 0x00	; 0
     c78:	09 f4       	brne	.+2      	; 0xc7c <free+0xa>
     c7a:	81 c0       	rjmp	.+258    	; 0xd7e <free+0x10c>
     c7c:	fc 01       	movw	r30, r24
     c7e:	32 97       	sbiw	r30, 0x02	; 2
     c80:	13 82       	std	Z+3, r1	; 0x03
     c82:	12 82       	std	Z+2, r1	; 0x02
     c84:	a0 91 65 02 	lds	r26, 0x0265	; 0x800265 <__flp>
     c88:	b0 91 66 02 	lds	r27, 0x0266	; 0x800266 <__flp+0x1>
     c8c:	10 97       	sbiw	r26, 0x00	; 0
     c8e:	81 f4       	brne	.+32     	; 0xcb0 <free+0x3e>
     c90:	20 81       	ld	r18, Z
     c92:	31 81       	ldd	r19, Z+1	; 0x01
     c94:	82 0f       	add	r24, r18
     c96:	93 1f       	adc	r25, r19
     c98:	20 91 63 02 	lds	r18, 0x0263	; 0x800263 <__brkval>
     c9c:	30 91 64 02 	lds	r19, 0x0264	; 0x800264 <__brkval+0x1>
     ca0:	28 17       	cp	r18, r24
     ca2:	39 07       	cpc	r19, r25
     ca4:	51 f5       	brne	.+84     	; 0xcfa <free+0x88>
     ca6:	f0 93 64 02 	sts	0x0264, r31	; 0x800264 <__brkval+0x1>
     caa:	e0 93 63 02 	sts	0x0263, r30	; 0x800263 <__brkval>
     cae:	67 c0       	rjmp	.+206    	; 0xd7e <free+0x10c>
     cb0:	ed 01       	movw	r28, r26
     cb2:	20 e0       	ldi	r18, 0x00	; 0
     cb4:	30 e0       	ldi	r19, 0x00	; 0
     cb6:	ce 17       	cp	r28, r30
     cb8:	df 07       	cpc	r29, r31
     cba:	40 f4       	brcc	.+16     	; 0xccc <free+0x5a>
     cbc:	4a 81       	ldd	r20, Y+2	; 0x02
     cbe:	5b 81       	ldd	r21, Y+3	; 0x03
     cc0:	9e 01       	movw	r18, r28
     cc2:	41 15       	cp	r20, r1
     cc4:	51 05       	cpc	r21, r1
     cc6:	f1 f0       	breq	.+60     	; 0xd04 <free+0x92>
     cc8:	ea 01       	movw	r28, r20
     cca:	f5 cf       	rjmp	.-22     	; 0xcb6 <free+0x44>
     ccc:	d3 83       	std	Z+3, r29	; 0x03
     cce:	c2 83       	std	Z+2, r28	; 0x02
     cd0:	40 81       	ld	r20, Z
     cd2:	51 81       	ldd	r21, Z+1	; 0x01
     cd4:	84 0f       	add	r24, r20
     cd6:	95 1f       	adc	r25, r21
     cd8:	c8 17       	cp	r28, r24
     cda:	d9 07       	cpc	r29, r25
     cdc:	59 f4       	brne	.+22     	; 0xcf4 <free+0x82>
     cde:	88 81       	ld	r24, Y
     ce0:	99 81       	ldd	r25, Y+1	; 0x01
     ce2:	84 0f       	add	r24, r20
     ce4:	95 1f       	adc	r25, r21
     ce6:	02 96       	adiw	r24, 0x02	; 2
     ce8:	91 83       	std	Z+1, r25	; 0x01
     cea:	80 83       	st	Z, r24
     cec:	8a 81       	ldd	r24, Y+2	; 0x02
     cee:	9b 81       	ldd	r25, Y+3	; 0x03
     cf0:	93 83       	std	Z+3, r25	; 0x03
     cf2:	82 83       	std	Z+2, r24	; 0x02
     cf4:	21 15       	cp	r18, r1
     cf6:	31 05       	cpc	r19, r1
     cf8:	29 f4       	brne	.+10     	; 0xd04 <free+0x92>
     cfa:	f0 93 66 02 	sts	0x0266, r31	; 0x800266 <__flp+0x1>
     cfe:	e0 93 65 02 	sts	0x0265, r30	; 0x800265 <__flp>
     d02:	3d c0       	rjmp	.+122    	; 0xd7e <free+0x10c>
     d04:	e9 01       	movw	r28, r18
     d06:	fb 83       	std	Y+3, r31	; 0x03
     d08:	ea 83       	std	Y+2, r30	; 0x02
     d0a:	49 91       	ld	r20, Y+
     d0c:	59 91       	ld	r21, Y+
     d0e:	c4 0f       	add	r28, r20
     d10:	d5 1f       	adc	r29, r21
     d12:	ec 17       	cp	r30, r28
     d14:	fd 07       	cpc	r31, r29
     d16:	61 f4       	brne	.+24     	; 0xd30 <free+0xbe>
     d18:	80 81       	ld	r24, Z
     d1a:	91 81       	ldd	r25, Z+1	; 0x01
     d1c:	84 0f       	add	r24, r20
     d1e:	95 1f       	adc	r25, r21
     d20:	02 96       	adiw	r24, 0x02	; 2
     d22:	e9 01       	movw	r28, r18
     d24:	99 83       	std	Y+1, r25	; 0x01
     d26:	88 83       	st	Y, r24
     d28:	82 81       	ldd	r24, Z+2	; 0x02
     d2a:	93 81       	ldd	r25, Z+3	; 0x03
     d2c:	9b 83       	std	Y+3, r25	; 0x03
     d2e:	8a 83       	std	Y+2, r24	; 0x02
     d30:	e0 e0       	ldi	r30, 0x00	; 0
     d32:	f0 e0       	ldi	r31, 0x00	; 0
     d34:	12 96       	adiw	r26, 0x02	; 2
     d36:	8d 91       	ld	r24, X+
     d38:	9c 91       	ld	r25, X
     d3a:	13 97       	sbiw	r26, 0x03	; 3
     d3c:	00 97       	sbiw	r24, 0x00	; 0
     d3e:	19 f0       	breq	.+6      	; 0xd46 <free+0xd4>
     d40:	fd 01       	movw	r30, r26
     d42:	dc 01       	movw	r26, r24
     d44:	f7 cf       	rjmp	.-18     	; 0xd34 <free+0xc2>
     d46:	8d 91       	ld	r24, X+
     d48:	9c 91       	ld	r25, X
     d4a:	11 97       	sbiw	r26, 0x01	; 1
     d4c:	9d 01       	movw	r18, r26
     d4e:	2e 5f       	subi	r18, 0xFE	; 254
     d50:	3f 4f       	sbci	r19, 0xFF	; 255
     d52:	82 0f       	add	r24, r18
     d54:	93 1f       	adc	r25, r19
     d56:	20 91 63 02 	lds	r18, 0x0263	; 0x800263 <__brkval>
     d5a:	30 91 64 02 	lds	r19, 0x0264	; 0x800264 <__brkval+0x1>
     d5e:	28 17       	cp	r18, r24
     d60:	39 07       	cpc	r19, r25
     d62:	69 f4       	brne	.+26     	; 0xd7e <free+0x10c>
     d64:	30 97       	sbiw	r30, 0x00	; 0
     d66:	29 f4       	brne	.+10     	; 0xd72 <free+0x100>
     d68:	10 92 66 02 	sts	0x0266, r1	; 0x800266 <__flp+0x1>
     d6c:	10 92 65 02 	sts	0x0265, r1	; 0x800265 <__flp>
     d70:	02 c0       	rjmp	.+4      	; 0xd76 <free+0x104>
     d72:	13 82       	std	Z+3, r1	; 0x03
     d74:	12 82       	std	Z+2, r1	; 0x02
     d76:	b0 93 64 02 	sts	0x0264, r27	; 0x800264 <__brkval+0x1>
     d7a:	a0 93 63 02 	sts	0x0263, r26	; 0x800263 <__brkval>
     d7e:	df 91       	pop	r29
     d80:	cf 91       	pop	r28
     d82:	08 95       	ret

00000d84 <memset>:
     d84:	dc 01       	movw	r26, r24
     d86:	01 c0       	rjmp	.+2      	; 0xd8a <memset+0x6>
     d88:	6d 93       	st	X+, r22
     d8a:	41 50       	subi	r20, 0x01	; 1
     d8c:	50 40       	sbci	r21, 0x00	; 0
     d8e:	e0 f7       	brcc	.-8      	; 0xd88 <memset+0x4>
     d90:	08 95       	ret

00000d92 <printf>:
     d92:	cf 93       	push	r28
     d94:	df 93       	push	r29
     d96:	cd b7       	in	r28, 0x3d	; 61
     d98:	de b7       	in	r29, 0x3e	; 62
     d9a:	ae 01       	movw	r20, r28
     d9c:	4a 5f       	subi	r20, 0xFA	; 250
     d9e:	5f 4f       	sbci	r21, 0xFF	; 255
     da0:	fa 01       	movw	r30, r20
     da2:	61 91       	ld	r22, Z+
     da4:	71 91       	ld	r23, Z+
     da6:	af 01       	movw	r20, r30
     da8:	80 91 69 02 	lds	r24, 0x0269	; 0x800269 <__iob+0x2>
     dac:	90 91 6a 02 	lds	r25, 0x026A	; 0x80026a <__iob+0x3>
     db0:	33 d0       	rcall	.+102    	; 0xe18 <vfprintf>
     db2:	df 91       	pop	r29
     db4:	cf 91       	pop	r28
     db6:	08 95       	ret

00000db8 <puts>:
     db8:	0f 93       	push	r16
     dba:	1f 93       	push	r17
     dbc:	cf 93       	push	r28
     dbe:	df 93       	push	r29
     dc0:	e0 91 69 02 	lds	r30, 0x0269	; 0x800269 <__iob+0x2>
     dc4:	f0 91 6a 02 	lds	r31, 0x026A	; 0x80026a <__iob+0x3>
     dc8:	23 81       	ldd	r18, Z+3	; 0x03
     dca:	21 ff       	sbrs	r18, 1
     dcc:	1b c0       	rjmp	.+54     	; 0xe04 <puts+0x4c>
     dce:	8c 01       	movw	r16, r24
     dd0:	d0 e0       	ldi	r29, 0x00	; 0
     dd2:	c0 e0       	ldi	r28, 0x00	; 0
     dd4:	f8 01       	movw	r30, r16
     dd6:	81 91       	ld	r24, Z+
     dd8:	8f 01       	movw	r16, r30
     dda:	60 91 69 02 	lds	r22, 0x0269	; 0x800269 <__iob+0x2>
     dde:	70 91 6a 02 	lds	r23, 0x026A	; 0x80026a <__iob+0x3>
     de2:	db 01       	movw	r26, r22
     de4:	18 96       	adiw	r26, 0x08	; 8
     de6:	ed 91       	ld	r30, X+
     de8:	fc 91       	ld	r31, X
     dea:	19 97       	sbiw	r26, 0x09	; 9
     dec:	88 23       	and	r24, r24
     dee:	31 f0       	breq	.+12     	; 0xdfc <puts+0x44>
     df0:	19 95       	eicall
     df2:	89 2b       	or	r24, r25
     df4:	79 f3       	breq	.-34     	; 0xdd4 <puts+0x1c>
     df6:	df ef       	ldi	r29, 0xFF	; 255
     df8:	cf ef       	ldi	r28, 0xFF	; 255
     dfa:	ec cf       	rjmp	.-40     	; 0xdd4 <puts+0x1c>
     dfc:	8a e0       	ldi	r24, 0x0A	; 10
     dfe:	19 95       	eicall
     e00:	89 2b       	or	r24, r25
     e02:	19 f0       	breq	.+6      	; 0xe0a <puts+0x52>
     e04:	8f ef       	ldi	r24, 0xFF	; 255
     e06:	9f ef       	ldi	r25, 0xFF	; 255
     e08:	02 c0       	rjmp	.+4      	; 0xe0e <puts+0x56>
     e0a:	8d 2f       	mov	r24, r29
     e0c:	9c 2f       	mov	r25, r28
     e0e:	df 91       	pop	r29
     e10:	cf 91       	pop	r28
     e12:	1f 91       	pop	r17
     e14:	0f 91       	pop	r16
     e16:	08 95       	ret

00000e18 <vfprintf>:
     e18:	2f 92       	push	r2
     e1a:	3f 92       	push	r3
     e1c:	4f 92       	push	r4
     e1e:	5f 92       	push	r5
     e20:	6f 92       	push	r6
     e22:	7f 92       	push	r7
     e24:	8f 92       	push	r8
     e26:	9f 92       	push	r9
     e28:	af 92       	push	r10
     e2a:	bf 92       	push	r11
     e2c:	cf 92       	push	r12
     e2e:	df 92       	push	r13
     e30:	ef 92       	push	r14
     e32:	ff 92       	push	r15
     e34:	0f 93       	push	r16
     e36:	1f 93       	push	r17
     e38:	cf 93       	push	r28
     e3a:	df 93       	push	r29
     e3c:	cd b7       	in	r28, 0x3d	; 61
     e3e:	de b7       	in	r29, 0x3e	; 62
     e40:	2b 97       	sbiw	r28, 0x0b	; 11
     e42:	0f b6       	in	r0, 0x3f	; 63
     e44:	f8 94       	cli
     e46:	de bf       	out	0x3e, r29	; 62
     e48:	0f be       	out	0x3f, r0	; 63
     e4a:	cd bf       	out	0x3d, r28	; 61
     e4c:	6c 01       	movw	r12, r24
     e4e:	7b 01       	movw	r14, r22
     e50:	8a 01       	movw	r16, r20
     e52:	fc 01       	movw	r30, r24
     e54:	17 82       	std	Z+7, r1	; 0x07
     e56:	16 82       	std	Z+6, r1	; 0x06
     e58:	83 81       	ldd	r24, Z+3	; 0x03
     e5a:	81 ff       	sbrs	r24, 1
     e5c:	bf c1       	rjmp	.+894    	; 0x11dc <vfprintf+0x3c4>
     e5e:	ce 01       	movw	r24, r28
     e60:	01 96       	adiw	r24, 0x01	; 1
     e62:	3c 01       	movw	r6, r24
     e64:	f6 01       	movw	r30, r12
     e66:	93 81       	ldd	r25, Z+3	; 0x03
     e68:	f7 01       	movw	r30, r14
     e6a:	93 fd       	sbrc	r25, 3
     e6c:	85 91       	lpm	r24, Z+
     e6e:	93 ff       	sbrs	r25, 3
     e70:	81 91       	ld	r24, Z+
     e72:	7f 01       	movw	r14, r30
     e74:	88 23       	and	r24, r24
     e76:	09 f4       	brne	.+2      	; 0xe7a <vfprintf+0x62>
     e78:	ad c1       	rjmp	.+858    	; 0x11d4 <vfprintf+0x3bc>
     e7a:	85 32       	cpi	r24, 0x25	; 37
     e7c:	39 f4       	brne	.+14     	; 0xe8c <vfprintf+0x74>
     e7e:	93 fd       	sbrc	r25, 3
     e80:	85 91       	lpm	r24, Z+
     e82:	93 ff       	sbrs	r25, 3
     e84:	81 91       	ld	r24, Z+
     e86:	7f 01       	movw	r14, r30
     e88:	85 32       	cpi	r24, 0x25	; 37
     e8a:	21 f4       	brne	.+8      	; 0xe94 <vfprintf+0x7c>
     e8c:	b6 01       	movw	r22, r12
     e8e:	90 e0       	ldi	r25, 0x00	; 0
     e90:	d6 d1       	rcall	.+940    	; 0x123e <fputc>
     e92:	e8 cf       	rjmp	.-48     	; 0xe64 <vfprintf+0x4c>
     e94:	91 2c       	mov	r9, r1
     e96:	21 2c       	mov	r2, r1
     e98:	31 2c       	mov	r3, r1
     e9a:	ff e1       	ldi	r31, 0x1F	; 31
     e9c:	f3 15       	cp	r31, r3
     e9e:	d8 f0       	brcs	.+54     	; 0xed6 <vfprintf+0xbe>
     ea0:	8b 32       	cpi	r24, 0x2B	; 43
     ea2:	79 f0       	breq	.+30     	; 0xec2 <vfprintf+0xaa>
     ea4:	38 f4       	brcc	.+14     	; 0xeb4 <vfprintf+0x9c>
     ea6:	80 32       	cpi	r24, 0x20	; 32
     ea8:	79 f0       	breq	.+30     	; 0xec8 <vfprintf+0xb0>
     eaa:	83 32       	cpi	r24, 0x23	; 35
     eac:	a1 f4       	brne	.+40     	; 0xed6 <vfprintf+0xbe>
     eae:	23 2d       	mov	r18, r3
     eb0:	20 61       	ori	r18, 0x10	; 16
     eb2:	1d c0       	rjmp	.+58     	; 0xeee <vfprintf+0xd6>
     eb4:	8d 32       	cpi	r24, 0x2D	; 45
     eb6:	61 f0       	breq	.+24     	; 0xed0 <vfprintf+0xb8>
     eb8:	80 33       	cpi	r24, 0x30	; 48
     eba:	69 f4       	brne	.+26     	; 0xed6 <vfprintf+0xbe>
     ebc:	23 2d       	mov	r18, r3
     ebe:	21 60       	ori	r18, 0x01	; 1
     ec0:	16 c0       	rjmp	.+44     	; 0xeee <vfprintf+0xd6>
     ec2:	83 2d       	mov	r24, r3
     ec4:	82 60       	ori	r24, 0x02	; 2
     ec6:	38 2e       	mov	r3, r24
     ec8:	e3 2d       	mov	r30, r3
     eca:	e4 60       	ori	r30, 0x04	; 4
     ecc:	3e 2e       	mov	r3, r30
     ece:	2a c0       	rjmp	.+84     	; 0xf24 <vfprintf+0x10c>
     ed0:	f3 2d       	mov	r31, r3
     ed2:	f8 60       	ori	r31, 0x08	; 8
     ed4:	1d c0       	rjmp	.+58     	; 0xf10 <vfprintf+0xf8>
     ed6:	37 fc       	sbrc	r3, 7
     ed8:	2d c0       	rjmp	.+90     	; 0xf34 <vfprintf+0x11c>
     eda:	20 ed       	ldi	r18, 0xD0	; 208
     edc:	28 0f       	add	r18, r24
     ede:	2a 30       	cpi	r18, 0x0A	; 10
     ee0:	40 f0       	brcs	.+16     	; 0xef2 <vfprintf+0xda>
     ee2:	8e 32       	cpi	r24, 0x2E	; 46
     ee4:	b9 f4       	brne	.+46     	; 0xf14 <vfprintf+0xfc>
     ee6:	36 fc       	sbrc	r3, 6
     ee8:	75 c1       	rjmp	.+746    	; 0x11d4 <vfprintf+0x3bc>
     eea:	23 2d       	mov	r18, r3
     eec:	20 64       	ori	r18, 0x40	; 64
     eee:	32 2e       	mov	r3, r18
     ef0:	19 c0       	rjmp	.+50     	; 0xf24 <vfprintf+0x10c>
     ef2:	36 fe       	sbrs	r3, 6
     ef4:	06 c0       	rjmp	.+12     	; 0xf02 <vfprintf+0xea>
     ef6:	8a e0       	ldi	r24, 0x0A	; 10
     ef8:	98 9e       	mul	r9, r24
     efa:	20 0d       	add	r18, r0
     efc:	11 24       	eor	r1, r1
     efe:	92 2e       	mov	r9, r18
     f00:	11 c0       	rjmp	.+34     	; 0xf24 <vfprintf+0x10c>
     f02:	ea e0       	ldi	r30, 0x0A	; 10
     f04:	2e 9e       	mul	r2, r30
     f06:	20 0d       	add	r18, r0
     f08:	11 24       	eor	r1, r1
     f0a:	22 2e       	mov	r2, r18
     f0c:	f3 2d       	mov	r31, r3
     f0e:	f0 62       	ori	r31, 0x20	; 32
     f10:	3f 2e       	mov	r3, r31
     f12:	08 c0       	rjmp	.+16     	; 0xf24 <vfprintf+0x10c>
     f14:	8c 36       	cpi	r24, 0x6C	; 108
     f16:	21 f4       	brne	.+8      	; 0xf20 <vfprintf+0x108>
     f18:	83 2d       	mov	r24, r3
     f1a:	80 68       	ori	r24, 0x80	; 128
     f1c:	38 2e       	mov	r3, r24
     f1e:	02 c0       	rjmp	.+4      	; 0xf24 <vfprintf+0x10c>
     f20:	88 36       	cpi	r24, 0x68	; 104
     f22:	41 f4       	brne	.+16     	; 0xf34 <vfprintf+0x11c>
     f24:	f7 01       	movw	r30, r14
     f26:	93 fd       	sbrc	r25, 3
     f28:	85 91       	lpm	r24, Z+
     f2a:	93 ff       	sbrs	r25, 3
     f2c:	81 91       	ld	r24, Z+
     f2e:	7f 01       	movw	r14, r30
     f30:	81 11       	cpse	r24, r1
     f32:	b3 cf       	rjmp	.-154    	; 0xe9a <vfprintf+0x82>
     f34:	98 2f       	mov	r25, r24
     f36:	9f 7d       	andi	r25, 0xDF	; 223
     f38:	95 54       	subi	r25, 0x45	; 69
     f3a:	93 30       	cpi	r25, 0x03	; 3
     f3c:	28 f4       	brcc	.+10     	; 0xf48 <vfprintf+0x130>
     f3e:	0c 5f       	subi	r16, 0xFC	; 252
     f40:	1f 4f       	sbci	r17, 0xFF	; 255
     f42:	9f e3       	ldi	r25, 0x3F	; 63
     f44:	99 83       	std	Y+1, r25	; 0x01
     f46:	0d c0       	rjmp	.+26     	; 0xf62 <vfprintf+0x14a>
     f48:	83 36       	cpi	r24, 0x63	; 99
     f4a:	31 f0       	breq	.+12     	; 0xf58 <vfprintf+0x140>
     f4c:	83 37       	cpi	r24, 0x73	; 115
     f4e:	71 f0       	breq	.+28     	; 0xf6c <vfprintf+0x154>
     f50:	83 35       	cpi	r24, 0x53	; 83
     f52:	09 f0       	breq	.+2      	; 0xf56 <vfprintf+0x13e>
     f54:	55 c0       	rjmp	.+170    	; 0x1000 <vfprintf+0x1e8>
     f56:	20 c0       	rjmp	.+64     	; 0xf98 <vfprintf+0x180>
     f58:	f8 01       	movw	r30, r16
     f5a:	80 81       	ld	r24, Z
     f5c:	89 83       	std	Y+1, r24	; 0x01
     f5e:	0e 5f       	subi	r16, 0xFE	; 254
     f60:	1f 4f       	sbci	r17, 0xFF	; 255
     f62:	88 24       	eor	r8, r8
     f64:	83 94       	inc	r8
     f66:	91 2c       	mov	r9, r1
     f68:	53 01       	movw	r10, r6
     f6a:	12 c0       	rjmp	.+36     	; 0xf90 <vfprintf+0x178>
     f6c:	28 01       	movw	r4, r16
     f6e:	f2 e0       	ldi	r31, 0x02	; 2
     f70:	4f 0e       	add	r4, r31
     f72:	51 1c       	adc	r5, r1
     f74:	f8 01       	movw	r30, r16
     f76:	a0 80       	ld	r10, Z
     f78:	b1 80       	ldd	r11, Z+1	; 0x01
     f7a:	36 fe       	sbrs	r3, 6
     f7c:	03 c0       	rjmp	.+6      	; 0xf84 <vfprintf+0x16c>
     f7e:	69 2d       	mov	r22, r9
     f80:	70 e0       	ldi	r23, 0x00	; 0
     f82:	02 c0       	rjmp	.+4      	; 0xf88 <vfprintf+0x170>
     f84:	6f ef       	ldi	r22, 0xFF	; 255
     f86:	7f ef       	ldi	r23, 0xFF	; 255
     f88:	c5 01       	movw	r24, r10
     f8a:	4e d1       	rcall	.+668    	; 0x1228 <strnlen>
     f8c:	4c 01       	movw	r8, r24
     f8e:	82 01       	movw	r16, r4
     f90:	f3 2d       	mov	r31, r3
     f92:	ff 77       	andi	r31, 0x7F	; 127
     f94:	3f 2e       	mov	r3, r31
     f96:	15 c0       	rjmp	.+42     	; 0xfc2 <vfprintf+0x1aa>
     f98:	28 01       	movw	r4, r16
     f9a:	22 e0       	ldi	r18, 0x02	; 2
     f9c:	42 0e       	add	r4, r18
     f9e:	51 1c       	adc	r5, r1
     fa0:	f8 01       	movw	r30, r16
     fa2:	a0 80       	ld	r10, Z
     fa4:	b1 80       	ldd	r11, Z+1	; 0x01
     fa6:	36 fe       	sbrs	r3, 6
     fa8:	03 c0       	rjmp	.+6      	; 0xfb0 <vfprintf+0x198>
     faa:	69 2d       	mov	r22, r9
     fac:	70 e0       	ldi	r23, 0x00	; 0
     fae:	02 c0       	rjmp	.+4      	; 0xfb4 <vfprintf+0x19c>
     fb0:	6f ef       	ldi	r22, 0xFF	; 255
     fb2:	7f ef       	ldi	r23, 0xFF	; 255
     fb4:	c5 01       	movw	r24, r10
     fb6:	2d d1       	rcall	.+602    	; 0x1212 <strnlen_P>
     fb8:	4c 01       	movw	r8, r24
     fba:	f3 2d       	mov	r31, r3
     fbc:	f0 68       	ori	r31, 0x80	; 128
     fbe:	3f 2e       	mov	r3, r31
     fc0:	82 01       	movw	r16, r4
     fc2:	33 fc       	sbrc	r3, 3
     fc4:	19 c0       	rjmp	.+50     	; 0xff8 <vfprintf+0x1e0>
     fc6:	82 2d       	mov	r24, r2
     fc8:	90 e0       	ldi	r25, 0x00	; 0
     fca:	88 16       	cp	r8, r24
     fcc:	99 06       	cpc	r9, r25
     fce:	a0 f4       	brcc	.+40     	; 0xff8 <vfprintf+0x1e0>
     fd0:	b6 01       	movw	r22, r12
     fd2:	80 e2       	ldi	r24, 0x20	; 32
     fd4:	90 e0       	ldi	r25, 0x00	; 0
     fd6:	33 d1       	rcall	.+614    	; 0x123e <fputc>
     fd8:	2a 94       	dec	r2
     fda:	f5 cf       	rjmp	.-22     	; 0xfc6 <vfprintf+0x1ae>
     fdc:	f5 01       	movw	r30, r10
     fde:	37 fc       	sbrc	r3, 7
     fe0:	85 91       	lpm	r24, Z+
     fe2:	37 fe       	sbrs	r3, 7
     fe4:	81 91       	ld	r24, Z+
     fe6:	5f 01       	movw	r10, r30
     fe8:	b6 01       	movw	r22, r12
     fea:	90 e0       	ldi	r25, 0x00	; 0
     fec:	28 d1       	rcall	.+592    	; 0x123e <fputc>
     fee:	21 10       	cpse	r2, r1
     ff0:	2a 94       	dec	r2
     ff2:	21 e0       	ldi	r18, 0x01	; 1
     ff4:	82 1a       	sub	r8, r18
     ff6:	91 08       	sbc	r9, r1
     ff8:	81 14       	cp	r8, r1
     ffa:	91 04       	cpc	r9, r1
     ffc:	79 f7       	brne	.-34     	; 0xfdc <vfprintf+0x1c4>
     ffe:	e1 c0       	rjmp	.+450    	; 0x11c2 <vfprintf+0x3aa>
    1000:	84 36       	cpi	r24, 0x64	; 100
    1002:	11 f0       	breq	.+4      	; 0x1008 <vfprintf+0x1f0>
    1004:	89 36       	cpi	r24, 0x69	; 105
    1006:	39 f5       	brne	.+78     	; 0x1056 <vfprintf+0x23e>
    1008:	f8 01       	movw	r30, r16
    100a:	37 fe       	sbrs	r3, 7
    100c:	07 c0       	rjmp	.+14     	; 0x101c <vfprintf+0x204>
    100e:	60 81       	ld	r22, Z
    1010:	71 81       	ldd	r23, Z+1	; 0x01
    1012:	82 81       	ldd	r24, Z+2	; 0x02
    1014:	93 81       	ldd	r25, Z+3	; 0x03
    1016:	0c 5f       	subi	r16, 0xFC	; 252
    1018:	1f 4f       	sbci	r17, 0xFF	; 255
    101a:	08 c0       	rjmp	.+16     	; 0x102c <vfprintf+0x214>
    101c:	60 81       	ld	r22, Z
    101e:	71 81       	ldd	r23, Z+1	; 0x01
    1020:	07 2e       	mov	r0, r23
    1022:	00 0c       	add	r0, r0
    1024:	88 0b       	sbc	r24, r24
    1026:	99 0b       	sbc	r25, r25
    1028:	0e 5f       	subi	r16, 0xFE	; 254
    102a:	1f 4f       	sbci	r17, 0xFF	; 255
    102c:	f3 2d       	mov	r31, r3
    102e:	ff 76       	andi	r31, 0x6F	; 111
    1030:	3f 2e       	mov	r3, r31
    1032:	97 ff       	sbrs	r25, 7
    1034:	09 c0       	rjmp	.+18     	; 0x1048 <vfprintf+0x230>
    1036:	90 95       	com	r25
    1038:	80 95       	com	r24
    103a:	70 95       	com	r23
    103c:	61 95       	neg	r22
    103e:	7f 4f       	sbci	r23, 0xFF	; 255
    1040:	8f 4f       	sbci	r24, 0xFF	; 255
    1042:	9f 4f       	sbci	r25, 0xFF	; 255
    1044:	f0 68       	ori	r31, 0x80	; 128
    1046:	3f 2e       	mov	r3, r31
    1048:	2a e0       	ldi	r18, 0x0A	; 10
    104a:	30 e0       	ldi	r19, 0x00	; 0
    104c:	a3 01       	movw	r20, r6
    104e:	33 d1       	rcall	.+614    	; 0x12b6 <__ultoa_invert>
    1050:	88 2e       	mov	r8, r24
    1052:	86 18       	sub	r8, r6
    1054:	44 c0       	rjmp	.+136    	; 0x10de <vfprintf+0x2c6>
    1056:	85 37       	cpi	r24, 0x75	; 117
    1058:	31 f4       	brne	.+12     	; 0x1066 <vfprintf+0x24e>
    105a:	23 2d       	mov	r18, r3
    105c:	2f 7e       	andi	r18, 0xEF	; 239
    105e:	b2 2e       	mov	r11, r18
    1060:	2a e0       	ldi	r18, 0x0A	; 10
    1062:	30 e0       	ldi	r19, 0x00	; 0
    1064:	25 c0       	rjmp	.+74     	; 0x10b0 <vfprintf+0x298>
    1066:	93 2d       	mov	r25, r3
    1068:	99 7f       	andi	r25, 0xF9	; 249
    106a:	b9 2e       	mov	r11, r25
    106c:	8f 36       	cpi	r24, 0x6F	; 111
    106e:	c1 f0       	breq	.+48     	; 0x10a0 <vfprintf+0x288>
    1070:	18 f4       	brcc	.+6      	; 0x1078 <vfprintf+0x260>
    1072:	88 35       	cpi	r24, 0x58	; 88
    1074:	79 f0       	breq	.+30     	; 0x1094 <vfprintf+0x27c>
    1076:	ae c0       	rjmp	.+348    	; 0x11d4 <vfprintf+0x3bc>
    1078:	80 37       	cpi	r24, 0x70	; 112
    107a:	19 f0       	breq	.+6      	; 0x1082 <vfprintf+0x26a>
    107c:	88 37       	cpi	r24, 0x78	; 120
    107e:	21 f0       	breq	.+8      	; 0x1088 <vfprintf+0x270>
    1080:	a9 c0       	rjmp	.+338    	; 0x11d4 <vfprintf+0x3bc>
    1082:	e9 2f       	mov	r30, r25
    1084:	e0 61       	ori	r30, 0x10	; 16
    1086:	be 2e       	mov	r11, r30
    1088:	b4 fe       	sbrs	r11, 4
    108a:	0d c0       	rjmp	.+26     	; 0x10a6 <vfprintf+0x28e>
    108c:	fb 2d       	mov	r31, r11
    108e:	f4 60       	ori	r31, 0x04	; 4
    1090:	bf 2e       	mov	r11, r31
    1092:	09 c0       	rjmp	.+18     	; 0x10a6 <vfprintf+0x28e>
    1094:	34 fe       	sbrs	r3, 4
    1096:	0a c0       	rjmp	.+20     	; 0x10ac <vfprintf+0x294>
    1098:	29 2f       	mov	r18, r25
    109a:	26 60       	ori	r18, 0x06	; 6
    109c:	b2 2e       	mov	r11, r18
    109e:	06 c0       	rjmp	.+12     	; 0x10ac <vfprintf+0x294>
    10a0:	28 e0       	ldi	r18, 0x08	; 8
    10a2:	30 e0       	ldi	r19, 0x00	; 0
    10a4:	05 c0       	rjmp	.+10     	; 0x10b0 <vfprintf+0x298>
    10a6:	20 e1       	ldi	r18, 0x10	; 16
    10a8:	30 e0       	ldi	r19, 0x00	; 0
    10aa:	02 c0       	rjmp	.+4      	; 0x10b0 <vfprintf+0x298>
    10ac:	20 e1       	ldi	r18, 0x10	; 16
    10ae:	32 e0       	ldi	r19, 0x02	; 2
    10b0:	f8 01       	movw	r30, r16
    10b2:	b7 fe       	sbrs	r11, 7
    10b4:	07 c0       	rjmp	.+14     	; 0x10c4 <vfprintf+0x2ac>
    10b6:	60 81       	ld	r22, Z
    10b8:	71 81       	ldd	r23, Z+1	; 0x01
    10ba:	82 81       	ldd	r24, Z+2	; 0x02
    10bc:	93 81       	ldd	r25, Z+3	; 0x03
    10be:	0c 5f       	subi	r16, 0xFC	; 252
    10c0:	1f 4f       	sbci	r17, 0xFF	; 255
    10c2:	06 c0       	rjmp	.+12     	; 0x10d0 <vfprintf+0x2b8>
    10c4:	60 81       	ld	r22, Z
    10c6:	71 81       	ldd	r23, Z+1	; 0x01
    10c8:	80 e0       	ldi	r24, 0x00	; 0
    10ca:	90 e0       	ldi	r25, 0x00	; 0
    10cc:	0e 5f       	subi	r16, 0xFE	; 254
    10ce:	1f 4f       	sbci	r17, 0xFF	; 255
    10d0:	a3 01       	movw	r20, r6
    10d2:	f1 d0       	rcall	.+482    	; 0x12b6 <__ultoa_invert>
    10d4:	88 2e       	mov	r8, r24
    10d6:	86 18       	sub	r8, r6
    10d8:	fb 2d       	mov	r31, r11
    10da:	ff 77       	andi	r31, 0x7F	; 127
    10dc:	3f 2e       	mov	r3, r31
    10de:	36 fe       	sbrs	r3, 6
    10e0:	0d c0       	rjmp	.+26     	; 0x10fc <vfprintf+0x2e4>
    10e2:	23 2d       	mov	r18, r3
    10e4:	2e 7f       	andi	r18, 0xFE	; 254
    10e6:	a2 2e       	mov	r10, r18
    10e8:	89 14       	cp	r8, r9
    10ea:	58 f4       	brcc	.+22     	; 0x1102 <vfprintf+0x2ea>
    10ec:	34 fe       	sbrs	r3, 4
    10ee:	0b c0       	rjmp	.+22     	; 0x1106 <vfprintf+0x2ee>
    10f0:	32 fc       	sbrc	r3, 2
    10f2:	09 c0       	rjmp	.+18     	; 0x1106 <vfprintf+0x2ee>
    10f4:	83 2d       	mov	r24, r3
    10f6:	8e 7e       	andi	r24, 0xEE	; 238
    10f8:	a8 2e       	mov	r10, r24
    10fa:	05 c0       	rjmp	.+10     	; 0x1106 <vfprintf+0x2ee>
    10fc:	b8 2c       	mov	r11, r8
    10fe:	a3 2c       	mov	r10, r3
    1100:	03 c0       	rjmp	.+6      	; 0x1108 <vfprintf+0x2f0>
    1102:	b8 2c       	mov	r11, r8
    1104:	01 c0       	rjmp	.+2      	; 0x1108 <vfprintf+0x2f0>
    1106:	b9 2c       	mov	r11, r9
    1108:	a4 fe       	sbrs	r10, 4
    110a:	0f c0       	rjmp	.+30     	; 0x112a <vfprintf+0x312>
    110c:	fe 01       	movw	r30, r28
    110e:	e8 0d       	add	r30, r8
    1110:	f1 1d       	adc	r31, r1
    1112:	80 81       	ld	r24, Z
    1114:	80 33       	cpi	r24, 0x30	; 48
    1116:	21 f4       	brne	.+8      	; 0x1120 <vfprintf+0x308>
    1118:	9a 2d       	mov	r25, r10
    111a:	99 7e       	andi	r25, 0xE9	; 233
    111c:	a9 2e       	mov	r10, r25
    111e:	09 c0       	rjmp	.+18     	; 0x1132 <vfprintf+0x31a>
    1120:	a2 fe       	sbrs	r10, 2
    1122:	06 c0       	rjmp	.+12     	; 0x1130 <vfprintf+0x318>
    1124:	b3 94       	inc	r11
    1126:	b3 94       	inc	r11
    1128:	04 c0       	rjmp	.+8      	; 0x1132 <vfprintf+0x31a>
    112a:	8a 2d       	mov	r24, r10
    112c:	86 78       	andi	r24, 0x86	; 134
    112e:	09 f0       	breq	.+2      	; 0x1132 <vfprintf+0x31a>
    1130:	b3 94       	inc	r11
    1132:	a3 fc       	sbrc	r10, 3
    1134:	10 c0       	rjmp	.+32     	; 0x1156 <vfprintf+0x33e>
    1136:	a0 fe       	sbrs	r10, 0
    1138:	06 c0       	rjmp	.+12     	; 0x1146 <vfprintf+0x32e>
    113a:	b2 14       	cp	r11, r2
    113c:	80 f4       	brcc	.+32     	; 0x115e <vfprintf+0x346>
    113e:	28 0c       	add	r2, r8
    1140:	92 2c       	mov	r9, r2
    1142:	9b 18       	sub	r9, r11
    1144:	0d c0       	rjmp	.+26     	; 0x1160 <vfprintf+0x348>
    1146:	b2 14       	cp	r11, r2
    1148:	58 f4       	brcc	.+22     	; 0x1160 <vfprintf+0x348>
    114a:	b6 01       	movw	r22, r12
    114c:	80 e2       	ldi	r24, 0x20	; 32
    114e:	90 e0       	ldi	r25, 0x00	; 0
    1150:	76 d0       	rcall	.+236    	; 0x123e <fputc>
    1152:	b3 94       	inc	r11
    1154:	f8 cf       	rjmp	.-16     	; 0x1146 <vfprintf+0x32e>
    1156:	b2 14       	cp	r11, r2
    1158:	18 f4       	brcc	.+6      	; 0x1160 <vfprintf+0x348>
    115a:	2b 18       	sub	r2, r11
    115c:	02 c0       	rjmp	.+4      	; 0x1162 <vfprintf+0x34a>
    115e:	98 2c       	mov	r9, r8
    1160:	21 2c       	mov	r2, r1
    1162:	a4 fe       	sbrs	r10, 4
    1164:	0f c0       	rjmp	.+30     	; 0x1184 <vfprintf+0x36c>
    1166:	b6 01       	movw	r22, r12
    1168:	80 e3       	ldi	r24, 0x30	; 48
    116a:	90 e0       	ldi	r25, 0x00	; 0
    116c:	68 d0       	rcall	.+208    	; 0x123e <fputc>
    116e:	a2 fe       	sbrs	r10, 2
    1170:	16 c0       	rjmp	.+44     	; 0x119e <vfprintf+0x386>
    1172:	a1 fc       	sbrc	r10, 1
    1174:	03 c0       	rjmp	.+6      	; 0x117c <vfprintf+0x364>
    1176:	88 e7       	ldi	r24, 0x78	; 120
    1178:	90 e0       	ldi	r25, 0x00	; 0
    117a:	02 c0       	rjmp	.+4      	; 0x1180 <vfprintf+0x368>
    117c:	88 e5       	ldi	r24, 0x58	; 88
    117e:	90 e0       	ldi	r25, 0x00	; 0
    1180:	b6 01       	movw	r22, r12
    1182:	0c c0       	rjmp	.+24     	; 0x119c <vfprintf+0x384>
    1184:	8a 2d       	mov	r24, r10
    1186:	86 78       	andi	r24, 0x86	; 134
    1188:	51 f0       	breq	.+20     	; 0x119e <vfprintf+0x386>
    118a:	a1 fe       	sbrs	r10, 1
    118c:	02 c0       	rjmp	.+4      	; 0x1192 <vfprintf+0x37a>
    118e:	8b e2       	ldi	r24, 0x2B	; 43
    1190:	01 c0       	rjmp	.+2      	; 0x1194 <vfprintf+0x37c>
    1192:	80 e2       	ldi	r24, 0x20	; 32
    1194:	a7 fc       	sbrc	r10, 7
    1196:	8d e2       	ldi	r24, 0x2D	; 45
    1198:	b6 01       	movw	r22, r12
    119a:	90 e0       	ldi	r25, 0x00	; 0
    119c:	50 d0       	rcall	.+160    	; 0x123e <fputc>
    119e:	89 14       	cp	r8, r9
    11a0:	30 f4       	brcc	.+12     	; 0x11ae <vfprintf+0x396>
    11a2:	b6 01       	movw	r22, r12
    11a4:	80 e3       	ldi	r24, 0x30	; 48
    11a6:	90 e0       	ldi	r25, 0x00	; 0
    11a8:	4a d0       	rcall	.+148    	; 0x123e <fputc>
    11aa:	9a 94       	dec	r9
    11ac:	f8 cf       	rjmp	.-16     	; 0x119e <vfprintf+0x386>
    11ae:	8a 94       	dec	r8
    11b0:	f3 01       	movw	r30, r6
    11b2:	e8 0d       	add	r30, r8
    11b4:	f1 1d       	adc	r31, r1
    11b6:	80 81       	ld	r24, Z
    11b8:	b6 01       	movw	r22, r12
    11ba:	90 e0       	ldi	r25, 0x00	; 0
    11bc:	40 d0       	rcall	.+128    	; 0x123e <fputc>
    11be:	81 10       	cpse	r8, r1
    11c0:	f6 cf       	rjmp	.-20     	; 0x11ae <vfprintf+0x396>
    11c2:	22 20       	and	r2, r2
    11c4:	09 f4       	brne	.+2      	; 0x11c8 <vfprintf+0x3b0>
    11c6:	4e ce       	rjmp	.-868    	; 0xe64 <vfprintf+0x4c>
    11c8:	b6 01       	movw	r22, r12
    11ca:	80 e2       	ldi	r24, 0x20	; 32
    11cc:	90 e0       	ldi	r25, 0x00	; 0
    11ce:	37 d0       	rcall	.+110    	; 0x123e <fputc>
    11d0:	2a 94       	dec	r2
    11d2:	f7 cf       	rjmp	.-18     	; 0x11c2 <vfprintf+0x3aa>
    11d4:	f6 01       	movw	r30, r12
    11d6:	86 81       	ldd	r24, Z+6	; 0x06
    11d8:	97 81       	ldd	r25, Z+7	; 0x07
    11da:	02 c0       	rjmp	.+4      	; 0x11e0 <vfprintf+0x3c8>
    11dc:	8f ef       	ldi	r24, 0xFF	; 255
    11de:	9f ef       	ldi	r25, 0xFF	; 255
    11e0:	2b 96       	adiw	r28, 0x0b	; 11
    11e2:	0f b6       	in	r0, 0x3f	; 63
    11e4:	f8 94       	cli
    11e6:	de bf       	out	0x3e, r29	; 62
    11e8:	0f be       	out	0x3f, r0	; 63
    11ea:	cd bf       	out	0x3d, r28	; 61
    11ec:	df 91       	pop	r29
    11ee:	cf 91       	pop	r28
    11f0:	1f 91       	pop	r17
    11f2:	0f 91       	pop	r16
    11f4:	ff 90       	pop	r15
    11f6:	ef 90       	pop	r14
    11f8:	df 90       	pop	r13
    11fa:	cf 90       	pop	r12
    11fc:	bf 90       	pop	r11
    11fe:	af 90       	pop	r10
    1200:	9f 90       	pop	r9
    1202:	8f 90       	pop	r8
    1204:	7f 90       	pop	r7
    1206:	6f 90       	pop	r6
    1208:	5f 90       	pop	r5
    120a:	4f 90       	pop	r4
    120c:	3f 90       	pop	r3
    120e:	2f 90       	pop	r2
    1210:	08 95       	ret

00001212 <strnlen_P>:
    1212:	fc 01       	movw	r30, r24
    1214:	05 90       	lpm	r0, Z+
    1216:	61 50       	subi	r22, 0x01	; 1
    1218:	70 40       	sbci	r23, 0x00	; 0
    121a:	01 10       	cpse	r0, r1
    121c:	d8 f7       	brcc	.-10     	; 0x1214 <strnlen_P+0x2>
    121e:	80 95       	com	r24
    1220:	90 95       	com	r25
    1222:	8e 0f       	add	r24, r30
    1224:	9f 1f       	adc	r25, r31
    1226:	08 95       	ret

00001228 <strnlen>:
    1228:	fc 01       	movw	r30, r24
    122a:	61 50       	subi	r22, 0x01	; 1
    122c:	70 40       	sbci	r23, 0x00	; 0
    122e:	01 90       	ld	r0, Z+
    1230:	01 10       	cpse	r0, r1
    1232:	d8 f7       	brcc	.-10     	; 0x122a <strnlen+0x2>
    1234:	80 95       	com	r24
    1236:	90 95       	com	r25
    1238:	8e 0f       	add	r24, r30
    123a:	9f 1f       	adc	r25, r31
    123c:	08 95       	ret

0000123e <fputc>:
    123e:	0f 93       	push	r16
    1240:	1f 93       	push	r17
    1242:	cf 93       	push	r28
    1244:	df 93       	push	r29
    1246:	fb 01       	movw	r30, r22
    1248:	23 81       	ldd	r18, Z+3	; 0x03
    124a:	21 fd       	sbrc	r18, 1
    124c:	03 c0       	rjmp	.+6      	; 0x1254 <fputc+0x16>
    124e:	8f ef       	ldi	r24, 0xFF	; 255
    1250:	9f ef       	ldi	r25, 0xFF	; 255
    1252:	2c c0       	rjmp	.+88     	; 0x12ac <fputc+0x6e>
    1254:	22 ff       	sbrs	r18, 2
    1256:	16 c0       	rjmp	.+44     	; 0x1284 <fputc+0x46>
    1258:	46 81       	ldd	r20, Z+6	; 0x06
    125a:	57 81       	ldd	r21, Z+7	; 0x07
    125c:	24 81       	ldd	r18, Z+4	; 0x04
    125e:	35 81       	ldd	r19, Z+5	; 0x05
    1260:	42 17       	cp	r20, r18
    1262:	53 07       	cpc	r21, r19
    1264:	44 f4       	brge	.+16     	; 0x1276 <fputc+0x38>
    1266:	a0 81       	ld	r26, Z
    1268:	b1 81       	ldd	r27, Z+1	; 0x01
    126a:	9d 01       	movw	r18, r26
    126c:	2f 5f       	subi	r18, 0xFF	; 255
    126e:	3f 4f       	sbci	r19, 0xFF	; 255
    1270:	31 83       	std	Z+1, r19	; 0x01
    1272:	20 83       	st	Z, r18
    1274:	8c 93       	st	X, r24
    1276:	26 81       	ldd	r18, Z+6	; 0x06
    1278:	37 81       	ldd	r19, Z+7	; 0x07
    127a:	2f 5f       	subi	r18, 0xFF	; 255
    127c:	3f 4f       	sbci	r19, 0xFF	; 255
    127e:	37 83       	std	Z+7, r19	; 0x07
    1280:	26 83       	std	Z+6, r18	; 0x06
    1282:	14 c0       	rjmp	.+40     	; 0x12ac <fputc+0x6e>
    1284:	8b 01       	movw	r16, r22
    1286:	ec 01       	movw	r28, r24
    1288:	fb 01       	movw	r30, r22
    128a:	00 84       	ldd	r0, Z+8	; 0x08
    128c:	f1 85       	ldd	r31, Z+9	; 0x09
    128e:	e0 2d       	mov	r30, r0
    1290:	19 95       	eicall
    1292:	89 2b       	or	r24, r25
    1294:	e1 f6       	brne	.-72     	; 0x124e <fputc+0x10>
    1296:	d8 01       	movw	r26, r16
    1298:	16 96       	adiw	r26, 0x06	; 6
    129a:	8d 91       	ld	r24, X+
    129c:	9c 91       	ld	r25, X
    129e:	17 97       	sbiw	r26, 0x07	; 7
    12a0:	01 96       	adiw	r24, 0x01	; 1
    12a2:	17 96       	adiw	r26, 0x07	; 7
    12a4:	9c 93       	st	X, r25
    12a6:	8e 93       	st	-X, r24
    12a8:	16 97       	sbiw	r26, 0x06	; 6
    12aa:	ce 01       	movw	r24, r28
    12ac:	df 91       	pop	r29
    12ae:	cf 91       	pop	r28
    12b0:	1f 91       	pop	r17
    12b2:	0f 91       	pop	r16
    12b4:	08 95       	ret

000012b6 <__ultoa_invert>:
    12b6:	fa 01       	movw	r30, r20
    12b8:	aa 27       	eor	r26, r26
    12ba:	28 30       	cpi	r18, 0x08	; 8
    12bc:	51 f1       	breq	.+84     	; 0x1312 <__ultoa_invert+0x5c>
    12be:	20 31       	cpi	r18, 0x10	; 16
    12c0:	81 f1       	breq	.+96     	; 0x1322 <__ultoa_invert+0x6c>
    12c2:	e8 94       	clt
    12c4:	6f 93       	push	r22
    12c6:	6e 7f       	andi	r22, 0xFE	; 254
    12c8:	6e 5f       	subi	r22, 0xFE	; 254
    12ca:	7f 4f       	sbci	r23, 0xFF	; 255
    12cc:	8f 4f       	sbci	r24, 0xFF	; 255
    12ce:	9f 4f       	sbci	r25, 0xFF	; 255
    12d0:	af 4f       	sbci	r26, 0xFF	; 255
    12d2:	b1 e0       	ldi	r27, 0x01	; 1
    12d4:	3e d0       	rcall	.+124    	; 0x1352 <__ultoa_invert+0x9c>
    12d6:	b4 e0       	ldi	r27, 0x04	; 4
    12d8:	3c d0       	rcall	.+120    	; 0x1352 <__ultoa_invert+0x9c>
    12da:	67 0f       	add	r22, r23
    12dc:	78 1f       	adc	r23, r24
    12de:	89 1f       	adc	r24, r25
    12e0:	9a 1f       	adc	r25, r26
    12e2:	a1 1d       	adc	r26, r1
    12e4:	68 0f       	add	r22, r24
    12e6:	79 1f       	adc	r23, r25
    12e8:	8a 1f       	adc	r24, r26
    12ea:	91 1d       	adc	r25, r1
    12ec:	a1 1d       	adc	r26, r1
    12ee:	6a 0f       	add	r22, r26
    12f0:	71 1d       	adc	r23, r1
    12f2:	81 1d       	adc	r24, r1
    12f4:	91 1d       	adc	r25, r1
    12f6:	a1 1d       	adc	r26, r1
    12f8:	20 d0       	rcall	.+64     	; 0x133a <__ultoa_invert+0x84>
    12fa:	09 f4       	brne	.+2      	; 0x12fe <__ultoa_invert+0x48>
    12fc:	68 94       	set
    12fe:	3f 91       	pop	r19
    1300:	2a e0       	ldi	r18, 0x0A	; 10
    1302:	26 9f       	mul	r18, r22
    1304:	11 24       	eor	r1, r1
    1306:	30 19       	sub	r19, r0
    1308:	30 5d       	subi	r19, 0xD0	; 208
    130a:	31 93       	st	Z+, r19
    130c:	de f6       	brtc	.-74     	; 0x12c4 <__ultoa_invert+0xe>
    130e:	cf 01       	movw	r24, r30
    1310:	08 95       	ret
    1312:	46 2f       	mov	r20, r22
    1314:	47 70       	andi	r20, 0x07	; 7
    1316:	40 5d       	subi	r20, 0xD0	; 208
    1318:	41 93       	st	Z+, r20
    131a:	b3 e0       	ldi	r27, 0x03	; 3
    131c:	0f d0       	rcall	.+30     	; 0x133c <__ultoa_invert+0x86>
    131e:	c9 f7       	brne	.-14     	; 0x1312 <__ultoa_invert+0x5c>
    1320:	f6 cf       	rjmp	.-20     	; 0x130e <__ultoa_invert+0x58>
    1322:	46 2f       	mov	r20, r22
    1324:	4f 70       	andi	r20, 0x0F	; 15
    1326:	40 5d       	subi	r20, 0xD0	; 208
    1328:	4a 33       	cpi	r20, 0x3A	; 58
    132a:	18 f0       	brcs	.+6      	; 0x1332 <__ultoa_invert+0x7c>
    132c:	49 5d       	subi	r20, 0xD9	; 217
    132e:	31 fd       	sbrc	r19, 1
    1330:	40 52       	subi	r20, 0x20	; 32
    1332:	41 93       	st	Z+, r20
    1334:	02 d0       	rcall	.+4      	; 0x133a <__ultoa_invert+0x84>
    1336:	a9 f7       	brne	.-22     	; 0x1322 <__ultoa_invert+0x6c>
    1338:	ea cf       	rjmp	.-44     	; 0x130e <__ultoa_invert+0x58>
    133a:	b4 e0       	ldi	r27, 0x04	; 4
    133c:	a6 95       	lsr	r26
    133e:	97 95       	ror	r25
    1340:	87 95       	ror	r24
    1342:	77 95       	ror	r23
    1344:	67 95       	ror	r22
    1346:	ba 95       	dec	r27
    1348:	c9 f7       	brne	.-14     	; 0x133c <__ultoa_invert+0x86>
    134a:	00 97       	sbiw	r24, 0x00	; 0
    134c:	61 05       	cpc	r22, r1
    134e:	71 05       	cpc	r23, r1
    1350:	08 95       	ret
    1352:	9b 01       	movw	r18, r22
    1354:	ac 01       	movw	r20, r24
    1356:	0a 2e       	mov	r0, r26
    1358:	06 94       	lsr	r0
    135a:	57 95       	ror	r21
    135c:	47 95       	ror	r20
    135e:	37 95       	ror	r19
    1360:	27 95       	ror	r18
    1362:	ba 95       	dec	r27
    1364:	c9 f7       	brne	.-14     	; 0x1358 <__ultoa_invert+0xa2>
    1366:	62 0f       	add	r22, r18
    1368:	73 1f       	adc	r23, r19
    136a:	84 1f       	adc	r24, r20
    136c:	95 1f       	adc	r25, r21
    136e:	a0 1d       	adc	r26, r0
    1370:	08 95       	ret

00001372 <_exit>:
    1372:	f8 94       	cli

00001374 <__stop_program>:
    1374:	ff cf       	rjmp	.-2      	; 0x1374 <__stop_program>
