
SEP4IOT.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000672  00800200  0000645e  000064f2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000645e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000012ac  00800872  00800872  00006b64  2**0
                  ALLOC
  3 .comment      0000008c  00000000  00000000  00006b64  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00006bf0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000be8  00000000  00000000  00006c30  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000eecf  00000000  00000000  00007818  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00003ccd  00000000  00000000  000166e7  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000071ee  00000000  00000000  0001a3b4  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000297c  00000000  00000000  000215a4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00004668  00000000  00000000  00023f20  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000daa7  00000000  00000000  00028588  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000bf0  00000000  00000000  0003602f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	50 c2       	rjmp	.+1184   	; 0x4a2 <__ctors_end>
       2:	00 00       	nop
       4:	6f c2       	rjmp	.+1246   	; 0x4e4 <__bad_interrupt>
       6:	00 00       	nop
       8:	6d c2       	rjmp	.+1242   	; 0x4e4 <__bad_interrupt>
       a:	00 00       	nop
       c:	6b c2       	rjmp	.+1238   	; 0x4e4 <__bad_interrupt>
       e:	00 00       	nop
      10:	69 c2       	rjmp	.+1234   	; 0x4e4 <__bad_interrupt>
      12:	00 00       	nop
      14:	67 c2       	rjmp	.+1230   	; 0x4e4 <__bad_interrupt>
      16:	00 00       	nop
      18:	65 c2       	rjmp	.+1226   	; 0x4e4 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	63 c2       	rjmp	.+1222   	; 0x4e4 <__bad_interrupt>
      1e:	00 00       	nop
      20:	61 c2       	rjmp	.+1218   	; 0x4e4 <__bad_interrupt>
      22:	00 00       	nop
      24:	5f c2       	rjmp	.+1214   	; 0x4e4 <__bad_interrupt>
      26:	00 00       	nop
      28:	5d c2       	rjmp	.+1210   	; 0x4e4 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	5b c2       	rjmp	.+1206   	; 0x4e4 <__bad_interrupt>
      2e:	00 00       	nop
      30:	0c 94 5a 0d 	jmp	0x1ab4	; 0x1ab4 <__vector_12>
      34:	57 c2       	rjmp	.+1198   	; 0x4e4 <__bad_interrupt>
      36:	00 00       	nop
      38:	55 c2       	rjmp	.+1194   	; 0x4e4 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	53 c2       	rjmp	.+1190   	; 0x4e4 <__bad_interrupt>
      3e:	00 00       	nop
      40:	51 c2       	rjmp	.+1186   	; 0x4e4 <__bad_interrupt>
      42:	00 00       	nop
      44:	4f c2       	rjmp	.+1182   	; 0x4e4 <__bad_interrupt>
      46:	00 00       	nop
      48:	4d c2       	rjmp	.+1178   	; 0x4e4 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	4b c2       	rjmp	.+1174   	; 0x4e4 <__bad_interrupt>
      4e:	00 00       	nop
      50:	49 c2       	rjmp	.+1170   	; 0x4e4 <__bad_interrupt>
      52:	00 00       	nop
      54:	47 c2       	rjmp	.+1166   	; 0x4e4 <__bad_interrupt>
      56:	00 00       	nop
      58:	45 c2       	rjmp	.+1162   	; 0x4e4 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	43 c2       	rjmp	.+1158   	; 0x4e4 <__bad_interrupt>
      5e:	00 00       	nop
      60:	41 c2       	rjmp	.+1154   	; 0x4e4 <__bad_interrupt>
      62:	00 00       	nop
      64:	0c 94 ff 26 	jmp	0x4dfe	; 0x4dfe <__vector_25>
      68:	0c 94 51 27 	jmp	0x4ea2	; 0x4ea2 <__vector_26>
      6c:	3b c2       	rjmp	.+1142   	; 0x4e4 <__bad_interrupt>
      6e:	00 00       	nop
      70:	39 c2       	rjmp	.+1138   	; 0x4e4 <__bad_interrupt>
      72:	00 00       	nop
      74:	37 c2       	rjmp	.+1134   	; 0x4e4 <__bad_interrupt>
      76:	00 00       	nop
      78:	35 c2       	rjmp	.+1130   	; 0x4e4 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	33 c2       	rjmp	.+1126   	; 0x4e4 <__bad_interrupt>
      7e:	00 00       	nop
      80:	31 c2       	rjmp	.+1122   	; 0x4e4 <__bad_interrupt>
      82:	00 00       	nop
      84:	2f c2       	rjmp	.+1118   	; 0x4e4 <__bad_interrupt>
      86:	00 00       	nop
      88:	2d c2       	rjmp	.+1114   	; 0x4e4 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	2b c2       	rjmp	.+1110   	; 0x4e4 <__bad_interrupt>
      8e:	00 00       	nop
      90:	0c 94 95 27 	jmp	0x4f2a	; 0x4f2a <__vector_36>
      94:	0c 94 e7 27 	jmp	0x4fce	; 0x4fce <__vector_37>
      98:	25 c2       	rjmp	.+1098   	; 0x4e4 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	0c 94 7f 2a 	jmp	0x54fe	; 0x54fe <__vector_39>
      a0:	21 c2       	rjmp	.+1090   	; 0x4e4 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	1f c2       	rjmp	.+1086   	; 0x4e4 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	1d c2       	rjmp	.+1082   	; 0x4e4 <__bad_interrupt>
      aa:	00 00       	nop
      ac:	1b c2       	rjmp	.+1078   	; 0x4e4 <__bad_interrupt>
      ae:	00 00       	nop
      b0:	19 c2       	rjmp	.+1074   	; 0x4e4 <__bad_interrupt>
      b2:	00 00       	nop
      b4:	17 c2       	rjmp	.+1070   	; 0x4e4 <__bad_interrupt>
      b6:	00 00       	nop
      b8:	15 c2       	rjmp	.+1066   	; 0x4e4 <__bad_interrupt>
      ba:	00 00       	nop
      bc:	13 c2       	rjmp	.+1062   	; 0x4e4 <__bad_interrupt>
      be:	00 00       	nop
      c0:	11 c2       	rjmp	.+1058   	; 0x4e4 <__bad_interrupt>
      c2:	00 00       	nop
      c4:	0f c2       	rjmp	.+1054   	; 0x4e4 <__bad_interrupt>
      c6:	00 00       	nop
      c8:	0d c2       	rjmp	.+1050   	; 0x4e4 <__bad_interrupt>
      ca:	00 00       	nop
      cc:	0c 94 2b 28 	jmp	0x5056	; 0x5056 <__vector_51>
      d0:	0c 94 7d 28 	jmp	0x50fa	; 0x50fa <__vector_52>
      d4:	07 c2       	rjmp	.+1038   	; 0x4e4 <__bad_interrupt>
      d6:	00 00       	nop
      d8:	0c 94 c1 28 	jmp	0x5182	; 0x5182 <__vector_54>
      dc:	0c 94 13 29 	jmp	0x5226	; 0x5226 <__vector_55>
      e0:	01 c2       	rjmp	.+1026   	; 0x4e4 <__bad_interrupt>
      e2:	00 00       	nop
      e4:	c6 01       	movw	r24, r12
      e6:	c6 01       	movw	r24, r12
      e8:	c6 01       	movw	r24, r12
      ea:	00 02       	muls	r16, r16
      ec:	08 02       	muls	r16, r24
      ee:	1e 02       	muls	r17, r30
      f0:	c6 01       	movw	r24, r12
      f2:	c6 01       	movw	r24, r12
      f4:	00 02       	muls	r16, r16
      f6:	08 02       	muls	r16, r24
      f8:	a1 2a       	or	r10, r17
      fa:	11 2b       	or	r17, r17
      fc:	11 2b       	or	r17, r17
      fe:	11 2b       	or	r17, r17
     100:	11 2b       	or	r17, r17
     102:	11 2b       	or	r17, r17
     104:	11 2b       	or	r17, r17
     106:	11 2b       	or	r17, r17
     108:	a1 2a       	or	r10, r17
     10a:	11 2b       	or	r17, r17
     10c:	11 2b       	or	r17, r17
     10e:	11 2b       	or	r17, r17
     110:	11 2b       	or	r17, r17
     112:	11 2b       	or	r17, r17
     114:	11 2b       	or	r17, r17
     116:	11 2b       	or	r17, r17
     118:	a3 2a       	or	r10, r19
     11a:	11 2b       	or	r17, r17
     11c:	11 2b       	or	r17, r17
     11e:	11 2b       	or	r17, r17
     120:	11 2b       	or	r17, r17
     122:	11 2b       	or	r17, r17
     124:	11 2b       	or	r17, r17
     126:	11 2b       	or	r17, r17
     128:	11 2b       	or	r17, r17
     12a:	11 2b       	or	r17, r17
     12c:	11 2b       	or	r17, r17
     12e:	11 2b       	or	r17, r17
     130:	11 2b       	or	r17, r17
     132:	11 2b       	or	r17, r17
     134:	11 2b       	or	r17, r17
     136:	11 2b       	or	r17, r17
     138:	a3 2a       	or	r10, r19
     13a:	11 2b       	or	r17, r17
     13c:	11 2b       	or	r17, r17
     13e:	11 2b       	or	r17, r17
     140:	11 2b       	or	r17, r17
     142:	11 2b       	or	r17, r17
     144:	11 2b       	or	r17, r17
     146:	11 2b       	or	r17, r17
     148:	11 2b       	or	r17, r17
     14a:	11 2b       	or	r17, r17
     14c:	11 2b       	or	r17, r17
     14e:	11 2b       	or	r17, r17
     150:	11 2b       	or	r17, r17
     152:	11 2b       	or	r17, r17
     154:	11 2b       	or	r17, r17
     156:	11 2b       	or	r17, r17
     158:	0d 2b       	or	r16, r29
     15a:	11 2b       	or	r17, r17
     15c:	11 2b       	or	r17, r17
     15e:	11 2b       	or	r17, r17
     160:	11 2b       	or	r17, r17
     162:	11 2b       	or	r17, r17
     164:	11 2b       	or	r17, r17
     166:	11 2b       	or	r17, r17
     168:	d8 2a       	or	r13, r24
     16a:	11 2b       	or	r17, r17
     16c:	11 2b       	or	r17, r17
     16e:	11 2b       	or	r17, r17
     170:	11 2b       	or	r17, r17
     172:	11 2b       	or	r17, r17
     174:	11 2b       	or	r17, r17
     176:	11 2b       	or	r17, r17
     178:	11 2b       	or	r17, r17
     17a:	11 2b       	or	r17, r17
     17c:	11 2b       	or	r17, r17
     17e:	11 2b       	or	r17, r17
     180:	11 2b       	or	r17, r17
     182:	11 2b       	or	r17, r17
     184:	11 2b       	or	r17, r17
     186:	11 2b       	or	r17, r17
     188:	cc 2a       	or	r12, r28
     18a:	11 2b       	or	r17, r17
     18c:	11 2b       	or	r17, r17
     18e:	11 2b       	or	r17, r17
     190:	11 2b       	or	r17, r17
     192:	11 2b       	or	r17, r17
     194:	11 2b       	or	r17, r17
     196:	11 2b       	or	r17, r17
     198:	f0 2a       	or	r15, r16

0000019a <prvIdleTask>:
     19a:	0d e0       	ldi	r16, 0x0D	; 13
     19c:	19 e1       	ldi	r17, 0x19	; 25
     19e:	0f 2e       	mov	r0, r31
     1a0:	fd e3       	ldi	r31, 0x3D	; 61
     1a2:	ef 2e       	mov	r14, r31
     1a4:	f9 e1       	ldi	r31, 0x19	; 25
     1a6:	ff 2e       	mov	r15, r31
     1a8:	f0 2d       	mov	r31, r0
     1aa:	80 91 0c 19 	lds	r24, 0x190C	; 0x80190c <uxDeletedTasksWaitingCleanUp>
     1ae:	88 23       	and	r24, r24
     1b0:	29 f1       	breq	.+74     	; 0x1fc <prvIdleTask+0x62>
     1b2:	0f b6       	in	r0, 0x3f	; 63
     1b4:	f8 94       	cli
     1b6:	0f 92       	push	r0
     1b8:	d8 01       	movw	r26, r16
     1ba:	17 96       	adiw	r26, 0x07	; 7
     1bc:	ed 91       	ld	r30, X+
     1be:	fc 91       	ld	r31, X
     1c0:	18 97       	sbiw	r26, 0x08	; 8
     1c2:	c0 85       	ldd	r28, Z+8	; 0x08
     1c4:	d1 85       	ldd	r29, Z+9	; 0x09
     1c6:	ce 01       	movw	r24, r28
     1c8:	02 96       	adiw	r24, 0x02	; 2
     1ca:	0e 94 bf 0b 	call	0x177e	; 0x177e <uxListRemove>
     1ce:	80 91 00 19 	lds	r24, 0x1900	; 0x801900 <uxCurrentNumberOfTasks>
     1d2:	81 50       	subi	r24, 0x01	; 1
     1d4:	80 93 00 19 	sts	0x1900, r24	; 0x801900 <uxCurrentNumberOfTasks>
     1d8:	80 91 0c 19 	lds	r24, 0x190C	; 0x80190c <uxDeletedTasksWaitingCleanUp>
     1dc:	81 50       	subi	r24, 0x01	; 1
     1de:	80 93 0c 19 	sts	0x190C, r24	; 0x80190c <uxDeletedTasksWaitingCleanUp>
     1e2:	0f 90       	pop	r0
     1e4:	0f be       	out	0x3f, r0	; 63
     1e6:	8b 8d       	ldd	r24, Y+27	; 0x1b
     1e8:	9c 8d       	ldd	r25, Y+28	; 0x1c
     1ea:	0e 94 1b 0b 	call	0x1636	; 0x1636 <vPortFree>
     1ee:	ce 01       	movw	r24, r28
     1f0:	0e 94 1b 0b 	call	0x1636	; 0x1636 <vPortFree>
     1f4:	80 91 0c 19 	lds	r24, 0x190C	; 0x80190c <uxDeletedTasksWaitingCleanUp>
     1f8:	81 11       	cpse	r24, r1
     1fa:	db cf       	rjmp	.-74     	; 0x1b2 <prvIdleTask+0x18>
     1fc:	f7 01       	movw	r30, r14
     1fe:	80 81       	ld	r24, Z
     200:	82 30       	cpi	r24, 0x02	; 2
     202:	10 f0       	brcs	.+4      	; 0x208 <prvIdleTask+0x6e>
     204:	0e 94 94 0c 	call	0x1928	; 0x1928 <vPortYield>
     208:	0e 94 ac 1d 	call	0x3b58	; 0x3b58 <vApplicationIdleHook>
     20c:	ce cf       	rjmp	.-100    	; 0x1aa <prvIdleTask+0x10>

0000020e <prvTimerTask>:
     20e:	cf 93       	push	r28
     210:	df 93       	push	r29
     212:	cd b7       	in	r28, 0x3d	; 61
     214:	de b7       	in	r29, 0x3e	; 62
     216:	60 97       	sbiw	r28, 0x10	; 16
     218:	0f b6       	in	r0, 0x3f	; 63
     21a:	f8 94       	cli
     21c:	de bf       	out	0x3e, r29	; 62
     21e:	0f be       	out	0x3f, r0	; 63
     220:	cd bf       	out	0x3d, r28	; 61
     222:	ce 01       	movw	r24, r28
     224:	01 96       	adiw	r24, 0x01	; 1
     226:	9a 87       	std	Y+10, r25	; 0x0a
     228:	89 87       	std	Y+9, r24	; 0x09
     22a:	81 2c       	mov	r8, r1
     22c:	91 2c       	mov	r9, r1
     22e:	a1 2c       	mov	r10, r1
     230:	b1 2c       	mov	r11, r1
     232:	69 84       	ldd	r6, Y+9	; 0x09
     234:	7a 84       	ldd	r7, Y+10	; 0x0a
     236:	e0 91 75 19 	lds	r30, 0x1975	; 0x801975 <pxCurrentTimerList>
     23a:	f0 91 76 19 	lds	r31, 0x1976	; 0x801976 <pxCurrentTimerList+0x1>
     23e:	80 81       	ld	r24, Z
     240:	88 23       	and	r24, r24
     242:	09 f4       	brne	.+2      	; 0x246 <prvTimerTask+0x38>
     244:	14 c1       	rjmp	.+552    	; 0x46e <__LOCK_REGION_LENGTH__+0x6e>
     246:	07 80       	ldd	r0, Z+7	; 0x07
     248:	f0 85       	ldd	r31, Z+8	; 0x08
     24a:	e0 2d       	mov	r30, r0
     24c:	20 80       	ld	r2, Z
     24e:	31 80       	ldd	r3, Z+1	; 0x01
     250:	42 80       	ldd	r4, Z+2	; 0x02
     252:	53 80       	ldd	r5, Z+3	; 0x03
     254:	0e 94 f1 15 	call	0x2be2	; 0x2be2 <vTaskSuspendAll>
     258:	ce 01       	movw	r24, r28
     25a:	01 96       	adiw	r24, 0x01	; 1
     25c:	0e 94 16 1d 	call	0x3a2c	; 0x3a2c <prvSampleTimeNow>
     260:	6b 87       	std	Y+11, r22	; 0x0b
     262:	7c 87       	std	Y+12, r23	; 0x0c
     264:	8d 87       	std	Y+13, r24	; 0x0d
     266:	9e 87       	std	Y+14, r25	; 0x0e
     268:	89 81       	ldd	r24, Y+1	; 0x01
     26a:	81 11       	cpse	r24, r1
     26c:	67 c0       	rjmp	.+206    	; 0x33c <prvTimerTask+0x12e>
     26e:	8b 85       	ldd	r24, Y+11	; 0x0b
     270:	9c 85       	ldd	r25, Y+12	; 0x0c
     272:	ad 85       	ldd	r26, Y+13	; 0x0d
     274:	be 85       	ldd	r27, Y+14	; 0x0e
     276:	82 15       	cp	r24, r2
     278:	93 05       	cpc	r25, r3
     27a:	a4 05       	cpc	r26, r4
     27c:	b5 05       	cpc	r27, r5
     27e:	08 f4       	brcc	.+2      	; 0x282 <prvTimerTask+0x74>
     280:	45 c0       	rjmp	.+138    	; 0x30c <prvTimerTask+0xfe>
     282:	0e 94 da 16 	call	0x2db4	; 0x2db4 <xTaskResumeAll>
     286:	e0 91 75 19 	lds	r30, 0x1975	; 0x801975 <pxCurrentTimerList>
     28a:	f0 91 76 19 	lds	r31, 0x1976	; 0x801976 <pxCurrentTimerList+0x1>
     28e:	07 80       	ldd	r0, Z+7	; 0x07
     290:	f0 85       	ldd	r31, Z+8	; 0x08
     292:	e0 2d       	mov	r30, r0
     294:	a0 85       	ldd	r26, Z+8	; 0x08
     296:	b1 85       	ldd	r27, Z+9	; 0x09
     298:	b8 8b       	std	Y+16, r27	; 0x10
     29a:	af 87       	std	Y+15, r26	; 0x0f
     29c:	cd 01       	movw	r24, r26
     29e:	02 96       	adiw	r24, 0x02	; 2
     2a0:	0e 94 bf 0b 	call	0x177e	; 0x177e <uxListRemove>
     2a4:	ef 85       	ldd	r30, Y+15	; 0x0f
     2a6:	f8 89       	ldd	r31, Y+16	; 0x10
     2a8:	87 89       	ldd	r24, Z+23	; 0x17
     2aa:	82 ff       	sbrs	r24, 2
     2ac:	21 c0       	rjmp	.+66     	; 0x2f0 <prvTimerTask+0xe2>
     2ae:	46 85       	ldd	r20, Z+14	; 0x0e
     2b0:	57 85       	ldd	r21, Z+15	; 0x0f
     2b2:	60 89       	ldd	r22, Z+16	; 0x10
     2b4:	71 89       	ldd	r23, Z+17	; 0x11
     2b6:	42 0d       	add	r20, r2
     2b8:	53 1d       	adc	r21, r3
     2ba:	64 1d       	adc	r22, r4
     2bc:	75 1d       	adc	r23, r5
     2be:	72 01       	movw	r14, r4
     2c0:	61 01       	movw	r12, r2
     2c2:	0b 85       	ldd	r16, Y+11	; 0x0b
     2c4:	1c 85       	ldd	r17, Y+12	; 0x0c
     2c6:	2d 85       	ldd	r18, Y+13	; 0x0d
     2c8:	3e 85       	ldd	r19, Y+14	; 0x0e
     2ca:	cf 01       	movw	r24, r30
     2cc:	0e 94 25 1c 	call	0x384a	; 0x384a <prvInsertTimerInActiveList>
     2d0:	88 23       	and	r24, r24
     2d2:	99 f0       	breq	.+38     	; 0x2fa <prvTimerTask+0xec>
     2d4:	c8 2c       	mov	r12, r8
     2d6:	d9 2c       	mov	r13, r9
     2d8:	ea 2c       	mov	r14, r10
     2da:	fb 2c       	mov	r15, r11
     2dc:	00 e0       	ldi	r16, 0x00	; 0
     2de:	10 e0       	ldi	r17, 0x00	; 0
     2e0:	a2 01       	movw	r20, r4
     2e2:	91 01       	movw	r18, r2
     2e4:	60 e0       	ldi	r22, 0x00	; 0
     2e6:	8f 85       	ldd	r24, Y+15	; 0x0f
     2e8:	98 89       	ldd	r25, Y+16	; 0x10
     2ea:	0e 94 b8 1c 	call	0x3970	; 0x3970 <xTimerGenericCommand>
     2ee:	05 c0       	rjmp	.+10     	; 0x2fa <prvTimerTask+0xec>
     2f0:	8e 7f       	andi	r24, 0xFE	; 254
     2f2:	af 85       	ldd	r26, Y+15	; 0x0f
     2f4:	b8 89       	ldd	r27, Y+16	; 0x10
     2f6:	57 96       	adiw	r26, 0x17	; 23
     2f8:	8c 93       	st	X, r24
     2fa:	af 85       	ldd	r26, Y+15	; 0x0f
     2fc:	b8 89       	ldd	r27, Y+16	; 0x10
     2fe:	54 96       	adiw	r26, 0x14	; 20
     300:	ed 91       	ld	r30, X+
     302:	fc 91       	ld	r31, X
     304:	55 97       	sbiw	r26, 0x15	; 21
     306:	cd 01       	movw	r24, r26
     308:	19 95       	eicall
     30a:	a2 c0       	rjmp	.+324    	; 0x450 <__LOCK_REGION_LENGTH__+0x50>
     30c:	20 e0       	ldi	r18, 0x00	; 0
     30e:	b2 01       	movw	r22, r4
     310:	a1 01       	movw	r20, r2
     312:	8b 85       	ldd	r24, Y+11	; 0x0b
     314:	9c 85       	ldd	r25, Y+12	; 0x0c
     316:	ad 85       	ldd	r26, Y+13	; 0x0d
     318:	be 85       	ldd	r27, Y+14	; 0x0e
     31a:	48 1b       	sub	r20, r24
     31c:	59 0b       	sbc	r21, r25
     31e:	6a 0b       	sbc	r22, r26
     320:	7b 0b       	sbc	r23, r27
     322:	80 91 71 19 	lds	r24, 0x1971	; 0x801971 <xTimerQueue>
     326:	90 91 72 19 	lds	r25, 0x1972	; 0x801972 <xTimerQueue+0x1>
     32a:	0e 94 f6 10 	call	0x21ec	; 0x21ec <vQueueWaitForMessageRestricted>
     32e:	0e 94 da 16 	call	0x2db4	; 0x2db4 <xTaskResumeAll>
     332:	81 11       	cpse	r24, r1
     334:	8d c0       	rjmp	.+282    	; 0x450 <__LOCK_REGION_LENGTH__+0x50>
     336:	0e 94 94 0c 	call	0x1928	; 0x1928 <vPortYield>
     33a:	8a c0       	rjmp	.+276    	; 0x450 <__LOCK_REGION_LENGTH__+0x50>
     33c:	0e 94 da 16 	call	0x2db4	; 0x2db4 <xTaskResumeAll>
     340:	87 c0       	rjmp	.+270    	; 0x450 <__LOCK_REGION_LENGTH__+0x50>
     342:	89 81       	ldd	r24, Y+1	; 0x01
     344:	88 23       	and	r24, r24
     346:	0c f4       	brge	.+2      	; 0x34a <prvTimerTask+0x13c>
     348:	83 c0       	rjmp	.+262    	; 0x450 <__LOCK_REGION_LENGTH__+0x50>
     34a:	4e 80       	ldd	r4, Y+6	; 0x06
     34c:	5f 80       	ldd	r5, Y+7	; 0x07
     34e:	d2 01       	movw	r26, r4
     350:	1c 96       	adiw	r26, 0x0c	; 12
     352:	8d 91       	ld	r24, X+
     354:	9c 91       	ld	r25, X
     356:	1d 97       	sbiw	r26, 0x0d	; 13
     358:	89 2b       	or	r24, r25
     35a:	21 f0       	breq	.+8      	; 0x364 <prvTimerTask+0x156>
     35c:	c2 01       	movw	r24, r4
     35e:	02 96       	adiw	r24, 0x02	; 2
     360:	0e 94 bf 0b 	call	0x177e	; 0x177e <uxListRemove>
     364:	ce 01       	movw	r24, r28
     366:	08 96       	adiw	r24, 0x08	; 8
     368:	0e 94 16 1d 	call	0x3a2c	; 0x3a2c <prvSampleTimeNow>
     36c:	8b 01       	movw	r16, r22
     36e:	9c 01       	movw	r18, r24
     370:	e9 81       	ldd	r30, Y+1	; 0x01
     372:	0e 2e       	mov	r0, r30
     374:	00 0c       	add	r0, r0
     376:	ff 0b       	sbc	r31, r31
     378:	ea 30       	cpi	r30, 0x0A	; 10
     37a:	f1 05       	cpc	r31, r1
     37c:	08 f0       	brcs	.+2      	; 0x380 <prvTimerTask+0x172>
     37e:	68 c0       	rjmp	.+208    	; 0x450 <__LOCK_REGION_LENGTH__+0x50>
     380:	88 27       	eor	r24, r24
     382:	ee 58       	subi	r30, 0x8E	; 142
     384:	ff 4f       	sbci	r31, 0xFF	; 255
     386:	8f 4f       	sbci	r24, 0xFF	; 255
     388:	0c 94 69 2d 	jmp	0x5ad2	; 0x5ad2 <__tablejump2__>
     38c:	f2 01       	movw	r30, r4
     38e:	87 89       	ldd	r24, Z+23	; 0x17
     390:	81 60       	ori	r24, 0x01	; 1
     392:	87 8b       	std	Z+23, r24	; 0x17
     394:	ca 80       	ldd	r12, Y+2	; 0x02
     396:	db 80       	ldd	r13, Y+3	; 0x03
     398:	ec 80       	ldd	r14, Y+4	; 0x04
     39a:	fd 80       	ldd	r15, Y+5	; 0x05
     39c:	46 85       	ldd	r20, Z+14	; 0x0e
     39e:	57 85       	ldd	r21, Z+15	; 0x0f
     3a0:	60 89       	ldd	r22, Z+16	; 0x10
     3a2:	71 89       	ldd	r23, Z+17	; 0x11
     3a4:	4c 0d       	add	r20, r12
     3a6:	5d 1d       	adc	r21, r13
     3a8:	6e 1d       	adc	r22, r14
     3aa:	7f 1d       	adc	r23, r15
     3ac:	c2 01       	movw	r24, r4
     3ae:	0e 94 25 1c 	call	0x384a	; 0x384a <prvInsertTimerInActiveList>
     3b2:	88 23       	and	r24, r24
     3b4:	09 f4       	brne	.+2      	; 0x3b8 <prvTimerTask+0x1aa>
     3b6:	4c c0       	rjmp	.+152    	; 0x450 <__LOCK_REGION_LENGTH__+0x50>
     3b8:	d2 01       	movw	r26, r4
     3ba:	54 96       	adiw	r26, 0x14	; 20
     3bc:	ed 91       	ld	r30, X+
     3be:	fc 91       	ld	r31, X
     3c0:	55 97       	sbiw	r26, 0x15	; 21
     3c2:	c2 01       	movw	r24, r4
     3c4:	19 95       	eicall
     3c6:	f2 01       	movw	r30, r4
     3c8:	87 89       	ldd	r24, Z+23	; 0x17
     3ca:	82 ff       	sbrs	r24, 2
     3cc:	41 c0       	rjmp	.+130    	; 0x450 <__LOCK_REGION_LENGTH__+0x50>
     3ce:	4a 81       	ldd	r20, Y+2	; 0x02
     3d0:	5b 81       	ldd	r21, Y+3	; 0x03
     3d2:	6c 81       	ldd	r22, Y+4	; 0x04
     3d4:	7d 81       	ldd	r23, Y+5	; 0x05
     3d6:	86 85       	ldd	r24, Z+14	; 0x0e
     3d8:	97 85       	ldd	r25, Z+15	; 0x0f
     3da:	a0 89       	ldd	r26, Z+16	; 0x10
     3dc:	b1 89       	ldd	r27, Z+17	; 0x11
     3de:	9a 01       	movw	r18, r20
     3e0:	ab 01       	movw	r20, r22
     3e2:	28 0f       	add	r18, r24
     3e4:	39 1f       	adc	r19, r25
     3e6:	4a 1f       	adc	r20, r26
     3e8:	5b 1f       	adc	r21, r27
     3ea:	c8 2c       	mov	r12, r8
     3ec:	d9 2c       	mov	r13, r9
     3ee:	ea 2c       	mov	r14, r10
     3f0:	fb 2c       	mov	r15, r11
     3f2:	00 e0       	ldi	r16, 0x00	; 0
     3f4:	10 e0       	ldi	r17, 0x00	; 0
     3f6:	60 e0       	ldi	r22, 0x00	; 0
     3f8:	c2 01       	movw	r24, r4
     3fa:	0e 94 b8 1c 	call	0x3970	; 0x3970 <xTimerGenericCommand>
     3fe:	28 c0       	rjmp	.+80     	; 0x450 <__LOCK_REGION_LENGTH__+0x50>
     400:	d2 01       	movw	r26, r4
     402:	57 96       	adiw	r26, 0x17	; 23
     404:	8c 91       	ld	r24, X
     406:	57 97       	sbiw	r26, 0x17	; 23
     408:	8e 7f       	andi	r24, 0xFE	; 254
     40a:	57 96       	adiw	r26, 0x17	; 23
     40c:	8c 93       	st	X, r24
     40e:	20 c0       	rjmp	.+64     	; 0x450 <__LOCK_REGION_LENGTH__+0x50>
     410:	f2 01       	movw	r30, r4
     412:	87 89       	ldd	r24, Z+23	; 0x17
     414:	81 60       	ori	r24, 0x01	; 1
     416:	87 8b       	std	Z+23, r24	; 0x17
     418:	4a 81       	ldd	r20, Y+2	; 0x02
     41a:	5b 81       	ldd	r21, Y+3	; 0x03
     41c:	6c 81       	ldd	r22, Y+4	; 0x04
     41e:	7d 81       	ldd	r23, Y+5	; 0x05
     420:	46 87       	std	Z+14, r20	; 0x0e
     422:	57 87       	std	Z+15, r21	; 0x0f
     424:	60 8b       	std	Z+16, r22	; 0x10
     426:	71 8b       	std	Z+17, r23	; 0x11
     428:	40 0f       	add	r20, r16
     42a:	51 1f       	adc	r21, r17
     42c:	62 1f       	adc	r22, r18
     42e:	73 1f       	adc	r23, r19
     430:	68 01       	movw	r12, r16
     432:	79 01       	movw	r14, r18
     434:	c2 01       	movw	r24, r4
     436:	0e 94 25 1c 	call	0x384a	; 0x384a <prvInsertTimerInActiveList>
     43a:	0a c0       	rjmp	.+20     	; 0x450 <__LOCK_REGION_LENGTH__+0x50>
     43c:	f2 01       	movw	r30, r4
     43e:	87 89       	ldd	r24, Z+23	; 0x17
     440:	81 fd       	sbrc	r24, 1
     442:	04 c0       	rjmp	.+8      	; 0x44c <__LOCK_REGION_LENGTH__+0x4c>
     444:	c2 01       	movw	r24, r4
     446:	0e 94 1b 0b 	call	0x1636	; 0x1636 <vPortFree>
     44a:	02 c0       	rjmp	.+4      	; 0x450 <__LOCK_REGION_LENGTH__+0x50>
     44c:	8e 7f       	andi	r24, 0xFE	; 254
     44e:	87 8b       	std	Z+23, r24	; 0x17
     450:	28 2d       	mov	r18, r8
     452:	39 2d       	mov	r19, r9
     454:	4a 2d       	mov	r20, r10
     456:	5b 2d       	mov	r21, r11
     458:	66 2d       	mov	r22, r6
     45a:	77 2d       	mov	r23, r7
     45c:	80 91 71 19 	lds	r24, 0x1971	; 0x801971 <xTimerQueue>
     460:	90 91 72 19 	lds	r25, 0x1972	; 0x801972 <xTimerQueue+0x1>
     464:	0e 94 92 0f 	call	0x1f24	; 0x1f24 <xQueueReceive>
     468:	81 11       	cpse	r24, r1
     46a:	6b cf       	rjmp	.-298    	; 0x342 <prvTimerTask+0x134>
     46c:	e4 ce       	rjmp	.-568    	; 0x236 <prvTimerTask+0x28>
     46e:	0e 94 f1 15 	call	0x2be2	; 0x2be2 <vTaskSuspendAll>
     472:	ce 01       	movw	r24, r28
     474:	01 96       	adiw	r24, 0x01	; 1
     476:	0e 94 16 1d 	call	0x3a2c	; 0x3a2c <prvSampleTimeNow>
     47a:	6b 87       	std	Y+11, r22	; 0x0b
     47c:	7c 87       	std	Y+12, r23	; 0x0c
     47e:	8d 87       	std	Y+13, r24	; 0x0d
     480:	9e 87       	std	Y+14, r25	; 0x0e
     482:	89 81       	ldd	r24, Y+1	; 0x01
     484:	81 11       	cpse	r24, r1
     486:	5a cf       	rjmp	.-332    	; 0x33c <prvTimerTask+0x12e>
     488:	e0 91 73 19 	lds	r30, 0x1973	; 0x801973 <pxOverflowTimerList>
     48c:	f0 91 74 19 	lds	r31, 0x1974	; 0x801974 <pxOverflowTimerList+0x1>
     490:	80 81       	ld	r24, Z
     492:	21 e0       	ldi	r18, 0x01	; 1
     494:	81 11       	cpse	r24, r1
     496:	20 e0       	ldi	r18, 0x00	; 0
     498:	28 2c       	mov	r2, r8
     49a:	39 2c       	mov	r3, r9
     49c:	4a 2c       	mov	r4, r10
     49e:	5b 2c       	mov	r5, r11
     4a0:	36 cf       	rjmp	.-404    	; 0x30e <prvTimerTask+0x100>

000004a2 <__ctors_end>:
     4a2:	11 24       	eor	r1, r1
     4a4:	1f be       	out	0x3f, r1	; 63
     4a6:	cf ef       	ldi	r28, 0xFF	; 255
     4a8:	d1 e2       	ldi	r29, 0x21	; 33
     4aa:	de bf       	out	0x3e, r29	; 62
     4ac:	cd bf       	out	0x3d, r28	; 61
     4ae:	00 e0       	ldi	r16, 0x00	; 0
     4b0:	0c bf       	out	0x3c, r16	; 60

000004b2 <__do_copy_data>:
     4b2:	18 e0       	ldi	r17, 0x08	; 8
     4b4:	a0 e0       	ldi	r26, 0x00	; 0
     4b6:	b2 e0       	ldi	r27, 0x02	; 2
     4b8:	ee e5       	ldi	r30, 0x5E	; 94
     4ba:	f4 e6       	ldi	r31, 0x64	; 100
     4bc:	00 e0       	ldi	r16, 0x00	; 0
     4be:	0b bf       	out	0x3b, r16	; 59
     4c0:	02 c0       	rjmp	.+4      	; 0x4c6 <__do_copy_data+0x14>
     4c2:	07 90       	elpm	r0, Z+
     4c4:	0d 92       	st	X+, r0
     4c6:	a2 37       	cpi	r26, 0x72	; 114
     4c8:	b1 07       	cpc	r27, r17
     4ca:	d9 f7       	brne	.-10     	; 0x4c2 <__do_copy_data+0x10>

000004cc <__do_clear_bss>:
     4cc:	2b e1       	ldi	r18, 0x1B	; 27
     4ce:	a2 e7       	ldi	r26, 0x72	; 114
     4d0:	b8 e0       	ldi	r27, 0x08	; 8
     4d2:	01 c0       	rjmp	.+2      	; 0x4d6 <.do_clear_bss_start>

000004d4 <.do_clear_bss_loop>:
     4d4:	1d 92       	st	X+, r1

000004d6 <.do_clear_bss_start>:
     4d6:	ae 31       	cpi	r26, 0x1E	; 30
     4d8:	b2 07       	cpc	r27, r18
     4da:	e1 f7       	brne	.-8      	; 0x4d4 <.do_clear_bss_loop>
     4dc:	0e 94 75 1e 	call	0x3cea	; 0x3cea <main>
     4e0:	0c 94 2d 32 	jmp	0x645a	; 0x645a <_exit>

000004e4 <__bad_interrupt>:
     4e4:	8d cd       	rjmp	.-1254   	; 0x0 <__vectors>

000004e6 <co2Reader_create>:
     4e6:	2f 92       	push	r2
     4e8:	3f 92       	push	r3
     4ea:	4f 92       	push	r4
     4ec:	5f 92       	push	r5
     4ee:	6f 92       	push	r6
     4f0:	7f 92       	push	r7
     4f2:	8f 92       	push	r8
     4f4:	9f 92       	push	r9
     4f6:	af 92       	push	r10
     4f8:	bf 92       	push	r11
     4fa:	cf 92       	push	r12
     4fc:	df 92       	push	r13
     4fe:	ef 92       	push	r14
     500:	ff 92       	push	r15
     502:	0f 93       	push	r16
     504:	1f 93       	push	r17
     506:	cf 93       	push	r28
     508:	df 93       	push	r29
     50a:	88 2e       	mov	r8, r24
     50c:	96 2e       	mov	r9, r22
     50e:	1a 01       	movw	r2, r20
     510:	28 01       	movw	r4, r16
     512:	39 01       	movw	r6, r18
     514:	61 e0       	ldi	r22, 0x01	; 1
     516:	70 e0       	ldi	r23, 0x00	; 0
     518:	83 e0       	ldi	r24, 0x03	; 3
     51a:	90 e0       	ldi	r25, 0x00	; 0
     51c:	0e 94 71 2d 	call	0x5ae2	; 0x5ae2 <calloc>
     520:	ec 01       	movw	r28, r24
     522:	00 97       	sbiw	r24, 0x00	; 0
     524:	69 f1       	breq	.+90     	; 0x580 <co2Reader_create+0x9a>
     526:	fc 01       	movw	r30, r24
     528:	11 92       	st	Z+, r1
     52a:	30 92 7d 08 	sts	0x087D, r3	; 0x80087d <_startMeasureEventGroup+0x1>
     52e:	20 92 7c 08 	sts	0x087C, r2	; 0x80087c <_startMeasureEventGroup>
     532:	40 92 78 08 	sts	0x0878, r4	; 0x800878 <_startMeasureBit>
     536:	50 92 79 08 	sts	0x0879, r5	; 0x800879 <_startMeasureBit+0x1>
     53a:	60 92 7a 08 	sts	0x087A, r6	; 0x80087a <_startMeasureBit+0x2>
     53e:	70 92 7b 08 	sts	0x087B, r7	; 0x80087b <_startMeasureBit+0x3>
     542:	f0 92 77 08 	sts	0x0877, r15	; 0x800877 <_readyEventGroup+0x1>
     546:	e0 92 76 08 	sts	0x0876, r14	; 0x800876 <_readyEventGroup>
     54a:	a0 92 72 08 	sts	0x0872, r10	; 0x800872 <__data_end>
     54e:	b0 92 73 08 	sts	0x0873, r11	; 0x800873 <__data_end+0x1>
     552:	c0 92 74 08 	sts	0x0874, r12	; 0x800874 <__data_end+0x2>
     556:	d0 92 75 08 	sts	0x0875, r13	; 0x800875 <__data_end+0x3>
     55a:	49 2d       	mov	r20, r9
     55c:	50 e0       	ldi	r21, 0x00	; 0
     55e:	7f 01       	movw	r14, r30
     560:	08 2d       	mov	r16, r8
     562:	9c 01       	movw	r18, r24
     564:	61 e4       	ldi	r22, 0x41	; 65
     566:	72 e0       	ldi	r23, 0x02	; 2
     568:	8a e2       	ldi	r24, 0x2A	; 42
     56a:	93 e0       	ldi	r25, 0x03	; 3
     56c:	0e 94 96 14 	call	0x292c	; 0x292c <xTaskCreate>
     570:	8b e4       	ldi	r24, 0x4B	; 75
     572:	92 e0       	ldi	r25, 0x02	; 2
     574:	9f 93       	push	r25
     576:	8f 93       	push	r24
     578:	0e 94 0f 2f 	call	0x5e1e	; 0x5e1e <printf>
     57c:	0f 90       	pop	r0
     57e:	0f 90       	pop	r0
     580:	ce 01       	movw	r24, r28
     582:	df 91       	pop	r29
     584:	cf 91       	pop	r28
     586:	1f 91       	pop	r17
     588:	0f 91       	pop	r16
     58a:	ff 90       	pop	r15
     58c:	ef 90       	pop	r14
     58e:	df 90       	pop	r13
     590:	cf 90       	pop	r12
     592:	bf 90       	pop	r11
     594:	af 90       	pop	r10
     596:	9f 90       	pop	r9
     598:	8f 90       	pop	r8
     59a:	7f 90       	pop	r7
     59c:	6f 90       	pop	r6
     59e:	5f 90       	pop	r5
     5a0:	4f 90       	pop	r4
     5a2:	3f 90       	pop	r3
     5a4:	2f 90       	pop	r2
     5a6:	08 95       	ret

000005a8 <co2Reader_measure>:
     5a8:	cf 92       	push	r12
     5aa:	df 92       	push	r13
     5ac:	ef 92       	push	r14
     5ae:	ff 92       	push	r15
     5b0:	0f 93       	push	r16
     5b2:	1f 93       	push	r17
     5b4:	cf 93       	push	r28
     5b6:	df 93       	push	r29
     5b8:	ec 01       	movw	r28, r24
     5ba:	40 91 78 08 	lds	r20, 0x0878	; 0x800878 <_startMeasureBit>
     5be:	50 91 79 08 	lds	r21, 0x0879	; 0x800879 <_startMeasureBit+0x1>
     5c2:	60 91 7a 08 	lds	r22, 0x087A	; 0x80087a <_startMeasureBit+0x2>
     5c6:	70 91 7b 08 	lds	r23, 0x087B	; 0x80087b <_startMeasureBit+0x3>
     5ca:	cc 24       	eor	r12, r12
     5cc:	ca 94       	dec	r12
     5ce:	dc 2c       	mov	r13, r12
     5d0:	76 01       	movw	r14, r12
     5d2:	01 e0       	ldi	r16, 0x01	; 1
     5d4:	21 e0       	ldi	r18, 0x01	; 1
     5d6:	80 91 7c 08 	lds	r24, 0x087C	; 0x80087c <_startMeasureEventGroup>
     5da:	90 91 7d 08 	lds	r25, 0x087D	; 0x80087d <_startMeasureEventGroup+0x1>
     5de:	cc d5       	rcall	.+2968   	; 0x1178 <xEventGroupWaitBits>
     5e0:	00 91 78 08 	lds	r16, 0x0878	; 0x800878 <_startMeasureBit>
     5e4:	10 91 79 08 	lds	r17, 0x0879	; 0x800879 <_startMeasureBit+0x1>
     5e8:	20 91 7a 08 	lds	r18, 0x087A	; 0x80087a <_startMeasureBit+0x2>
     5ec:	30 91 7b 08 	lds	r19, 0x087B	; 0x80087b <_startMeasureBit+0x3>
     5f0:	dc 01       	movw	r26, r24
     5f2:	cb 01       	movw	r24, r22
     5f4:	80 23       	and	r24, r16
     5f6:	91 23       	and	r25, r17
     5f8:	a2 23       	and	r26, r18
     5fa:	b3 23       	and	r27, r19
     5fc:	08 17       	cp	r16, r24
     5fe:	19 07       	cpc	r17, r25
     600:	2a 07       	cpc	r18, r26
     602:	3b 07       	cpc	r19, r27
     604:	f1 f4       	brne	.+60     	; 0x642 <co2Reader_measure+0x9a>
     606:	88 81       	ld	r24, Y
     608:	8f 5f       	subi	r24, 0xFF	; 255
     60a:	88 83       	st	Y, r24
     60c:	82 e5       	ldi	r24, 0x52	; 82
     60e:	92 e0       	ldi	r25, 0x02	; 2
     610:	9f 93       	push	r25
     612:	8f 93       	push	r24
     614:	0e 94 0f 2f 	call	0x5e1e	; 0x5e1e <printf>
     618:	64 ec       	ldi	r22, 0xC4	; 196
     61a:	79 e0       	ldi	r23, 0x09	; 9
     61c:	80 e0       	ldi	r24, 0x00	; 0
     61e:	90 e0       	ldi	r25, 0x00	; 0
     620:	0e 94 56 17 	call	0x2eac	; 0x2eac <vTaskDelay>
     624:	40 91 72 08 	lds	r20, 0x0872	; 0x800872 <__data_end>
     628:	50 91 73 08 	lds	r21, 0x0873	; 0x800873 <__data_end+0x1>
     62c:	60 91 74 08 	lds	r22, 0x0874	; 0x800874 <__data_end+0x2>
     630:	70 91 75 08 	lds	r23, 0x0875	; 0x800875 <__data_end+0x3>
     634:	80 91 76 08 	lds	r24, 0x0876	; 0x800876 <_readyEventGroup>
     638:	90 91 77 08 	lds	r25, 0x0877	; 0x800877 <_readyEventGroup+0x1>
     63c:	5d d6       	rcall	.+3258   	; 0x12f8 <xEventGroupSetBits>
     63e:	0f 90       	pop	r0
     640:	0f 90       	pop	r0
     642:	df 91       	pop	r29
     644:	cf 91       	pop	r28
     646:	1f 91       	pop	r17
     648:	0f 91       	pop	r16
     64a:	ff 90       	pop	r15
     64c:	ef 90       	pop	r14
     64e:	df 90       	pop	r13
     650:	cf 90       	pop	r12
     652:	08 95       	ret

00000654 <co2Reader_executeTask>:
     654:	ec 01       	movw	r28, r24
     656:	ce 01       	movw	r24, r28
     658:	a7 df       	rcall	.-178    	; 0x5a8 <co2Reader_measure>
     65a:	fd cf       	rjmp	.-6      	; 0x656 <co2Reader_executeTask+0x2>

0000065c <co2Reader_getCO2>:
     65c:	fc 01       	movw	r30, r24
     65e:	80 81       	ld	r24, Z
     660:	08 95       	ret

00000662 <configuration_create>:
//it is created only once, before starting the scheduler + will never be destroyed
	_working = calloc(sizeof(bool), 1);
	_ventilation = calloc(sizeof(bool), 1);

	//by default, device should work, not to ventilate
	_working = true;
     662:	81 e0       	ldi	r24, 0x01	; 1
     664:	80 93 81 08 	sts	0x0881, r24	; 0x800881 <_working>
	_ventilation = false;
     668:	10 92 80 08 	sts	0x0880, r1	; 0x800880 <_ventilation>

	_semaphore = xSemaphoreCreateMutex();
     66c:	0e 94 3e 0f 	call	0x1e7c	; 0x1e7c <xQueueCreateMutex>
     670:	90 93 7f 08 	sts	0x087F, r25	; 0x80087f <_semaphore+0x1>
     674:	80 93 7e 08 	sts	0x087E, r24	; 0x80087e <_semaphore>
     678:	08 95       	ret

0000067a <configuration_setWorking>:
}

//if the semaphore is initialized, take it and give it back, if not, just do the work 
void configuration_setWorking(bool value) {
     67a:	0f 93       	push	r16
     67c:	cf 93       	push	r28
	if (_semaphore != NULL) {
     67e:	20 91 7e 08 	lds	r18, 0x087E	; 0x80087e <_semaphore>
     682:	30 91 7f 08 	lds	r19, 0x087F	; 0x80087f <_semaphore+0x1>
     686:	21 15       	cp	r18, r1
     688:	31 05       	cpc	r19, r1
     68a:	b1 f0       	breq	.+44     	; 0x6b8 <configuration_setWorking+0x3e>
     68c:	c8 2f       	mov	r28, r24
		xSemaphoreTake(_semaphore, portMAX_DELAY);
     68e:	4f ef       	ldi	r20, 0xFF	; 255
     690:	5f ef       	ldi	r21, 0xFF	; 255
     692:	ba 01       	movw	r22, r20
     694:	c9 01       	movw	r24, r18
     696:	0e 94 2a 10 	call	0x2054	; 0x2054 <xQueueSemaphoreTake>
		_working = value;
     69a:	c0 93 81 08 	sts	0x0881, r28	; 0x800881 <_working>
		xSemaphoreGive(_semaphore);
     69e:	00 e0       	ldi	r16, 0x00	; 0
     6a0:	20 e0       	ldi	r18, 0x00	; 0
     6a2:	30 e0       	ldi	r19, 0x00	; 0
     6a4:	a9 01       	movw	r20, r18
     6a6:	60 e0       	ldi	r22, 0x00	; 0
     6a8:	70 e0       	ldi	r23, 0x00	; 0
     6aa:	80 91 7e 08 	lds	r24, 0x087E	; 0x80087e <_semaphore>
     6ae:	90 91 7f 08 	lds	r25, 0x087F	; 0x80087f <_semaphore+0x1>
     6b2:	0e 94 9e 0e 	call	0x1d3c	; 0x1d3c <xQueueGenericSend>
     6b6:	02 c0       	rjmp	.+4      	; 0x6bc <configuration_setWorking+0x42>
	}
	else _working = value;
     6b8:	80 93 81 08 	sts	0x0881, r24	; 0x800881 <_working>
}
     6bc:	cf 91       	pop	r28
     6be:	0f 91       	pop	r16
     6c0:	08 95       	ret

000006c2 <configuration_getWorking>:

void configuration_getWorking(bool* working) {
     6c2:	0f 93       	push	r16
     6c4:	cf 93       	push	r28
     6c6:	df 93       	push	r29
	if (_semaphore != NULL) {
     6c8:	20 91 7e 08 	lds	r18, 0x087E	; 0x80087e <_semaphore>
     6cc:	30 91 7f 08 	lds	r19, 0x087F	; 0x80087f <_semaphore+0x1>
     6d0:	21 15       	cp	r18, r1
     6d2:	31 05       	cpc	r19, r1
     6d4:	b9 f0       	breq	.+46     	; 0x704 <configuration_getWorking+0x42>
     6d6:	ec 01       	movw	r28, r24
		xSemaphoreTake(_semaphore, portMAX_DELAY);
     6d8:	4f ef       	ldi	r20, 0xFF	; 255
     6da:	5f ef       	ldi	r21, 0xFF	; 255
     6dc:	ba 01       	movw	r22, r20
     6de:	c9 01       	movw	r24, r18
     6e0:	0e 94 2a 10 	call	0x2054	; 0x2054 <xQueueSemaphoreTake>
		*working = _working;
     6e4:	80 91 81 08 	lds	r24, 0x0881	; 0x800881 <_working>
     6e8:	88 83       	st	Y, r24
		xSemaphoreGive(_semaphore);
     6ea:	00 e0       	ldi	r16, 0x00	; 0
     6ec:	20 e0       	ldi	r18, 0x00	; 0
     6ee:	30 e0       	ldi	r19, 0x00	; 0
     6f0:	a9 01       	movw	r20, r18
     6f2:	60 e0       	ldi	r22, 0x00	; 0
     6f4:	70 e0       	ldi	r23, 0x00	; 0
     6f6:	80 91 7e 08 	lds	r24, 0x087E	; 0x80087e <_semaphore>
     6fa:	90 91 7f 08 	lds	r25, 0x087F	; 0x80087f <_semaphore+0x1>
     6fe:	0e 94 9e 0e 	call	0x1d3c	; 0x1d3c <xQueueGenericSend>
     702:	04 c0       	rjmp	.+8      	; 0x70c <configuration_getWorking+0x4a>
	}
	else *working = _working;
     704:	20 91 81 08 	lds	r18, 0x0881	; 0x800881 <_working>
     708:	fc 01       	movw	r30, r24
     70a:	20 83       	st	Z, r18
}
     70c:	df 91       	pop	r29
     70e:	cf 91       	pop	r28
     710:	0f 91       	pop	r16
     712:	08 95       	ret

00000714 <configuration_setVentilation>:

void configuration_setVentilation(bool value) {
     714:	0f 93       	push	r16
     716:	cf 93       	push	r28
	if (_semaphore != NULL) {
     718:	20 91 7e 08 	lds	r18, 0x087E	; 0x80087e <_semaphore>
     71c:	30 91 7f 08 	lds	r19, 0x087F	; 0x80087f <_semaphore+0x1>
     720:	21 15       	cp	r18, r1
     722:	31 05       	cpc	r19, r1
     724:	b1 f0       	breq	.+44     	; 0x752 <configuration_setVentilation+0x3e>
     726:	c8 2f       	mov	r28, r24
		xSemaphoreTake(_semaphore, portMAX_DELAY);
     728:	4f ef       	ldi	r20, 0xFF	; 255
     72a:	5f ef       	ldi	r21, 0xFF	; 255
     72c:	ba 01       	movw	r22, r20
     72e:	c9 01       	movw	r24, r18
     730:	0e 94 2a 10 	call	0x2054	; 0x2054 <xQueueSemaphoreTake>
		_ventilation = value;
     734:	c0 93 80 08 	sts	0x0880, r28	; 0x800880 <_ventilation>
		xSemaphoreGive(_semaphore);
     738:	00 e0       	ldi	r16, 0x00	; 0
     73a:	20 e0       	ldi	r18, 0x00	; 0
     73c:	30 e0       	ldi	r19, 0x00	; 0
     73e:	a9 01       	movw	r20, r18
     740:	60 e0       	ldi	r22, 0x00	; 0
     742:	70 e0       	ldi	r23, 0x00	; 0
     744:	80 91 7e 08 	lds	r24, 0x087E	; 0x80087e <_semaphore>
     748:	90 91 7f 08 	lds	r25, 0x087F	; 0x80087f <_semaphore+0x1>
     74c:	0e 94 9e 0e 	call	0x1d3c	; 0x1d3c <xQueueGenericSend>
     750:	02 c0       	rjmp	.+4      	; 0x756 <configuration_setVentilation+0x42>
	}
	else _ventilation = value;
     752:	80 93 80 08 	sts	0x0880, r24	; 0x800880 <_ventilation>
}
     756:	cf 91       	pop	r28
     758:	0f 91       	pop	r16
     75a:	08 95       	ret

0000075c <configuration_getVentilation>:

void configuration_getVentilation(bool* ventilation) {
     75c:	0f 93       	push	r16
     75e:	cf 93       	push	r28
     760:	df 93       	push	r29
	if (_semaphore != NULL) {
     762:	20 91 7e 08 	lds	r18, 0x087E	; 0x80087e <_semaphore>
     766:	30 91 7f 08 	lds	r19, 0x087F	; 0x80087f <_semaphore+0x1>
     76a:	21 15       	cp	r18, r1
     76c:	31 05       	cpc	r19, r1
     76e:	b9 f0       	breq	.+46     	; 0x79e <configuration_getVentilation+0x42>
     770:	ec 01       	movw	r28, r24
		xSemaphoreTake(_semaphore, portMAX_DELAY);
     772:	4f ef       	ldi	r20, 0xFF	; 255
     774:	5f ef       	ldi	r21, 0xFF	; 255
     776:	ba 01       	movw	r22, r20
     778:	c9 01       	movw	r24, r18
     77a:	0e 94 2a 10 	call	0x2054	; 0x2054 <xQueueSemaphoreTake>
		*ventilation = _ventilation;
     77e:	80 91 80 08 	lds	r24, 0x0880	; 0x800880 <_ventilation>
     782:	88 83       	st	Y, r24
		xSemaphoreGive(_semaphore);
     784:	00 e0       	ldi	r16, 0x00	; 0
     786:	20 e0       	ldi	r18, 0x00	; 0
     788:	30 e0       	ldi	r19, 0x00	; 0
     78a:	a9 01       	movw	r20, r18
     78c:	60 e0       	ldi	r22, 0x00	; 0
     78e:	70 e0       	ldi	r23, 0x00	; 0
     790:	80 91 7e 08 	lds	r24, 0x087E	; 0x80087e <_semaphore>
     794:	90 91 7f 08 	lds	r25, 0x087F	; 0x80087f <_semaphore+0x1>
     798:	0e 94 9e 0e 	call	0x1d3c	; 0x1d3c <xQueueGenericSend>
     79c:	04 c0       	rjmp	.+8      	; 0x7a6 <configuration_getVentilation+0x4a>
	}
	else *ventilation = _ventilation;
     79e:	20 91 80 08 	lds	r18, 0x0880	; 0x800880 <_ventilation>
     7a2:	fc 01       	movw	r30, r24
     7a4:	20 83       	st	Z, r18
}
     7a6:	df 91       	pop	r29
     7a8:	cf 91       	pop	r28
     7aa:	0f 91       	pop	r16
     7ac:	08 95       	ret

000007ae <currentCondition_create>:
     7ae:	61 e0       	ldi	r22, 0x01	; 1
     7b0:	70 e0       	ldi	r23, 0x00	; 0
     7b2:	88 e0       	ldi	r24, 0x08	; 8
     7b4:	90 e0       	ldi	r25, 0x00	; 0
     7b6:	0e 94 71 2d 	call	0x5ae2	; 0x5ae2 <calloc>
     7ba:	00 97       	sbiw	r24, 0x00	; 0
     7bc:	39 f0       	breq	.+14     	; 0x7cc <currentCondition_create+0x1e>
     7be:	fc 01       	movw	r30, r24
     7c0:	13 82       	std	Z+3, r1	; 0x03
     7c2:	12 82       	std	Z+2, r1	; 0x02
     7c4:	15 82       	std	Z+5, r1	; 0x05
     7c6:	14 82       	std	Z+4, r1	; 0x04
     7c8:	11 82       	std	Z+1, r1	; 0x01
     7ca:	10 82       	st	Z, r1
     7cc:	08 95       	ret

000007ce <currentCondition_setCO2>:
     7ce:	00 97       	sbiw	r24, 0x00	; 0
     7d0:	19 f0       	breq	.+6      	; 0x7d8 <currentCondition_setCO2+0xa>
     7d2:	fc 01       	movw	r30, r24
     7d4:	71 83       	std	Z+1, r23	; 0x01
     7d6:	60 83       	st	Z, r22
     7d8:	08 95       	ret

000007da <currentCondition_setHumidity>:
     7da:	00 97       	sbiw	r24, 0x00	; 0
     7dc:	19 f0       	breq	.+6      	; 0x7e4 <currentCondition_setHumidity+0xa>
     7de:	fc 01       	movw	r30, r24
     7e0:	75 83       	std	Z+5, r23	; 0x05
     7e2:	64 83       	std	Z+4, r22	; 0x04
     7e4:	08 95       	ret

000007e6 <currentCondition_setTemperature>:
     7e6:	00 97       	sbiw	r24, 0x00	; 0
     7e8:	19 f0       	breq	.+6      	; 0x7f0 <currentCondition_setTemperature+0xa>
     7ea:	fc 01       	movw	r30, r24
     7ec:	73 83       	std	Z+3, r23	; 0x03
     7ee:	62 83       	std	Z+2, r22	; 0x02
     7f0:	08 95       	ret

000007f2 <getcurrentConditionPayload>:
     7f2:	fc 01       	movw	r30, r24
     7f4:	db 01       	movw	r26, r22
     7f6:	12 96       	adiw	r26, 0x02	; 2
     7f8:	2c 91       	ld	r18, X
     7fa:	12 97       	sbiw	r26, 0x02	; 2
     7fc:	13 96       	adiw	r26, 0x03	; 3
     7fe:	3c 91       	ld	r19, X
     800:	13 97       	sbiw	r26, 0x03	; 3
     802:	14 96       	adiw	r26, 0x04	; 4
     804:	8c 91       	ld	r24, X
     806:	14 97       	sbiw	r26, 0x04	; 4
     808:	15 96       	adiw	r26, 0x05	; 5
     80a:	9c 91       	ld	r25, X
     80c:	41 e0       	ldi	r20, 0x01	; 1
     80e:	40 83       	st	Z, r20
     810:	44 e0       	ldi	r20, 0x04	; 4
     812:	41 83       	std	Z+1, r20	; 0x01
     814:	32 83       	std	Z+2, r19	; 0x02
     816:	23 83       	std	Z+3, r18	; 0x03
     818:	94 83       	std	Z+4, r25	; 0x04
     81a:	85 83       	std	Z+5, r24	; 0x05
     81c:	cf 01       	movw	r24, r30
     81e:	08 95       	ret

00000820 <device_create>:
	//free(self);*/
//}

currentCondition_t device_getCurrentCondition(device_t self) {
	return self->currentCondition;
}
     820:	2f 92       	push	r2
     822:	3f 92       	push	r3
     824:	4f 92       	push	r4
     826:	5f 92       	push	r5
     828:	6f 92       	push	r6
     82a:	7f 92       	push	r7
     82c:	8f 92       	push	r8
     82e:	9f 92       	push	r9
     830:	af 92       	push	r10
     832:	bf 92       	push	r11
     834:	cf 92       	push	r12
     836:	df 92       	push	r13
     838:	ef 92       	push	r14
     83a:	ff 92       	push	r15
     83c:	0f 93       	push	r16
     83e:	1f 93       	push	r17
     840:	cf 93       	push	r28
     842:	df 93       	push	r29
     844:	00 d0       	rcall	.+0      	; 0x846 <device_create+0x26>
     846:	1f 92       	push	r1
     848:	cd b7       	in	r28, 0x3d	; 61
     84a:	de b7       	in	r29, 0x3e	; 62
     84c:	28 2e       	mov	r2, r24
     84e:	36 2e       	mov	r3, r22
     850:	5c 83       	std	Y+4, r21	; 0x04
     852:	4b 83       	std	Y+3, r20	; 0x03
     854:	28 01       	movw	r4, r16
     856:	39 01       	movw	r6, r18
     858:	61 e0       	ldi	r22, 0x01	; 1
     85a:	70 e0       	ldi	r23, 0x00	; 0
     85c:	88 e0       	ldi	r24, 0x08	; 8
     85e:	90 e0       	ldi	r25, 0x00	; 0
     860:	0e 94 71 2d 	call	0x5ae2	; 0x5ae2 <calloc>
     864:	9a 83       	std	Y+2, r25	; 0x02
     866:	89 83       	std	Y+1, r24	; 0x01
     868:	00 97       	sbiw	r24, 0x00	; 0
     86a:	09 f4       	brne	.+2      	; 0x86e <device_create+0x4e>
     86c:	42 c0       	rjmp	.+132    	; 0x8f2 <device_create+0xd2>
     86e:	fc 01       	movw	r30, r24
     870:	91 82       	std	Z+1, r9	; 0x01
     872:	80 82       	st	Z, r8
     874:	8a 8d       	ldd	r24, Y+26	; 0x1a
     876:	9b 8d       	ldd	r25, Y+27	; 0x1b
     878:	93 83       	std	Z+3, r25	; 0x03
     87a:	82 83       	std	Z+2, r24	; 0x02
     87c:	98 df       	rcall	.-208    	; 0x7ae <currentCondition_create>
     87e:	e9 81       	ldd	r30, Y+1	; 0x01
     880:	fa 81       	ldd	r31, Y+2	; 0x02
     882:	95 83       	std	Z+5, r25	; 0x05
     884:	84 83       	std	Z+4, r24	; 0x04
     886:	8b 81       	ldd	r24, Y+3	; 0x03
     888:	9c 81       	ldd	r25, Y+4	; 0x04
     88a:	90 93 a5 08 	sts	0x08A5, r25	; 0x8008a5 <_startMeasureEventGroup+0x1>
     88e:	80 93 a4 08 	sts	0x08A4, r24	; 0x8008a4 <_startMeasureEventGroup>
     892:	40 92 a0 08 	sts	0x08A0, r4	; 0x8008a0 <_startMeasureBit>
     896:	50 92 a1 08 	sts	0x08A1, r5	; 0x8008a1 <_startMeasureBit+0x1>
     89a:	60 92 a2 08 	sts	0x08A2, r6	; 0x8008a2 <_startMeasureBit+0x2>
     89e:	70 92 a3 08 	sts	0x08A3, r7	; 0x8008a3 <_startMeasureBit+0x3>
     8a2:	f0 92 9f 08 	sts	0x089F, r15	; 0x80089f <_readyEventGroup+0x1>
     8a6:	e0 92 9e 08 	sts	0x089E, r14	; 0x80089e <_readyEventGroup>
     8aa:	a0 92 9a 08 	sts	0x089A, r10	; 0x80089a <_readyBit>
     8ae:	b0 92 9b 08 	sts	0x089B, r11	; 0x80089b <_readyBit+0x1>
     8b2:	c0 92 9c 08 	sts	0x089C, r12	; 0x80089c <_readyBit+0x2>
     8b6:	d0 92 9d 08 	sts	0x089D, r13	; 0x80089d <_readyBit+0x3>
     8ba:	8c 8d       	ldd	r24, Y+28	; 0x1c
     8bc:	9d 8d       	ldd	r25, Y+29	; 0x1d
     8be:	90 93 99 08 	sts	0x0899, r25	; 0x800899 <_uplinkmessageBuffer+0x1>
     8c2:	80 93 98 08 	sts	0x0898, r24	; 0x800898 <_uplinkmessageBuffer>
     8c6:	43 2d       	mov	r20, r3
     8c8:	50 e0       	ldi	r21, 0x00	; 0
     8ca:	7f 01       	movw	r14, r30
     8cc:	96 e0       	ldi	r25, 0x06	; 6
     8ce:	e9 0e       	add	r14, r25
     8d0:	f1 1c       	adc	r15, r1
     8d2:	02 2d       	mov	r16, r2
     8d4:	9f 01       	movw	r18, r30
     8d6:	63 e6       	ldi	r22, 0x63	; 99
     8d8:	72 e0       	ldi	r23, 0x02	; 2
     8da:	8b e8       	ldi	r24, 0x8B	; 139
     8dc:	95 e0       	ldi	r25, 0x05	; 5
     8de:	0e 94 96 14 	call	0x292c	; 0x292c <xTaskCreate>
     8e2:	8a e6       	ldi	r24, 0x6A	; 106
     8e4:	92 e0       	ldi	r25, 0x02	; 2
     8e6:	9f 93       	push	r25
     8e8:	8f 93       	push	r24
     8ea:	0e 94 0f 2f 	call	0x5e1e	; 0x5e1e <printf>
     8ee:	0f 90       	pop	r0
     8f0:	0f 90       	pop	r0
     8f2:	89 81       	ldd	r24, Y+1	; 0x01
     8f4:	9a 81       	ldd	r25, Y+2	; 0x02
     8f6:	0f 90       	pop	r0
     8f8:	0f 90       	pop	r0
     8fa:	0f 90       	pop	r0
     8fc:	0f 90       	pop	r0
     8fe:	df 91       	pop	r29
     900:	cf 91       	pop	r28
     902:	1f 91       	pop	r17
     904:	0f 91       	pop	r16
     906:	ff 90       	pop	r15
     908:	ef 90       	pop	r14
     90a:	df 90       	pop	r13
     90c:	cf 90       	pop	r12
     90e:	bf 90       	pop	r11
     910:	af 90       	pop	r10
     912:	9f 90       	pop	r9
     914:	8f 90       	pop	r8
     916:	7f 90       	pop	r7
     918:	6f 90       	pop	r6
     91a:	5f 90       	pop	r5
     91c:	4f 90       	pop	r4
     91e:	3f 90       	pop	r3
     920:	2f 90       	pop	r2
     922:	08 95       	ret

00000924 <device_setHumidityToCurrent>:

void device_setHumidityToCurrent(device_t self, uint16_t value)
{
	currentCondition_setHumidity(self->currentCondition,value);
     924:	fc 01       	movw	r30, r24
     926:	84 81       	ldd	r24, Z+4	; 0x04
     928:	95 81       	ldd	r25, Z+5	; 0x05
     92a:	57 cf       	rjmp	.-338    	; 0x7da <currentCondition_setHumidity>
     92c:	08 95       	ret

0000092e <device_getHumidityData>:
}


uint16_t device_getHumidityData(device_t self)
{
	if (self->humAndTempReader!=NULL)
     92e:	fc 01       	movw	r30, r24
     930:	82 81       	ldd	r24, Z+2	; 0x02
     932:	93 81       	ldd	r25, Z+3	; 0x03
     934:	00 97       	sbiw	r24, 0x00	; 0
     936:	11 f0       	breq	.+4      	; 0x93c <device_getHumidityData+0xe>
	{
		return humAndTempReader_getHumidity(self->humAndTempReader);
     938:	8b c2       	rjmp	.+1302   	; 0xe50 <humAndTempReader_getHumidity>
     93a:	08 95       	ret
	}
	else
	return -1;
     93c:	8f ef       	ldi	r24, 0xFF	; 255
     93e:	9f ef       	ldi	r25, 0xFF	; 255
}
     940:	08 95       	ret

00000942 <device_setCO2ToCurrent>:

void device_setCO2ToCurrent(device_t self, uint16_t value) {
	currentCondition_setCO2(self->currentCondition, value);
     942:	fc 01       	movw	r30, r24
     944:	84 81       	ldd	r24, Z+4	; 0x04
     946:	95 81       	ldd	r25, Z+5	; 0x05
     948:	42 cf       	rjmp	.-380    	; 0x7ce <currentCondition_setCO2>
     94a:	08 95       	ret

0000094c <device_getCO2Data>:
}

uint16_t device_getCO2Data(device_t self) {
	if (self->co2reader != NULL)
     94c:	fc 01       	movw	r30, r24
     94e:	80 81       	ld	r24, Z
     950:	91 81       	ldd	r25, Z+1	; 0x01
     952:	00 97       	sbiw	r24, 0x00	; 0
     954:	19 f0       	breq	.+6      	; 0x95c <device_getCO2Data+0x10>
		return co2Reader_getCO2(self->co2reader);
     956:	82 de       	rcall	.-764    	; 0x65c <co2Reader_getCO2>
     958:	90 e0       	ldi	r25, 0x00	; 0
     95a:	08 95       	ret
	else return -1;
     95c:	8f ef       	ldi	r24, 0xFF	; 255
     95e:	9f ef       	ldi	r25, 0xFF	; 255
}
     960:	08 95       	ret

00000962 <device_setTemperatureToCurrent>:

void device_setTemperatureToCurrent(device_t self, int16_t value)
{
	
	currentCondition_setTemperature(self->currentCondition,value);
     962:	fc 01       	movw	r30, r24
     964:	84 81       	ldd	r24, Z+4	; 0x04
     966:	95 81       	ldd	r25, Z+5	; 0x05
     968:	3e cf       	rjmp	.-388    	; 0x7e6 <currentCondition_setTemperature>
     96a:	08 95       	ret

0000096c <device_getTemperatureData>:
}


int16_t device_getTemperatureData(device_t self)
{
	if (self->humAndTempReader!=NULL)
     96c:	fc 01       	movw	r30, r24
     96e:	82 81       	ldd	r24, Z+2	; 0x02
     970:	93 81       	ldd	r25, Z+3	; 0x03
     972:	00 97       	sbiw	r24, 0x00	; 0
     974:	11 f0       	breq	.+4      	; 0x97a <device_getTemperatureData+0xe>
	{
		return humAndTempReader_getTemperature(self->humAndTempReader);
     976:	70 c2       	rjmp	.+1248   	; 0xe58 <humAndTempReader_getTemperature>
     978:	08 95       	ret
	}
	else
	return -1;
     97a:	8f ef       	ldi	r24, 0xFF	; 255
     97c:	9f ef       	ldi	r25, 0xFF	; 255
	
     97e:	08 95       	ret

00000980 <device_startMeasuring>:
void device_executeTask(device_t self) {
	for (;;)
		device_startMeasuring(self);
}

void device_startMeasuring(device_t self) {
     980:	af 92       	push	r10
     982:	bf 92       	push	r11
     984:	cf 92       	push	r12
     986:	df 92       	push	r13
     988:	ef 92       	push	r14
     98a:	ff 92       	push	r15
     98c:	0f 93       	push	r16
     98e:	1f 93       	push	r17
     990:	cf 93       	push	r28
     992:	df 93       	push	r29
     994:	cd b7       	in	r28, 0x3d	; 61
     996:	de b7       	in	r29, 0x3e	; 62
     998:	66 97       	sbiw	r28, 0x16	; 22
     99a:	0f b6       	in	r0, 0x3f	; 63
     99c:	f8 94       	cli
     99e:	de bf       	out	0x3e, r29	; 62
     9a0:	0f be       	out	0x3f, r0	; 63
     9a2:	cd bf       	out	0x3d, r28	; 61
     9a4:	5c 01       	movw	r10, r24
	//we should first check if device is on, get that from lora and add new eventBit 
	
	//-------------------------------------------	TEST ME !	-----------------------------------------------------------------------
	
	
	bool* works = pvPortMalloc(sizeof(bool));
     9a6:	81 e0       	ldi	r24, 0x01	; 1
     9a8:	90 e0       	ldi	r25, 0x00	; 0
     9aa:	8c d5       	rcall	.+2840   	; 0x14c4 <pvPortMalloc>
     9ac:	8c 01       	movw	r16, r24
	configuration_getWorking(works);
     9ae:	89 de       	rcall	.-750    	; 0x6c2 <configuration_getWorking>
     9b0:	f8 01       	movw	r30, r16
	if (*works == true)
     9b2:	80 81       	ld	r24, Z
     9b4:	88 23       	and	r24, r24
     9b6:	09 f4       	brne	.+2      	; 0x9ba <device_startMeasuring+0x3a>
     9b8:	97 c0       	rjmp	.+302    	; 0xae8 <device_startMeasuring+0x168>
     9ba:	40 91 a0 08 	lds	r20, 0x08A0	; 0x8008a0 <_startMeasureBit>


	//if ventilation needed -> ventilate 

	//tell sensors to start meassuring 
	xEventGroupSetBits(_startMeasureEventGroup, _startMeasureBit);
     9be:	50 91 a1 08 	lds	r21, 0x08A1	; 0x8008a1 <_startMeasureBit+0x1>
     9c2:	60 91 a2 08 	lds	r22, 0x08A2	; 0x8008a2 <_startMeasureBit+0x2>
     9c6:	70 91 a3 08 	lds	r23, 0x08A3	; 0x8008a3 <_startMeasureBit+0x3>
     9ca:	80 91 a4 08 	lds	r24, 0x08A4	; 0x8008a4 <_startMeasureEventGroup>
     9ce:	90 91 a5 08 	lds	r25, 0x08A5	; 0x8008a5 <_startMeasureEventGroup+0x1>
     9d2:	92 d4       	rcall	.+2340   	; 0x12f8 <xEventGroupSetBits>
     9d4:	84 e7       	ldi	r24, 0x74	; 116
	printf("device has set bits");
     9d6:	92 e0       	ldi	r25, 0x02	; 2
     9d8:	9f 93       	push	r25
     9da:	8f 93       	push	r24
     9dc:	0e 94 0f 2f 	call	0x5e1e	; 0x5e1e <printf>
     9e0:	40 91 9a 08 	lds	r20, 0x089A	; 0x80089a <_readyBit>

	//wait for sensors to read data
	EventBits_t uxBits = xEventGroupWaitBits(_readyEventGroup, //eventGroup it is interested in
     9e4:	50 91 9b 08 	lds	r21, 0x089B	; 0x80089b <_readyBit+0x1>
     9e8:	60 91 9c 08 	lds	r22, 0x089C	; 0x80089c <_readyBit+0x2>
     9ec:	70 91 9d 08 	lds	r23, 0x089D	; 0x80089d <_readyBit+0x3>
     9f0:	cc 24       	eor	r12, r12
     9f2:	ca 94       	dec	r12
     9f4:	dc 2c       	mov	r13, r12
     9f6:	76 01       	movw	r14, r12
     9f8:	01 e0       	ldi	r16, 0x01	; 1
     9fa:	21 e0       	ldi	r18, 0x01	; 1
     9fc:	80 91 9e 08 	lds	r24, 0x089E	; 0x80089e <_readyEventGroup>
     a00:	90 91 9f 08 	lds	r25, 0x089F	; 0x80089f <_readyEventGroup+0x1>
     a04:	b9 d3       	rcall	.+1906   	; 0x1178 <xEventGroupWaitBits>
     a06:	00 91 9a 08 	lds	r16, 0x089A	; 0x80089a <_readyBit>
		_readyBit, //bits it is interested in
		pdTRUE, //clears the bits 
		pdTRUE, //waits for both bits to be set
		portMAX_DELAY); //waits forever if needed

	if ((uxBits & (_readyBit)) == (_readyBit)) {
     a0a:	10 91 9b 08 	lds	r17, 0x089B	; 0x80089b <_readyBit+0x1>
     a0e:	20 91 9c 08 	lds	r18, 0x089C	; 0x80089c <_readyBit+0x2>
     a12:	30 91 9d 08 	lds	r19, 0x089D	; 0x80089d <_readyBit+0x3>
     a16:	dc 01       	movw	r26, r24
     a18:	cb 01       	movw	r24, r22
     a1a:	80 23       	and	r24, r16
     a1c:	91 23       	and	r25, r17
     a1e:	a2 23       	and	r26, r18
     a20:	b3 23       	and	r27, r19
     a22:	0f 90       	pop	r0
     a24:	0f 90       	pop	r0
     a26:	08 17       	cp	r16, r24
     a28:	19 07       	cpc	r17, r25
     a2a:	2a 07       	cpc	r18, r26
     a2c:	3b 07       	cpc	r19, r27
     a2e:	09 f0       	breq	.+2      	; 0xa32 <device_startMeasuring+0xb2>
     a30:	61 c0       	rjmp	.+194    	; 0xaf4 <device_startMeasuring+0x174>
		device_setCO2ToCurrent(self, device_getCO2Data(self));
     a32:	c5 01       	movw	r24, r10
     a34:	8b df       	rcall	.-234    	; 0x94c <device_getCO2Data>
     a36:	bc 01       	movw	r22, r24
     a38:	c5 01       	movw	r24, r10
     a3a:	83 df       	rcall	.-250    	; 0x942 <device_setCO2ToCurrent>
		device_setTemperatureToCurrent(self, device_getTemperatureData(self));
     a3c:	c5 01       	movw	r24, r10
     a3e:	96 df       	rcall	.-212    	; 0x96c <device_getTemperatureData>
     a40:	bc 01       	movw	r22, r24
     a42:	c5 01       	movw	r24, r10
     a44:	8e df       	rcall	.-228    	; 0x962 <device_setTemperatureToCurrent>
		device_setHumidityToCurrent(self, device_getHumidityData(self));
     a46:	c5 01       	movw	r24, r10
     a48:	72 df       	rcall	.-284    	; 0x92e <device_getHumidityData>
     a4a:	bc 01       	movw	r22, r24
     a4c:	c5 01       	movw	r24, r10
     a4e:	6a df       	rcall	.-300    	; 0x924 <device_setHumidityToCurrent>
     a50:	88 e8       	ldi	r24, 0x88	; 136
		
		printf("device got done bit\n");
     a52:	92 e0       	ldi	r25, 0x02	; 2
     a54:	0e 94 22 2f 	call	0x5e44	; 0x5e44 <puts>
     a58:	f5 01       	movw	r30, r10
		
		printf("CO2 is: %u\n", co2Reader_getCO2(self->co2reader));
     a5a:	80 81       	ld	r24, Z
     a5c:	91 81       	ldd	r25, Z+1	; 0x01
     a5e:	fe dd       	rcall	.-1028   	; 0x65c <co2Reader_getCO2>
     a60:	1f 92       	push	r1
     a62:	8f 93       	push	r24
     a64:	8c e9       	ldi	r24, 0x9C	; 156
     a66:	92 e0       	ldi	r25, 0x02	; 2
     a68:	9f 93       	push	r25
     a6a:	8f 93       	push	r24
     a6c:	0e 94 0f 2f 	call	0x5e1e	; 0x5e1e <printf>
     a70:	c5 01       	movw	r24, r10
		printf("Temperature is: %d\n", device_getTemperatureData(self));
     a72:	7c df       	rcall	.-264    	; 0x96c <device_getTemperatureData>
     a74:	9f 93       	push	r25
     a76:	8f 93       	push	r24
     a78:	88 ea       	ldi	r24, 0xA8	; 168
     a7a:	92 e0       	ldi	r25, 0x02	; 2
     a7c:	9f 93       	push	r25
     a7e:	8f 93       	push	r24
     a80:	0e 94 0f 2f 	call	0x5e1e	; 0x5e1e <printf>
     a84:	c5 01       	movw	r24, r10
		printf("Humidity is: %u\n", device_getHumidityData(self));
     a86:	53 df       	rcall	.-346    	; 0x92e <device_getHumidityData>
     a88:	9f 93       	push	r25
     a8a:	8f 93       	push	r24
     a8c:	8c eb       	ldi	r24, 0xBC	; 188
     a8e:	92 e0       	ldi	r25, 0x02	; 2
     a90:	9f 93       	push	r25
     a92:	8f 93       	push	r24
     a94:	0e 94 0f 2f 	call	0x5e1e	; 0x5e1e <printf>
     a98:	f5 01       	movw	r30, r10
		
		
		/*Perhaps loraPayload is not a good idea to be here*/
		_uplink_payload = getcurrentConditionPayload(self->currentCondition);
     a9a:	64 81       	ldd	r22, Z+4	; 0x04
     a9c:	75 81       	ldd	r23, Z+5	; 0x05
     a9e:	ce 01       	movw	r24, r28
     aa0:	01 96       	adiw	r24, 0x01	; 1
     aa2:	a7 de       	rcall	.-690    	; 0x7f2 <getcurrentConditionPayload>
     aa4:	86 e1       	ldi	r24, 0x16	; 22
     aa6:	fe 01       	movw	r30, r28
     aa8:	31 96       	adiw	r30, 0x01	; 1
     aaa:	a2 e8       	ldi	r26, 0x82	; 130
     aac:	b8 e0       	ldi	r27, 0x08	; 8
     aae:	01 90       	ld	r0, Z+
     ab0:	0d 92       	st	X+, r0
     ab2:	8a 95       	dec	r24
     ab4:	e1 f7       	brne	.-8      	; 0xaae <device_startMeasuring+0x12e>
     ab6:	68 ee       	ldi	r22, 0xE8	; 232
     ab8:	73 e0       	ldi	r23, 0x03	; 3
		//if(_uplink_payload!=NULL)
		//{
			vTaskDelay(1000);
     aba:	80 e0       	ldi	r24, 0x00	; 0
     abc:	90 e0       	ldi	r25, 0x00	; 0
     abe:	0e 94 56 17 	call	0x2eac	; 0x2eac <vTaskDelay>
     ac2:	0f ef       	ldi	r16, 0xFF	; 255
     ac4:	1f ef       	ldi	r17, 0xFF	; 255
			//printf("The temperature in device is: %d\n", _uplink_payload.bytes[0]);
			//printf("The temperature2 in device is: %d\n", _uplink_payload.bytes[1]);
			//printf("The humidity in device is: %u\n", _uplink_payload.bytes[2]);
			//printf("The humidity2 in device is: %u\n", _uplink_payload.bytes[3]);
			
			xMessageBufferSend(_uplinkmessageBuffer,(void*) &_uplink_payload,sizeof(_uplink_payload),portMAX_DELAY);
     ac6:	98 01       	movw	r18, r16
     ac8:	46 e1       	ldi	r20, 0x16	; 22
     aca:	50 e0       	ldi	r21, 0x00	; 0
     acc:	62 e8       	ldi	r22, 0x82	; 130
     ace:	78 e0       	ldi	r23, 0x08	; 8
     ad0:	80 91 98 08 	lds	r24, 0x0898	; 0x800898 <_uplinkmessageBuffer>
     ad4:	90 91 99 08 	lds	r25, 0x0899	; 0x800899 <_uplinkmessageBuffer+0x1>
     ad8:	0e 94 66 12 	call	0x24cc	; 0x24cc <xStreamBufferSend>
     adc:	0f b6       	in	r0, 0x3f	; 63
     ade:	f8 94       	cli
     ae0:	de bf       	out	0x3e, r29	; 62
     ae2:	0f be       	out	0x3f, r0	; 63
     ae4:	cd bf       	out	0x3d, r28	; 61
     ae6:	06 c0       	rjmp	.+12     	; 0xaf4 <device_startMeasuring+0x174>
     ae8:	68 e8       	ldi	r22, 0x88	; 136
     aea:	73 e1       	ldi	r23, 0x13	; 19
		//}
		//else printf("Error when making loraPayload");
	}
	//if the device is not on, wait a bit and check if anything is changed
	}
	else vTaskDelay(5000);
     aec:	80 e0       	ldi	r24, 0x00	; 0
     aee:	90 e0       	ldi	r25, 0x00	; 0
     af0:	0e 94 56 17 	call	0x2eac	; 0x2eac <vTaskDelay>
     af4:	66 96       	adiw	r28, 0x16	; 22
     af6:	0f b6       	in	r0, 0x3f	; 63
}
     af8:	f8 94       	cli
     afa:	de bf       	out	0x3e, r29	; 62
     afc:	0f be       	out	0x3f, r0	; 63
     afe:	cd bf       	out	0x3d, r28	; 61
     b00:	df 91       	pop	r29
     b02:	cf 91       	pop	r28
     b04:	1f 91       	pop	r17
     b06:	0f 91       	pop	r16
     b08:	ff 90       	pop	r15
     b0a:	ef 90       	pop	r14
     b0c:	df 90       	pop	r13
     b0e:	cf 90       	pop	r12
     b10:	bf 90       	pop	r11
     b12:	af 90       	pop	r10
     b14:	08 95       	ret

00000b16 <device_executeTask>:
     b16:	ec 01       	movw	r28, r24
     b18:	ce 01       	movw	r24, r28
}

//devided so we can test
void device_executeTask(device_t self) {
	for (;;)
		device_startMeasuring(self);
     b1a:	32 df       	rcall	.-412    	; 0x980 <device_startMeasuring>
     b1c:	fd cf       	rjmp	.-6      	; 0xb18 <device_executeTask+0x2>

00000b1e <lora_DownLinkHandler_create>:
static char _out_buf[100];



void lora_DownLinkHandler_create(UBaseType_t lora_handler_task_priority, MessageBufferHandle_t xMessageBuffer)
{
     b1e:	ef 92       	push	r14
     b20:	ff 92       	push	r15
     b22:	0f 93       	push	r16
     b24:	9b 01       	movw	r18, r22
	//_isSet=isSet;
	xTaskCreate(
     b26:	e1 2c       	mov	r14, r1
     b28:	f1 2c       	mov	r15, r1
     b2a:	08 2f       	mov	r16, r24
     b2c:	48 e8       	ldi	r20, 0x88	; 136
     b2e:	51 e0       	ldi	r21, 0x01	; 1
     b30:	6d ec       	ldi	r22, 0xCD	; 205
     b32:	72 e0       	ldi	r23, 0x02	; 2
     b34:	82 e3       	ldi	r24, 0x32	; 50
     b36:	96 e0       	ldi	r25, 0x06	; 6
     b38:	0e 94 96 14 	call	0x292c	; 0x292c <xTaskCreate>
	,  configMINIMAL_STACK_SIZE+200  // This stack size can be checked & adjusted by reading the Stack Highwater
	,  xMessageBuffer
	,  lora_handler_task_priority  // Priority, with 3 (configMAX_PRIORITIES - 1) being the highest, and 0 being the lowest.
	,  NULL );
	
}
     b3c:	0f 91       	pop	r16
     b3e:	ff 90       	pop	r15
     b40:	ef 90       	pop	r14
     b42:	08 95       	ret

00000b44 <lora_DownLinkHandler_task>:
		}
	}
}

	void lora_DownLinkHandler_task(MessageBufferHandle_t xMessageBuffer)
	{
     b44:	0f 93       	push	r16
     b46:	1f 93       	push	r17
     b48:	cf 93       	push	r28
				//lora_driver_flush_buffers(); // get rid of first version string from module after reset!
//
				//_lora_setup();
				
		size_t xBytesReceived;
		xBytesReceived = xMessageBufferReceive(xMessageBuffer,(void*) &_downlink_payload,sizeof(lora_payload_t),0);
     b4a:	00 e0       	ldi	r16, 0x00	; 0
     b4c:	10 e0       	ldi	r17, 0x00	; 0
     b4e:	98 01       	movw	r18, r16
     b50:	46 e1       	ldi	r20, 0x16	; 22
     b52:	50 e0       	ldi	r21, 0x00	; 0
     b54:	66 ea       	ldi	r22, 0xA6	; 166
     b56:	78 e0       	ldi	r23, 0x08	; 8
     b58:	0e 94 53 13 	call	0x26a6	; 0x26a6 <xStreamBufferReceive>
     b5c:	8c 01       	movw	r16, r24
		printf("PayLoad byte one: %d", _downlink_payload.bytes[0] + _downlink_payload.bytes[1]);
     b5e:	e6 ea       	ldi	r30, 0xA6	; 166
     b60:	f8 e0       	ldi	r31, 0x08	; 8
     b62:	22 81       	ldd	r18, Z+2	; 0x02
     b64:	83 81       	ldd	r24, Z+3	; 0x03
     b66:	90 e0       	ldi	r25, 0x00	; 0
     b68:	82 0f       	add	r24, r18
     b6a:	91 1d       	adc	r25, r1
     b6c:	9f 93       	push	r25
     b6e:	8f 93       	push	r24
     b70:	86 ed       	ldi	r24, 0xD6	; 214
     b72:	92 e0       	ldi	r25, 0x02	; 2
     b74:	9f 93       	push	r25
     b76:	8f 93       	push	r24
     b78:	0e 94 0f 2f 	call	0x5e1e	; 0x5e1e <printf>
		if(xBytesReceived != NULL)
     b7c:	0f 90       	pop	r0
     b7e:	0f 90       	pop	r0
     b80:	0f 90       	pop	r0
     b82:	0f 90       	pop	r0
     b84:	01 2b       	or	r16, r17
     b86:	09 f4       	brne	.+2      	; 0xb8a <lora_DownLinkHandler_task+0x46>
     b88:	69 c0       	rjmp	.+210    	; 0xc5c <lora_DownLinkHandler_task+0x118>
		{
			uint8_t command = _downlink_payload.bytes[0] + _downlink_payload.bytes[1];
     b8a:	e6 ea       	ldi	r30, 0xA6	; 166
     b8c:	f8 e0       	ldi	r31, 0x08	; 8
     b8e:	c2 81       	ldd	r28, Z+2	; 0x02
     b90:	83 81       	ldd	r24, Z+3	; 0x03
     b92:	c8 0f       	add	r28, r24
			bool* value = pvPortMalloc(sizeof(bool));
     b94:	81 e0       	ldi	r24, 0x01	; 1
     b96:	90 e0       	ldi	r25, 0x00	; 0
     b98:	95 d4       	rcall	.+2346   	; 0x14c4 <pvPortMalloc>
     b9a:	8c 01       	movw	r16, r24
			
		
			switch(command)
     b9c:	cb 34       	cpi	r28, 0x4B	; 75
     b9e:	e9 f0       	breq	.+58     	; 0xbda <lora_DownLinkHandler_task+0x96>
     ba0:	18 f4       	brcc	.+6      	; 0xba8 <lora_DownLinkHandler_task+0x64>
     ba2:	ca 34       	cpi	r28, 0x4A	; 74
     ba4:	39 f0       	breq	.+14     	; 0xbb4 <lora_DownLinkHandler_task+0x70>
     ba6:	52 c0       	rjmp	.+164    	; 0xc4c <lora_DownLinkHandler_task+0x108>
     ba8:	c6 35       	cpi	r28, 0x56	; 86
     baa:	51 f1       	breq	.+84     	; 0xc00 <lora_DownLinkHandler_task+0xbc>
     bac:	c7 35       	cpi	r28, 0x57	; 87
     bae:	09 f4       	brne	.+2      	; 0xbb2 <lora_DownLinkHandler_task+0x6e>
     bb0:	3a c0       	rjmp	.+116    	; 0xc26 <lora_DownLinkHandler_task+0xe2>
     bb2:	4c c0       	rjmp	.+152    	; 0xc4c <lora_DownLinkHandler_task+0x108>
			{
			//D0
			case 74:
				configuration_setWorking(false);
     bb4:	80 e0       	ldi	r24, 0x00	; 0
     bb6:	61 dd       	rcall	.-1342   	; 0x67a <configuration_setWorking>
				configuration_getWorking(value);
     bb8:	c8 01       	movw	r24, r16
     bba:	83 dd       	rcall	.-1274   	; 0x6c2 <configuration_getWorking>
     bbc:	f8 01       	movw	r30, r16
				printf("The bool for device is set to %d",*value);
     bbe:	80 81       	ld	r24, Z
     bc0:	1f 92       	push	r1
     bc2:	8f 93       	push	r24
     bc4:	8b ee       	ldi	r24, 0xEB	; 235
     bc6:	92 e0       	ldi	r25, 0x02	; 2
     bc8:	9f 93       	push	r25
     bca:	8f 93       	push	r24
     bcc:	0e 94 0f 2f 	call	0x5e1e	; 0x5e1e <printf>
     bd0:	0f 90       	pop	r0
				break;
     bd2:	0f 90       	pop	r0
     bd4:	0f 90       	pop	r0
     bd6:	0f 90       	pop	r0
     bd8:	41 c0       	rjmp	.+130    	; 0xc5c <lora_DownLinkHandler_task+0x118>
			//D1
			case 75 :
				configuration_setWorking(true);
     bda:	81 e0       	ldi	r24, 0x01	; 1
     bdc:	4e dd       	rcall	.-1380   	; 0x67a <configuration_setWorking>
				configuration_getWorking(value);
     bde:	c8 01       	movw	r24, r16
     be0:	70 dd       	rcall	.-1312   	; 0x6c2 <configuration_getWorking>
     be2:	f8 01       	movw	r30, r16
				printf("The bool for device is set to %d",*value);
     be4:	80 81       	ld	r24, Z
     be6:	1f 92       	push	r1
     be8:	8f 93       	push	r24
     bea:	8b ee       	ldi	r24, 0xEB	; 235
     bec:	92 e0       	ldi	r25, 0x02	; 2
     bee:	9f 93       	push	r25
     bf0:	8f 93       	push	r24
     bf2:	0e 94 0f 2f 	call	0x5e1e	; 0x5e1e <printf>
     bf6:	0f 90       	pop	r0
				break;
     bf8:	0f 90       	pop	r0
     bfa:	0f 90       	pop	r0
     bfc:	0f 90       	pop	r0
			//V0
			case 86:
				configuration_setVentilation(false);
     bfe:	2e c0       	rjmp	.+92     	; 0xc5c <lora_DownLinkHandler_task+0x118>
     c00:	80 e0       	ldi	r24, 0x00	; 0
     c02:	88 dd       	rcall	.-1264   	; 0x714 <configuration_setVentilation>
				configuration_getVentilation(value);
     c04:	c8 01       	movw	r24, r16
     c06:	aa dd       	rcall	.-1196   	; 0x75c <configuration_getVentilation>
     c08:	f8 01       	movw	r30, r16
				printf("The bool for ventilation is set to %d",*value);
     c0a:	80 81       	ld	r24, Z
     c0c:	1f 92       	push	r1
     c0e:	8f 93       	push	r24
     c10:	8c e0       	ldi	r24, 0x0C	; 12
     c12:	93 e0       	ldi	r25, 0x03	; 3
     c14:	9f 93       	push	r25
     c16:	8f 93       	push	r24
     c18:	0e 94 0f 2f 	call	0x5e1e	; 0x5e1e <printf>
			break;
     c1c:	0f 90       	pop	r0
     c1e:	0f 90       	pop	r0
     c20:	0f 90       	pop	r0
     c22:	0f 90       	pop	r0
			//V1
			case 87:
				configuration_setVentilation(true);
     c24:	1b c0       	rjmp	.+54     	; 0xc5c <lora_DownLinkHandler_task+0x118>
     c26:	81 e0       	ldi	r24, 0x01	; 1
     c28:	75 dd       	rcall	.-1302   	; 0x714 <configuration_setVentilation>
				configuration_getVentilation(value);
     c2a:	c8 01       	movw	r24, r16
     c2c:	97 dd       	rcall	.-1234   	; 0x75c <configuration_getVentilation>
     c2e:	f8 01       	movw	r30, r16
				printf("The bool for ventilation is set to %d",*value);
     c30:	80 81       	ld	r24, Z
     c32:	1f 92       	push	r1
     c34:	8f 93       	push	r24
     c36:	8c e0       	ldi	r24, 0x0C	; 12
     c38:	93 e0       	ldi	r25, 0x03	; 3
     c3a:	9f 93       	push	r25
     c3c:	8f 93       	push	r24
     c3e:	0e 94 0f 2f 	call	0x5e1e	; 0x5e1e <printf>
     c42:	0f 90       	pop	r0
				break;
     c44:	0f 90       	pop	r0
     c46:	0f 90       	pop	r0
     c48:	0f 90       	pop	r0
     c4a:	08 c0       	rjmp	.+16     	; 0xc5c <lora_DownLinkHandler_task+0x118>
     c4c:	82 e3       	ldi	r24, 0x32	; 50
			default:
				printf("Invalid command");
     c4e:	93 e0       	ldi	r25, 0x03	; 3
     c50:	9f 93       	push	r25
     c52:	8f 93       	push	r24
     c54:	0e 94 0f 2f 	call	0x5e1e	; 0x5e1e <printf>
     c58:	0f 90       	pop	r0
				break;
     c5a:	0f 90       	pop	r0
     c5c:	cf 91       	pop	r28
	}
		
		//decode the received paylaod assuming we have only temperature_setting
		//Check that the lenght we've received is two as expected
								//44						//31		
}
     c5e:	1f 91       	pop	r17
     c60:	0f 91       	pop	r16
     c62:	08 95       	ret

00000c64 <lora_DownLinkHandler_startTask>:
     c64:	ec 01       	movw	r28, r24

void lora_DownLinkHandler_startTask(MessageBufferHandle_t xMessageBuffer){
	for(;;)
	{
		lora_DownLinkHandler_task(xMessageBuffer);
     c66:	ce 01       	movw	r24, r28
     c68:	6d df       	rcall	.-294    	; 0xb44 <lora_DownLinkHandler_task>
		vTaskDelay(3000);
     c6a:	68 eb       	ldi	r22, 0xB8	; 184
     c6c:	7b e0       	ldi	r23, 0x0B	; 11
     c6e:	80 e0       	ldi	r24, 0x00	; 0
     c70:	90 e0       	ldi	r25, 0x00	; 0
     c72:	0e 94 56 17 	call	0x2eac	; 0x2eac <vTaskDelay>
     c76:	f7 cf       	rjmp	.-18     	; 0xc66 <lora_DownLinkHandler_startTask+0x2>

00000c78 <humAndTempReader_create>:
     c78:	2f 92       	push	r2
     c7a:	3f 92       	push	r3
     c7c:	4f 92       	push	r4
     c7e:	5f 92       	push	r5
     c80:	6f 92       	push	r6
     c82:	7f 92       	push	r7
     c84:	8f 92       	push	r8
     c86:	9f 92       	push	r9
     c88:	af 92       	push	r10
     c8a:	bf 92       	push	r11
     c8c:	cf 92       	push	r12
     c8e:	df 92       	push	r13
     c90:	ef 92       	push	r14
     c92:	ff 92       	push	r15
     c94:	0f 93       	push	r16
     c96:	1f 93       	push	r17
     c98:	cf 93       	push	r28
     c9a:	df 93       	push	r29
     c9c:	88 2e       	mov	r8, r24
     c9e:	96 2e       	mov	r9, r22
     ca0:	1a 01       	movw	r2, r20
     ca2:	28 01       	movw	r4, r16
     ca4:	39 01       	movw	r6, r18
     ca6:	61 e0       	ldi	r22, 0x01	; 1
     ca8:	70 e0       	ldi	r23, 0x00	; 0
     caa:	86 e0       	ldi	r24, 0x06	; 6
     cac:	90 e0       	ldi	r25, 0x00	; 0
     cae:	0e 94 71 2d 	call	0x5ae2	; 0x5ae2 <calloc>
     cb2:	ec 01       	movw	r28, r24
     cb4:	00 97       	sbiw	r24, 0x00	; 0
     cb6:	91 f1       	breq	.+100    	; 0xd1c <humAndTempReader_create+0xa4>
     cb8:	19 82       	std	Y+1, r1	; 0x01
     cba:	18 82       	st	Y, r1
     cbc:	1b 82       	std	Y+3, r1	; 0x03
     cbe:	1a 82       	std	Y+2, r1	; 0x02
     cc0:	30 92 c7 08 	sts	0x08C7, r3	; 0x8008c7 <_startMeasureEventGroup+0x1>
     cc4:	20 92 c6 08 	sts	0x08C6, r2	; 0x8008c6 <_startMeasureEventGroup>
     cc8:	40 92 c2 08 	sts	0x08C2, r4	; 0x8008c2 <_startMeasureBit>
     ccc:	50 92 c3 08 	sts	0x08C3, r5	; 0x8008c3 <_startMeasureBit+0x1>
     cd0:	60 92 c4 08 	sts	0x08C4, r6	; 0x8008c4 <_startMeasureBit+0x2>
     cd4:	70 92 c5 08 	sts	0x08C5, r7	; 0x8008c5 <_startMeasureBit+0x3>
     cd8:	f0 92 c1 08 	sts	0x08C1, r15	; 0x8008c1 <_readyEventGroup+0x1>
     cdc:	e0 92 c0 08 	sts	0x08C0, r14	; 0x8008c0 <_readyEventGroup>
     ce0:	a0 92 bc 08 	sts	0x08BC, r10	; 0x8008bc <_readyBit>
     ce4:	b0 92 bd 08 	sts	0x08BD, r11	; 0x8008bd <_readyBit+0x1>
     ce8:	c0 92 be 08 	sts	0x08BE, r12	; 0x8008be <_readyBit+0x2>
     cec:	d0 92 bf 08 	sts	0x08BF, r13	; 0x8008bf <_readyBit+0x3>
     cf0:	49 2d       	mov	r20, r9
     cf2:	50 e0       	ldi	r21, 0x00	; 0
     cf4:	7c 01       	movw	r14, r24
     cf6:	84 e0       	ldi	r24, 0x04	; 4
     cf8:	e8 0e       	add	r14, r24
     cfa:	f1 1c       	adc	r15, r1
     cfc:	08 2d       	mov	r16, r8
     cfe:	9e 01       	movw	r18, r28
     d00:	62 e4       	ldi	r22, 0x42	; 66
     d02:	73 e0       	ldi	r23, 0x03	; 3
     d04:	84 e2       	ldi	r24, 0x24	; 36
     d06:	97 e0       	ldi	r25, 0x07	; 7
     d08:	0e 94 96 14 	call	0x292c	; 0x292c <xTaskCreate>
     d0c:	83 e5       	ldi	r24, 0x53	; 83
     d0e:	93 e0       	ldi	r25, 0x03	; 3
     d10:	9f 93       	push	r25
     d12:	8f 93       	push	r24
     d14:	0e 94 0f 2f 	call	0x5e1e	; 0x5e1e <printf>
     d18:	0f 90       	pop	r0
     d1a:	0f 90       	pop	r0
     d1c:	ce 01       	movw	r24, r28
     d1e:	df 91       	pop	r29
     d20:	cf 91       	pop	r28
     d22:	1f 91       	pop	r17
     d24:	0f 91       	pop	r16
     d26:	ff 90       	pop	r15
     d28:	ef 90       	pop	r14
     d2a:	df 90       	pop	r13
     d2c:	cf 90       	pop	r12
     d2e:	bf 90       	pop	r11
     d30:	af 90       	pop	r10
     d32:	9f 90       	pop	r9
     d34:	8f 90       	pop	r8
     d36:	7f 90       	pop	r7
     d38:	6f 90       	pop	r6
     d3a:	5f 90       	pop	r5
     d3c:	4f 90       	pop	r4
     d3e:	3f 90       	pop	r3
     d40:	2f 90       	pop	r2
     d42:	08 95       	ret

00000d44 <humAndTempReader_measure>:
     d44:	cf 92       	push	r12
     d46:	df 92       	push	r13
     d48:	ef 92       	push	r14
     d4a:	ff 92       	push	r15
     d4c:	0f 93       	push	r16
     d4e:	1f 93       	push	r17
     d50:	cf 93       	push	r28
     d52:	df 93       	push	r29
     d54:	ec 01       	movw	r28, r24
     d56:	40 91 c2 08 	lds	r20, 0x08C2	; 0x8008c2 <_startMeasureBit>
     d5a:	50 91 c3 08 	lds	r21, 0x08C3	; 0x8008c3 <_startMeasureBit+0x1>
     d5e:	60 91 c4 08 	lds	r22, 0x08C4	; 0x8008c4 <_startMeasureBit+0x2>
     d62:	70 91 c5 08 	lds	r23, 0x08C5	; 0x8008c5 <_startMeasureBit+0x3>
     d66:	cc 24       	eor	r12, r12
     d68:	ca 94       	dec	r12
     d6a:	dc 2c       	mov	r13, r12
     d6c:	76 01       	movw	r14, r12
     d6e:	01 e0       	ldi	r16, 0x01	; 1
     d70:	21 e0       	ldi	r18, 0x01	; 1
     d72:	80 91 c6 08 	lds	r24, 0x08C6	; 0x8008c6 <_startMeasureEventGroup>
     d76:	90 91 c7 08 	lds	r25, 0x08C7	; 0x8008c7 <_startMeasureEventGroup+0x1>
     d7a:	fe d1       	rcall	.+1020   	; 0x1178 <xEventGroupWaitBits>
     d7c:	00 91 c2 08 	lds	r16, 0x08C2	; 0x8008c2 <_startMeasureBit>
     d80:	10 91 c3 08 	lds	r17, 0x08C3	; 0x8008c3 <_startMeasureBit+0x1>
     d84:	20 91 c4 08 	lds	r18, 0x08C4	; 0x8008c4 <_startMeasureBit+0x2>
     d88:	30 91 c5 08 	lds	r19, 0x08C5	; 0x8008c5 <_startMeasureBit+0x3>
     d8c:	dc 01       	movw	r26, r24
     d8e:	cb 01       	movw	r24, r22
     d90:	80 23       	and	r24, r16
     d92:	91 23       	and	r25, r17
     d94:	a2 23       	and	r26, r18
     d96:	b3 23       	and	r27, r19
     d98:	08 17       	cp	r16, r24
     d9a:	19 07       	cpc	r17, r25
     d9c:	2a 07       	cpc	r18, r26
     d9e:	3b 07       	cpc	r19, r27
     da0:	09 f0       	breq	.+2      	; 0xda4 <humAndTempReader_measure+0x60>
     da2:	49 c0       	rjmp	.+146    	; 0xe36 <humAndTempReader_measure+0xf2>
     da4:	0e 94 f8 1e 	call	0x3df0	; 0x3df0 <hih8120Wakeup>
     da8:	62 e3       	ldi	r22, 0x32	; 50
     daa:	70 e0       	ldi	r23, 0x00	; 0
     dac:	80 e0       	ldi	r24, 0x00	; 0
     dae:	90 e0       	ldi	r25, 0x00	; 0
     db0:	0e 94 56 17 	call	0x2eac	; 0x2eac <vTaskDelay>
     db4:	0e 94 0d 1f 	call	0x3e1a	; 0x3e1a <hih8120Meassure>
     db8:	65 e0       	ldi	r22, 0x05	; 5
     dba:	70 e0       	ldi	r23, 0x00	; 0
     dbc:	80 e0       	ldi	r24, 0x00	; 0
     dbe:	90 e0       	ldi	r25, 0x00	; 0
     dc0:	0e 94 56 17 	call	0x2eac	; 0x2eac <vTaskDelay>
     dc4:	0e 94 f5 1e 	call	0x3dea	; 0x3dea <hih8120IsReady>
     dc8:	88 23       	and	r24, r24
     dca:	41 f1       	breq	.+80     	; 0xe1c <humAndTempReader_measure+0xd8>
     dcc:	0e 94 33 1f 	call	0x3e66	; 0x3e66 <hih8120GetHumidityPercent_x10>
     dd0:	99 83       	std	Y+1, r25	; 0x01
     dd2:	88 83       	st	Y, r24
     dd4:	0e 94 59 1f 	call	0x3eb2	; 0x3eb2 <hih8120GetTemperature_x10>
     dd8:	9b 83       	std	Y+3, r25	; 0x03
     dda:	8a 83       	std	Y+2, r24	; 0x02
     ddc:	82 e7       	ldi	r24, 0x72	; 114
     dde:	93 e0       	ldi	r25, 0x03	; 3
     de0:	0e 94 22 2f 	call	0x5e44	; 0x5e44 <puts>
     de4:	89 81       	ldd	r24, Y+1	; 0x01
     de6:	8f 93       	push	r24
     de8:	88 81       	ld	r24, Y
     dea:	8f 93       	push	r24
     dec:	88 e9       	ldi	r24, 0x98	; 152
     dee:	93 e0       	ldi	r25, 0x03	; 3
     df0:	9f 93       	push	r25
     df2:	8f 93       	push	r24
     df4:	0e 94 0f 2f 	call	0x5e1e	; 0x5e1e <printf>
     df8:	8b 81       	ldd	r24, Y+3	; 0x03
     dfa:	8f 93       	push	r24
     dfc:	8a 81       	ldd	r24, Y+2	; 0x02
     dfe:	8f 93       	push	r24
     e00:	86 ea       	ldi	r24, 0xA6	; 166
     e02:	93 e0       	ldi	r25, 0x03	; 3
     e04:	9f 93       	push	r25
     e06:	8f 93       	push	r24
     e08:	0e 94 0f 2f 	call	0x5e1e	; 0x5e1e <printf>
     e0c:	8d b7       	in	r24, 0x3d	; 61
     e0e:	9e b7       	in	r25, 0x3e	; 62
     e10:	08 96       	adiw	r24, 0x08	; 8
     e12:	0f b6       	in	r0, 0x3f	; 63
     e14:	f8 94       	cli
     e16:	9e bf       	out	0x3e, r25	; 62
     e18:	0f be       	out	0x3f, r0	; 63
     e1a:	8d bf       	out	0x3d, r24	; 61
     e1c:	40 91 bc 08 	lds	r20, 0x08BC	; 0x8008bc <_readyBit>
     e20:	50 91 bd 08 	lds	r21, 0x08BD	; 0x8008bd <_readyBit+0x1>
     e24:	60 91 be 08 	lds	r22, 0x08BE	; 0x8008be <_readyBit+0x2>
     e28:	70 91 bf 08 	lds	r23, 0x08BF	; 0x8008bf <_readyBit+0x3>
     e2c:	80 91 c0 08 	lds	r24, 0x08C0	; 0x8008c0 <_readyEventGroup>
     e30:	90 91 c1 08 	lds	r25, 0x08C1	; 0x8008c1 <_readyEventGroup+0x1>
     e34:	61 d2       	rcall	.+1218   	; 0x12f8 <xEventGroupSetBits>
     e36:	df 91       	pop	r29
     e38:	cf 91       	pop	r28
     e3a:	1f 91       	pop	r17
     e3c:	0f 91       	pop	r16
     e3e:	ff 90       	pop	r15
     e40:	ef 90       	pop	r14
     e42:	df 90       	pop	r13
     e44:	cf 90       	pop	r12
     e46:	08 95       	ret

00000e48 <humAndTempReader_executeTask>:
     e48:	ec 01       	movw	r28, r24
     e4a:	ce 01       	movw	r24, r28
     e4c:	7b df       	rcall	.-266    	; 0xd44 <humAndTempReader_measure>
     e4e:	fd cf       	rjmp	.-6      	; 0xe4a <humAndTempReader_executeTask+0x2>

00000e50 <humAndTempReader_getHumidity>:
     e50:	fc 01       	movw	r30, r24
     e52:	80 81       	ld	r24, Z
     e54:	91 81       	ldd	r25, Z+1	; 0x01
     e56:	08 95       	ret

00000e58 <humAndTempReader_getTemperature>:
     e58:	fc 01       	movw	r30, r24
     e5a:	82 81       	ldd	r24, Z+2	; 0x02
     e5c:	93 81       	ldd	r25, Z+3	; 0x03
     e5e:	08 95       	ret

00000e60 <lora_UpLinkHandler_create>:
     e60:	ef 92       	push	r14
     e62:	ff 92       	push	r15
     e64:	0f 93       	push	r16
     e66:	9b 01       	movw	r18, r22
     e68:	e1 2c       	mov	r14, r1
     e6a:	f1 2c       	mov	r15, r1
     e6c:	08 2f       	mov	r16, r24
     e6e:	48 e8       	ldi	r20, 0x88	; 136
     e70:	51 e0       	ldi	r21, 0x01	; 1
     e72:	60 eb       	ldi	r22, 0xB0	; 176
     e74:	73 e0       	ldi	r23, 0x03	; 3
     e76:	89 e8       	ldi	r24, 0x89	; 137
     e78:	98 e0       	ldi	r25, 0x08	; 8
     e7a:	0e 94 96 14 	call	0x292c	; 0x292c <xTaskCreate>
     e7e:	0f 91       	pop	r16
     e80:	ff 90       	pop	r15
     e82:	ef 90       	pop	r14
     e84:	08 95       	ret

00000e86 <lora_UpLinkHandler_task>:
     e86:	df 92       	push	r13
     e88:	ef 92       	push	r14
     e8a:	ff 92       	push	r15
     e8c:	0f 93       	push	r16
     e8e:	1f 93       	push	r17
     e90:	cf 93       	push	r28
     e92:	df 93       	push	r29
     e94:	7c 01       	movw	r14, r24
     e96:	80 91 c8 08 	lds	r24, 0x08C8	; 0x8008c8 <isSet>
     e9a:	81 11       	cpse	r24, r1
     e9c:	d0 c0       	rjmp	.+416    	; 0x103e <lora_UpLinkHandler_task+0x1b8>
     e9e:	81 e0       	ldi	r24, 0x01	; 1
     ea0:	0e 94 79 22 	call	0x44f2	; 0x44f2 <lora_driver_reset_rn2483>
     ea4:	62 e0       	ldi	r22, 0x02	; 2
     ea6:	70 e0       	ldi	r23, 0x00	; 0
     ea8:	80 e0       	ldi	r24, 0x00	; 0
     eaa:	90 e0       	ldi	r25, 0x00	; 0
     eac:	0e 94 56 17 	call	0x2eac	; 0x2eac <vTaskDelay>
     eb0:	80 e0       	ldi	r24, 0x00	; 0
     eb2:	0e 94 79 22 	call	0x44f2	; 0x44f2 <lora_driver_reset_rn2483>
     eb6:	66 e9       	ldi	r22, 0x96	; 150
     eb8:	70 e0       	ldi	r23, 0x00	; 0
     eba:	80 e0       	ldi	r24, 0x00	; 0
     ebc:	90 e0       	ldi	r25, 0x00	; 0
     ebe:	0e 94 56 17 	call	0x2eac	; 0x2eac <vTaskDelay>
     ec2:	0e 94 2f 22 	call	0x445e	; 0x445e <lora_driver_flush_buffers>
     ec6:	81 e0       	ldi	r24, 0x01	; 1
     ec8:	0e 94 87 20 	call	0x410e	; 0x410e <led_slow_blink>
     ecc:	0e 94 8d 22 	call	0x451a	; 0x451a <lora_driver_rn2483_factory_reset>
     ed0:	0e 94 0a 25 	call	0x4a14	; 0x4a14 <lora_driver_map_return_code_to_text>
     ed4:	9f 93       	push	r25
     ed6:	8f 93       	push	r24
     ed8:	89 eb       	ldi	r24, 0xB9	; 185
     eda:	93 e0       	ldi	r25, 0x03	; 3
     edc:	9f 93       	push	r25
     ede:	8f 93       	push	r24
     ee0:	0e 94 0f 2f 	call	0x5e1e	; 0x5e1e <printf>
     ee4:	0e 94 0b 24 	call	0x4816	; 0x4816 <lora_driver_configure_to_eu868>
     ee8:	0e 94 0a 25 	call	0x4a14	; 0x4a14 <lora_driver_map_return_code_to_text>
     eec:	9f 93       	push	r25
     eee:	8f 93       	push	r24
     ef0:	8c ec       	ldi	r24, 0xCC	; 204
     ef2:	93 e0       	ldi	r25, 0x03	; 3
     ef4:	9f 93       	push	r25
     ef6:	8f 93       	push	r24
     ef8:	0e 94 0f 2f 	call	0x5e1e	; 0x5e1e <printf>
     efc:	8f ed       	ldi	r24, 0xDF	; 223
     efe:	98 e0       	ldi	r25, 0x08	; 8
     f00:	0e 94 9f 22 	call	0x453e	; 0x453e <lora_driver_get_rn2483_hweui>
     f04:	0e 94 0a 25 	call	0x4a14	; 0x4a14 <lora_driver_map_return_code_to_text>
     f08:	cf ed       	ldi	r28, 0xDF	; 223
     f0a:	d8 e0       	ldi	r29, 0x08	; 8
     f0c:	df 93       	push	r29
     f0e:	cf 93       	push	r28
     f10:	9f 93       	push	r25
     f12:	8f 93       	push	r24
     f14:	85 ee       	ldi	r24, 0xE5	; 229
     f16:	93 e0       	ldi	r25, 0x03	; 3
     f18:	9f 93       	push	r25
     f1a:	8f 93       	push	r24
     f1c:	0e 94 0f 2f 	call	0x5e1e	; 0x5e1e <printf>
     f20:	ce 01       	movw	r24, r28
     f22:	0e 94 bb 22 	call	0x4576	; 0x4576 <lora_driver_set_device_identifier>
     f26:	0e 94 0a 25 	call	0x4a14	; 0x4a14 <lora_driver_map_return_code_to_text>
     f2a:	9f 93       	push	r25
     f2c:	8f 93       	push	r24
     f2e:	df 93       	push	r29
     f30:	cf 93       	push	r28
     f32:	89 ef       	ldi	r24, 0xF9	; 249
     f34:	93 e0       	ldi	r25, 0x03	; 3
     f36:	9f 93       	push	r25
     f38:	8f 93       	push	r24
     f3a:	0e 94 0f 2f 	call	0x5e1e	; 0x5e1e <printf>
     f3e:	ae 01       	movw	r20, r28
     f40:	6e e0       	ldi	r22, 0x0E	; 14
     f42:	74 e0       	ldi	r23, 0x04	; 4
     f44:	8f e2       	ldi	r24, 0x2F	; 47
     f46:	94 e0       	ldi	r25, 0x04	; 4
     f48:	0e 94 e9 24 	call	0x49d2	; 0x49d2 <lora_driver_set_otaa_identity>
     f4c:	0e 94 0a 25 	call	0x4a14	; 0x4a14 <lora_driver_map_return_code_to_text>
     f50:	9f 93       	push	r25
     f52:	8f 93       	push	r24
     f54:	df 93       	push	r29
     f56:	cf 93       	push	r28
     f58:	8e e0       	ldi	r24, 0x0E	; 14
     f5a:	94 e0       	ldi	r25, 0x04	; 4
     f5c:	9f 93       	push	r25
     f5e:	8f 93       	push	r24
     f60:	8f e2       	ldi	r24, 0x2F	; 47
     f62:	94 e0       	ldi	r25, 0x04	; 4
     f64:	9f 93       	push	r25
     f66:	8f 93       	push	r24
     f68:	80 e4       	ldi	r24, 0x40	; 64
     f6a:	94 e0       	ldi	r25, 0x04	; 4
     f6c:	9f 93       	push	r25
     f6e:	8f 93       	push	r24
     f70:	0e 94 0f 2f 	call	0x5e1e	; 0x5e1e <printf>
     f74:	0e 94 ee 22 	call	0x45dc	; 0x45dc <lora_driver_save_mac>
     f78:	0e 94 0a 25 	call	0x4a14	; 0x4a14 <lora_driver_map_return_code_to_text>
     f7c:	9f 93       	push	r25
     f7e:	8f 93       	push	r24
     f80:	86 e7       	ldi	r24, 0x76	; 118
     f82:	94 e0       	ldi	r25, 0x04	; 4
     f84:	9f 93       	push	r25
     f86:	8f 93       	push	r24
     f88:	0e 94 0f 2f 	call	0x5e1e	; 0x5e1e <printf>
     f8c:	8d b7       	in	r24, 0x3d	; 61
     f8e:	9e b7       	in	r25, 0x3e	; 62
     f90:	82 96       	adiw	r24, 0x22	; 34
     f92:	0f b6       	in	r0, 0x3f	; 63
     f94:	f8 94       	cli
     f96:	9e bf       	out	0x3e, r25	; 62
     f98:	0f be       	out	0x3f, r0	; 63
     f9a:	8d bf       	out	0x3d, r24	; 61
     f9c:	81 e0       	ldi	r24, 0x01	; 1
     f9e:	0e 94 e8 23 	call	0x47d0	; 0x47d0 <lora_driver_set_adaptive_data_rate>
     fa2:	0e 94 0a 25 	call	0x4a14	; 0x4a14 <lora_driver_map_return_code_to_text>
     fa6:	9f 93       	push	r25
     fa8:	8f 93       	push	r24
     faa:	85 e8       	ldi	r24, 0x85	; 133
     fac:	94 e0       	ldi	r25, 0x04	; 4
     fae:	9f 93       	push	r25
     fb0:	8f 93       	push	r24
     fb2:	0e 94 0f 2f 	call	0x5e1e	; 0x5e1e <printf>
     fb6:	84 ef       	ldi	r24, 0xF4	; 244
     fb8:	91 e0       	ldi	r25, 0x01	; 1
     fba:	0e 94 f3 23 	call	0x47e6	; 0x47e6 <lora_driver_set_receive_delay>
     fbe:	0e 94 0a 25 	call	0x4a14	; 0x4a14 <lora_driver_map_return_code_to_text>
     fc2:	9f 93       	push	r25
     fc4:	8f 93       	push	r24
     fc6:	81 e0       	ldi	r24, 0x01	; 1
     fc8:	8f 93       	push	r24
     fca:	84 ef       	ldi	r24, 0xF4	; 244
     fcc:	8f 93       	push	r24
     fce:	86 ea       	ldi	r24, 0xA6	; 166
     fd0:	94 e0       	ldi	r25, 0x04	; 4
     fd2:	9f 93       	push	r25
     fd4:	8f 93       	push	r24
     fd6:	0e 94 0f 2f 	call	0x5e1e	; 0x5e1e <printf>
     fda:	8d b7       	in	r24, 0x3d	; 61
     fdc:	9e b7       	in	r25, 0x3e	; 62
     fde:	0a 96       	adiw	r24, 0x0a	; 10
     fe0:	0f b6       	in	r0, 0x3f	; 63
     fe2:	f8 94       	cli
     fe4:	9e bf       	out	0x3e, r25	; 62
     fe6:	0f be       	out	0x3f, r0	; 63
     fe8:	8d bf       	out	0x3d, r24	; 61
     fea:	ca e0       	ldi	r28, 0x0A	; 10
     fec:	d0 e0       	ldi	r29, 0x00	; 0
     fee:	06 ec       	ldi	r16, 0xC6	; 198
     ff0:	14 e0       	ldi	r17, 0x04	; 4
     ff2:	80 e0       	ldi	r24, 0x00	; 0
     ff4:	0e 94 f4 22 	call	0x45e8	; 0x45e8 <lora_driver_join>
     ff8:	d8 2e       	mov	r13, r24
     ffa:	0e 94 0a 25 	call	0x4a14	; 0x4a14 <lora_driver_map_return_code_to_text>
     ffe:	9f 93       	push	r25
    1000:	8f 93       	push	r24
    1002:	df 93       	push	r29
    1004:	cf 93       	push	r28
    1006:	1f 93       	push	r17
    1008:	0f 93       	push	r16
    100a:	0e 94 0f 2f 	call	0x5e1e	; 0x5e1e <printf>
    100e:	0f 90       	pop	r0
    1010:	0f 90       	pop	r0
    1012:	0f 90       	pop	r0
    1014:	0f 90       	pop	r0
    1016:	0f 90       	pop	r0
    1018:	0f 90       	pop	r0
    101a:	88 e0       	ldi	r24, 0x08	; 8
    101c:	d8 16       	cp	r13, r24
    101e:	09 f4       	brne	.+2      	; 0x1022 <lora_UpLinkHandler_task+0x19c>
    1020:	62 c0       	rjmp	.+196    	; 0x10e6 <lora_UpLinkHandler_task+0x260>
    1022:	80 e0       	ldi	r24, 0x00	; 0
    1024:	0e 94 f3 20 	call	0x41e6	; 0x41e6 <led_long_puls>
    1028:	66 e3       	ldi	r22, 0x36	; 54
    102a:	71 e0       	ldi	r23, 0x01	; 1
    102c:	80 e0       	ldi	r24, 0x00	; 0
    102e:	90 e0       	ldi	r25, 0x00	; 0
    1030:	0e 94 56 17 	call	0x2eac	; 0x2eac <vTaskDelay>
    1034:	21 97       	sbiw	r28, 0x01	; 1
    1036:	e9 f6       	brne	.-70     	; 0xff2 <lora_UpLinkHandler_task+0x16c>
    1038:	5d c0       	rjmp	.+186    	; 0x10f4 <lora_UpLinkHandler_task+0x26e>
    103a:	76 d4       	rcall	.+2284   	; 0x1928 <vPortYield>
    103c:	fe cf       	rjmp	.-4      	; 0x103a <lora_UpLinkHandler_task+0x1b4>
    103e:	00 e0       	ldi	r16, 0x00	; 0
    1040:	10 e0       	ldi	r17, 0x00	; 0
    1042:	98 01       	movw	r18, r16
    1044:	42 e3       	ldi	r20, 0x32	; 50
    1046:	50 e0       	ldi	r21, 0x00	; 0
    1048:	69 ec       	ldi	r22, 0xC9	; 201
    104a:	78 e0       	ldi	r23, 0x08	; 8
    104c:	c7 01       	movw	r24, r14
    104e:	0e 94 53 13 	call	0x26a6	; 0x26a6 <xStreamBufferReceive>
    1052:	02 97       	sbiw	r24, 0x02	; 2
    1054:	08 f4       	brcc	.+2      	; 0x1058 <lora_UpLinkHandler_task+0x1d2>
    1056:	40 c0       	rjmp	.+128    	; 0x10d8 <lora_UpLinkHandler_task+0x252>
    1058:	83 e0       	ldi	r24, 0x03	; 3
    105a:	0e 94 05 21 	call	0x420a	; 0x420a <led_short_puls>
    105e:	c9 ec       	ldi	r28, 0xC9	; 201
    1060:	d8 e0       	ldi	r29, 0x08	; 8
    1062:	8a 81       	ldd	r24, Y+2	; 0x02
    1064:	1f 92       	push	r1
    1066:	8f 93       	push	r24
    1068:	86 ee       	ldi	r24, 0xE6	; 230
    106a:	94 e0       	ldi	r25, 0x04	; 4
    106c:	9f 93       	push	r25
    106e:	8f 93       	push	r24
    1070:	0e 94 0f 2f 	call	0x5e1e	; 0x5e1e <printf>
    1074:	8b 81       	ldd	r24, Y+3	; 0x03
    1076:	1f 92       	push	r1
    1078:	8f 93       	push	r24
    107a:	88 e0       	ldi	r24, 0x08	; 8
    107c:	95 e0       	ldi	r25, 0x05	; 5
    107e:	9f 93       	push	r25
    1080:	8f 93       	push	r24
    1082:	0e 94 0f 2f 	call	0x5e1e	; 0x5e1e <printf>
    1086:	8c 81       	ldd	r24, Y+4	; 0x04
    1088:	1f 92       	push	r1
    108a:	8f 93       	push	r24
    108c:	8b e2       	ldi	r24, 0x2B	; 43
    108e:	95 e0       	ldi	r25, 0x05	; 5
    1090:	9f 93       	push	r25
    1092:	8f 93       	push	r24
    1094:	0e 94 0f 2f 	call	0x5e1e	; 0x5e1e <printf>
    1098:	8d 81       	ldd	r24, Y+5	; 0x05
    109a:	1f 92       	push	r1
    109c:	8f 93       	push	r24
    109e:	8a e4       	ldi	r24, 0x4A	; 74
    10a0:	95 e0       	ldi	r25, 0x05	; 5
    10a2:	9f 93       	push	r25
    10a4:	8f 93       	push	r24
    10a6:	0e 94 0f 2f 	call	0x5e1e	; 0x5e1e <printf>
    10aa:	be 01       	movw	r22, r28
    10ac:	80 e0       	ldi	r24, 0x00	; 0
    10ae:	0e 94 1d 23 	call	0x463a	; 0x463a <lora_driver_sent_upload_message>
    10b2:	0e 94 0a 25 	call	0x4a14	; 0x4a14 <lora_driver_map_return_code_to_text>
    10b6:	9f 93       	push	r25
    10b8:	8f 93       	push	r24
    10ba:	8a e6       	ldi	r24, 0x6A	; 106
    10bc:	95 e0       	ldi	r25, 0x05	; 5
    10be:	9f 93       	push	r25
    10c0:	8f 93       	push	r24
    10c2:	0e 94 0f 2f 	call	0x5e1e	; 0x5e1e <printf>
    10c6:	8d b7       	in	r24, 0x3d	; 61
    10c8:	9e b7       	in	r25, 0x3e	; 62
    10ca:	44 96       	adiw	r24, 0x14	; 20
    10cc:	0f b6       	in	r0, 0x3f	; 63
    10ce:	f8 94       	cli
    10d0:	9e bf       	out	0x3e, r25	; 62
    10d2:	0f be       	out	0x3f, r0	; 63
    10d4:	8d bf       	out	0x3d, r24	; 61
    10d6:	15 c0       	rjmp	.+42     	; 0x1102 <lora_UpLinkHandler_task+0x27c>
    10d8:	60 ed       	ldi	r22, 0xD0	; 208
    10da:	77 e0       	ldi	r23, 0x07	; 7
    10dc:	80 e0       	ldi	r24, 0x00	; 0
    10de:	90 e0       	ldi	r25, 0x00	; 0
    10e0:	0e 94 56 17 	call	0x2eac	; 0x2eac <vTaskDelay>
    10e4:	0e c0       	rjmp	.+28     	; 0x1102 <lora_UpLinkHandler_task+0x27c>
    10e6:	81 e0       	ldi	r24, 0x01	; 1
    10e8:	0e 94 d5 20 	call	0x41aa	; 0x41aa <led_led_on>
    10ec:	81 e0       	ldi	r24, 0x01	; 1
    10ee:	80 93 c8 08 	sts	0x08C8, r24	; 0x8008c8 <isSet>
    10f2:	a5 cf       	rjmp	.-182    	; 0x103e <lora_UpLinkHandler_task+0x1b8>
    10f4:	81 e0       	ldi	r24, 0x01	; 1
    10f6:	0e 94 e4 20 	call	0x41c8	; 0x41c8 <led_led_off>
    10fa:	80 e0       	ldi	r24, 0x00	; 0
    10fc:	0e 94 ae 20 	call	0x415c	; 0x415c <led_fast_blink>
    1100:	9c cf       	rjmp	.-200    	; 0x103a <lora_UpLinkHandler_task+0x1b4>
    1102:	df 91       	pop	r29
    1104:	cf 91       	pop	r28
    1106:	1f 91       	pop	r17
    1108:	0f 91       	pop	r16
    110a:	ff 90       	pop	r15
    110c:	ef 90       	pop	r14
    110e:	df 90       	pop	r13
    1110:	08 95       	ret

00001112 <lora_UpLinkHandler_startTask>:
    1112:	ec 01       	movw	r28, r24
    1114:	ce 01       	movw	r24, r28
    1116:	b7 de       	rcall	.-658    	; 0xe86 <lora_UpLinkHandler_task>
    1118:	68 eb       	ldi	r22, 0xB8	; 184
    111a:	7b e0       	ldi	r23, 0x0B	; 11
    111c:	80 e0       	ldi	r24, 0x00	; 0
    111e:	90 e0       	ldi	r25, 0x00	; 0
    1120:	0e 94 56 17 	call	0x2eac	; 0x2eac <vTaskDelay>
    1124:	f7 cf       	rjmp	.-18     	; 0x1114 <lora_UpLinkHandler_startTask+0x2>

00001126 <trace_init>:
    1126:	e7 e0       	ldi	r30, 0x07	; 7
    1128:	f1 e0       	ldi	r31, 0x01	; 1
    112a:	80 81       	ld	r24, Z
    112c:	8f 60       	ori	r24, 0x0F	; 15
    112e:	80 83       	st	Z, r24
    1130:	08 95       	ret

00001132 <task_switch_in>:
    1132:	e8 e0       	ldi	r30, 0x08	; 8
    1134:	f1 e0       	ldi	r31, 0x01	; 1
    1136:	90 81       	ld	r25, Z
    1138:	90 7f       	andi	r25, 0xF0	; 240
    113a:	90 83       	st	Z, r25
    113c:	90 81       	ld	r25, Z
    113e:	8f 70       	andi	r24, 0x0F	; 15
    1140:	98 2b       	or	r25, r24
    1142:	90 83       	st	Z, r25
    1144:	08 95       	ret

00001146 <task_switch_out>:
    1146:	e8 e0       	ldi	r30, 0x08	; 8
    1148:	f1 e0       	ldi	r31, 0x01	; 1
    114a:	80 81       	ld	r24, Z
    114c:	80 7f       	andi	r24, 0xF0	; 240
    114e:	80 83       	st	Z, r24
    1150:	08 95       	ret

00001152 <xEventGroupCreate>:
    1152:	cf 93       	push	r28
    1154:	df 93       	push	r29
    1156:	80 e1       	ldi	r24, 0x10	; 16
    1158:	90 e0       	ldi	r25, 0x00	; 0
    115a:	b4 d1       	rcall	.+872    	; 0x14c4 <pvPortMalloc>
    115c:	ec 01       	movw	r28, r24
    115e:	00 97       	sbiw	r24, 0x00	; 0
    1160:	39 f0       	breq	.+14     	; 0x1170 <xEventGroupCreate+0x1e>
    1162:	fc 01       	movw	r30, r24
    1164:	11 92       	st	Z+, r1
    1166:	11 92       	st	Z+, r1
    1168:	11 92       	st	Z+, r1
    116a:	11 92       	st	Z+, r1
    116c:	cf 01       	movw	r24, r30
    116e:	94 d2       	rcall	.+1320   	; 0x1698 <vListInitialise>
    1170:	ce 01       	movw	r24, r28
    1172:	df 91       	pop	r29
    1174:	cf 91       	pop	r28
    1176:	08 95       	ret

00001178 <xEventGroupWaitBits>:
    1178:	2f 92       	push	r2
    117a:	3f 92       	push	r3
    117c:	4f 92       	push	r4
    117e:	5f 92       	push	r5
    1180:	6f 92       	push	r6
    1182:	7f 92       	push	r7
    1184:	8f 92       	push	r8
    1186:	9f 92       	push	r9
    1188:	af 92       	push	r10
    118a:	bf 92       	push	r11
    118c:	cf 92       	push	r12
    118e:	df 92       	push	r13
    1190:	ef 92       	push	r14
    1192:	ff 92       	push	r15
    1194:	0f 93       	push	r16
    1196:	1f 93       	push	r17
    1198:	cf 93       	push	r28
    119a:	df 93       	push	r29
    119c:	ec 01       	movw	r28, r24
    119e:	4a 01       	movw	r8, r20
    11a0:	5b 01       	movw	r10, r22
    11a2:	62 2e       	mov	r6, r18
    11a4:	70 2e       	mov	r7, r16
    11a6:	0e 94 f1 15 	call	0x2be2	; 0x2be2 <vTaskSuspendAll>
    11aa:	28 80       	ld	r2, Y
    11ac:	39 80       	ldd	r3, Y+1	; 0x01
    11ae:	4a 80       	ldd	r4, Y+2	; 0x02
    11b0:	5b 80       	ldd	r5, Y+3	; 0x03
    11b2:	01 11       	cpse	r16, r1
    11b4:	0d c0       	rjmp	.+26     	; 0x11d0 <xEventGroupWaitBits+0x58>
    11b6:	81 e0       	ldi	r24, 0x01	; 1
    11b8:	b2 01       	movw	r22, r4
    11ba:	a1 01       	movw	r20, r2
    11bc:	48 21       	and	r20, r8
    11be:	59 21       	and	r21, r9
    11c0:	6a 21       	and	r22, r10
    11c2:	7b 21       	and	r23, r11
    11c4:	45 2b       	or	r20, r21
    11c6:	46 2b       	or	r20, r22
    11c8:	47 2b       	or	r20, r23
    11ca:	79 f4       	brne	.+30     	; 0x11ea <xEventGroupWaitBits+0x72>
    11cc:	80 e0       	ldi	r24, 0x00	; 0
    11ce:	0d c0       	rjmp	.+26     	; 0x11ea <xEventGroupWaitBits+0x72>
    11d0:	81 e0       	ldi	r24, 0x01	; 1
    11d2:	b2 01       	movw	r22, r4
    11d4:	a1 01       	movw	r20, r2
    11d6:	48 21       	and	r20, r8
    11d8:	59 21       	and	r21, r9
    11da:	6a 21       	and	r22, r10
    11dc:	7b 21       	and	r23, r11
    11de:	48 15       	cp	r20, r8
    11e0:	59 05       	cpc	r21, r9
    11e2:	6a 05       	cpc	r22, r10
    11e4:	7b 05       	cpc	r23, r11
    11e6:	09 f0       	breq	.+2      	; 0x11ea <xEventGroupWaitBits+0x72>
    11e8:	80 e0       	ldi	r24, 0x00	; 0
    11ea:	88 23       	and	r24, r24
    11ec:	81 f0       	breq	.+32     	; 0x120e <xEventGroupWaitBits+0x96>
    11ee:	66 20       	and	r6, r6
    11f0:	09 f4       	brne	.+2      	; 0x11f4 <xEventGroupWaitBits+0x7c>
    11f2:	6b c0       	rjmp	.+214    	; 0x12ca <xEventGroupWaitBits+0x152>
    11f4:	80 94       	com	r8
    11f6:	90 94       	com	r9
    11f8:	a0 94       	com	r10
    11fa:	b0 94       	com	r11
    11fc:	82 20       	and	r8, r2
    11fe:	93 20       	and	r9, r3
    1200:	a4 20       	and	r10, r4
    1202:	b5 20       	and	r11, r5
    1204:	88 82       	st	Y, r8
    1206:	99 82       	std	Y+1, r9	; 0x01
    1208:	aa 82       	std	Y+2, r10	; 0x02
    120a:	bb 82       	std	Y+3, r11	; 0x03
    120c:	5e c0       	rjmp	.+188    	; 0x12ca <xEventGroupWaitBits+0x152>
    120e:	c1 14       	cp	r12, r1
    1210:	d1 04       	cpc	r13, r1
    1212:	e1 04       	cpc	r14, r1
    1214:	f1 04       	cpc	r15, r1
    1216:	09 f4       	brne	.+2      	; 0x121a <xEventGroupWaitBits+0xa2>
    1218:	58 c0       	rjmp	.+176    	; 0x12ca <xEventGroupWaitBits+0x152>
    121a:	66 20       	and	r6, r6
    121c:	29 f0       	breq	.+10     	; 0x1228 <xEventGroupWaitBits+0xb0>
    121e:	40 e0       	ldi	r20, 0x00	; 0
    1220:	50 e0       	ldi	r21, 0x00	; 0
    1222:	60 e0       	ldi	r22, 0x00	; 0
    1224:	71 e0       	ldi	r23, 0x01	; 1
    1226:	03 c0       	rjmp	.+6      	; 0x122e <xEventGroupWaitBits+0xb6>
    1228:	40 e0       	ldi	r20, 0x00	; 0
    122a:	50 e0       	ldi	r21, 0x00	; 0
    122c:	ba 01       	movw	r22, r20
    122e:	71 10       	cpse	r7, r1
    1230:	74 60       	ori	r23, 0x04	; 4
    1232:	48 29       	or	r20, r8
    1234:	59 29       	or	r21, r9
    1236:	6a 29       	or	r22, r10
    1238:	7b 29       	or	r23, r11
    123a:	97 01       	movw	r18, r14
    123c:	86 01       	movw	r16, r12
    123e:	ce 01       	movw	r24, r28
    1240:	04 96       	adiw	r24, 0x04	; 4
    1242:	0e 94 05 18 	call	0x300a	; 0x300a <vTaskPlaceOnUnorderedEventList>
    1246:	0e 94 da 16 	call	0x2db4	; 0x2db4 <xTaskResumeAll>
    124a:	81 11       	cpse	r24, r1
    124c:	01 c0       	rjmp	.+2      	; 0x1250 <xEventGroupWaitBits+0xd8>
    124e:	6c d3       	rcall	.+1752   	; 0x1928 <vPortYield>
    1250:	0e 94 4c 1a 	call	0x3498	; 0x3498 <uxTaskResetEventItemValue>
    1254:	91 fd       	sbrc	r25, 1
    1256:	35 c0       	rjmp	.+106    	; 0x12c2 <xEventGroupWaitBits+0x14a>
    1258:	0f b6       	in	r0, 0x3f	; 63
    125a:	f8 94       	cli
    125c:	0f 92       	push	r0
    125e:	68 81       	ld	r22, Y
    1260:	79 81       	ldd	r23, Y+1	; 0x01
    1262:	8a 81       	ldd	r24, Y+2	; 0x02
    1264:	9b 81       	ldd	r25, Y+3	; 0x03
    1266:	71 10       	cpse	r7, r1
    1268:	0d c0       	rjmp	.+26     	; 0x1284 <xEventGroupWaitBits+0x10c>
    126a:	21 e0       	ldi	r18, 0x01	; 1
    126c:	75 01       	movw	r14, r10
    126e:	64 01       	movw	r12, r8
    1270:	c6 22       	and	r12, r22
    1272:	d7 22       	and	r13, r23
    1274:	e8 22       	and	r14, r24
    1276:	f9 22       	and	r15, r25
    1278:	cd 28       	or	r12, r13
    127a:	ce 28       	or	r12, r14
    127c:	cf 28       	or	r12, r15
    127e:	79 f4       	brne	.+30     	; 0x129e <xEventGroupWaitBits+0x126>
    1280:	20 e0       	ldi	r18, 0x00	; 0
    1282:	0d c0       	rjmp	.+26     	; 0x129e <xEventGroupWaitBits+0x126>
    1284:	21 e0       	ldi	r18, 0x01	; 1
    1286:	75 01       	movw	r14, r10
    1288:	64 01       	movw	r12, r8
    128a:	c6 22       	and	r12, r22
    128c:	d7 22       	and	r13, r23
    128e:	e8 22       	and	r14, r24
    1290:	f9 22       	and	r15, r25
    1292:	c8 14       	cp	r12, r8
    1294:	d9 04       	cpc	r13, r9
    1296:	ea 04       	cpc	r14, r10
    1298:	fb 04       	cpc	r15, r11
    129a:	09 f0       	breq	.+2      	; 0x129e <xEventGroupWaitBits+0x126>
    129c:	20 e0       	ldi	r18, 0x00	; 0
    129e:	22 23       	and	r18, r18
    12a0:	71 f0       	breq	.+28     	; 0x12be <xEventGroupWaitBits+0x146>
    12a2:	66 20       	and	r6, r6
    12a4:	61 f0       	breq	.+24     	; 0x12be <xEventGroupWaitBits+0x146>
    12a6:	80 94       	com	r8
    12a8:	90 94       	com	r9
    12aa:	a0 94       	com	r10
    12ac:	b0 94       	com	r11
    12ae:	86 22       	and	r8, r22
    12b0:	97 22       	and	r9, r23
    12b2:	a8 22       	and	r10, r24
    12b4:	b9 22       	and	r11, r25
    12b6:	88 82       	st	Y, r8
    12b8:	99 82       	std	Y+1, r9	; 0x01
    12ba:	aa 82       	std	Y+2, r10	; 0x02
    12bc:	bb 82       	std	Y+3, r11	; 0x03
    12be:	0f 90       	pop	r0
    12c0:	0f be       	out	0x3f, r0	; 63
    12c2:	1b 01       	movw	r2, r22
    12c4:	2c 01       	movw	r4, r24
    12c6:	55 24       	eor	r5, r5
    12c8:	02 c0       	rjmp	.+4      	; 0x12ce <xEventGroupWaitBits+0x156>
    12ca:	0e 94 da 16 	call	0x2db4	; 0x2db4 <xTaskResumeAll>
    12ce:	c2 01       	movw	r24, r4
    12d0:	b1 01       	movw	r22, r2
    12d2:	df 91       	pop	r29
    12d4:	cf 91       	pop	r28
    12d6:	1f 91       	pop	r17
    12d8:	0f 91       	pop	r16
    12da:	ff 90       	pop	r15
    12dc:	ef 90       	pop	r14
    12de:	df 90       	pop	r13
    12e0:	cf 90       	pop	r12
    12e2:	bf 90       	pop	r11
    12e4:	af 90       	pop	r10
    12e6:	9f 90       	pop	r9
    12e8:	8f 90       	pop	r8
    12ea:	7f 90       	pop	r7
    12ec:	6f 90       	pop	r6
    12ee:	5f 90       	pop	r5
    12f0:	4f 90       	pop	r4
    12f2:	3f 90       	pop	r3
    12f4:	2f 90       	pop	r2
    12f6:	08 95       	ret

000012f8 <xEventGroupSetBits>:
    12f8:	4f 92       	push	r4
    12fa:	5f 92       	push	r5
    12fc:	6f 92       	push	r6
    12fe:	7f 92       	push	r7
    1300:	8f 92       	push	r8
    1302:	9f 92       	push	r9
    1304:	af 92       	push	r10
    1306:	bf 92       	push	r11
    1308:	cf 92       	push	r12
    130a:	df 92       	push	r13
    130c:	ef 92       	push	r14
    130e:	ff 92       	push	r15
    1310:	0f 93       	push	r16
    1312:	1f 93       	push	r17
    1314:	cf 93       	push	r28
    1316:	df 93       	push	r29
    1318:	ec 01       	movw	r28, r24
    131a:	6a 01       	movw	r12, r20
    131c:	7b 01       	movw	r14, r22
    131e:	8c 01       	movw	r16, r24
    1320:	09 5f       	subi	r16, 0xF9	; 249
    1322:	1f 4f       	sbci	r17, 0xFF	; 255
    1324:	0e 94 f1 15 	call	0x2be2	; 0x2be2 <vTaskSuspendAll>
    1328:	eb 85       	ldd	r30, Y+11	; 0x0b
    132a:	fc 85       	ldd	r31, Y+12	; 0x0c
    132c:	88 81       	ld	r24, Y
    132e:	99 81       	ldd	r25, Y+1	; 0x01
    1330:	aa 81       	ldd	r26, Y+2	; 0x02
    1332:	bb 81       	ldd	r27, Y+3	; 0x03
    1334:	c8 2a       	or	r12, r24
    1336:	d9 2a       	or	r13, r25
    1338:	ea 2a       	or	r14, r26
    133a:	fb 2a       	or	r15, r27
    133c:	c8 82       	st	Y, r12
    133e:	d9 82       	std	Y+1, r13	; 0x01
    1340:	ea 82       	std	Y+2, r14	; 0x02
    1342:	fb 82       	std	Y+3, r15	; 0x03
    1344:	0e 17       	cp	r16, r30
    1346:	1f 07       	cpc	r17, r31
    1348:	09 f4       	brne	.+2      	; 0x134c <xEventGroupSetBits+0x54>
    134a:	45 c0       	rjmp	.+138    	; 0x13d6 <xEventGroupSetBits+0xde>
    134c:	c1 2c       	mov	r12, r1
    134e:	d1 2c       	mov	r13, r1
    1350:	76 01       	movw	r14, r12
    1352:	99 24       	eor	r9, r9
    1354:	93 94       	inc	r9
    1356:	81 2c       	mov	r8, r1
    1358:	a4 80       	ldd	r10, Z+4	; 0x04
    135a:	b5 80       	ldd	r11, Z+5	; 0x05
    135c:	80 81       	ld	r24, Z
    135e:	91 81       	ldd	r25, Z+1	; 0x01
    1360:	a2 81       	ldd	r26, Z+2	; 0x02
    1362:	b3 81       	ldd	r27, Z+3	; 0x03
    1364:	ac 01       	movw	r20, r24
    1366:	bd 01       	movw	r22, r26
    1368:	77 27       	eor	r23, r23
    136a:	b2 fd       	sbrc	r27, 2
    136c:	0f c0       	rjmp	.+30     	; 0x138c <xEventGroupSetBits+0x94>
    136e:	48 80       	ld	r4, Y
    1370:	59 80       	ldd	r5, Y+1	; 0x01
    1372:	6a 80       	ldd	r6, Y+2	; 0x02
    1374:	7b 80       	ldd	r7, Y+3	; 0x03
    1376:	44 22       	and	r4, r20
    1378:	55 22       	and	r5, r21
    137a:	66 22       	and	r6, r22
    137c:	77 22       	and	r7, r23
    137e:	29 2d       	mov	r18, r9
    1380:	45 28       	or	r4, r5
    1382:	46 28       	or	r4, r6
    1384:	47 28       	or	r4, r7
    1386:	89 f4       	brne	.+34     	; 0x13aa <xEventGroupSetBits+0xb2>
    1388:	28 2d       	mov	r18, r8
    138a:	0f c0       	rjmp	.+30     	; 0x13aa <xEventGroupSetBits+0xb2>
    138c:	48 80       	ld	r4, Y
    138e:	59 80       	ldd	r5, Y+1	; 0x01
    1390:	6a 80       	ldd	r6, Y+2	; 0x02
    1392:	7b 80       	ldd	r7, Y+3	; 0x03
    1394:	44 22       	and	r4, r20
    1396:	55 22       	and	r5, r21
    1398:	66 22       	and	r6, r22
    139a:	77 22       	and	r7, r23
    139c:	29 2d       	mov	r18, r9
    139e:	44 16       	cp	r4, r20
    13a0:	55 06       	cpc	r5, r21
    13a2:	66 06       	cpc	r6, r22
    13a4:	77 06       	cpc	r7, r23
    13a6:	09 f0       	breq	.+2      	; 0x13aa <xEventGroupSetBits+0xb2>
    13a8:	28 2d       	mov	r18, r8
    13aa:	22 23       	and	r18, r18
    13ac:	71 f0       	breq	.+28     	; 0x13ca <xEventGroupSetBits+0xd2>
    13ae:	b0 ff       	sbrs	r27, 0
    13b0:	04 c0       	rjmp	.+8      	; 0x13ba <xEventGroupSetBits+0xc2>
    13b2:	c4 2a       	or	r12, r20
    13b4:	d5 2a       	or	r13, r21
    13b6:	e6 2a       	or	r14, r22
    13b8:	f7 2a       	or	r15, r23
    13ba:	48 81       	ld	r20, Y
    13bc:	59 81       	ldd	r21, Y+1	; 0x01
    13be:	6a 81       	ldd	r22, Y+2	; 0x02
    13c0:	7b 81       	ldd	r23, Y+3	; 0x03
    13c2:	72 60       	ori	r23, 0x02	; 2
    13c4:	cf 01       	movw	r24, r30
    13c6:	0e 94 8b 18 	call	0x3116	; 0x3116 <vTaskRemoveFromUnorderedEventList>
    13ca:	ea 2d       	mov	r30, r10
    13cc:	fb 2d       	mov	r31, r11
    13ce:	0e 17       	cp	r16, r30
    13d0:	1f 07       	cpc	r17, r31
    13d2:	11 f6       	brne	.-124    	; 0x1358 <xEventGroupSetBits+0x60>
    13d4:	03 c0       	rjmp	.+6      	; 0x13dc <xEventGroupSetBits+0xe4>
    13d6:	c1 2c       	mov	r12, r1
    13d8:	d1 2c       	mov	r13, r1
    13da:	76 01       	movw	r14, r12
    13dc:	c0 94       	com	r12
    13de:	d0 94       	com	r13
    13e0:	e0 94       	com	r14
    13e2:	f0 94       	com	r15
    13e4:	88 81       	ld	r24, Y
    13e6:	99 81       	ldd	r25, Y+1	; 0x01
    13e8:	aa 81       	ldd	r26, Y+2	; 0x02
    13ea:	bb 81       	ldd	r27, Y+3	; 0x03
    13ec:	c8 22       	and	r12, r24
    13ee:	d9 22       	and	r13, r25
    13f0:	ea 22       	and	r14, r26
    13f2:	fb 22       	and	r15, r27
    13f4:	c8 82       	st	Y, r12
    13f6:	d9 82       	std	Y+1, r13	; 0x01
    13f8:	ea 82       	std	Y+2, r14	; 0x02
    13fa:	fb 82       	std	Y+3, r15	; 0x03
    13fc:	0e 94 da 16 	call	0x2db4	; 0x2db4 <xTaskResumeAll>
    1400:	68 81       	ld	r22, Y
    1402:	79 81       	ldd	r23, Y+1	; 0x01
    1404:	8a 81       	ldd	r24, Y+2	; 0x02
    1406:	9b 81       	ldd	r25, Y+3	; 0x03
    1408:	df 91       	pop	r29
    140a:	cf 91       	pop	r28
    140c:	1f 91       	pop	r17
    140e:	0f 91       	pop	r16
    1410:	ff 90       	pop	r15
    1412:	ef 90       	pop	r14
    1414:	df 90       	pop	r13
    1416:	cf 90       	pop	r12
    1418:	bf 90       	pop	r11
    141a:	af 90       	pop	r10
    141c:	9f 90       	pop	r9
    141e:	8f 90       	pop	r8
    1420:	7f 90       	pop	r7
    1422:	6f 90       	pop	r6
    1424:	5f 90       	pop	r5
    1426:	4f 90       	pop	r4
    1428:	08 95       	ret

0000142a <prvInsertBlockIntoFreeList>:
    142a:	cf 93       	push	r28
    142c:	df 93       	push	r29
    142e:	dc 01       	movw	r26, r24
    1430:	eb e4       	ldi	r30, 0x4B	; 75
    1432:	f9 e0       	ldi	r31, 0x09	; 9
    1434:	01 c0       	rjmp	.+2      	; 0x1438 <prvInsertBlockIntoFreeList+0xe>
    1436:	f9 01       	movw	r30, r18
    1438:	20 81       	ld	r18, Z
    143a:	31 81       	ldd	r19, Z+1	; 0x01
    143c:	2a 17       	cp	r18, r26
    143e:	3b 07       	cpc	r19, r27
    1440:	d0 f3       	brcs	.-12     	; 0x1436 <prvInsertBlockIntoFreeList+0xc>
    1442:	82 81       	ldd	r24, Z+2	; 0x02
    1444:	93 81       	ldd	r25, Z+3	; 0x03
    1446:	af 01       	movw	r20, r30
    1448:	48 0f       	add	r20, r24
    144a:	59 1f       	adc	r21, r25
    144c:	a4 17       	cp	r26, r20
    144e:	b5 07       	cpc	r27, r21
    1450:	49 f4       	brne	.+18     	; 0x1464 <prvInsertBlockIntoFreeList+0x3a>
    1452:	12 96       	adiw	r26, 0x02	; 2
    1454:	4d 91       	ld	r20, X+
    1456:	5c 91       	ld	r21, X
    1458:	13 97       	sbiw	r26, 0x03	; 3
    145a:	84 0f       	add	r24, r20
    145c:	95 1f       	adc	r25, r21
    145e:	93 83       	std	Z+3, r25	; 0x03
    1460:	82 83       	std	Z+2, r24	; 0x02
    1462:	df 01       	movw	r26, r30
    1464:	12 96       	adiw	r26, 0x02	; 2
    1466:	8d 91       	ld	r24, X+
    1468:	9c 91       	ld	r25, X
    146a:	13 97       	sbiw	r26, 0x03	; 3
    146c:	ed 01       	movw	r28, r26
    146e:	c8 0f       	add	r28, r24
    1470:	d9 1f       	adc	r29, r25
    1472:	2c 17       	cp	r18, r28
    1474:	3d 07       	cpc	r19, r29
    1476:	d9 f4       	brne	.+54     	; 0x14ae <prvInsertBlockIntoFreeList+0x84>
    1478:	20 91 49 09 	lds	r18, 0x0949	; 0x800949 <pxEnd>
    147c:	30 91 4a 09 	lds	r19, 0x094A	; 0x80094a <pxEnd+0x1>
    1480:	c2 17       	cp	r28, r18
    1482:	d3 07       	cpc	r29, r19
    1484:	81 f0       	breq	.+32     	; 0x14a6 <prvInsertBlockIntoFreeList+0x7c>
    1486:	2a 81       	ldd	r18, Y+2	; 0x02
    1488:	3b 81       	ldd	r19, Y+3	; 0x03
    148a:	82 0f       	add	r24, r18
    148c:	93 1f       	adc	r25, r19
    148e:	13 96       	adiw	r26, 0x03	; 3
    1490:	9c 93       	st	X, r25
    1492:	8e 93       	st	-X, r24
    1494:	12 97       	sbiw	r26, 0x02	; 2
    1496:	c0 81       	ld	r28, Z
    1498:	d1 81       	ldd	r29, Z+1	; 0x01
    149a:	88 81       	ld	r24, Y
    149c:	99 81       	ldd	r25, Y+1	; 0x01
    149e:	11 96       	adiw	r26, 0x01	; 1
    14a0:	9c 93       	st	X, r25
    14a2:	8e 93       	st	-X, r24
    14a4:	07 c0       	rjmp	.+14     	; 0x14b4 <prvInsertBlockIntoFreeList+0x8a>
    14a6:	11 96       	adiw	r26, 0x01	; 1
    14a8:	dc 93       	st	X, r29
    14aa:	ce 93       	st	-X, r28
    14ac:	03 c0       	rjmp	.+6      	; 0x14b4 <prvInsertBlockIntoFreeList+0x8a>
    14ae:	11 96       	adiw	r26, 0x01	; 1
    14b0:	3c 93       	st	X, r19
    14b2:	2e 93       	st	-X, r18
    14b4:	ae 17       	cp	r26, r30
    14b6:	bf 07       	cpc	r27, r31
    14b8:	11 f0       	breq	.+4      	; 0x14be <prvInsertBlockIntoFreeList+0x94>
    14ba:	b1 83       	std	Z+1, r27	; 0x01
    14bc:	a0 83       	st	Z, r26
    14be:	df 91       	pop	r29
    14c0:	cf 91       	pop	r28
    14c2:	08 95       	ret

000014c4 <pvPortMalloc>:
    14c4:	cf 92       	push	r12
    14c6:	df 92       	push	r13
    14c8:	ef 92       	push	r14
    14ca:	ff 92       	push	r15
    14cc:	0f 93       	push	r16
    14ce:	1f 93       	push	r17
    14d0:	cf 93       	push	r28
    14d2:	df 93       	push	r29
    14d4:	ec 01       	movw	r28, r24
    14d6:	0e 94 f1 15 	call	0x2be2	; 0x2be2 <vTaskSuspendAll>
    14da:	80 91 49 09 	lds	r24, 0x0949	; 0x800949 <pxEnd>
    14de:	90 91 4a 09 	lds	r25, 0x094A	; 0x80094a <pxEnd+0x1>
    14e2:	89 2b       	or	r24, r25
    14e4:	41 f5       	brne	.+80     	; 0x1536 <pvPortMalloc+0x72>
    14e6:	eb e4       	ldi	r30, 0x4B	; 75
    14e8:	f9 e0       	ldi	r31, 0x09	; 9
    14ea:	af e4       	ldi	r26, 0x4F	; 79
    14ec:	b9 e0       	ldi	r27, 0x09	; 9
    14ee:	b1 83       	std	Z+1, r27	; 0x01
    14f0:	a0 83       	st	Z, r26
    14f2:	13 82       	std	Z+3, r1	; 0x03
    14f4:	12 82       	std	Z+2, r1	; 0x02
    14f6:	eb ee       	ldi	r30, 0xEB	; 235
    14f8:	f8 e1       	ldi	r31, 0x18	; 24
    14fa:	f0 93 4a 09 	sts	0x094A, r31	; 0x80094a <pxEnd+0x1>
    14fe:	e0 93 49 09 	sts	0x0949, r30	; 0x800949 <pxEnd>
    1502:	13 82       	std	Z+3, r1	; 0x03
    1504:	12 82       	std	Z+2, r1	; 0x02
    1506:	11 82       	std	Z+1, r1	; 0x01
    1508:	10 82       	st	Z, r1
    150a:	8c e9       	ldi	r24, 0x9C	; 156
    150c:	9f e0       	ldi	r25, 0x0F	; 15
    150e:	13 96       	adiw	r26, 0x03	; 3
    1510:	9c 93       	st	X, r25
    1512:	8e 93       	st	-X, r24
    1514:	12 97       	sbiw	r26, 0x02	; 2
    1516:	ed 93       	st	X+, r30
    1518:	fc 93       	st	X, r31
    151a:	90 93 46 09 	sts	0x0946, r25	; 0x800946 <xMinimumEverFreeBytesRemaining+0x1>
    151e:	80 93 45 09 	sts	0x0945, r24	; 0x800945 <xMinimumEverFreeBytesRemaining>
    1522:	90 93 48 09 	sts	0x0948, r25	; 0x800948 <xFreeBytesRemaining+0x1>
    1526:	80 93 47 09 	sts	0x0947, r24	; 0x800947 <xFreeBytesRemaining>
    152a:	80 e0       	ldi	r24, 0x00	; 0
    152c:	90 e8       	ldi	r25, 0x80	; 128
    152e:	90 93 44 09 	sts	0x0944, r25	; 0x800944 <xBlockAllocatedBit+0x1>
    1532:	80 93 43 09 	sts	0x0943, r24	; 0x800943 <xBlockAllocatedBit>
    1536:	e0 90 43 09 	lds	r14, 0x0943	; 0x800943 <xBlockAllocatedBit>
    153a:	f0 90 44 09 	lds	r15, 0x0944	; 0x800944 <xBlockAllocatedBit+0x1>
    153e:	c7 01       	movw	r24, r14
    1540:	8c 23       	and	r24, r28
    1542:	9d 23       	and	r25, r29
    1544:	89 2b       	or	r24, r25
    1546:	09 f0       	breq	.+2      	; 0x154a <pvPortMalloc+0x86>
    1548:	66 c0       	rjmp	.+204    	; 0x1616 <pvPortMalloc+0x152>
    154a:	20 97       	sbiw	r28, 0x00	; 0
    154c:	09 f4       	brne	.+2      	; 0x1550 <pvPortMalloc+0x8c>
    154e:	66 c0       	rjmp	.+204    	; 0x161c <pvPortMalloc+0x158>
    1550:	ae 01       	movw	r20, r28
    1552:	4c 5f       	subi	r20, 0xFC	; 252
    1554:	5f 4f       	sbci	r21, 0xFF	; 255
    1556:	09 f4       	brne	.+2      	; 0x155a <pvPortMalloc+0x96>
    1558:	5e c0       	rjmp	.+188    	; 0x1616 <pvPortMalloc+0x152>
    155a:	00 91 47 09 	lds	r16, 0x0947	; 0x800947 <xFreeBytesRemaining>
    155e:	10 91 48 09 	lds	r17, 0x0948	; 0x800948 <xFreeBytesRemaining+0x1>
    1562:	04 17       	cp	r16, r20
    1564:	15 07       	cpc	r17, r21
    1566:	08 f4       	brcc	.+2      	; 0x156a <pvPortMalloc+0xa6>
    1568:	56 c0       	rjmp	.+172    	; 0x1616 <pvPortMalloc+0x152>
    156a:	c0 91 4b 09 	lds	r28, 0x094B	; 0x80094b <xStart>
    156e:	d0 91 4c 09 	lds	r29, 0x094C	; 0x80094c <xStart+0x1>
    1572:	eb e4       	ldi	r30, 0x4B	; 75
    1574:	f9 e0       	ldi	r31, 0x09	; 9
    1576:	02 c0       	rjmp	.+4      	; 0x157c <pvPortMalloc+0xb8>
    1578:	fe 01       	movw	r30, r28
    157a:	e9 01       	movw	r28, r18
    157c:	2a 81       	ldd	r18, Y+2	; 0x02
    157e:	3b 81       	ldd	r19, Y+3	; 0x03
    1580:	24 17       	cp	r18, r20
    1582:	35 07       	cpc	r19, r21
    1584:	28 f4       	brcc	.+10     	; 0x1590 <pvPortMalloc+0xcc>
    1586:	28 81       	ld	r18, Y
    1588:	39 81       	ldd	r19, Y+1	; 0x01
    158a:	21 15       	cp	r18, r1
    158c:	31 05       	cpc	r19, r1
    158e:	a1 f7       	brne	.-24     	; 0x1578 <pvPortMalloc+0xb4>
    1590:	80 91 49 09 	lds	r24, 0x0949	; 0x800949 <pxEnd>
    1594:	90 91 4a 09 	lds	r25, 0x094A	; 0x80094a <pxEnd+0x1>
    1598:	c8 17       	cp	r28, r24
    159a:	d9 07       	cpc	r29, r25
    159c:	e1 f1       	breq	.+120    	; 0x1616 <pvPortMalloc+0x152>
    159e:	c0 80       	ld	r12, Z
    15a0:	d1 80       	ldd	r13, Z+1	; 0x01
    15a2:	84 e0       	ldi	r24, 0x04	; 4
    15a4:	c8 0e       	add	r12, r24
    15a6:	d1 1c       	adc	r13, r1
    15a8:	88 81       	ld	r24, Y
    15aa:	99 81       	ldd	r25, Y+1	; 0x01
    15ac:	91 83       	std	Z+1, r25	; 0x01
    15ae:	80 83       	st	Z, r24
    15b0:	2a 81       	ldd	r18, Y+2	; 0x02
    15b2:	3b 81       	ldd	r19, Y+3	; 0x03
    15b4:	24 1b       	sub	r18, r20
    15b6:	35 0b       	sbc	r19, r21
    15b8:	29 30       	cpi	r18, 0x09	; 9
    15ba:	31 05       	cpc	r19, r1
    15bc:	48 f0       	brcs	.+18     	; 0x15d0 <pvPortMalloc+0x10c>
    15be:	ce 01       	movw	r24, r28
    15c0:	84 0f       	add	r24, r20
    15c2:	95 1f       	adc	r25, r21
    15c4:	fc 01       	movw	r30, r24
    15c6:	33 83       	std	Z+3, r19	; 0x03
    15c8:	22 83       	std	Z+2, r18	; 0x02
    15ca:	5b 83       	std	Y+3, r21	; 0x03
    15cc:	4a 83       	std	Y+2, r20	; 0x02
    15ce:	2d df       	rcall	.-422    	; 0x142a <prvInsertBlockIntoFreeList>
    15d0:	8a 81       	ldd	r24, Y+2	; 0x02
    15d2:	9b 81       	ldd	r25, Y+3	; 0x03
    15d4:	08 1b       	sub	r16, r24
    15d6:	19 0b       	sbc	r17, r25
    15d8:	10 93 48 09 	sts	0x0948, r17	; 0x800948 <xFreeBytesRemaining+0x1>
    15dc:	00 93 47 09 	sts	0x0947, r16	; 0x800947 <xFreeBytesRemaining>
    15e0:	20 91 45 09 	lds	r18, 0x0945	; 0x800945 <xMinimumEverFreeBytesRemaining>
    15e4:	30 91 46 09 	lds	r19, 0x0946	; 0x800946 <xMinimumEverFreeBytesRemaining+0x1>
    15e8:	02 17       	cp	r16, r18
    15ea:	13 07       	cpc	r17, r19
    15ec:	20 f4       	brcc	.+8      	; 0x15f6 <pvPortMalloc+0x132>
    15ee:	10 93 46 09 	sts	0x0946, r17	; 0x800946 <xMinimumEverFreeBytesRemaining+0x1>
    15f2:	00 93 45 09 	sts	0x0945, r16	; 0x800945 <xMinimumEverFreeBytesRemaining>
    15f6:	e8 2a       	or	r14, r24
    15f8:	f9 2a       	or	r15, r25
    15fa:	fb 82       	std	Y+3, r15	; 0x03
    15fc:	ea 82       	std	Y+2, r14	; 0x02
    15fe:	19 82       	std	Y+1, r1	; 0x01
    1600:	18 82       	st	Y, r1
    1602:	0e 94 da 16 	call	0x2db4	; 0x2db4 <xTaskResumeAll>
    1606:	c1 14       	cp	r12, r1
    1608:	d1 04       	cpc	r13, r1
    160a:	59 f4       	brne	.+22     	; 0x1622 <pvPortMalloc+0x15e>
    160c:	0e 94 ad 1d 	call	0x3b5a	; 0x3b5a <vApplicationMallocFailedHook>
    1610:	c1 2c       	mov	r12, r1
    1612:	d1 2c       	mov	r13, r1
    1614:	06 c0       	rjmp	.+12     	; 0x1622 <pvPortMalloc+0x15e>
    1616:	0e 94 da 16 	call	0x2db4	; 0x2db4 <xTaskResumeAll>
    161a:	f8 cf       	rjmp	.-16     	; 0x160c <pvPortMalloc+0x148>
    161c:	0e 94 da 16 	call	0x2db4	; 0x2db4 <xTaskResumeAll>
    1620:	f5 cf       	rjmp	.-22     	; 0x160c <pvPortMalloc+0x148>
    1622:	c6 01       	movw	r24, r12
    1624:	df 91       	pop	r29
    1626:	cf 91       	pop	r28
    1628:	1f 91       	pop	r17
    162a:	0f 91       	pop	r16
    162c:	ff 90       	pop	r15
    162e:	ef 90       	pop	r14
    1630:	df 90       	pop	r13
    1632:	cf 90       	pop	r12
    1634:	08 95       	ret

00001636 <vPortFree>:
    1636:	cf 93       	push	r28
    1638:	df 93       	push	r29
    163a:	00 97       	sbiw	r24, 0x00	; 0
    163c:	51 f1       	breq	.+84     	; 0x1692 <vPortFree+0x5c>
    163e:	fc 01       	movw	r30, r24
    1640:	34 97       	sbiw	r30, 0x04	; 4
    1642:	22 81       	ldd	r18, Z+2	; 0x02
    1644:	33 81       	ldd	r19, Z+3	; 0x03
    1646:	40 91 43 09 	lds	r20, 0x0943	; 0x800943 <xBlockAllocatedBit>
    164a:	50 91 44 09 	lds	r21, 0x0944	; 0x800944 <xBlockAllocatedBit+0x1>
    164e:	b9 01       	movw	r22, r18
    1650:	64 23       	and	r22, r20
    1652:	75 23       	and	r23, r21
    1654:	67 2b       	or	r22, r23
    1656:	e9 f0       	breq	.+58     	; 0x1692 <vPortFree+0x5c>
    1658:	60 81       	ld	r22, Z
    165a:	71 81       	ldd	r23, Z+1	; 0x01
    165c:	67 2b       	or	r22, r23
    165e:	c9 f4       	brne	.+50     	; 0x1692 <vPortFree+0x5c>
    1660:	ef 01       	movw	r28, r30
    1662:	40 95       	com	r20
    1664:	50 95       	com	r21
    1666:	24 23       	and	r18, r20
    1668:	35 23       	and	r19, r21
    166a:	33 83       	std	Z+3, r19	; 0x03
    166c:	22 83       	std	Z+2, r18	; 0x02
    166e:	0e 94 f1 15 	call	0x2be2	; 0x2be2 <vTaskSuspendAll>
    1672:	20 91 47 09 	lds	r18, 0x0947	; 0x800947 <xFreeBytesRemaining>
    1676:	30 91 48 09 	lds	r19, 0x0948	; 0x800948 <xFreeBytesRemaining+0x1>
    167a:	8a 81       	ldd	r24, Y+2	; 0x02
    167c:	9b 81       	ldd	r25, Y+3	; 0x03
    167e:	82 0f       	add	r24, r18
    1680:	93 1f       	adc	r25, r19
    1682:	90 93 48 09 	sts	0x0948, r25	; 0x800948 <xFreeBytesRemaining+0x1>
    1686:	80 93 47 09 	sts	0x0947, r24	; 0x800947 <xFreeBytesRemaining>
    168a:	ce 01       	movw	r24, r28
    168c:	ce de       	rcall	.-612    	; 0x142a <prvInsertBlockIntoFreeList>
    168e:	0e 94 da 16 	call	0x2db4	; 0x2db4 <xTaskResumeAll>
    1692:	df 91       	pop	r29
    1694:	cf 91       	pop	r28
    1696:	08 95       	ret

00001698 <vListInitialise>:
    1698:	fc 01       	movw	r30, r24
    169a:	03 96       	adiw	r24, 0x03	; 3
    169c:	92 83       	std	Z+2, r25	; 0x02
    169e:	81 83       	std	Z+1, r24	; 0x01
    16a0:	4f ef       	ldi	r20, 0xFF	; 255
    16a2:	5f ef       	ldi	r21, 0xFF	; 255
    16a4:	ba 01       	movw	r22, r20
    16a6:	43 83       	std	Z+3, r20	; 0x03
    16a8:	54 83       	std	Z+4, r21	; 0x04
    16aa:	65 83       	std	Z+5, r22	; 0x05
    16ac:	76 83       	std	Z+6, r23	; 0x06
    16ae:	90 87       	std	Z+8, r25	; 0x08
    16b0:	87 83       	std	Z+7, r24	; 0x07
    16b2:	92 87       	std	Z+10, r25	; 0x0a
    16b4:	81 87       	std	Z+9, r24	; 0x09
    16b6:	10 82       	st	Z, r1
    16b8:	08 95       	ret

000016ba <vListInitialiseItem>:
    16ba:	fc 01       	movw	r30, r24
    16bc:	13 86       	std	Z+11, r1	; 0x0b
    16be:	12 86       	std	Z+10, r1	; 0x0a
    16c0:	08 95       	ret

000016c2 <vListInsertEnd>:
    16c2:	cf 93       	push	r28
    16c4:	df 93       	push	r29
    16c6:	9c 01       	movw	r18, r24
    16c8:	fb 01       	movw	r30, r22
    16ca:	dc 01       	movw	r26, r24
    16cc:	11 96       	adiw	r26, 0x01	; 1
    16ce:	cd 91       	ld	r28, X+
    16d0:	dc 91       	ld	r29, X
    16d2:	12 97       	sbiw	r26, 0x02	; 2
    16d4:	d5 83       	std	Z+5, r29	; 0x05
    16d6:	c4 83       	std	Z+4, r28	; 0x04
    16d8:	8e 81       	ldd	r24, Y+6	; 0x06
    16da:	9f 81       	ldd	r25, Y+7	; 0x07
    16dc:	97 83       	std	Z+7, r25	; 0x07
    16de:	86 83       	std	Z+6, r24	; 0x06
    16e0:	8e 81       	ldd	r24, Y+6	; 0x06
    16e2:	9f 81       	ldd	r25, Y+7	; 0x07
    16e4:	dc 01       	movw	r26, r24
    16e6:	15 96       	adiw	r26, 0x05	; 5
    16e8:	7c 93       	st	X, r23
    16ea:	6e 93       	st	-X, r22
    16ec:	14 97       	sbiw	r26, 0x04	; 4
    16ee:	7f 83       	std	Y+7, r23	; 0x07
    16f0:	6e 83       	std	Y+6, r22	; 0x06
    16f2:	33 87       	std	Z+11, r19	; 0x0b
    16f4:	22 87       	std	Z+10, r18	; 0x0a
    16f6:	f9 01       	movw	r30, r18
    16f8:	80 81       	ld	r24, Z
    16fa:	8f 5f       	subi	r24, 0xFF	; 255
    16fc:	80 83       	st	Z, r24
    16fe:	df 91       	pop	r29
    1700:	cf 91       	pop	r28
    1702:	08 95       	ret

00001704 <vListInsert>:
    1704:	0f 93       	push	r16
    1706:	1f 93       	push	r17
    1708:	cf 93       	push	r28
    170a:	df 93       	push	r29
    170c:	eb 01       	movw	r28, r22
    170e:	08 81       	ld	r16, Y
    1710:	19 81       	ldd	r17, Y+1	; 0x01
    1712:	2a 81       	ldd	r18, Y+2	; 0x02
    1714:	3b 81       	ldd	r19, Y+3	; 0x03
    1716:	0f 3f       	cpi	r16, 0xFF	; 255
    1718:	4f ef       	ldi	r20, 0xFF	; 255
    171a:	14 07       	cpc	r17, r20
    171c:	24 07       	cpc	r18, r20
    171e:	34 07       	cpc	r19, r20
    1720:	21 f4       	brne	.+8      	; 0x172a <vListInsert+0x26>
    1722:	fc 01       	movw	r30, r24
    1724:	a1 85       	ldd	r26, Z+9	; 0x09
    1726:	b2 85       	ldd	r27, Z+10	; 0x0a
    1728:	11 c0       	rjmp	.+34     	; 0x174c <vListInsert+0x48>
    172a:	dc 01       	movw	r26, r24
    172c:	13 96       	adiw	r26, 0x03	; 3
    172e:	01 c0       	rjmp	.+2      	; 0x1732 <vListInsert+0x2e>
    1730:	df 01       	movw	r26, r30
    1732:	14 96       	adiw	r26, 0x04	; 4
    1734:	ed 91       	ld	r30, X+
    1736:	fc 91       	ld	r31, X
    1738:	15 97       	sbiw	r26, 0x05	; 5
    173a:	40 81       	ld	r20, Z
    173c:	51 81       	ldd	r21, Z+1	; 0x01
    173e:	62 81       	ldd	r22, Z+2	; 0x02
    1740:	73 81       	ldd	r23, Z+3	; 0x03
    1742:	04 17       	cp	r16, r20
    1744:	15 07       	cpc	r17, r21
    1746:	26 07       	cpc	r18, r22
    1748:	37 07       	cpc	r19, r23
    174a:	90 f7       	brcc	.-28     	; 0x1730 <vListInsert+0x2c>
    174c:	14 96       	adiw	r26, 0x04	; 4
    174e:	ed 91       	ld	r30, X+
    1750:	fc 91       	ld	r31, X
    1752:	15 97       	sbiw	r26, 0x05	; 5
    1754:	fd 83       	std	Y+5, r31	; 0x05
    1756:	ec 83       	std	Y+4, r30	; 0x04
    1758:	d7 83       	std	Z+7, r29	; 0x07
    175a:	c6 83       	std	Z+6, r28	; 0x06
    175c:	bf 83       	std	Y+7, r27	; 0x07
    175e:	ae 83       	std	Y+6, r26	; 0x06
    1760:	15 96       	adiw	r26, 0x05	; 5
    1762:	dc 93       	st	X, r29
    1764:	ce 93       	st	-X, r28
    1766:	14 97       	sbiw	r26, 0x04	; 4
    1768:	9b 87       	std	Y+11, r25	; 0x0b
    176a:	8a 87       	std	Y+10, r24	; 0x0a
    176c:	fc 01       	movw	r30, r24
    176e:	20 81       	ld	r18, Z
    1770:	2f 5f       	subi	r18, 0xFF	; 255
    1772:	20 83       	st	Z, r18
    1774:	df 91       	pop	r29
    1776:	cf 91       	pop	r28
    1778:	1f 91       	pop	r17
    177a:	0f 91       	pop	r16
    177c:	08 95       	ret

0000177e <uxListRemove>:
    177e:	cf 93       	push	r28
    1780:	df 93       	push	r29
    1782:	fc 01       	movw	r30, r24
    1784:	a2 85       	ldd	r26, Z+10	; 0x0a
    1786:	b3 85       	ldd	r27, Z+11	; 0x0b
    1788:	c4 81       	ldd	r28, Z+4	; 0x04
    178a:	d5 81       	ldd	r29, Z+5	; 0x05
    178c:	86 81       	ldd	r24, Z+6	; 0x06
    178e:	97 81       	ldd	r25, Z+7	; 0x07
    1790:	9f 83       	std	Y+7, r25	; 0x07
    1792:	8e 83       	std	Y+6, r24	; 0x06
    1794:	c6 81       	ldd	r28, Z+6	; 0x06
    1796:	d7 81       	ldd	r29, Z+7	; 0x07
    1798:	84 81       	ldd	r24, Z+4	; 0x04
    179a:	95 81       	ldd	r25, Z+5	; 0x05
    179c:	9d 83       	std	Y+5, r25	; 0x05
    179e:	8c 83       	std	Y+4, r24	; 0x04
    17a0:	11 96       	adiw	r26, 0x01	; 1
    17a2:	8d 91       	ld	r24, X+
    17a4:	9c 91       	ld	r25, X
    17a6:	12 97       	sbiw	r26, 0x02	; 2
    17a8:	e8 17       	cp	r30, r24
    17aa:	f9 07       	cpc	r31, r25
    17ac:	31 f4       	brne	.+12     	; 0x17ba <uxListRemove+0x3c>
    17ae:	86 81       	ldd	r24, Z+6	; 0x06
    17b0:	97 81       	ldd	r25, Z+7	; 0x07
    17b2:	12 96       	adiw	r26, 0x02	; 2
    17b4:	9c 93       	st	X, r25
    17b6:	8e 93       	st	-X, r24
    17b8:	11 97       	sbiw	r26, 0x01	; 1
    17ba:	13 86       	std	Z+11, r1	; 0x0b
    17bc:	12 86       	std	Z+10, r1	; 0x0a
    17be:	8c 91       	ld	r24, X
    17c0:	81 50       	subi	r24, 0x01	; 1
    17c2:	8c 93       	st	X, r24
    17c4:	8c 91       	ld	r24, X
    17c6:	df 91       	pop	r29
    17c8:	cf 91       	pop	r28
    17ca:	08 95       	ret

000017cc <pxPortInitialiseStack>:
		);
	}
	else
	{
        uint8_t register temp_reg;
		__asm__ __volatile__ (
    17cc:	31 e1       	ldi	r19, 0x11	; 17
    17ce:	fc 01       	movw	r30, r24
    17d0:	30 83       	st	Z, r19
    17d2:	31 97       	sbiw	r30, 0x01	; 1
    17d4:	22 e2       	ldi	r18, 0x22	; 34
    17d6:	20 83       	st	Z, r18
    17d8:	31 97       	sbiw	r30, 0x01	; 1
    17da:	a3 e3       	ldi	r26, 0x33	; 51
    17dc:	a0 83       	st	Z, r26
    17de:	31 97       	sbiw	r30, 0x01	; 1
    17e0:	60 83       	st	Z, r22
    17e2:	31 97       	sbiw	r30, 0x01	; 1
    17e4:	70 83       	st	Z, r23
    17e6:	31 97       	sbiw	r30, 0x01	; 1
    17e8:	10 82       	st	Z, r1
    17ea:	31 97       	sbiw	r30, 0x01	; 1
    17ec:	10 82       	st	Z, r1
    17ee:	31 97       	sbiw	r30, 0x01	; 1
    17f0:	60 e8       	ldi	r22, 0x80	; 128
    17f2:	60 83       	st	Z, r22
    17f4:	31 97       	sbiw	r30, 0x01	; 1
    17f6:	10 82       	st	Z, r1
    17f8:	31 97       	sbiw	r30, 0x01	; 1
    17fa:	10 82       	st	Z, r1
    17fc:	31 97       	sbiw	r30, 0x01	; 1
    17fe:	10 82       	st	Z, r1
    1800:	31 97       	sbiw	r30, 0x01	; 1
    1802:	62 e0       	ldi	r22, 0x02	; 2
    1804:	60 83       	st	Z, r22
    1806:	31 97       	sbiw	r30, 0x01	; 1
    1808:	63 e0       	ldi	r22, 0x03	; 3
    180a:	60 83       	st	Z, r22
    180c:	31 97       	sbiw	r30, 0x01	; 1
    180e:	64 e0       	ldi	r22, 0x04	; 4
    1810:	60 83       	st	Z, r22
    1812:	31 97       	sbiw	r30, 0x01	; 1
    1814:	65 e0       	ldi	r22, 0x05	; 5
    1816:	60 83       	st	Z, r22
    1818:	31 97       	sbiw	r30, 0x01	; 1
    181a:	66 e0       	ldi	r22, 0x06	; 6
    181c:	60 83       	st	Z, r22
    181e:	31 97       	sbiw	r30, 0x01	; 1
    1820:	67 e0       	ldi	r22, 0x07	; 7
    1822:	60 83       	st	Z, r22
    1824:	31 97       	sbiw	r30, 0x01	; 1
    1826:	68 e0       	ldi	r22, 0x08	; 8
    1828:	60 83       	st	Z, r22
    182a:	31 97       	sbiw	r30, 0x01	; 1
    182c:	69 e0       	ldi	r22, 0x09	; 9
    182e:	60 83       	st	Z, r22
    1830:	31 97       	sbiw	r30, 0x01	; 1
    1832:	60 e1       	ldi	r22, 0x10	; 16
    1834:	60 83       	st	Z, r22
    1836:	31 97       	sbiw	r30, 0x01	; 1
    1838:	30 83       	st	Z, r19
    183a:	31 97       	sbiw	r30, 0x01	; 1
    183c:	32 e1       	ldi	r19, 0x12	; 18
    183e:	30 83       	st	Z, r19
    1840:	31 97       	sbiw	r30, 0x01	; 1
    1842:	33 e1       	ldi	r19, 0x13	; 19
    1844:	30 83       	st	Z, r19
    1846:	31 97       	sbiw	r30, 0x01	; 1
    1848:	34 e1       	ldi	r19, 0x14	; 20
    184a:	30 83       	st	Z, r19
    184c:	31 97       	sbiw	r30, 0x01	; 1
    184e:	35 e1       	ldi	r19, 0x15	; 21
    1850:	30 83       	st	Z, r19
    1852:	31 97       	sbiw	r30, 0x01	; 1
    1854:	36 e1       	ldi	r19, 0x16	; 22
    1856:	30 83       	st	Z, r19
    1858:	31 97       	sbiw	r30, 0x01	; 1
    185a:	37 e1       	ldi	r19, 0x17	; 23
    185c:	30 83       	st	Z, r19
    185e:	31 97       	sbiw	r30, 0x01	; 1
    1860:	38 e1       	ldi	r19, 0x18	; 24
    1862:	30 83       	st	Z, r19
    1864:	31 97       	sbiw	r30, 0x01	; 1
    1866:	39 e1       	ldi	r19, 0x19	; 25
    1868:	30 83       	st	Z, r19
    186a:	31 97       	sbiw	r30, 0x01	; 1
    186c:	30 e2       	ldi	r19, 0x20	; 32
    186e:	30 83       	st	Z, r19
    1870:	31 97       	sbiw	r30, 0x01	; 1
    1872:	31 e2       	ldi	r19, 0x21	; 33
    1874:	30 83       	st	Z, r19
    1876:	31 97       	sbiw	r30, 0x01	; 1
    1878:	20 83       	st	Z, r18
    187a:	31 97       	sbiw	r30, 0x01	; 1
    187c:	23 e2       	ldi	r18, 0x23	; 35
    187e:	20 83       	st	Z, r18
    1880:	31 97       	sbiw	r30, 0x01	; 1
    1882:	40 83       	st	Z, r20
    1884:	31 97       	sbiw	r30, 0x01	; 1
    1886:	50 83       	st	Z, r21
    1888:	31 97       	sbiw	r30, 0x01	; 1
    188a:	26 e2       	ldi	r18, 0x26	; 38
    188c:	20 83       	st	Z, r18
    188e:	31 97       	sbiw	r30, 0x01	; 1
    1890:	27 e2       	ldi	r18, 0x27	; 39
    1892:	20 83       	st	Z, r18
    1894:	31 97       	sbiw	r30, 0x01	; 1
    1896:	28 e2       	ldi	r18, 0x28	; 40
    1898:	20 83       	st	Z, r18
    189a:	31 97       	sbiw	r30, 0x01	; 1
    189c:	29 e2       	ldi	r18, 0x29	; 41
    189e:	20 83       	st	Z, r18
    18a0:	31 97       	sbiw	r30, 0x01	; 1
    18a2:	20 e3       	ldi	r18, 0x30	; 48
    18a4:	20 83       	st	Z, r18
    18a6:	31 97       	sbiw	r30, 0x01	; 1
    18a8:	21 e3       	ldi	r18, 0x31	; 49
    18aa:	20 83       	st	Z, r18
    18ac:	89 97       	sbiw	r24, 0x29	; 41
    18ae:	08 95       	ret

000018b0 <xPortStartScheduler>:
    18b0:	a8 95       	wdr
    18b2:	90 ec       	ldi	r25, 0xC0	; 192
    18b4:	88 e1       	ldi	r24, 0x18	; 24
    18b6:	0f b6       	in	r0, 0x3f	; 63
    18b8:	f8 94       	cli
    18ba:	a8 95       	wdr
    18bc:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__TEXT_REGION_LENGTH__+0x700060>
    18c0:	0f be       	out	0x3f, r0	; 63
    18c2:	90 93 60 00 	sts	0x0060, r25	; 0x800060 <__TEXT_REGION_LENGTH__+0x700060>
    18c6:	a0 91 69 19 	lds	r26, 0x1969	; 0x801969 <pxCurrentTCB>
    18ca:	b0 91 6a 19 	lds	r27, 0x196A	; 0x80196a <pxCurrentTCB+0x1>
    18ce:	cd 91       	ld	r28, X+
    18d0:	cd bf       	out	0x3d, r28	; 61
    18d2:	dd 91       	ld	r29, X+
    18d4:	de bf       	out	0x3e, r29	; 62
    18d6:	ff 91       	pop	r31
    18d8:	ef 91       	pop	r30
    18da:	df 91       	pop	r29
    18dc:	cf 91       	pop	r28
    18de:	bf 91       	pop	r27
    18e0:	af 91       	pop	r26
    18e2:	9f 91       	pop	r25
    18e4:	8f 91       	pop	r24
    18e6:	7f 91       	pop	r23
    18e8:	6f 91       	pop	r22
    18ea:	5f 91       	pop	r21
    18ec:	4f 91       	pop	r20
    18ee:	3f 91       	pop	r19
    18f0:	2f 91       	pop	r18
    18f2:	1f 91       	pop	r17
    18f4:	0f 91       	pop	r16
    18f6:	ff 90       	pop	r15
    18f8:	ef 90       	pop	r14
    18fa:	df 90       	pop	r13
    18fc:	cf 90       	pop	r12
    18fe:	bf 90       	pop	r11
    1900:	af 90       	pop	r10
    1902:	9f 90       	pop	r9
    1904:	8f 90       	pop	r8
    1906:	7f 90       	pop	r7
    1908:	6f 90       	pop	r6
    190a:	5f 90       	pop	r5
    190c:	4f 90       	pop	r4
    190e:	3f 90       	pop	r3
    1910:	2f 90       	pop	r2
    1912:	1f 90       	pop	r1
    1914:	0f 90       	pop	r0
    1916:	0c be       	out	0x3c, r0	; 60
    1918:	0f 90       	pop	r0
    191a:	0b be       	out	0x3b, r0	; 59
    191c:	0f 90       	pop	r0
    191e:	0f be       	out	0x3f, r0	; 63
    1920:	0f 90       	pop	r0
    1922:	08 95       	ret
    1924:	81 e0       	ldi	r24, 0x01	; 1
    1926:	08 95       	ret

00001928 <vPortYield>:
    1928:	0f 92       	push	r0
    192a:	0f b6       	in	r0, 0x3f	; 63
    192c:	f8 94       	cli
    192e:	0f 92       	push	r0
    1930:	0b b6       	in	r0, 0x3b	; 59
    1932:	0f 92       	push	r0
    1934:	0c b6       	in	r0, 0x3c	; 60
    1936:	0f 92       	push	r0
    1938:	1f 92       	push	r1
    193a:	11 24       	eor	r1, r1
    193c:	2f 92       	push	r2
    193e:	3f 92       	push	r3
    1940:	4f 92       	push	r4
    1942:	5f 92       	push	r5
    1944:	6f 92       	push	r6
    1946:	7f 92       	push	r7
    1948:	8f 92       	push	r8
    194a:	9f 92       	push	r9
    194c:	af 92       	push	r10
    194e:	bf 92       	push	r11
    1950:	cf 92       	push	r12
    1952:	df 92       	push	r13
    1954:	ef 92       	push	r14
    1956:	ff 92       	push	r15
    1958:	0f 93       	push	r16
    195a:	1f 93       	push	r17
    195c:	2f 93       	push	r18
    195e:	3f 93       	push	r19
    1960:	4f 93       	push	r20
    1962:	5f 93       	push	r21
    1964:	6f 93       	push	r22
    1966:	7f 93       	push	r23
    1968:	8f 93       	push	r24
    196a:	9f 93       	push	r25
    196c:	af 93       	push	r26
    196e:	bf 93       	push	r27
    1970:	cf 93       	push	r28
    1972:	df 93       	push	r29
    1974:	ef 93       	push	r30
    1976:	ff 93       	push	r31
    1978:	a0 91 69 19 	lds	r26, 0x1969	; 0x801969 <pxCurrentTCB>
    197c:	b0 91 6a 19 	lds	r27, 0x196A	; 0x80196a <pxCurrentTCB+0x1>
    1980:	0d b6       	in	r0, 0x3d	; 61
    1982:	0d 92       	st	X+, r0
    1984:	0e b6       	in	r0, 0x3e	; 62
    1986:	0d 92       	st	X+, r0
    1988:	0e 94 6f 17 	call	0x2ede	; 0x2ede <vTaskSwitchContext>
    198c:	a0 91 69 19 	lds	r26, 0x1969	; 0x801969 <pxCurrentTCB>
    1990:	b0 91 6a 19 	lds	r27, 0x196A	; 0x80196a <pxCurrentTCB+0x1>
    1994:	cd 91       	ld	r28, X+
    1996:	cd bf       	out	0x3d, r28	; 61
    1998:	dd 91       	ld	r29, X+
    199a:	de bf       	out	0x3e, r29	; 62
    199c:	ff 91       	pop	r31
    199e:	ef 91       	pop	r30
    19a0:	df 91       	pop	r29
    19a2:	cf 91       	pop	r28
    19a4:	bf 91       	pop	r27
    19a6:	af 91       	pop	r26
    19a8:	9f 91       	pop	r25
    19aa:	8f 91       	pop	r24
    19ac:	7f 91       	pop	r23
    19ae:	6f 91       	pop	r22
    19b0:	5f 91       	pop	r21
    19b2:	4f 91       	pop	r20
    19b4:	3f 91       	pop	r19
    19b6:	2f 91       	pop	r18
    19b8:	1f 91       	pop	r17
    19ba:	0f 91       	pop	r16
    19bc:	ff 90       	pop	r15
    19be:	ef 90       	pop	r14
    19c0:	df 90       	pop	r13
    19c2:	cf 90       	pop	r12
    19c4:	bf 90       	pop	r11
    19c6:	af 90       	pop	r10
    19c8:	9f 90       	pop	r9
    19ca:	8f 90       	pop	r8
    19cc:	7f 90       	pop	r7
    19ce:	6f 90       	pop	r6
    19d0:	5f 90       	pop	r5
    19d2:	4f 90       	pop	r4
    19d4:	3f 90       	pop	r3
    19d6:	2f 90       	pop	r2
    19d8:	1f 90       	pop	r1
    19da:	0f 90       	pop	r0
    19dc:	0c be       	out	0x3c, r0	; 60
    19de:	0f 90       	pop	r0
    19e0:	0b be       	out	0x3b, r0	; 59
    19e2:	0f 90       	pop	r0
    19e4:	0f be       	out	0x3f, r0	; 63
    19e6:	0f 90       	pop	r0
    19e8:	08 95       	ret

000019ea <vPortYieldFromTick>:
    19ea:	0f 92       	push	r0
    19ec:	0f b6       	in	r0, 0x3f	; 63
    19ee:	f8 94       	cli
    19f0:	0f 92       	push	r0
    19f2:	0b b6       	in	r0, 0x3b	; 59
    19f4:	0f 92       	push	r0
    19f6:	0c b6       	in	r0, 0x3c	; 60
    19f8:	0f 92       	push	r0
    19fa:	1f 92       	push	r1
    19fc:	11 24       	eor	r1, r1
    19fe:	2f 92       	push	r2
    1a00:	3f 92       	push	r3
    1a02:	4f 92       	push	r4
    1a04:	5f 92       	push	r5
    1a06:	6f 92       	push	r6
    1a08:	7f 92       	push	r7
    1a0a:	8f 92       	push	r8
    1a0c:	9f 92       	push	r9
    1a0e:	af 92       	push	r10
    1a10:	bf 92       	push	r11
    1a12:	cf 92       	push	r12
    1a14:	df 92       	push	r13
    1a16:	ef 92       	push	r14
    1a18:	ff 92       	push	r15
    1a1a:	0f 93       	push	r16
    1a1c:	1f 93       	push	r17
    1a1e:	2f 93       	push	r18
    1a20:	3f 93       	push	r19
    1a22:	4f 93       	push	r20
    1a24:	5f 93       	push	r21
    1a26:	6f 93       	push	r22
    1a28:	7f 93       	push	r23
    1a2a:	8f 93       	push	r24
    1a2c:	9f 93       	push	r25
    1a2e:	af 93       	push	r26
    1a30:	bf 93       	push	r27
    1a32:	cf 93       	push	r28
    1a34:	df 93       	push	r29
    1a36:	ef 93       	push	r30
    1a38:	ff 93       	push	r31
    1a3a:	a0 91 69 19 	lds	r26, 0x1969	; 0x801969 <pxCurrentTCB>
    1a3e:	b0 91 6a 19 	lds	r27, 0x196A	; 0x80196a <pxCurrentTCB+0x1>
    1a42:	0d b6       	in	r0, 0x3d	; 61
    1a44:	0d 92       	st	X+, r0
    1a46:	0e b6       	in	r0, 0x3e	; 62
    1a48:	0d 92       	st	X+, r0
    1a4a:	13 be       	out	0x33, r1	; 51
    1a4c:	0e 94 05 16 	call	0x2c0a	; 0x2c0a <xTaskIncrementTick>
    1a50:	81 11       	cpse	r24, r1
    1a52:	0e 94 6f 17 	call	0x2ede	; 0x2ede <vTaskSwitchContext>
    1a56:	a0 91 69 19 	lds	r26, 0x1969	; 0x801969 <pxCurrentTCB>
    1a5a:	b0 91 6a 19 	lds	r27, 0x196A	; 0x80196a <pxCurrentTCB+0x1>
    1a5e:	cd 91       	ld	r28, X+
    1a60:	cd bf       	out	0x3d, r28	; 61
    1a62:	dd 91       	ld	r29, X+
    1a64:	de bf       	out	0x3e, r29	; 62
    1a66:	ff 91       	pop	r31
    1a68:	ef 91       	pop	r30
    1a6a:	df 91       	pop	r29
    1a6c:	cf 91       	pop	r28
    1a6e:	bf 91       	pop	r27
    1a70:	af 91       	pop	r26
    1a72:	9f 91       	pop	r25
    1a74:	8f 91       	pop	r24
    1a76:	7f 91       	pop	r23
    1a78:	6f 91       	pop	r22
    1a7a:	5f 91       	pop	r21
    1a7c:	4f 91       	pop	r20
    1a7e:	3f 91       	pop	r19
    1a80:	2f 91       	pop	r18
    1a82:	1f 91       	pop	r17
    1a84:	0f 91       	pop	r16
    1a86:	ff 90       	pop	r15
    1a88:	ef 90       	pop	r14
    1a8a:	df 90       	pop	r13
    1a8c:	cf 90       	pop	r12
    1a8e:	bf 90       	pop	r11
    1a90:	af 90       	pop	r10
    1a92:	9f 90       	pop	r9
    1a94:	8f 90       	pop	r8
    1a96:	7f 90       	pop	r7
    1a98:	6f 90       	pop	r6
    1a9a:	5f 90       	pop	r5
    1a9c:	4f 90       	pop	r4
    1a9e:	3f 90       	pop	r3
    1aa0:	2f 90       	pop	r2
    1aa2:	1f 90       	pop	r1
    1aa4:	0f 90       	pop	r0
    1aa6:	0c be       	out	0x3c, r0	; 60
    1aa8:	0f 90       	pop	r0
    1aaa:	0b be       	out	0x3b, r0	; 59
    1aac:	0f 90       	pop	r0
    1aae:	0f be       	out	0x3f, r0	; 63
    1ab0:	0f 90       	pop	r0
    1ab2:	08 95       	ret

00001ab4 <__vector_12>:
    1ab4:	9a df       	rcall	.-204    	; 0x19ea <vPortYieldFromTick>
    1ab6:	18 95       	reti

00001ab8 <prvIsQueueEmpty>:
    1ab8:	0f b6       	in	r0, 0x3f	; 63
    1aba:	f8 94       	cli
    1abc:	0f 92       	push	r0
    1abe:	fc 01       	movw	r30, r24
    1ac0:	96 8d       	ldd	r25, Z+30	; 0x1e
    1ac2:	0f 90       	pop	r0
    1ac4:	0f be       	out	0x3f, r0	; 63
    1ac6:	81 e0       	ldi	r24, 0x01	; 1
    1ac8:	91 11       	cpse	r25, r1
    1aca:	80 e0       	ldi	r24, 0x00	; 0
    1acc:	08 95       	ret

00001ace <prvCopyDataToQueue>:
    1ace:	0f 93       	push	r16
    1ad0:	1f 93       	push	r17
    1ad2:	cf 93       	push	r28
    1ad4:	df 93       	push	r29
    1ad6:	ec 01       	movw	r28, r24
    1ad8:	04 2f       	mov	r16, r20
    1ada:	1e 8d       	ldd	r17, Y+30	; 0x1e
    1adc:	48 a1       	ldd	r20, Y+32	; 0x20
    1ade:	41 11       	cpse	r20, r1
    1ae0:	0c c0       	rjmp	.+24     	; 0x1afa <prvCopyDataToQueue+0x2c>
    1ae2:	88 81       	ld	r24, Y
    1ae4:	99 81       	ldd	r25, Y+1	; 0x01
    1ae6:	89 2b       	or	r24, r25
    1ae8:	09 f0       	breq	.+2      	; 0x1aec <prvCopyDataToQueue+0x1e>
    1aea:	42 c0       	rjmp	.+132    	; 0x1b70 <prvCopyDataToQueue+0xa2>
    1aec:	8c 81       	ldd	r24, Y+4	; 0x04
    1aee:	9d 81       	ldd	r25, Y+5	; 0x05
    1af0:	0e 94 c0 19 	call	0x3380	; 0x3380 <xTaskPriorityDisinherit>
    1af4:	1d 82       	std	Y+5, r1	; 0x05
    1af6:	1c 82       	std	Y+4, r1	; 0x04
    1af8:	42 c0       	rjmp	.+132    	; 0x1b7e <prvCopyDataToQueue+0xb0>
    1afa:	01 11       	cpse	r16, r1
    1afc:	17 c0       	rjmp	.+46     	; 0x1b2c <prvCopyDataToQueue+0x5e>
    1afe:	50 e0       	ldi	r21, 0x00	; 0
    1b00:	8a 81       	ldd	r24, Y+2	; 0x02
    1b02:	9b 81       	ldd	r25, Y+3	; 0x03
    1b04:	0e 94 b0 2e 	call	0x5d60	; 0x5d60 <memcpy>
    1b08:	28 a1       	ldd	r18, Y+32	; 0x20
    1b0a:	8a 81       	ldd	r24, Y+2	; 0x02
    1b0c:	9b 81       	ldd	r25, Y+3	; 0x03
    1b0e:	82 0f       	add	r24, r18
    1b10:	91 1d       	adc	r25, r1
    1b12:	9b 83       	std	Y+3, r25	; 0x03
    1b14:	8a 83       	std	Y+2, r24	; 0x02
    1b16:	2c 81       	ldd	r18, Y+4	; 0x04
    1b18:	3d 81       	ldd	r19, Y+5	; 0x05
    1b1a:	82 17       	cp	r24, r18
    1b1c:	93 07       	cpc	r25, r19
    1b1e:	50 f1       	brcs	.+84     	; 0x1b74 <prvCopyDataToQueue+0xa6>
    1b20:	88 81       	ld	r24, Y
    1b22:	99 81       	ldd	r25, Y+1	; 0x01
    1b24:	9b 83       	std	Y+3, r25	; 0x03
    1b26:	8a 83       	std	Y+2, r24	; 0x02
    1b28:	80 e0       	ldi	r24, 0x00	; 0
    1b2a:	29 c0       	rjmp	.+82     	; 0x1b7e <prvCopyDataToQueue+0xb0>
    1b2c:	50 e0       	ldi	r21, 0x00	; 0
    1b2e:	8e 81       	ldd	r24, Y+6	; 0x06
    1b30:	9f 81       	ldd	r25, Y+7	; 0x07
    1b32:	0e 94 b0 2e 	call	0x5d60	; 0x5d60 <memcpy>
    1b36:	88 a1       	ldd	r24, Y+32	; 0x20
    1b38:	90 e0       	ldi	r25, 0x00	; 0
    1b3a:	91 95       	neg	r25
    1b3c:	81 95       	neg	r24
    1b3e:	91 09       	sbc	r25, r1
    1b40:	2e 81       	ldd	r18, Y+6	; 0x06
    1b42:	3f 81       	ldd	r19, Y+7	; 0x07
    1b44:	28 0f       	add	r18, r24
    1b46:	39 1f       	adc	r19, r25
    1b48:	3f 83       	std	Y+7, r19	; 0x07
    1b4a:	2e 83       	std	Y+6, r18	; 0x06
    1b4c:	48 81       	ld	r20, Y
    1b4e:	59 81       	ldd	r21, Y+1	; 0x01
    1b50:	24 17       	cp	r18, r20
    1b52:	35 07       	cpc	r19, r21
    1b54:	30 f4       	brcc	.+12     	; 0x1b62 <prvCopyDataToQueue+0x94>
    1b56:	2c 81       	ldd	r18, Y+4	; 0x04
    1b58:	3d 81       	ldd	r19, Y+5	; 0x05
    1b5a:	82 0f       	add	r24, r18
    1b5c:	93 1f       	adc	r25, r19
    1b5e:	9f 83       	std	Y+7, r25	; 0x07
    1b60:	8e 83       	std	Y+6, r24	; 0x06
    1b62:	02 30       	cpi	r16, 0x02	; 2
    1b64:	49 f4       	brne	.+18     	; 0x1b78 <prvCopyDataToQueue+0xaa>
    1b66:	11 23       	and	r17, r17
    1b68:	49 f0       	breq	.+18     	; 0x1b7c <prvCopyDataToQueue+0xae>
    1b6a:	11 50       	subi	r17, 0x01	; 1
    1b6c:	80 e0       	ldi	r24, 0x00	; 0
    1b6e:	07 c0       	rjmp	.+14     	; 0x1b7e <prvCopyDataToQueue+0xb0>
    1b70:	80 e0       	ldi	r24, 0x00	; 0
    1b72:	05 c0       	rjmp	.+10     	; 0x1b7e <prvCopyDataToQueue+0xb0>
    1b74:	80 e0       	ldi	r24, 0x00	; 0
    1b76:	03 c0       	rjmp	.+6      	; 0x1b7e <prvCopyDataToQueue+0xb0>
    1b78:	80 e0       	ldi	r24, 0x00	; 0
    1b7a:	01 c0       	rjmp	.+2      	; 0x1b7e <prvCopyDataToQueue+0xb0>
    1b7c:	80 e0       	ldi	r24, 0x00	; 0
    1b7e:	1f 5f       	subi	r17, 0xFF	; 255
    1b80:	1e 8f       	std	Y+30, r17	; 0x1e
    1b82:	df 91       	pop	r29
    1b84:	cf 91       	pop	r28
    1b86:	1f 91       	pop	r17
    1b88:	0f 91       	pop	r16
    1b8a:	08 95       	ret

00001b8c <prvCopyDataFromQueue>:
    1b8c:	fc 01       	movw	r30, r24
    1b8e:	40 a1       	ldd	r20, Z+32	; 0x20
    1b90:	44 23       	and	r20, r20
    1b92:	a9 f0       	breq	.+42     	; 0x1bbe <prvCopyDataFromQueue+0x32>
    1b94:	50 e0       	ldi	r21, 0x00	; 0
    1b96:	26 81       	ldd	r18, Z+6	; 0x06
    1b98:	37 81       	ldd	r19, Z+7	; 0x07
    1b9a:	24 0f       	add	r18, r20
    1b9c:	35 1f       	adc	r19, r21
    1b9e:	37 83       	std	Z+7, r19	; 0x07
    1ba0:	26 83       	std	Z+6, r18	; 0x06
    1ba2:	84 81       	ldd	r24, Z+4	; 0x04
    1ba4:	95 81       	ldd	r25, Z+5	; 0x05
    1ba6:	28 17       	cp	r18, r24
    1ba8:	39 07       	cpc	r19, r25
    1baa:	20 f0       	brcs	.+8      	; 0x1bb4 <prvCopyDataFromQueue+0x28>
    1bac:	80 81       	ld	r24, Z
    1bae:	91 81       	ldd	r25, Z+1	; 0x01
    1bb0:	97 83       	std	Z+7, r25	; 0x07
    1bb2:	86 83       	std	Z+6, r24	; 0x06
    1bb4:	cb 01       	movw	r24, r22
    1bb6:	66 81       	ldd	r22, Z+6	; 0x06
    1bb8:	77 81       	ldd	r23, Z+7	; 0x07
    1bba:	0c 94 b0 2e 	jmp	0x5d60	; 0x5d60 <memcpy>
    1bbe:	08 95       	ret

00001bc0 <prvUnlockQueue>:
    1bc0:	ef 92       	push	r14
    1bc2:	ff 92       	push	r15
    1bc4:	0f 93       	push	r16
    1bc6:	1f 93       	push	r17
    1bc8:	cf 93       	push	r28
    1bca:	8c 01       	movw	r16, r24
    1bcc:	0f b6       	in	r0, 0x3f	; 63
    1bce:	f8 94       	cli
    1bd0:	0f 92       	push	r0
    1bd2:	fc 01       	movw	r30, r24
    1bd4:	c2 a1       	ldd	r28, Z+34	; 0x22
    1bd6:	1c 16       	cp	r1, r28
    1bd8:	ac f4       	brge	.+42     	; 0x1c04 <prvUnlockQueue+0x44>
    1bda:	83 89       	ldd	r24, Z+19	; 0x13
    1bdc:	81 11       	cpse	r24, r1
    1bde:	06 c0       	rjmp	.+12     	; 0x1bec <prvUnlockQueue+0x2c>
    1be0:	11 c0       	rjmp	.+34     	; 0x1c04 <prvUnlockQueue+0x44>
    1be2:	f8 01       	movw	r30, r16
    1be4:	83 89       	ldd	r24, Z+19	; 0x13
    1be6:	81 11       	cpse	r24, r1
    1be8:	05 c0       	rjmp	.+10     	; 0x1bf4 <prvUnlockQueue+0x34>
    1bea:	0c c0       	rjmp	.+24     	; 0x1c04 <prvUnlockQueue+0x44>
    1bec:	78 01       	movw	r14, r16
    1bee:	f3 e1       	ldi	r31, 0x13	; 19
    1bf0:	ef 0e       	add	r14, r31
    1bf2:	f1 1c       	adc	r15, r1
    1bf4:	c7 01       	movw	r24, r14
    1bf6:	0e 94 49 18 	call	0x3092	; 0x3092 <xTaskRemoveFromEventList>
    1bfa:	81 11       	cpse	r24, r1
    1bfc:	0e 94 3b 19 	call	0x3276	; 0x3276 <vTaskMissedYield>
    1c00:	c1 50       	subi	r28, 0x01	; 1
    1c02:	79 f7       	brne	.-34     	; 0x1be2 <prvUnlockQueue+0x22>
    1c04:	8f ef       	ldi	r24, 0xFF	; 255
    1c06:	f8 01       	movw	r30, r16
    1c08:	82 a3       	std	Z+34, r24	; 0x22
    1c0a:	0f 90       	pop	r0
    1c0c:	0f be       	out	0x3f, r0	; 63
    1c0e:	0f b6       	in	r0, 0x3f	; 63
    1c10:	f8 94       	cli
    1c12:	0f 92       	push	r0
    1c14:	c1 a1       	ldd	r28, Z+33	; 0x21
    1c16:	1c 16       	cp	r1, r28
    1c18:	ac f4       	brge	.+42     	; 0x1c44 <prvUnlockQueue+0x84>
    1c1a:	80 85       	ldd	r24, Z+8	; 0x08
    1c1c:	81 11       	cpse	r24, r1
    1c1e:	06 c0       	rjmp	.+12     	; 0x1c2c <prvUnlockQueue+0x6c>
    1c20:	11 c0       	rjmp	.+34     	; 0x1c44 <prvUnlockQueue+0x84>
    1c22:	f8 01       	movw	r30, r16
    1c24:	80 85       	ldd	r24, Z+8	; 0x08
    1c26:	81 11       	cpse	r24, r1
    1c28:	05 c0       	rjmp	.+10     	; 0x1c34 <prvUnlockQueue+0x74>
    1c2a:	0c c0       	rjmp	.+24     	; 0x1c44 <prvUnlockQueue+0x84>
    1c2c:	78 01       	movw	r14, r16
    1c2e:	f8 e0       	ldi	r31, 0x08	; 8
    1c30:	ef 0e       	add	r14, r31
    1c32:	f1 1c       	adc	r15, r1
    1c34:	c7 01       	movw	r24, r14
    1c36:	0e 94 49 18 	call	0x3092	; 0x3092 <xTaskRemoveFromEventList>
    1c3a:	81 11       	cpse	r24, r1
    1c3c:	0e 94 3b 19 	call	0x3276	; 0x3276 <vTaskMissedYield>
    1c40:	c1 50       	subi	r28, 0x01	; 1
    1c42:	79 f7       	brne	.-34     	; 0x1c22 <prvUnlockQueue+0x62>
    1c44:	8f ef       	ldi	r24, 0xFF	; 255
    1c46:	f8 01       	movw	r30, r16
    1c48:	81 a3       	std	Z+33, r24	; 0x21
    1c4a:	0f 90       	pop	r0
    1c4c:	0f be       	out	0x3f, r0	; 63
    1c4e:	cf 91       	pop	r28
    1c50:	1f 91       	pop	r17
    1c52:	0f 91       	pop	r16
    1c54:	ff 90       	pop	r15
    1c56:	ef 90       	pop	r14
    1c58:	08 95       	ret

00001c5a <xQueueGenericReset>:
    1c5a:	cf 93       	push	r28
    1c5c:	df 93       	push	r29
    1c5e:	ec 01       	movw	r28, r24
    1c60:	0f b6       	in	r0, 0x3f	; 63
    1c62:	f8 94       	cli
    1c64:	0f 92       	push	r0
    1c66:	e8 81       	ld	r30, Y
    1c68:	f9 81       	ldd	r31, Y+1	; 0x01
    1c6a:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1c6c:	28 a1       	ldd	r18, Y+32	; 0x20
    1c6e:	90 e0       	ldi	r25, 0x00	; 0
    1c70:	30 e0       	ldi	r19, 0x00	; 0
    1c72:	82 9f       	mul	r24, r18
    1c74:	a0 01       	movw	r20, r0
    1c76:	83 9f       	mul	r24, r19
    1c78:	50 0d       	add	r21, r0
    1c7a:	92 9f       	mul	r25, r18
    1c7c:	50 0d       	add	r21, r0
    1c7e:	11 24       	eor	r1, r1
    1c80:	4e 0f       	add	r20, r30
    1c82:	5f 1f       	adc	r21, r31
    1c84:	5d 83       	std	Y+5, r21	; 0x05
    1c86:	4c 83       	std	Y+4, r20	; 0x04
    1c88:	1e 8e       	std	Y+30, r1	; 0x1e
    1c8a:	fb 83       	std	Y+3, r31	; 0x03
    1c8c:	ea 83       	std	Y+2, r30	; 0x02
    1c8e:	01 97       	sbiw	r24, 0x01	; 1
    1c90:	82 9f       	mul	r24, r18
    1c92:	a0 01       	movw	r20, r0
    1c94:	83 9f       	mul	r24, r19
    1c96:	50 0d       	add	r21, r0
    1c98:	92 9f       	mul	r25, r18
    1c9a:	50 0d       	add	r21, r0
    1c9c:	11 24       	eor	r1, r1
    1c9e:	cf 01       	movw	r24, r30
    1ca0:	84 0f       	add	r24, r20
    1ca2:	95 1f       	adc	r25, r21
    1ca4:	9f 83       	std	Y+7, r25	; 0x07
    1ca6:	8e 83       	std	Y+6, r24	; 0x06
    1ca8:	8f ef       	ldi	r24, 0xFF	; 255
    1caa:	89 a3       	std	Y+33, r24	; 0x21
    1cac:	8a a3       	std	Y+34, r24	; 0x22
    1cae:	61 11       	cpse	r22, r1
    1cb0:	0b c0       	rjmp	.+22     	; 0x1cc8 <xQueueGenericReset+0x6e>
    1cb2:	88 85       	ldd	r24, Y+8	; 0x08
    1cb4:	88 23       	and	r24, r24
    1cb6:	71 f0       	breq	.+28     	; 0x1cd4 <xQueueGenericReset+0x7a>
    1cb8:	ce 01       	movw	r24, r28
    1cba:	08 96       	adiw	r24, 0x08	; 8
    1cbc:	0e 94 49 18 	call	0x3092	; 0x3092 <xTaskRemoveFromEventList>
    1cc0:	88 23       	and	r24, r24
    1cc2:	41 f0       	breq	.+16     	; 0x1cd4 <xQueueGenericReset+0x7a>
    1cc4:	31 de       	rcall	.-926    	; 0x1928 <vPortYield>
    1cc6:	06 c0       	rjmp	.+12     	; 0x1cd4 <xQueueGenericReset+0x7a>
    1cc8:	ce 01       	movw	r24, r28
    1cca:	08 96       	adiw	r24, 0x08	; 8
    1ccc:	e5 dc       	rcall	.-1590   	; 0x1698 <vListInitialise>
    1cce:	ce 01       	movw	r24, r28
    1cd0:	43 96       	adiw	r24, 0x13	; 19
    1cd2:	e2 dc       	rcall	.-1596   	; 0x1698 <vListInitialise>
    1cd4:	0f 90       	pop	r0
    1cd6:	0f be       	out	0x3f, r0	; 63
    1cd8:	81 e0       	ldi	r24, 0x01	; 1
    1cda:	df 91       	pop	r29
    1cdc:	cf 91       	pop	r28
    1cde:	08 95       	ret

00001ce0 <xQueueGenericCreate>:
    1ce0:	ff 92       	push	r15
    1ce2:	0f 93       	push	r16
    1ce4:	1f 93       	push	r17
    1ce6:	cf 93       	push	r28
    1ce8:	df 93       	push	r29
    1cea:	08 2f       	mov	r16, r24
    1cec:	16 2f       	mov	r17, r22
    1cee:	f4 2e       	mov	r15, r20
    1cf0:	66 23       	and	r22, r22
    1cf2:	b9 f0       	breq	.+46     	; 0x1d22 <xQueueGenericCreate+0x42>
    1cf4:	86 9f       	mul	r24, r22
    1cf6:	c0 01       	movw	r24, r0
    1cf8:	11 24       	eor	r1, r1
    1cfa:	85 96       	adiw	r24, 0x25	; 37
    1cfc:	e3 db       	rcall	.-2106   	; 0x14c4 <pvPortMalloc>
    1cfe:	ec 01       	movw	r28, r24
    1d00:	00 97       	sbiw	r24, 0x00	; 0
    1d02:	41 f4       	brne	.+16     	; 0x1d14 <xQueueGenericCreate+0x34>
    1d04:	14 c0       	rjmp	.+40     	; 0x1d2e <xQueueGenericCreate+0x4e>
    1d06:	0f 8f       	std	Y+31, r16	; 0x1f
    1d08:	18 a3       	std	Y+32, r17	; 0x20
    1d0a:	61 e0       	ldi	r22, 0x01	; 1
    1d0c:	ce 01       	movw	r24, r28
    1d0e:	a5 df       	rcall	.-182    	; 0x1c5a <xQueueGenericReset>
    1d10:	fc a2       	std	Y+36, r15	; 0x24
    1d12:	0d c0       	rjmp	.+26     	; 0x1d2e <xQueueGenericCreate+0x4e>
    1d14:	85 96       	adiw	r24, 0x25	; 37
    1d16:	99 83       	std	Y+1, r25	; 0x01
    1d18:	88 83       	st	Y, r24
    1d1a:	f5 cf       	rjmp	.-22     	; 0x1d06 <xQueueGenericCreate+0x26>
    1d1c:	d9 83       	std	Y+1, r29	; 0x01
    1d1e:	c8 83       	st	Y, r28
    1d20:	f2 cf       	rjmp	.-28     	; 0x1d06 <xQueueGenericCreate+0x26>
    1d22:	85 e2       	ldi	r24, 0x25	; 37
    1d24:	90 e0       	ldi	r25, 0x00	; 0
    1d26:	ce db       	rcall	.-2148   	; 0x14c4 <pvPortMalloc>
    1d28:	ec 01       	movw	r28, r24
    1d2a:	89 2b       	or	r24, r25
    1d2c:	b9 f7       	brne	.-18     	; 0x1d1c <xQueueGenericCreate+0x3c>
    1d2e:	ce 01       	movw	r24, r28
    1d30:	df 91       	pop	r29
    1d32:	cf 91       	pop	r28
    1d34:	1f 91       	pop	r17
    1d36:	0f 91       	pop	r16
    1d38:	ff 90       	pop	r15
    1d3a:	08 95       	ret

00001d3c <xQueueGenericSend>:
    1d3c:	9f 92       	push	r9
    1d3e:	af 92       	push	r10
    1d40:	bf 92       	push	r11
    1d42:	cf 92       	push	r12
    1d44:	df 92       	push	r13
    1d46:	ef 92       	push	r14
    1d48:	ff 92       	push	r15
    1d4a:	0f 93       	push	r16
    1d4c:	1f 93       	push	r17
    1d4e:	cf 93       	push	r28
    1d50:	df 93       	push	r29
    1d52:	cd b7       	in	r28, 0x3d	; 61
    1d54:	de b7       	in	r29, 0x3e	; 62
    1d56:	29 97       	sbiw	r28, 0x09	; 9
    1d58:	0f b6       	in	r0, 0x3f	; 63
    1d5a:	f8 94       	cli
    1d5c:	de bf       	out	0x3e, r29	; 62
    1d5e:	0f be       	out	0x3f, r0	; 63
    1d60:	cd bf       	out	0x3d, r28	; 61
    1d62:	7c 01       	movw	r14, r24
    1d64:	5b 01       	movw	r10, r22
    1d66:	2e 83       	std	Y+6, r18	; 0x06
    1d68:	3f 83       	std	Y+7, r19	; 0x07
    1d6a:	48 87       	std	Y+8, r20	; 0x08
    1d6c:	59 87       	std	Y+9, r21	; 0x09
    1d6e:	10 e0       	ldi	r17, 0x00	; 0
    1d70:	99 24       	eor	r9, r9
    1d72:	93 94       	inc	r9
    1d74:	6c 01       	movw	r12, r24
    1d76:	88 e0       	ldi	r24, 0x08	; 8
    1d78:	c8 0e       	add	r12, r24
    1d7a:	d1 1c       	adc	r13, r1
    1d7c:	0f b6       	in	r0, 0x3f	; 63
    1d7e:	f8 94       	cli
    1d80:	0f 92       	push	r0
    1d82:	f7 01       	movw	r30, r14
    1d84:	96 8d       	ldd	r25, Z+30	; 0x1e
    1d86:	87 8d       	ldd	r24, Z+31	; 0x1f
    1d88:	98 17       	cp	r25, r24
    1d8a:	10 f0       	brcs	.+4      	; 0x1d90 <xQueueGenericSend+0x54>
    1d8c:	02 30       	cpi	r16, 0x02	; 2
    1d8e:	b1 f4       	brne	.+44     	; 0x1dbc <xQueueGenericSend+0x80>
    1d90:	40 2f       	mov	r20, r16
    1d92:	b5 01       	movw	r22, r10
    1d94:	c7 01       	movw	r24, r14
    1d96:	9b de       	rcall	.-714    	; 0x1ace <prvCopyDataToQueue>
    1d98:	f7 01       	movw	r30, r14
    1d9a:	93 89       	ldd	r25, Z+19	; 0x13
    1d9c:	99 23       	and	r25, r25
    1d9e:	41 f0       	breq	.+16     	; 0x1db0 <xQueueGenericSend+0x74>
    1da0:	c7 01       	movw	r24, r14
    1da2:	43 96       	adiw	r24, 0x13	; 19
    1da4:	0e 94 49 18 	call	0x3092	; 0x3092 <xTaskRemoveFromEventList>
    1da8:	88 23       	and	r24, r24
    1daa:	21 f0       	breq	.+8      	; 0x1db4 <xQueueGenericSend+0x78>
    1dac:	bd dd       	rcall	.-1158   	; 0x1928 <vPortYield>
    1dae:	02 c0       	rjmp	.+4      	; 0x1db4 <xQueueGenericSend+0x78>
    1db0:	81 11       	cpse	r24, r1
    1db2:	ba dd       	rcall	.-1164   	; 0x1928 <vPortYield>
    1db4:	0f 90       	pop	r0
    1db6:	0f be       	out	0x3f, r0	; 63
    1db8:	81 e0       	ldi	r24, 0x01	; 1
    1dba:	4e c0       	rjmp	.+156    	; 0x1e58 <xQueueGenericSend+0x11c>
    1dbc:	8e 81       	ldd	r24, Y+6	; 0x06
    1dbe:	9f 81       	ldd	r25, Y+7	; 0x07
    1dc0:	a8 85       	ldd	r26, Y+8	; 0x08
    1dc2:	b9 85       	ldd	r27, Y+9	; 0x09
    1dc4:	89 2b       	or	r24, r25
    1dc6:	8a 2b       	or	r24, r26
    1dc8:	8b 2b       	or	r24, r27
    1dca:	21 f4       	brne	.+8      	; 0x1dd4 <xQueueGenericSend+0x98>
    1dcc:	0f 90       	pop	r0
    1dce:	0f be       	out	0x3f, r0	; 63
    1dd0:	80 e0       	ldi	r24, 0x00	; 0
    1dd2:	42 c0       	rjmp	.+132    	; 0x1e58 <xQueueGenericSend+0x11c>
    1dd4:	11 11       	cpse	r17, r1
    1dd6:	05 c0       	rjmp	.+10     	; 0x1de2 <xQueueGenericSend+0xa6>
    1dd8:	ce 01       	movw	r24, r28
    1dda:	01 96       	adiw	r24, 0x01	; 1
    1ddc:	0e 94 d5 18 	call	0x31aa	; 0x31aa <vTaskInternalSetTimeOutState>
    1de0:	19 2d       	mov	r17, r9
    1de2:	0f 90       	pop	r0
    1de4:	0f be       	out	0x3f, r0	; 63
    1de6:	fd d6       	rcall	.+3578   	; 0x2be2 <vTaskSuspendAll>
    1de8:	0f b6       	in	r0, 0x3f	; 63
    1dea:	f8 94       	cli
    1dec:	0f 92       	push	r0
    1dee:	f7 01       	movw	r30, r14
    1df0:	81 a1       	ldd	r24, Z+33	; 0x21
    1df2:	8f 3f       	cpi	r24, 0xFF	; 255
    1df4:	09 f4       	brne	.+2      	; 0x1df8 <xQueueGenericSend+0xbc>
    1df6:	11 a2       	std	Z+33, r1	; 0x21
    1df8:	f7 01       	movw	r30, r14
    1dfa:	82 a1       	ldd	r24, Z+34	; 0x22
    1dfc:	8f 3f       	cpi	r24, 0xFF	; 255
    1dfe:	09 f4       	brne	.+2      	; 0x1e02 <xQueueGenericSend+0xc6>
    1e00:	12 a2       	std	Z+34, r1	; 0x22
    1e02:	0f 90       	pop	r0
    1e04:	0f be       	out	0x3f, r0	; 63
    1e06:	be 01       	movw	r22, r28
    1e08:	6a 5f       	subi	r22, 0xFA	; 250
    1e0a:	7f 4f       	sbci	r23, 0xFF	; 255
    1e0c:	ce 01       	movw	r24, r28
    1e0e:	01 96       	adiw	r24, 0x01	; 1
    1e10:	0e 94 e6 18 	call	0x31cc	; 0x31cc <xTaskCheckForTimeOut>
    1e14:	81 11       	cpse	r24, r1
    1e16:	1c c0       	rjmp	.+56     	; 0x1e50 <xQueueGenericSend+0x114>
    1e18:	0f b6       	in	r0, 0x3f	; 63
    1e1a:	f8 94       	cli
    1e1c:	0f 92       	push	r0
    1e1e:	f7 01       	movw	r30, r14
    1e20:	96 8d       	ldd	r25, Z+30	; 0x1e
    1e22:	87 8d       	ldd	r24, Z+31	; 0x1f
    1e24:	0f 90       	pop	r0
    1e26:	0f be       	out	0x3f, r0	; 63
    1e28:	98 13       	cpse	r25, r24
    1e2a:	0e c0       	rjmp	.+28     	; 0x1e48 <xQueueGenericSend+0x10c>
    1e2c:	4e 81       	ldd	r20, Y+6	; 0x06
    1e2e:	5f 81       	ldd	r21, Y+7	; 0x07
    1e30:	68 85       	ldd	r22, Y+8	; 0x08
    1e32:	79 85       	ldd	r23, Y+9	; 0x09
    1e34:	c6 01       	movw	r24, r12
    1e36:	0e 94 ee 17 	call	0x2fdc	; 0x2fdc <vTaskPlaceOnEventList>
    1e3a:	c7 01       	movw	r24, r14
    1e3c:	c1 de       	rcall	.-638    	; 0x1bc0 <prvUnlockQueue>
    1e3e:	ba d7       	rcall	.+3956   	; 0x2db4 <xTaskResumeAll>
    1e40:	81 11       	cpse	r24, r1
    1e42:	9c cf       	rjmp	.-200    	; 0x1d7c <xQueueGenericSend+0x40>
    1e44:	71 dd       	rcall	.-1310   	; 0x1928 <vPortYield>
    1e46:	9a cf       	rjmp	.-204    	; 0x1d7c <xQueueGenericSend+0x40>
    1e48:	c7 01       	movw	r24, r14
    1e4a:	ba de       	rcall	.-652    	; 0x1bc0 <prvUnlockQueue>
    1e4c:	b3 d7       	rcall	.+3942   	; 0x2db4 <xTaskResumeAll>
    1e4e:	96 cf       	rjmp	.-212    	; 0x1d7c <xQueueGenericSend+0x40>
    1e50:	c7 01       	movw	r24, r14
    1e52:	b6 de       	rcall	.-660    	; 0x1bc0 <prvUnlockQueue>
    1e54:	af d7       	rcall	.+3934   	; 0x2db4 <xTaskResumeAll>
    1e56:	80 e0       	ldi	r24, 0x00	; 0
    1e58:	29 96       	adiw	r28, 0x09	; 9
    1e5a:	0f b6       	in	r0, 0x3f	; 63
    1e5c:	f8 94       	cli
    1e5e:	de bf       	out	0x3e, r29	; 62
    1e60:	0f be       	out	0x3f, r0	; 63
    1e62:	cd bf       	out	0x3d, r28	; 61
    1e64:	df 91       	pop	r29
    1e66:	cf 91       	pop	r28
    1e68:	1f 91       	pop	r17
    1e6a:	0f 91       	pop	r16
    1e6c:	ff 90       	pop	r15
    1e6e:	ef 90       	pop	r14
    1e70:	df 90       	pop	r13
    1e72:	cf 90       	pop	r12
    1e74:	bf 90       	pop	r11
    1e76:	af 90       	pop	r10
    1e78:	9f 90       	pop	r9
    1e7a:	08 95       	ret

00001e7c <xQueueCreateMutex>:
    1e7c:	0f 93       	push	r16
    1e7e:	cf 93       	push	r28
    1e80:	df 93       	push	r29
    1e82:	48 2f       	mov	r20, r24
    1e84:	60 e0       	ldi	r22, 0x00	; 0
    1e86:	81 e0       	ldi	r24, 0x01	; 1
    1e88:	2b df       	rcall	.-426    	; 0x1ce0 <xQueueGenericCreate>
    1e8a:	ec 01       	movw	r28, r24
    1e8c:	00 97       	sbiw	r24, 0x00	; 0
    1e8e:	61 f0       	breq	.+24     	; 0x1ea8 <xQueueCreateMutex+0x2c>
    1e90:	1d 82       	std	Y+5, r1	; 0x05
    1e92:	1c 82       	std	Y+4, r1	; 0x04
    1e94:	19 82       	std	Y+1, r1	; 0x01
    1e96:	18 82       	st	Y, r1
    1e98:	1e 82       	std	Y+6, r1	; 0x06
    1e9a:	00 e0       	ldi	r16, 0x00	; 0
    1e9c:	20 e0       	ldi	r18, 0x00	; 0
    1e9e:	30 e0       	ldi	r19, 0x00	; 0
    1ea0:	a9 01       	movw	r20, r18
    1ea2:	60 e0       	ldi	r22, 0x00	; 0
    1ea4:	70 e0       	ldi	r23, 0x00	; 0
    1ea6:	4a df       	rcall	.-364    	; 0x1d3c <xQueueGenericSend>
    1ea8:	ce 01       	movw	r24, r28
    1eaa:	df 91       	pop	r29
    1eac:	cf 91       	pop	r28
    1eae:	0f 91       	pop	r16
    1eb0:	08 95       	ret

00001eb2 <xQueueGenericSendFromISR>:
    1eb2:	ef 92       	push	r14
    1eb4:	ff 92       	push	r15
    1eb6:	0f 93       	push	r16
    1eb8:	1f 93       	push	r17
    1eba:	cf 93       	push	r28
    1ebc:	df 93       	push	r29
    1ebe:	8a 01       	movw	r16, r20
    1ec0:	fc 01       	movw	r30, r24
    1ec2:	56 8d       	ldd	r21, Z+30	; 0x1e
    1ec4:	37 8d       	ldd	r19, Z+31	; 0x1f
    1ec6:	53 17       	cp	r21, r19
    1ec8:	10 f0       	brcs	.+4      	; 0x1ece <xQueueGenericSendFromISR+0x1c>
    1eca:	22 30       	cpi	r18, 0x02	; 2
    1ecc:	e9 f4       	brne	.+58     	; 0x1f08 <xQueueGenericSendFromISR+0x56>
    1ece:	42 2f       	mov	r20, r18
    1ed0:	78 01       	movw	r14, r16
    1ed2:	ec 01       	movw	r28, r24
    1ed4:	1a a1       	ldd	r17, Y+34	; 0x22
    1ed6:	fb dd       	rcall	.-1034   	; 0x1ace <prvCopyDataToQueue>
    1ed8:	1f 3f       	cpi	r17, 0xFF	; 255
    1eda:	81 f4       	brne	.+32     	; 0x1efc <xQueueGenericSendFromISR+0x4a>
    1edc:	8b 89       	ldd	r24, Y+19	; 0x13
    1ede:	88 23       	and	r24, r24
    1ee0:	a9 f0       	breq	.+42     	; 0x1f0c <xQueueGenericSendFromISR+0x5a>
    1ee2:	ce 01       	movw	r24, r28
    1ee4:	43 96       	adiw	r24, 0x13	; 19
    1ee6:	0e 94 49 18 	call	0x3092	; 0x3092 <xTaskRemoveFromEventList>
    1eea:	88 23       	and	r24, r24
    1eec:	89 f0       	breq	.+34     	; 0x1f10 <xQueueGenericSendFromISR+0x5e>
    1eee:	e1 14       	cp	r14, r1
    1ef0:	f1 04       	cpc	r15, r1
    1ef2:	81 f0       	breq	.+32     	; 0x1f14 <xQueueGenericSendFromISR+0x62>
    1ef4:	81 e0       	ldi	r24, 0x01	; 1
    1ef6:	f7 01       	movw	r30, r14
    1ef8:	80 83       	st	Z, r24
    1efa:	0d c0       	rjmp	.+26     	; 0x1f16 <xQueueGenericSendFromISR+0x64>
    1efc:	ff 24       	eor	r15, r15
    1efe:	f3 94       	inc	r15
    1f00:	f1 0e       	add	r15, r17
    1f02:	fa a2       	std	Y+34, r15	; 0x22
    1f04:	81 e0       	ldi	r24, 0x01	; 1
    1f06:	07 c0       	rjmp	.+14     	; 0x1f16 <xQueueGenericSendFromISR+0x64>
    1f08:	80 e0       	ldi	r24, 0x00	; 0
    1f0a:	05 c0       	rjmp	.+10     	; 0x1f16 <xQueueGenericSendFromISR+0x64>
    1f0c:	81 e0       	ldi	r24, 0x01	; 1
    1f0e:	03 c0       	rjmp	.+6      	; 0x1f16 <xQueueGenericSendFromISR+0x64>
    1f10:	81 e0       	ldi	r24, 0x01	; 1
    1f12:	01 c0       	rjmp	.+2      	; 0x1f16 <xQueueGenericSendFromISR+0x64>
    1f14:	81 e0       	ldi	r24, 0x01	; 1
    1f16:	df 91       	pop	r29
    1f18:	cf 91       	pop	r28
    1f1a:	1f 91       	pop	r17
    1f1c:	0f 91       	pop	r16
    1f1e:	ff 90       	pop	r15
    1f20:	ef 90       	pop	r14
    1f22:	08 95       	ret

00001f24 <xQueueReceive>:
    1f24:	9f 92       	push	r9
    1f26:	af 92       	push	r10
    1f28:	bf 92       	push	r11
    1f2a:	cf 92       	push	r12
    1f2c:	df 92       	push	r13
    1f2e:	ef 92       	push	r14
    1f30:	ff 92       	push	r15
    1f32:	0f 93       	push	r16
    1f34:	1f 93       	push	r17
    1f36:	cf 93       	push	r28
    1f38:	df 93       	push	r29
    1f3a:	cd b7       	in	r28, 0x3d	; 61
    1f3c:	de b7       	in	r29, 0x3e	; 62
    1f3e:	29 97       	sbiw	r28, 0x09	; 9
    1f40:	0f b6       	in	r0, 0x3f	; 63
    1f42:	f8 94       	cli
    1f44:	de bf       	out	0x3e, r29	; 62
    1f46:	0f be       	out	0x3f, r0	; 63
    1f48:	cd bf       	out	0x3d, r28	; 61
    1f4a:	8c 01       	movw	r16, r24
    1f4c:	5b 01       	movw	r10, r22
    1f4e:	2e 83       	std	Y+6, r18	; 0x06
    1f50:	3f 83       	std	Y+7, r19	; 0x07
    1f52:	48 87       	std	Y+8, r20	; 0x08
    1f54:	59 87       	std	Y+9, r21	; 0x09
    1f56:	e1 2c       	mov	r14, r1
    1f58:	99 24       	eor	r9, r9
    1f5a:	93 94       	inc	r9
    1f5c:	6c 01       	movw	r12, r24
    1f5e:	83 e1       	ldi	r24, 0x13	; 19
    1f60:	c8 0e       	add	r12, r24
    1f62:	d1 1c       	adc	r13, r1
    1f64:	0f b6       	in	r0, 0x3f	; 63
    1f66:	f8 94       	cli
    1f68:	0f 92       	push	r0
    1f6a:	f8 01       	movw	r30, r16
    1f6c:	f6 8c       	ldd	r15, Z+30	; 0x1e
    1f6e:	ff 20       	and	r15, r15
    1f70:	99 f0       	breq	.+38     	; 0x1f98 <xQueueReceive+0x74>
    1f72:	b5 01       	movw	r22, r10
    1f74:	c8 01       	movw	r24, r16
    1f76:	0a de       	rcall	.-1004   	; 0x1b8c <prvCopyDataFromQueue>
    1f78:	fa 94       	dec	r15
    1f7a:	f8 01       	movw	r30, r16
    1f7c:	f6 8e       	std	Z+30, r15	; 0x1e
    1f7e:	80 85       	ldd	r24, Z+8	; 0x08
    1f80:	88 23       	and	r24, r24
    1f82:	31 f0       	breq	.+12     	; 0x1f90 <xQueueReceive+0x6c>
    1f84:	c8 01       	movw	r24, r16
    1f86:	08 96       	adiw	r24, 0x08	; 8
    1f88:	0e 94 49 18 	call	0x3092	; 0x3092 <xTaskRemoveFromEventList>
    1f8c:	81 11       	cpse	r24, r1
    1f8e:	cc dc       	rcall	.-1640   	; 0x1928 <vPortYield>
    1f90:	0f 90       	pop	r0
    1f92:	0f be       	out	0x3f, r0	; 63
    1f94:	81 e0       	ldi	r24, 0x01	; 1
    1f96:	4c c0       	rjmp	.+152    	; 0x2030 <xQueueReceive+0x10c>
    1f98:	8e 81       	ldd	r24, Y+6	; 0x06
    1f9a:	9f 81       	ldd	r25, Y+7	; 0x07
    1f9c:	a8 85       	ldd	r26, Y+8	; 0x08
    1f9e:	b9 85       	ldd	r27, Y+9	; 0x09
    1fa0:	89 2b       	or	r24, r25
    1fa2:	8a 2b       	or	r24, r26
    1fa4:	8b 2b       	or	r24, r27
    1fa6:	21 f4       	brne	.+8      	; 0x1fb0 <xQueueReceive+0x8c>
    1fa8:	0f 90       	pop	r0
    1faa:	0f be       	out	0x3f, r0	; 63
    1fac:	80 e0       	ldi	r24, 0x00	; 0
    1fae:	40 c0       	rjmp	.+128    	; 0x2030 <xQueueReceive+0x10c>
    1fb0:	e1 10       	cpse	r14, r1
    1fb2:	05 c0       	rjmp	.+10     	; 0x1fbe <xQueueReceive+0x9a>
    1fb4:	ce 01       	movw	r24, r28
    1fb6:	01 96       	adiw	r24, 0x01	; 1
    1fb8:	0e 94 d5 18 	call	0x31aa	; 0x31aa <vTaskInternalSetTimeOutState>
    1fbc:	e9 2c       	mov	r14, r9
    1fbe:	0f 90       	pop	r0
    1fc0:	0f be       	out	0x3f, r0	; 63
    1fc2:	0f d6       	rcall	.+3102   	; 0x2be2 <vTaskSuspendAll>
    1fc4:	0f b6       	in	r0, 0x3f	; 63
    1fc6:	f8 94       	cli
    1fc8:	0f 92       	push	r0
    1fca:	f8 01       	movw	r30, r16
    1fcc:	81 a1       	ldd	r24, Z+33	; 0x21
    1fce:	8f 3f       	cpi	r24, 0xFF	; 255
    1fd0:	09 f4       	brne	.+2      	; 0x1fd4 <xQueueReceive+0xb0>
    1fd2:	11 a2       	std	Z+33, r1	; 0x21
    1fd4:	f8 01       	movw	r30, r16
    1fd6:	82 a1       	ldd	r24, Z+34	; 0x22
    1fd8:	8f 3f       	cpi	r24, 0xFF	; 255
    1fda:	09 f4       	brne	.+2      	; 0x1fde <xQueueReceive+0xba>
    1fdc:	12 a2       	std	Z+34, r1	; 0x22
    1fde:	0f 90       	pop	r0
    1fe0:	0f be       	out	0x3f, r0	; 63
    1fe2:	be 01       	movw	r22, r28
    1fe4:	6a 5f       	subi	r22, 0xFA	; 250
    1fe6:	7f 4f       	sbci	r23, 0xFF	; 255
    1fe8:	ce 01       	movw	r24, r28
    1fea:	01 96       	adiw	r24, 0x01	; 1
    1fec:	0e 94 e6 18 	call	0x31cc	; 0x31cc <xTaskCheckForTimeOut>
    1ff0:	81 11       	cpse	r24, r1
    1ff2:	15 c0       	rjmp	.+42     	; 0x201e <xQueueReceive+0xfa>
    1ff4:	c8 01       	movw	r24, r16
    1ff6:	60 dd       	rcall	.-1344   	; 0x1ab8 <prvIsQueueEmpty>
    1ff8:	88 23       	and	r24, r24
    1ffa:	69 f0       	breq	.+26     	; 0x2016 <xQueueReceive+0xf2>
    1ffc:	4e 81       	ldd	r20, Y+6	; 0x06
    1ffe:	5f 81       	ldd	r21, Y+7	; 0x07
    2000:	68 85       	ldd	r22, Y+8	; 0x08
    2002:	79 85       	ldd	r23, Y+9	; 0x09
    2004:	c6 01       	movw	r24, r12
    2006:	ea d7       	rcall	.+4052   	; 0x2fdc <vTaskPlaceOnEventList>
    2008:	c8 01       	movw	r24, r16
    200a:	da dd       	rcall	.-1100   	; 0x1bc0 <prvUnlockQueue>
    200c:	d3 d6       	rcall	.+3494   	; 0x2db4 <xTaskResumeAll>
    200e:	81 11       	cpse	r24, r1
    2010:	a9 cf       	rjmp	.-174    	; 0x1f64 <xQueueReceive+0x40>
    2012:	8a dc       	rcall	.-1772   	; 0x1928 <vPortYield>
    2014:	a7 cf       	rjmp	.-178    	; 0x1f64 <xQueueReceive+0x40>
    2016:	c8 01       	movw	r24, r16
    2018:	d3 dd       	rcall	.-1114   	; 0x1bc0 <prvUnlockQueue>
    201a:	cc d6       	rcall	.+3480   	; 0x2db4 <xTaskResumeAll>
    201c:	a3 cf       	rjmp	.-186    	; 0x1f64 <xQueueReceive+0x40>
    201e:	c8 01       	movw	r24, r16
    2020:	cf dd       	rcall	.-1122   	; 0x1bc0 <prvUnlockQueue>
    2022:	c8 d6       	rcall	.+3472   	; 0x2db4 <xTaskResumeAll>
    2024:	c8 01       	movw	r24, r16
    2026:	48 dd       	rcall	.-1392   	; 0x1ab8 <prvIsQueueEmpty>
    2028:	88 23       	and	r24, r24
    202a:	09 f4       	brne	.+2      	; 0x202e <xQueueReceive+0x10a>
    202c:	9b cf       	rjmp	.-202    	; 0x1f64 <xQueueReceive+0x40>
    202e:	80 e0       	ldi	r24, 0x00	; 0
    2030:	29 96       	adiw	r28, 0x09	; 9
    2032:	0f b6       	in	r0, 0x3f	; 63
    2034:	f8 94       	cli
    2036:	de bf       	out	0x3e, r29	; 62
    2038:	0f be       	out	0x3f, r0	; 63
    203a:	cd bf       	out	0x3d, r28	; 61
    203c:	df 91       	pop	r29
    203e:	cf 91       	pop	r28
    2040:	1f 91       	pop	r17
    2042:	0f 91       	pop	r16
    2044:	ff 90       	pop	r15
    2046:	ef 90       	pop	r14
    2048:	df 90       	pop	r13
    204a:	cf 90       	pop	r12
    204c:	bf 90       	pop	r11
    204e:	af 90       	pop	r10
    2050:	9f 90       	pop	r9
    2052:	08 95       	ret

00002054 <xQueueSemaphoreTake>:
    2054:	bf 92       	push	r11
    2056:	cf 92       	push	r12
    2058:	df 92       	push	r13
    205a:	ef 92       	push	r14
    205c:	ff 92       	push	r15
    205e:	0f 93       	push	r16
    2060:	1f 93       	push	r17
    2062:	cf 93       	push	r28
    2064:	df 93       	push	r29
    2066:	cd b7       	in	r28, 0x3d	; 61
    2068:	de b7       	in	r29, 0x3e	; 62
    206a:	29 97       	sbiw	r28, 0x09	; 9
    206c:	0f b6       	in	r0, 0x3f	; 63
    206e:	f8 94       	cli
    2070:	de bf       	out	0x3e, r29	; 62
    2072:	0f be       	out	0x3f, r0	; 63
    2074:	cd bf       	out	0x3d, r28	; 61
    2076:	8c 01       	movw	r16, r24
    2078:	4e 83       	std	Y+6, r20	; 0x06
    207a:	5f 83       	std	Y+7, r21	; 0x07
    207c:	68 87       	std	Y+8, r22	; 0x08
    207e:	79 87       	std	Y+9, r23	; 0x09
    2080:	b1 2c       	mov	r11, r1
    2082:	d1 2c       	mov	r13, r1
    2084:	cc 24       	eor	r12, r12
    2086:	c3 94       	inc	r12
    2088:	7c 01       	movw	r14, r24
    208a:	83 e1       	ldi	r24, 0x13	; 19
    208c:	e8 0e       	add	r14, r24
    208e:	f1 1c       	adc	r15, r1
    2090:	0f b6       	in	r0, 0x3f	; 63
    2092:	f8 94       	cli
    2094:	0f 92       	push	r0
    2096:	d8 01       	movw	r26, r16
    2098:	5e 96       	adiw	r26, 0x1e	; 30
    209a:	8c 91       	ld	r24, X
    209c:	5e 97       	sbiw	r26, 0x1e	; 30
    209e:	88 23       	and	r24, r24
    20a0:	d9 f0       	breq	.+54     	; 0x20d8 <xQueueSemaphoreTake+0x84>
    20a2:	81 50       	subi	r24, 0x01	; 1
    20a4:	5e 96       	adiw	r26, 0x1e	; 30
    20a6:	8c 93       	st	X, r24
    20a8:	5e 97       	sbiw	r26, 0x1e	; 30
    20aa:	8d 91       	ld	r24, X+
    20ac:	9c 91       	ld	r25, X
    20ae:	89 2b       	or	r24, r25
    20b0:	29 f4       	brne	.+10     	; 0x20bc <xQueueSemaphoreTake+0x68>
    20b2:	0e 94 74 1a 	call	0x34e8	; 0x34e8 <pvTaskIncrementMutexHeldCount>
    20b6:	f8 01       	movw	r30, r16
    20b8:	95 83       	std	Z+5, r25	; 0x05
    20ba:	84 83       	std	Z+4, r24	; 0x04
    20bc:	d8 01       	movw	r26, r16
    20be:	18 96       	adiw	r26, 0x08	; 8
    20c0:	8c 91       	ld	r24, X
    20c2:	88 23       	and	r24, r24
    20c4:	29 f0       	breq	.+10     	; 0x20d0 <xQueueSemaphoreTake+0x7c>
    20c6:	c8 01       	movw	r24, r16
    20c8:	08 96       	adiw	r24, 0x08	; 8
    20ca:	e3 d7       	rcall	.+4038   	; 0x3092 <xTaskRemoveFromEventList>
    20cc:	81 11       	cpse	r24, r1
    20ce:	2c dc       	rcall	.-1960   	; 0x1928 <vPortYield>
    20d0:	0f 90       	pop	r0
    20d2:	0f be       	out	0x3f, r0	; 63
    20d4:	81 e0       	ldi	r24, 0x01	; 1
    20d6:	7a c0       	rjmp	.+244    	; 0x21cc <xQueueSemaphoreTake+0x178>
    20d8:	8e 81       	ldd	r24, Y+6	; 0x06
    20da:	9f 81       	ldd	r25, Y+7	; 0x07
    20dc:	a8 85       	ldd	r26, Y+8	; 0x08
    20de:	b9 85       	ldd	r27, Y+9	; 0x09
    20e0:	89 2b       	or	r24, r25
    20e2:	8a 2b       	or	r24, r26
    20e4:	8b 2b       	or	r24, r27
    20e6:	21 f4       	brne	.+8      	; 0x20f0 <xQueueSemaphoreTake+0x9c>
    20e8:	0f 90       	pop	r0
    20ea:	0f be       	out	0x3f, r0	; 63
    20ec:	80 e0       	ldi	r24, 0x00	; 0
    20ee:	6e c0       	rjmp	.+220    	; 0x21cc <xQueueSemaphoreTake+0x178>
    20f0:	d1 10       	cpse	r13, r1
    20f2:	05 c0       	rjmp	.+10     	; 0x20fe <xQueueSemaphoreTake+0xaa>
    20f4:	ce 01       	movw	r24, r28
    20f6:	01 96       	adiw	r24, 0x01	; 1
    20f8:	0e 94 d5 18 	call	0x31aa	; 0x31aa <vTaskInternalSetTimeOutState>
    20fc:	dc 2c       	mov	r13, r12
    20fe:	0f 90       	pop	r0
    2100:	0f be       	out	0x3f, r0	; 63
    2102:	6f d5       	rcall	.+2782   	; 0x2be2 <vTaskSuspendAll>
    2104:	0f b6       	in	r0, 0x3f	; 63
    2106:	f8 94       	cli
    2108:	0f 92       	push	r0
    210a:	f8 01       	movw	r30, r16
    210c:	81 a1       	ldd	r24, Z+33	; 0x21
    210e:	8f 3f       	cpi	r24, 0xFF	; 255
    2110:	09 f4       	brne	.+2      	; 0x2114 <xQueueSemaphoreTake+0xc0>
    2112:	11 a2       	std	Z+33, r1	; 0x21
    2114:	d8 01       	movw	r26, r16
    2116:	92 96       	adiw	r26, 0x22	; 34
    2118:	8c 91       	ld	r24, X
    211a:	92 97       	sbiw	r26, 0x22	; 34
    211c:	8f 3f       	cpi	r24, 0xFF	; 255
    211e:	11 f4       	brne	.+4      	; 0x2124 <xQueueSemaphoreTake+0xd0>
    2120:	92 96       	adiw	r26, 0x22	; 34
    2122:	1c 92       	st	X, r1
    2124:	0f 90       	pop	r0
    2126:	0f be       	out	0x3f, r0	; 63
    2128:	be 01       	movw	r22, r28
    212a:	6a 5f       	subi	r22, 0xFA	; 250
    212c:	7f 4f       	sbci	r23, 0xFF	; 255
    212e:	ce 01       	movw	r24, r28
    2130:	01 96       	adiw	r24, 0x01	; 1
    2132:	0e 94 e6 18 	call	0x31cc	; 0x31cc <xTaskCheckForTimeOut>
    2136:	81 11       	cpse	r24, r1
    2138:	24 c0       	rjmp	.+72     	; 0x2182 <xQueueSemaphoreTake+0x12e>
    213a:	c8 01       	movw	r24, r16
    213c:	bd dc       	rcall	.-1670   	; 0x1ab8 <prvIsQueueEmpty>
    213e:	88 23       	and	r24, r24
    2140:	e1 f0       	breq	.+56     	; 0x217a <xQueueSemaphoreTake+0x126>
    2142:	f8 01       	movw	r30, r16
    2144:	80 81       	ld	r24, Z
    2146:	91 81       	ldd	r25, Z+1	; 0x01
    2148:	89 2b       	or	r24, r25
    214a:	51 f4       	brne	.+20     	; 0x2160 <xQueueSemaphoreTake+0x10c>
    214c:	0f b6       	in	r0, 0x3f	; 63
    214e:	f8 94       	cli
    2150:	0f 92       	push	r0
    2152:	84 81       	ldd	r24, Z+4	; 0x04
    2154:	95 81       	ldd	r25, Z+5	; 0x05
    2156:	0e 94 52 19 	call	0x32a4	; 0x32a4 <xTaskPriorityInherit>
    215a:	b8 2e       	mov	r11, r24
    215c:	0f 90       	pop	r0
    215e:	0f be       	out	0x3f, r0	; 63
    2160:	4e 81       	ldd	r20, Y+6	; 0x06
    2162:	5f 81       	ldd	r21, Y+7	; 0x07
    2164:	68 85       	ldd	r22, Y+8	; 0x08
    2166:	79 85       	ldd	r23, Y+9	; 0x09
    2168:	c7 01       	movw	r24, r14
    216a:	38 d7       	rcall	.+3696   	; 0x2fdc <vTaskPlaceOnEventList>
    216c:	c8 01       	movw	r24, r16
    216e:	28 dd       	rcall	.-1456   	; 0x1bc0 <prvUnlockQueue>
    2170:	21 d6       	rcall	.+3138   	; 0x2db4 <xTaskResumeAll>
    2172:	81 11       	cpse	r24, r1
    2174:	8d cf       	rjmp	.-230    	; 0x2090 <xQueueSemaphoreTake+0x3c>
    2176:	d8 db       	rcall	.-2128   	; 0x1928 <vPortYield>
    2178:	8b cf       	rjmp	.-234    	; 0x2090 <xQueueSemaphoreTake+0x3c>
    217a:	c8 01       	movw	r24, r16
    217c:	21 dd       	rcall	.-1470   	; 0x1bc0 <prvUnlockQueue>
    217e:	1a d6       	rcall	.+3124   	; 0x2db4 <xTaskResumeAll>
    2180:	87 cf       	rjmp	.-242    	; 0x2090 <xQueueSemaphoreTake+0x3c>
    2182:	c8 01       	movw	r24, r16
    2184:	1d dd       	rcall	.-1478   	; 0x1bc0 <prvUnlockQueue>
    2186:	16 d6       	rcall	.+3116   	; 0x2db4 <xTaskResumeAll>
    2188:	c8 01       	movw	r24, r16
    218a:	96 dc       	rcall	.-1748   	; 0x1ab8 <prvIsQueueEmpty>
    218c:	88 23       	and	r24, r24
    218e:	09 f4       	brne	.+2      	; 0x2192 <xQueueSemaphoreTake+0x13e>
    2190:	7f cf       	rjmp	.-258    	; 0x2090 <xQueueSemaphoreTake+0x3c>
    2192:	bb 20       	and	r11, r11
    2194:	d1 f0       	breq	.+52     	; 0x21ca <xQueueSemaphoreTake+0x176>
    2196:	0f b6       	in	r0, 0x3f	; 63
    2198:	f8 94       	cli
    219a:	0f 92       	push	r0
    219c:	f8 01       	movw	r30, r16
    219e:	83 89       	ldd	r24, Z+19	; 0x13
    21a0:	88 23       	and	r24, r24
    21a2:	39 f0       	breq	.+14     	; 0x21b2 <xQueueSemaphoreTake+0x15e>
    21a4:	02 8c       	ldd	r0, Z+26	; 0x1a
    21a6:	f3 8d       	ldd	r31, Z+27	; 0x1b
    21a8:	e0 2d       	mov	r30, r0
    21aa:	80 81       	ld	r24, Z
    21ac:	64 e0       	ldi	r22, 0x04	; 4
    21ae:	68 1b       	sub	r22, r24
    21b0:	01 c0       	rjmp	.+2      	; 0x21b4 <xQueueSemaphoreTake+0x160>
    21b2:	60 e0       	ldi	r22, 0x00	; 0
    21b4:	d8 01       	movw	r26, r16
    21b6:	14 96       	adiw	r26, 0x04	; 4
    21b8:	8d 91       	ld	r24, X+
    21ba:	9c 91       	ld	r25, X
    21bc:	15 97       	sbiw	r26, 0x05	; 5
    21be:	0e 94 00 1a 	call	0x3400	; 0x3400 <vTaskPriorityDisinheritAfterTimeout>
    21c2:	0f 90       	pop	r0
    21c4:	0f be       	out	0x3f, r0	; 63
    21c6:	80 e0       	ldi	r24, 0x00	; 0
    21c8:	01 c0       	rjmp	.+2      	; 0x21cc <xQueueSemaphoreTake+0x178>
    21ca:	80 e0       	ldi	r24, 0x00	; 0
    21cc:	29 96       	adiw	r28, 0x09	; 9
    21ce:	0f b6       	in	r0, 0x3f	; 63
    21d0:	f8 94       	cli
    21d2:	de bf       	out	0x3e, r29	; 62
    21d4:	0f be       	out	0x3f, r0	; 63
    21d6:	cd bf       	out	0x3d, r28	; 61
    21d8:	df 91       	pop	r29
    21da:	cf 91       	pop	r28
    21dc:	1f 91       	pop	r17
    21de:	0f 91       	pop	r16
    21e0:	ff 90       	pop	r15
    21e2:	ef 90       	pop	r14
    21e4:	df 90       	pop	r13
    21e6:	cf 90       	pop	r12
    21e8:	bf 90       	pop	r11
    21ea:	08 95       	ret

000021ec <vQueueWaitForMessageRestricted>:
    21ec:	cf 93       	push	r28
    21ee:	df 93       	push	r29
    21f0:	ec 01       	movw	r28, r24
    21f2:	0f b6       	in	r0, 0x3f	; 63
    21f4:	f8 94       	cli
    21f6:	0f 92       	push	r0
    21f8:	89 a1       	ldd	r24, Y+33	; 0x21
    21fa:	8f 3f       	cpi	r24, 0xFF	; 255
    21fc:	09 f4       	brne	.+2      	; 0x2200 <__stack+0x1>
    21fe:	19 a2       	std	Y+33, r1	; 0x21
    2200:	8a a1       	ldd	r24, Y+34	; 0x22
    2202:	8f 3f       	cpi	r24, 0xFF	; 255
    2204:	09 f4       	brne	.+2      	; 0x2208 <__stack+0x9>
    2206:	1a a2       	std	Y+34, r1	; 0x22
    2208:	0f 90       	pop	r0
    220a:	0f be       	out	0x3f, r0	; 63
    220c:	8e 8d       	ldd	r24, Y+30	; 0x1e
    220e:	81 11       	cpse	r24, r1
    2210:	03 c0       	rjmp	.+6      	; 0x2218 <__stack+0x19>
    2212:	ce 01       	movw	r24, r28
    2214:	43 96       	adiw	r24, 0x13	; 19
    2216:	1d d7       	rcall	.+3642   	; 0x3052 <vTaskPlaceOnEventListRestricted>
    2218:	ce 01       	movw	r24, r28
    221a:	d2 dc       	rcall	.-1628   	; 0x1bc0 <prvUnlockQueue>
    221c:	df 91       	pop	r29
    221e:	cf 91       	pop	r28
    2220:	08 95       	ret

00002222 <prvBytesInBuffer>:
    2222:	fc 01       	movw	r30, r24
    2224:	44 81       	ldd	r20, Z+4	; 0x04
    2226:	55 81       	ldd	r21, Z+5	; 0x05
    2228:	22 81       	ldd	r18, Z+2	; 0x02
    222a:	33 81       	ldd	r19, Z+3	; 0x03
    222c:	24 0f       	add	r18, r20
    222e:	35 1f       	adc	r19, r21
    2230:	80 81       	ld	r24, Z
    2232:	91 81       	ldd	r25, Z+1	; 0x01
    2234:	b9 01       	movw	r22, r18
    2236:	68 1b       	sub	r22, r24
    2238:	79 0b       	sbc	r23, r25
    223a:	cb 01       	movw	r24, r22
    223c:	64 17       	cp	r22, r20
    223e:	75 07       	cpc	r23, r21
    2240:	10 f0       	brcs	.+4      	; 0x2246 <prvBytesInBuffer+0x24>
    2242:	84 1b       	sub	r24, r20
    2244:	95 0b       	sbc	r25, r21
    2246:	08 95       	ret

00002248 <prvWriteBytesToBuffer>:
    2248:	af 92       	push	r10
    224a:	bf 92       	push	r11
    224c:	cf 92       	push	r12
    224e:	df 92       	push	r13
    2250:	ef 92       	push	r14
    2252:	ff 92       	push	r15
    2254:	0f 93       	push	r16
    2256:	1f 93       	push	r17
    2258:	cf 93       	push	r28
    225a:	df 93       	push	r29
    225c:	6c 01       	movw	r12, r24
    225e:	5b 01       	movw	r10, r22
    2260:	7a 01       	movw	r14, r20
    2262:	fc 01       	movw	r30, r24
    2264:	c2 81       	ldd	r28, Z+2	; 0x02
    2266:	d3 81       	ldd	r29, Z+3	; 0x03
    2268:	04 81       	ldd	r16, Z+4	; 0x04
    226a:	15 81       	ldd	r17, Z+5	; 0x05
    226c:	0c 1b       	sub	r16, r28
    226e:	1d 0b       	sbc	r17, r29
    2270:	40 17       	cp	r20, r16
    2272:	51 07       	cpc	r21, r17
    2274:	08 f4       	brcc	.+2      	; 0x2278 <prvWriteBytesToBuffer+0x30>
    2276:	8a 01       	movw	r16, r20
    2278:	f6 01       	movw	r30, r12
    227a:	84 85       	ldd	r24, Z+12	; 0x0c
    227c:	95 85       	ldd	r25, Z+13	; 0x0d
    227e:	a8 01       	movw	r20, r16
    2280:	b5 01       	movw	r22, r10
    2282:	8c 0f       	add	r24, r28
    2284:	9d 1f       	adc	r25, r29
    2286:	0e 94 b0 2e 	call	0x5d60	; 0x5d60 <memcpy>
    228a:	0e 15       	cp	r16, r14
    228c:	1f 05       	cpc	r17, r15
    228e:	58 f4       	brcc	.+22     	; 0x22a6 <prvWriteBytesToBuffer+0x5e>
    2290:	a7 01       	movw	r20, r14
    2292:	40 1b       	sub	r20, r16
    2294:	51 0b       	sbc	r21, r17
    2296:	b5 01       	movw	r22, r10
    2298:	60 0f       	add	r22, r16
    229a:	71 1f       	adc	r23, r17
    229c:	f6 01       	movw	r30, r12
    229e:	84 85       	ldd	r24, Z+12	; 0x0c
    22a0:	95 85       	ldd	r25, Z+13	; 0x0d
    22a2:	0e 94 b0 2e 	call	0x5d60	; 0x5d60 <memcpy>
    22a6:	ce 01       	movw	r24, r28
    22a8:	8e 0d       	add	r24, r14
    22aa:	9f 1d       	adc	r25, r15
    22ac:	f6 01       	movw	r30, r12
    22ae:	24 81       	ldd	r18, Z+4	; 0x04
    22b0:	35 81       	ldd	r19, Z+5	; 0x05
    22b2:	82 17       	cp	r24, r18
    22b4:	93 07       	cpc	r25, r19
    22b6:	10 f0       	brcs	.+4      	; 0x22bc <prvWriteBytesToBuffer+0x74>
    22b8:	82 1b       	sub	r24, r18
    22ba:	93 0b       	sbc	r25, r19
    22bc:	f6 01       	movw	r30, r12
    22be:	93 83       	std	Z+3, r25	; 0x03
    22c0:	82 83       	std	Z+2, r24	; 0x02
    22c2:	c7 01       	movw	r24, r14
    22c4:	df 91       	pop	r29
    22c6:	cf 91       	pop	r28
    22c8:	1f 91       	pop	r17
    22ca:	0f 91       	pop	r16
    22cc:	ff 90       	pop	r15
    22ce:	ef 90       	pop	r14
    22d0:	df 90       	pop	r13
    22d2:	cf 90       	pop	r12
    22d4:	bf 90       	pop	r11
    22d6:	af 90       	pop	r10
    22d8:	08 95       	ret

000022da <prvWriteMessageToBuffer>:
    22da:	cf 92       	push	r12
    22dc:	df 92       	push	r13
    22de:	ef 92       	push	r14
    22e0:	ff 92       	push	r15
    22e2:	0f 93       	push	r16
    22e4:	1f 93       	push	r17
    22e6:	cf 93       	push	r28
    22e8:	df 93       	push	r29
    22ea:	1f 92       	push	r1
    22ec:	1f 92       	push	r1
    22ee:	cd b7       	in	r28, 0x3d	; 61
    22f0:	de b7       	in	r29, 0x3e	; 62
    22f2:	5a 83       	std	Y+2, r21	; 0x02
    22f4:	49 83       	std	Y+1, r20	; 0x01
    22f6:	21 15       	cp	r18, r1
    22f8:	31 05       	cpc	r19, r1
    22fa:	c9 f0       	breq	.+50     	; 0x232e <prvWriteMessageToBuffer+0x54>
    22fc:	6b 01       	movw	r12, r22
    22fe:	7c 01       	movw	r14, r24
    2300:	fc 01       	movw	r30, r24
    2302:	86 85       	ldd	r24, Z+14	; 0x0e
    2304:	80 fd       	sbrc	r24, 0
    2306:	08 c0       	rjmp	.+16     	; 0x2318 <prvWriteMessageToBuffer+0x3e>
    2308:	ca 01       	movw	r24, r20
    230a:	24 17       	cp	r18, r20
    230c:	35 07       	cpc	r19, r21
    230e:	08 f4       	brcc	.+2      	; 0x2312 <prvWriteMessageToBuffer+0x38>
    2310:	c9 01       	movw	r24, r18
    2312:	9a 83       	std	Y+2, r25	; 0x02
    2314:	89 83       	std	Y+1, r24	; 0x01
    2316:	11 c0       	rjmp	.+34     	; 0x233a <prvWriteMessageToBuffer+0x60>
    2318:	20 17       	cp	r18, r16
    231a:	31 07       	cpc	r19, r17
    231c:	58 f0       	brcs	.+22     	; 0x2334 <prvWriteMessageToBuffer+0x5a>
    231e:	42 e0       	ldi	r20, 0x02	; 2
    2320:	50 e0       	ldi	r21, 0x00	; 0
    2322:	be 01       	movw	r22, r28
    2324:	6f 5f       	subi	r22, 0xFF	; 255
    2326:	7f 4f       	sbci	r23, 0xFF	; 255
    2328:	c7 01       	movw	r24, r14
    232a:	8e df       	rcall	.-228    	; 0x2248 <prvWriteBytesToBuffer>
    232c:	06 c0       	rjmp	.+12     	; 0x233a <prvWriteMessageToBuffer+0x60>
    232e:	80 e0       	ldi	r24, 0x00	; 0
    2330:	90 e0       	ldi	r25, 0x00	; 0
    2332:	08 c0       	rjmp	.+16     	; 0x2344 <prvWriteMessageToBuffer+0x6a>
    2334:	80 e0       	ldi	r24, 0x00	; 0
    2336:	90 e0       	ldi	r25, 0x00	; 0
    2338:	05 c0       	rjmp	.+10     	; 0x2344 <prvWriteMessageToBuffer+0x6a>
    233a:	49 81       	ldd	r20, Y+1	; 0x01
    233c:	5a 81       	ldd	r21, Y+2	; 0x02
    233e:	b6 01       	movw	r22, r12
    2340:	c7 01       	movw	r24, r14
    2342:	82 df       	rcall	.-252    	; 0x2248 <prvWriteBytesToBuffer>
    2344:	0f 90       	pop	r0
    2346:	0f 90       	pop	r0
    2348:	df 91       	pop	r29
    234a:	cf 91       	pop	r28
    234c:	1f 91       	pop	r17
    234e:	0f 91       	pop	r16
    2350:	ff 90       	pop	r15
    2352:	ef 90       	pop	r14
    2354:	df 90       	pop	r13
    2356:	cf 90       	pop	r12
    2358:	08 95       	ret

0000235a <prvReadBytesFromBuffer>:
    235a:	af 92       	push	r10
    235c:	bf 92       	push	r11
    235e:	cf 92       	push	r12
    2360:	df 92       	push	r13
    2362:	ef 92       	push	r14
    2364:	ff 92       	push	r15
    2366:	0f 93       	push	r16
    2368:	1f 93       	push	r17
    236a:	cf 93       	push	r28
    236c:	df 93       	push	r29
    236e:	7c 01       	movw	r14, r24
    2370:	5b 01       	movw	r10, r22
    2372:	e9 01       	movw	r28, r18
    2374:	42 17       	cp	r20, r18
    2376:	53 07       	cpc	r21, r19
    2378:	08 f4       	brcc	.+2      	; 0x237c <prvReadBytesFromBuffer+0x22>
    237a:	ea 01       	movw	r28, r20
    237c:	20 97       	sbiw	r28, 0x00	; 0
    237e:	79 f1       	breq	.+94     	; 0x23de <prvReadBytesFromBuffer+0x84>
    2380:	f7 01       	movw	r30, r14
    2382:	00 81       	ld	r16, Z
    2384:	11 81       	ldd	r17, Z+1	; 0x01
    2386:	c4 80       	ldd	r12, Z+4	; 0x04
    2388:	d5 80       	ldd	r13, Z+5	; 0x05
    238a:	c0 1a       	sub	r12, r16
    238c:	d1 0a       	sbc	r13, r17
    238e:	cc 15       	cp	r28, r12
    2390:	dd 05       	cpc	r29, r13
    2392:	08 f4       	brcc	.+2      	; 0x2396 <prvReadBytesFromBuffer+0x3c>
    2394:	6e 01       	movw	r12, r28
    2396:	f7 01       	movw	r30, r14
    2398:	64 85       	ldd	r22, Z+12	; 0x0c
    239a:	75 85       	ldd	r23, Z+13	; 0x0d
    239c:	60 0f       	add	r22, r16
    239e:	71 1f       	adc	r23, r17
    23a0:	a6 01       	movw	r20, r12
    23a2:	c5 01       	movw	r24, r10
    23a4:	0e 94 b0 2e 	call	0x5d60	; 0x5d60 <memcpy>
    23a8:	cc 16       	cp	r12, r28
    23aa:	dd 06       	cpc	r13, r29
    23ac:	58 f4       	brcc	.+22     	; 0x23c4 <prvReadBytesFromBuffer+0x6a>
    23ae:	ae 01       	movw	r20, r28
    23b0:	4c 19       	sub	r20, r12
    23b2:	5d 09       	sbc	r21, r13
    23b4:	f7 01       	movw	r30, r14
    23b6:	64 85       	ldd	r22, Z+12	; 0x0c
    23b8:	75 85       	ldd	r23, Z+13	; 0x0d
    23ba:	c5 01       	movw	r24, r10
    23bc:	8c 0d       	add	r24, r12
    23be:	9d 1d       	adc	r25, r13
    23c0:	0e 94 b0 2e 	call	0x5d60	; 0x5d60 <memcpy>
    23c4:	0c 0f       	add	r16, r28
    23c6:	1d 1f       	adc	r17, r29
    23c8:	f7 01       	movw	r30, r14
    23ca:	84 81       	ldd	r24, Z+4	; 0x04
    23cc:	95 81       	ldd	r25, Z+5	; 0x05
    23ce:	08 17       	cp	r16, r24
    23d0:	19 07       	cpc	r17, r25
    23d2:	10 f0       	brcs	.+4      	; 0x23d8 <prvReadBytesFromBuffer+0x7e>
    23d4:	08 1b       	sub	r16, r24
    23d6:	19 0b       	sbc	r17, r25
    23d8:	f7 01       	movw	r30, r14
    23da:	11 83       	std	Z+1, r17	; 0x01
    23dc:	00 83       	st	Z, r16
    23de:	ce 01       	movw	r24, r28
    23e0:	df 91       	pop	r29
    23e2:	cf 91       	pop	r28
    23e4:	1f 91       	pop	r17
    23e6:	0f 91       	pop	r16
    23e8:	ff 90       	pop	r15
    23ea:	ef 90       	pop	r14
    23ec:	df 90       	pop	r13
    23ee:	cf 90       	pop	r12
    23f0:	bf 90       	pop	r11
    23f2:	af 90       	pop	r10
    23f4:	08 95       	ret

000023f6 <xStreamBufferGenericCreate>:
    23f6:	ef 92       	push	r14
    23f8:	ff 92       	push	r15
    23fa:	1f 93       	push	r17
    23fc:	cf 93       	push	r28
    23fe:	df 93       	push	r29
    2400:	eb 01       	movw	r28, r22
    2402:	11 e0       	ldi	r17, 0x01	; 1
    2404:	41 30       	cpi	r20, 0x01	; 1
    2406:	09 f0       	breq	.+2      	; 0x240a <xStreamBufferGenericCreate+0x14>
    2408:	10 e0       	ldi	r17, 0x00	; 0
    240a:	20 97       	sbiw	r28, 0x00	; 0
    240c:	11 f4       	brne	.+4      	; 0x2412 <xStreamBufferGenericCreate+0x1c>
    240e:	c1 e0       	ldi	r28, 0x01	; 1
    2410:	d0 e0       	ldi	r29, 0x00	; 0
    2412:	7c 01       	movw	r14, r24
    2414:	2f ef       	ldi	r18, 0xFF	; 255
    2416:	e2 1a       	sub	r14, r18
    2418:	f2 0a       	sbc	r15, r18
    241a:	41 96       	adiw	r24, 0x11	; 17
    241c:	53 d8       	rcall	.-3930   	; 0x14c4 <pvPortMalloc>
    241e:	00 97       	sbiw	r24, 0x00	; 0
    2420:	81 f0       	breq	.+32     	; 0x2442 <xStreamBufferGenericCreate+0x4c>
    2422:	20 e1       	ldi	r18, 0x10	; 16
    2424:	fc 01       	movw	r30, r24
    2426:	11 92       	st	Z+, r1
    2428:	2a 95       	dec	r18
    242a:	e9 f7       	brne	.-6      	; 0x2426 <xStreamBufferGenericCreate+0x30>
    242c:	9c 01       	movw	r18, r24
    242e:	20 5f       	subi	r18, 0xF0	; 240
    2430:	3f 4f       	sbci	r19, 0xFF	; 255
    2432:	fc 01       	movw	r30, r24
    2434:	35 87       	std	Z+13, r19	; 0x0d
    2436:	24 87       	std	Z+12, r18	; 0x0c
    2438:	f5 82       	std	Z+5, r15	; 0x05
    243a:	e4 82       	std	Z+4, r14	; 0x04
    243c:	d7 83       	std	Z+7, r29	; 0x07
    243e:	c6 83       	std	Z+6, r28	; 0x06
    2440:	16 87       	std	Z+14, r17	; 0x0e
    2442:	df 91       	pop	r29
    2444:	cf 91       	pop	r28
    2446:	1f 91       	pop	r17
    2448:	ff 90       	pop	r15
    244a:	ef 90       	pop	r14
    244c:	08 95       	ret

0000244e <xStreamBufferReset>:
    244e:	cf 93       	push	r28
    2450:	df 93       	push	r29
    2452:	fc 01       	movw	r30, r24
    2454:	27 85       	ldd	r18, Z+15	; 0x0f
    2456:	0f b6       	in	r0, 0x3f	; 63
    2458:	f8 94       	cli
    245a:	0f 92       	push	r0
    245c:	80 85       	ldd	r24, Z+8	; 0x08
    245e:	91 85       	ldd	r25, Z+9	; 0x09
    2460:	89 2b       	or	r24, r25
    2462:	d1 f4       	brne	.+52     	; 0x2498 <xStreamBufferReset+0x4a>
    2464:	82 85       	ldd	r24, Z+10	; 0x0a
    2466:	93 85       	ldd	r25, Z+11	; 0x0b
    2468:	89 2b       	or	r24, r25
    246a:	c1 f4       	brne	.+48     	; 0x249c <xStreamBufferReset+0x4e>
    246c:	86 85       	ldd	r24, Z+14	; 0x0e
    246e:	46 81       	ldd	r20, Z+6	; 0x06
    2470:	57 81       	ldd	r21, Z+7	; 0x07
    2472:	64 81       	ldd	r22, Z+4	; 0x04
    2474:	75 81       	ldd	r23, Z+5	; 0x05
    2476:	a4 85       	ldd	r26, Z+12	; 0x0c
    2478:	b5 85       	ldd	r27, Z+13	; 0x0d
    247a:	90 e1       	ldi	r25, 0x10	; 16
    247c:	ef 01       	movw	r28, r30
    247e:	19 92       	st	Y+, r1
    2480:	9a 95       	dec	r25
    2482:	e9 f7       	brne	.-6      	; 0x247e <xStreamBufferReset+0x30>
    2484:	b5 87       	std	Z+13, r27	; 0x0d
    2486:	a4 87       	std	Z+12, r26	; 0x0c
    2488:	75 83       	std	Z+5, r23	; 0x05
    248a:	64 83       	std	Z+4, r22	; 0x04
    248c:	57 83       	std	Z+7, r21	; 0x07
    248e:	46 83       	std	Z+6, r20	; 0x06
    2490:	86 87       	std	Z+14, r24	; 0x0e
    2492:	27 87       	std	Z+15, r18	; 0x0f
    2494:	81 e0       	ldi	r24, 0x01	; 1
    2496:	03 c0       	rjmp	.+6      	; 0x249e <xStreamBufferReset+0x50>
    2498:	80 e0       	ldi	r24, 0x00	; 0
    249a:	01 c0       	rjmp	.+2      	; 0x249e <xStreamBufferReset+0x50>
    249c:	80 e0       	ldi	r24, 0x00	; 0
    249e:	0f 90       	pop	r0
    24a0:	0f be       	out	0x3f, r0	; 63
    24a2:	df 91       	pop	r29
    24a4:	cf 91       	pop	r28
    24a6:	08 95       	ret

000024a8 <xStreamBufferSpacesAvailable>:
    24a8:	fc 01       	movw	r30, r24
    24aa:	24 81       	ldd	r18, Z+4	; 0x04
    24ac:	35 81       	ldd	r19, Z+5	; 0x05
    24ae:	80 81       	ld	r24, Z
    24b0:	91 81       	ldd	r25, Z+1	; 0x01
    24b2:	42 81       	ldd	r20, Z+2	; 0x02
    24b4:	53 81       	ldd	r21, Z+3	; 0x03
    24b6:	82 0f       	add	r24, r18
    24b8:	93 1f       	adc	r25, r19
    24ba:	01 97       	sbiw	r24, 0x01	; 1
    24bc:	84 1b       	sub	r24, r20
    24be:	95 0b       	sbc	r25, r21
    24c0:	82 17       	cp	r24, r18
    24c2:	93 07       	cpc	r25, r19
    24c4:	10 f0       	brcs	.+4      	; 0x24ca <xStreamBufferSpacesAvailable+0x22>
    24c6:	82 1b       	sub	r24, r18
    24c8:	93 0b       	sbc	r25, r19
    24ca:	08 95       	ret

000024cc <xStreamBufferSend>:
    24cc:	2f 92       	push	r2
    24ce:	3f 92       	push	r3
    24d0:	4f 92       	push	r4
    24d2:	5f 92       	push	r5
    24d4:	6f 92       	push	r6
    24d6:	7f 92       	push	r7
    24d8:	8f 92       	push	r8
    24da:	9f 92       	push	r9
    24dc:	af 92       	push	r10
    24de:	bf 92       	push	r11
    24e0:	cf 92       	push	r12
    24e2:	df 92       	push	r13
    24e4:	ef 92       	push	r14
    24e6:	ff 92       	push	r15
    24e8:	0f 93       	push	r16
    24ea:	1f 93       	push	r17
    24ec:	cf 93       	push	r28
    24ee:	df 93       	push	r29
    24f0:	cd b7       	in	r28, 0x3d	; 61
    24f2:	de b7       	in	r29, 0x3e	; 62
    24f4:	29 97       	sbiw	r28, 0x09	; 9
    24f6:	0f b6       	in	r0, 0x3f	; 63
    24f8:	f8 94       	cli
    24fa:	de bf       	out	0x3e, r29	; 62
    24fc:	0f be       	out	0x3f, r0	; 63
    24fe:	cd bf       	out	0x3d, r28	; 61
    2500:	5c 01       	movw	r10, r24
    2502:	1b 01       	movw	r2, r22
    2504:	2a 01       	movw	r4, r20
    2506:	0e 83       	std	Y+6, r16	; 0x06
    2508:	1f 83       	std	Y+7, r17	; 0x07
    250a:	28 87       	std	Y+8, r18	; 0x08
    250c:	39 87       	std	Y+9, r19	; 0x09
    250e:	fc 01       	movw	r30, r24
    2510:	86 85       	ldd	r24, Z+14	; 0x0e
    2512:	80 ff       	sbrs	r24, 0
    2514:	05 c0       	rjmp	.+10     	; 0x2520 <xStreamBufferSend+0x54>
    2516:	3a 01       	movw	r6, r20
    2518:	f2 e0       	ldi	r31, 0x02	; 2
    251a:	6f 0e       	add	r6, r31
    251c:	71 1c       	adc	r7, r1
    251e:	01 c0       	rjmp	.+2      	; 0x2522 <xStreamBufferSend+0x56>
    2520:	3a 01       	movw	r6, r20
    2522:	8e 81       	ldd	r24, Y+6	; 0x06
    2524:	9f 81       	ldd	r25, Y+7	; 0x07
    2526:	a8 85       	ldd	r26, Y+8	; 0x08
    2528:	b9 85       	ldd	r27, Y+9	; 0x09
    252a:	89 2b       	or	r24, r25
    252c:	8a 2b       	or	r24, r26
    252e:	8b 2b       	or	r24, r27
    2530:	09 f4       	brne	.+2      	; 0x2534 <xStreamBufferSend+0x68>
    2532:	34 c0       	rjmp	.+104    	; 0x259c <xStreamBufferSend+0xd0>
    2534:	ce 01       	movw	r24, r28
    2536:	01 96       	adiw	r24, 0x01	; 1
    2538:	22 d6       	rcall	.+3140   	; 0x317e <vTaskSetTimeOutState>
    253a:	0f b6       	in	r0, 0x3f	; 63
    253c:	f8 94       	cli
    253e:	0f 92       	push	r0
    2540:	c5 01       	movw	r24, r10
    2542:	b2 df       	rcall	.-156    	; 0x24a8 <xStreamBufferSpacesAvailable>
    2544:	4c 01       	movw	r8, r24
    2546:	86 15       	cp	r24, r6
    2548:	97 05       	cpc	r25, r7
    254a:	18 f5       	brcc	.+70     	; 0x2592 <xStreamBufferSend+0xc6>
    254c:	80 e0       	ldi	r24, 0x00	; 0
    254e:	90 e0       	ldi	r25, 0x00	; 0
    2550:	0e 94 11 1c 	call	0x3822	; 0x3822 <xTaskNotifyStateClear>
    2554:	94 d6       	rcall	.+3368   	; 0x327e <xTaskGetCurrentTaskHandle>
    2556:	f5 01       	movw	r30, r10
    2558:	93 87       	std	Z+11, r25	; 0x0b
    255a:	82 87       	std	Z+10, r24	; 0x0a
    255c:	0f 90       	pop	r0
    255e:	0f be       	out	0x3f, r0	; 63
    2560:	ce 80       	ldd	r12, Y+6	; 0x06
    2562:	df 80       	ldd	r13, Y+7	; 0x07
    2564:	e8 84       	ldd	r14, Y+8	; 0x08
    2566:	f9 84       	ldd	r15, Y+9	; 0x09
    2568:	00 e0       	ldi	r16, 0x00	; 0
    256a:	10 e0       	ldi	r17, 0x00	; 0
    256c:	20 e0       	ldi	r18, 0x00	; 0
    256e:	30 e0       	ldi	r19, 0x00	; 0
    2570:	a9 01       	movw	r20, r18
    2572:	60 e0       	ldi	r22, 0x00	; 0
    2574:	70 e0       	ldi	r23, 0x00	; 0
    2576:	cb 01       	movw	r24, r22
    2578:	c9 d7       	rcall	.+3986   	; 0x350c <xTaskNotifyWait>
    257a:	f5 01       	movw	r30, r10
    257c:	13 86       	std	Z+11, r1	; 0x0b
    257e:	12 86       	std	Z+10, r1	; 0x0a
    2580:	be 01       	movw	r22, r28
    2582:	6a 5f       	subi	r22, 0xFA	; 250
    2584:	7f 4f       	sbci	r23, 0xFF	; 255
    2586:	ce 01       	movw	r24, r28
    2588:	01 96       	adiw	r24, 0x01	; 1
    258a:	20 d6       	rcall	.+3136   	; 0x31cc <xTaskCheckForTimeOut>
    258c:	88 23       	and	r24, r24
    258e:	a9 f2       	breq	.-86     	; 0x253a <xStreamBufferSend+0x6e>
    2590:	02 c0       	rjmp	.+4      	; 0x2596 <xStreamBufferSend+0xca>
    2592:	0f 90       	pop	r0
    2594:	0f be       	out	0x3f, r0	; 63
    2596:	81 14       	cp	r8, r1
    2598:	91 04       	cpc	r9, r1
    259a:	19 f4       	brne	.+6      	; 0x25a2 <xStreamBufferSend+0xd6>
    259c:	c5 01       	movw	r24, r10
    259e:	84 df       	rcall	.-248    	; 0x24a8 <xStreamBufferSpacesAvailable>
    25a0:	4c 01       	movw	r8, r24
    25a2:	83 01       	movw	r16, r6
    25a4:	94 01       	movw	r18, r8
    25a6:	a2 01       	movw	r20, r4
    25a8:	b1 01       	movw	r22, r2
    25aa:	c5 01       	movw	r24, r10
    25ac:	96 de       	rcall	.-724    	; 0x22da <prvWriteMessageToBuffer>
    25ae:	7c 01       	movw	r14, r24
    25b0:	89 2b       	or	r24, r25
    25b2:	e1 f0       	breq	.+56     	; 0x25ec <xStreamBufferSend+0x120>
    25b4:	c5 01       	movw	r24, r10
    25b6:	35 de       	rcall	.-918    	; 0x2222 <prvBytesInBuffer>
    25b8:	f5 01       	movw	r30, r10
    25ba:	26 81       	ldd	r18, Z+6	; 0x06
    25bc:	37 81       	ldd	r19, Z+7	; 0x07
    25be:	82 17       	cp	r24, r18
    25c0:	93 07       	cpc	r25, r19
    25c2:	a0 f0       	brcs	.+40     	; 0x25ec <xStreamBufferSend+0x120>
    25c4:	0e d3       	rcall	.+1564   	; 0x2be2 <vTaskSuspendAll>
    25c6:	f5 01       	movw	r30, r10
    25c8:	80 85       	ldd	r24, Z+8	; 0x08
    25ca:	91 85       	ldd	r25, Z+9	; 0x09
    25cc:	89 2b       	or	r24, r25
    25ce:	69 f0       	breq	.+26     	; 0x25ea <xStreamBufferSend+0x11e>
    25d0:	80 85       	ldd	r24, Z+8	; 0x08
    25d2:	91 85       	ldd	r25, Z+9	; 0x09
    25d4:	00 e0       	ldi	r16, 0x00	; 0
    25d6:	10 e0       	ldi	r17, 0x00	; 0
    25d8:	20 e0       	ldi	r18, 0x00	; 0
    25da:	40 e0       	ldi	r20, 0x00	; 0
    25dc:	50 e0       	ldi	r21, 0x00	; 0
    25de:	ba 01       	movw	r22, r20
    25e0:	0e 94 10 1b 	call	0x3620	; 0x3620 <xTaskGenericNotify>
    25e4:	f5 01       	movw	r30, r10
    25e6:	11 86       	std	Z+9, r1	; 0x09
    25e8:	10 86       	std	Z+8, r1	; 0x08
    25ea:	e4 d3       	rcall	.+1992   	; 0x2db4 <xTaskResumeAll>
    25ec:	c7 01       	movw	r24, r14
    25ee:	29 96       	adiw	r28, 0x09	; 9
    25f0:	0f b6       	in	r0, 0x3f	; 63
    25f2:	f8 94       	cli
    25f4:	de bf       	out	0x3e, r29	; 62
    25f6:	0f be       	out	0x3f, r0	; 63
    25f8:	cd bf       	out	0x3d, r28	; 61
    25fa:	df 91       	pop	r29
    25fc:	cf 91       	pop	r28
    25fe:	1f 91       	pop	r17
    2600:	0f 91       	pop	r16
    2602:	ff 90       	pop	r15
    2604:	ef 90       	pop	r14
    2606:	df 90       	pop	r13
    2608:	cf 90       	pop	r12
    260a:	bf 90       	pop	r11
    260c:	af 90       	pop	r10
    260e:	9f 90       	pop	r9
    2610:	8f 90       	pop	r8
    2612:	7f 90       	pop	r7
    2614:	6f 90       	pop	r6
    2616:	5f 90       	pop	r5
    2618:	4f 90       	pop	r4
    261a:	3f 90       	pop	r3
    261c:	2f 90       	pop	r2
    261e:	08 95       	ret

00002620 <xStreamBufferSendFromISR>:
    2620:	af 92       	push	r10
    2622:	bf 92       	push	r11
    2624:	cf 92       	push	r12
    2626:	df 92       	push	r13
    2628:	ef 92       	push	r14
    262a:	ff 92       	push	r15
    262c:	0f 93       	push	r16
    262e:	1f 93       	push	r17
    2630:	cf 93       	push	r28
    2632:	df 93       	push	r29
    2634:	ec 01       	movw	r28, r24
    2636:	5b 01       	movw	r10, r22
    2638:	6a 01       	movw	r12, r20
    263a:	79 01       	movw	r14, r18
    263c:	8e 85       	ldd	r24, Y+14	; 0x0e
    263e:	80 ff       	sbrs	r24, 0
    2640:	04 c0       	rjmp	.+8      	; 0x264a <xStreamBufferSendFromISR+0x2a>
    2642:	8a 01       	movw	r16, r20
    2644:	0e 5f       	subi	r16, 0xFE	; 254
    2646:	1f 4f       	sbci	r17, 0xFF	; 255
    2648:	01 c0       	rjmp	.+2      	; 0x264c <xStreamBufferSendFromISR+0x2c>
    264a:	8a 01       	movw	r16, r20
    264c:	ce 01       	movw	r24, r28
    264e:	2c df       	rcall	.-424    	; 0x24a8 <xStreamBufferSpacesAvailable>
    2650:	9c 01       	movw	r18, r24
    2652:	a6 01       	movw	r20, r12
    2654:	b5 01       	movw	r22, r10
    2656:	ce 01       	movw	r24, r28
    2658:	40 de       	rcall	.-896    	; 0x22da <prvWriteMessageToBuffer>
    265a:	6c 01       	movw	r12, r24
    265c:	89 2b       	or	r24, r25
    265e:	b9 f0       	breq	.+46     	; 0x268e <xStreamBufferSendFromISR+0x6e>
    2660:	ce 01       	movw	r24, r28
    2662:	df dd       	rcall	.-1090   	; 0x2222 <prvBytesInBuffer>
    2664:	2e 81       	ldd	r18, Y+6	; 0x06
    2666:	3f 81       	ldd	r19, Y+7	; 0x07
    2668:	82 17       	cp	r24, r18
    266a:	93 07       	cpc	r25, r19
    266c:	80 f0       	brcs	.+32     	; 0x268e <xStreamBufferSendFromISR+0x6e>
    266e:	88 85       	ldd	r24, Y+8	; 0x08
    2670:	99 85       	ldd	r25, Y+9	; 0x09
    2672:	89 2b       	or	r24, r25
    2674:	61 f0       	breq	.+24     	; 0x268e <xStreamBufferSendFromISR+0x6e>
    2676:	88 85       	ldd	r24, Y+8	; 0x08
    2678:	99 85       	ldd	r25, Y+9	; 0x09
    267a:	00 e0       	ldi	r16, 0x00	; 0
    267c:	10 e0       	ldi	r17, 0x00	; 0
    267e:	20 e0       	ldi	r18, 0x00	; 0
    2680:	40 e0       	ldi	r20, 0x00	; 0
    2682:	50 e0       	ldi	r21, 0x00	; 0
    2684:	ba 01       	movw	r22, r20
    2686:	0e 94 88 1b 	call	0x3710	; 0x3710 <xTaskGenericNotifyFromISR>
    268a:	19 86       	std	Y+9, r1	; 0x09
    268c:	18 86       	std	Y+8, r1	; 0x08
    268e:	c6 01       	movw	r24, r12
    2690:	df 91       	pop	r29
    2692:	cf 91       	pop	r28
    2694:	1f 91       	pop	r17
    2696:	0f 91       	pop	r16
    2698:	ff 90       	pop	r15
    269a:	ef 90       	pop	r14
    269c:	df 90       	pop	r13
    269e:	cf 90       	pop	r12
    26a0:	bf 90       	pop	r11
    26a2:	af 90       	pop	r10
    26a4:	08 95       	ret

000026a6 <xStreamBufferReceive>:
    26a6:	4f 92       	push	r4
    26a8:	5f 92       	push	r5
    26aa:	6f 92       	push	r6
    26ac:	7f 92       	push	r7
    26ae:	8f 92       	push	r8
    26b0:	9f 92       	push	r9
    26b2:	af 92       	push	r10
    26b4:	bf 92       	push	r11
    26b6:	cf 92       	push	r12
    26b8:	df 92       	push	r13
    26ba:	ef 92       	push	r14
    26bc:	ff 92       	push	r15
    26be:	0f 93       	push	r16
    26c0:	1f 93       	push	r17
    26c2:	cf 93       	push	r28
    26c4:	df 93       	push	r29
    26c6:	1f 92       	push	r1
    26c8:	1f 92       	push	r1
    26ca:	cd b7       	in	r28, 0x3d	; 61
    26cc:	de b7       	in	r29, 0x3e	; 62
    26ce:	5c 01       	movw	r10, r24
    26d0:	2b 01       	movw	r4, r22
    26d2:	3a 01       	movw	r6, r20
    26d4:	68 01       	movw	r12, r16
    26d6:	79 01       	movw	r14, r18
    26d8:	fc 01       	movw	r30, r24
    26da:	86 85       	ldd	r24, Z+14	; 0x0e
    26dc:	80 fd       	sbrc	r24, 0
    26de:	03 c0       	rjmp	.+6      	; 0x26e6 <xStreamBufferReceive+0x40>
    26e0:	81 2c       	mov	r8, r1
    26e2:	91 2c       	mov	r9, r1
    26e4:	04 c0       	rjmp	.+8      	; 0x26ee <xStreamBufferReceive+0x48>
    26e6:	68 94       	set
    26e8:	88 24       	eor	r8, r8
    26ea:	81 f8       	bld	r8, 1
    26ec:	91 2c       	mov	r9, r1
    26ee:	c1 14       	cp	r12, r1
    26f0:	d1 04       	cpc	r13, r1
    26f2:	e1 04       	cpc	r14, r1
    26f4:	f1 04       	cpc	r15, r1
    26f6:	31 f1       	breq	.+76     	; 0x2744 <xStreamBufferReceive+0x9e>
    26f8:	0f b6       	in	r0, 0x3f	; 63
    26fa:	f8 94       	cli
    26fc:	0f 92       	push	r0
    26fe:	c5 01       	movw	r24, r10
    2700:	90 dd       	rcall	.-1248   	; 0x2222 <prvBytesInBuffer>
    2702:	8c 01       	movw	r16, r24
    2704:	88 16       	cp	r8, r24
    2706:	99 06       	cpc	r9, r25
    2708:	40 f0       	brcs	.+16     	; 0x271a <xStreamBufferReceive+0x74>
    270a:	80 e0       	ldi	r24, 0x00	; 0
    270c:	90 e0       	ldi	r25, 0x00	; 0
    270e:	0e 94 11 1c 	call	0x3822	; 0x3822 <xTaskNotifyStateClear>
    2712:	b5 d5       	rcall	.+2922   	; 0x327e <xTaskGetCurrentTaskHandle>
    2714:	f5 01       	movw	r30, r10
    2716:	91 87       	std	Z+9, r25	; 0x09
    2718:	80 87       	std	Z+8, r24	; 0x08
    271a:	0f 90       	pop	r0
    271c:	0f be       	out	0x3f, r0	; 63
    271e:	80 16       	cp	r8, r16
    2720:	91 06       	cpc	r9, r17
    2722:	b0 f0       	brcs	.+44     	; 0x2750 <xStreamBufferReceive+0xaa>
    2724:	00 e0       	ldi	r16, 0x00	; 0
    2726:	10 e0       	ldi	r17, 0x00	; 0
    2728:	20 e0       	ldi	r18, 0x00	; 0
    272a:	30 e0       	ldi	r19, 0x00	; 0
    272c:	a9 01       	movw	r20, r18
    272e:	60 e0       	ldi	r22, 0x00	; 0
    2730:	70 e0       	ldi	r23, 0x00	; 0
    2732:	cb 01       	movw	r24, r22
    2734:	eb d6       	rcall	.+3542   	; 0x350c <xTaskNotifyWait>
    2736:	f5 01       	movw	r30, r10
    2738:	11 86       	std	Z+9, r1	; 0x09
    273a:	10 86       	std	Z+8, r1	; 0x08
    273c:	c5 01       	movw	r24, r10
    273e:	71 dd       	rcall	.-1310   	; 0x2222 <prvBytesInBuffer>
    2740:	8c 01       	movw	r16, r24
    2742:	03 c0       	rjmp	.+6      	; 0x274a <xStreamBufferReceive+0xa4>
    2744:	c5 01       	movw	r24, r10
    2746:	6d dd       	rcall	.-1318   	; 0x2222 <prvBytesInBuffer>
    2748:	8c 01       	movw	r16, r24
    274a:	80 16       	cp	r8, r16
    274c:	91 06       	cpc	r9, r17
    274e:	b8 f5       	brcc	.+110    	; 0x27be <xStreamBufferReceive+0x118>
    2750:	81 14       	cp	r8, r1
    2752:	91 04       	cpc	r9, r1
    2754:	c1 f0       	breq	.+48     	; 0x2786 <xStreamBufferReceive+0xe0>
    2756:	f5 01       	movw	r30, r10
    2758:	e0 80       	ld	r14, Z
    275a:	f1 80       	ldd	r15, Z+1	; 0x01
    275c:	98 01       	movw	r18, r16
    275e:	a4 01       	movw	r20, r8
    2760:	be 01       	movw	r22, r28
    2762:	6f 5f       	subi	r22, 0xFF	; 255
    2764:	7f 4f       	sbci	r23, 0xFF	; 255
    2766:	c5 01       	movw	r24, r10
    2768:	f8 dd       	rcall	.-1040   	; 0x235a <prvReadBytesFromBuffer>
    276a:	89 81       	ldd	r24, Y+1	; 0x01
    276c:	9a 81       	ldd	r25, Y+2	; 0x02
    276e:	08 19       	sub	r16, r8
    2770:	19 09       	sbc	r17, r9
    2772:	68 16       	cp	r6, r24
    2774:	79 06       	cpc	r7, r25
    2776:	30 f4       	brcc	.+12     	; 0x2784 <xStreamBufferReceive+0xde>
    2778:	f5 01       	movw	r30, r10
    277a:	f1 82       	std	Z+1, r15	; 0x01
    277c:	e0 82       	st	Z, r14
    277e:	61 2c       	mov	r6, r1
    2780:	71 2c       	mov	r7, r1
    2782:	01 c0       	rjmp	.+2      	; 0x2786 <xStreamBufferReceive+0xe0>
    2784:	3c 01       	movw	r6, r24
    2786:	98 01       	movw	r18, r16
    2788:	a3 01       	movw	r20, r6
    278a:	b2 01       	movw	r22, r4
    278c:	c5 01       	movw	r24, r10
    278e:	e5 dd       	rcall	.-1078   	; 0x235a <prvReadBytesFromBuffer>
    2790:	7c 01       	movw	r14, r24
    2792:	89 2b       	or	r24, r25
    2794:	b1 f0       	breq	.+44     	; 0x27c2 <xStreamBufferReceive+0x11c>
    2796:	25 d2       	rcall	.+1098   	; 0x2be2 <vTaskSuspendAll>
    2798:	f5 01       	movw	r30, r10
    279a:	82 85       	ldd	r24, Z+10	; 0x0a
    279c:	93 85       	ldd	r25, Z+11	; 0x0b
    279e:	89 2b       	or	r24, r25
    27a0:	61 f0       	breq	.+24     	; 0x27ba <xStreamBufferReceive+0x114>
    27a2:	82 85       	ldd	r24, Z+10	; 0x0a
    27a4:	93 85       	ldd	r25, Z+11	; 0x0b
    27a6:	00 e0       	ldi	r16, 0x00	; 0
    27a8:	10 e0       	ldi	r17, 0x00	; 0
    27aa:	20 e0       	ldi	r18, 0x00	; 0
    27ac:	40 e0       	ldi	r20, 0x00	; 0
    27ae:	50 e0       	ldi	r21, 0x00	; 0
    27b0:	ba 01       	movw	r22, r20
    27b2:	36 d7       	rcall	.+3692   	; 0x3620 <xTaskGenericNotify>
    27b4:	f5 01       	movw	r30, r10
    27b6:	13 86       	std	Z+11, r1	; 0x0b
    27b8:	12 86       	std	Z+10, r1	; 0x0a
    27ba:	fc d2       	rcall	.+1528   	; 0x2db4 <xTaskResumeAll>
    27bc:	02 c0       	rjmp	.+4      	; 0x27c2 <xStreamBufferReceive+0x11c>
    27be:	e1 2c       	mov	r14, r1
    27c0:	f1 2c       	mov	r15, r1
    27c2:	c7 01       	movw	r24, r14
    27c4:	0f 90       	pop	r0
    27c6:	0f 90       	pop	r0
    27c8:	df 91       	pop	r29
    27ca:	cf 91       	pop	r28
    27cc:	1f 91       	pop	r17
    27ce:	0f 91       	pop	r16
    27d0:	ff 90       	pop	r15
    27d2:	ef 90       	pop	r14
    27d4:	df 90       	pop	r13
    27d6:	cf 90       	pop	r12
    27d8:	bf 90       	pop	r11
    27da:	af 90       	pop	r10
    27dc:	9f 90       	pop	r9
    27de:	8f 90       	pop	r8
    27e0:	7f 90       	pop	r7
    27e2:	6f 90       	pop	r6
    27e4:	5f 90       	pop	r5
    27e6:	4f 90       	pop	r4
    27e8:	08 95       	ret

000027ea <prvResetNextTaskUnblockTime>:
    27ea:	e0 91 25 19 	lds	r30, 0x1925	; 0x801925 <pxDelayedTaskList>
    27ee:	f0 91 26 19 	lds	r31, 0x1926	; 0x801926 <pxDelayedTaskList+0x1>
    27f2:	80 81       	ld	r24, Z
    27f4:	81 11       	cpse	r24, r1
    27f6:	0c c0       	rjmp	.+24     	; 0x2810 <prvResetNextTaskUnblockTime+0x26>
    27f8:	8f ef       	ldi	r24, 0xFF	; 255
    27fa:	9f ef       	ldi	r25, 0xFF	; 255
    27fc:	dc 01       	movw	r26, r24
    27fe:	80 93 f2 18 	sts	0x18F2, r24	; 0x8018f2 <xNextTaskUnblockTime>
    2802:	90 93 f3 18 	sts	0x18F3, r25	; 0x8018f3 <xNextTaskUnblockTime+0x1>
    2806:	a0 93 f4 18 	sts	0x18F4, r26	; 0x8018f4 <xNextTaskUnblockTime+0x2>
    280a:	b0 93 f5 18 	sts	0x18F5, r27	; 0x8018f5 <xNextTaskUnblockTime+0x3>
    280e:	08 95       	ret
    2810:	e0 91 25 19 	lds	r30, 0x1925	; 0x801925 <pxDelayedTaskList>
    2814:	f0 91 26 19 	lds	r31, 0x1926	; 0x801926 <pxDelayedTaskList+0x1>
    2818:	07 80       	ldd	r0, Z+7	; 0x07
    281a:	f0 85       	ldd	r31, Z+8	; 0x08
    281c:	e0 2d       	mov	r30, r0
    281e:	00 84       	ldd	r0, Z+8	; 0x08
    2820:	f1 85       	ldd	r31, Z+9	; 0x09
    2822:	e0 2d       	mov	r30, r0
    2824:	82 81       	ldd	r24, Z+2	; 0x02
    2826:	93 81       	ldd	r25, Z+3	; 0x03
    2828:	a4 81       	ldd	r26, Z+4	; 0x04
    282a:	b5 81       	ldd	r27, Z+5	; 0x05
    282c:	80 93 f2 18 	sts	0x18F2, r24	; 0x8018f2 <xNextTaskUnblockTime>
    2830:	90 93 f3 18 	sts	0x18F3, r25	; 0x8018f3 <xNextTaskUnblockTime+0x1>
    2834:	a0 93 f4 18 	sts	0x18F4, r26	; 0x8018f4 <xNextTaskUnblockTime+0x2>
    2838:	b0 93 f5 18 	sts	0x18F5, r27	; 0x8018f5 <xNextTaskUnblockTime+0x3>
    283c:	08 95       	ret

0000283e <prvAddCurrentTaskToDelayedList>:
    283e:	8f 92       	push	r8
    2840:	9f 92       	push	r9
    2842:	af 92       	push	r10
    2844:	bf 92       	push	r11
    2846:	cf 92       	push	r12
    2848:	df 92       	push	r13
    284a:	ef 92       	push	r14
    284c:	ff 92       	push	r15
    284e:	cf 93       	push	r28
    2850:	6b 01       	movw	r12, r22
    2852:	7c 01       	movw	r14, r24
    2854:	c4 2f       	mov	r28, r20
    2856:	80 90 fc 18 	lds	r8, 0x18FC	; 0x8018fc <xTickCount>
    285a:	90 90 fd 18 	lds	r9, 0x18FD	; 0x8018fd <xTickCount+0x1>
    285e:	a0 90 fe 18 	lds	r10, 0x18FE	; 0x8018fe <xTickCount+0x2>
    2862:	b0 90 ff 18 	lds	r11, 0x18FF	; 0x8018ff <xTickCount+0x3>
    2866:	80 91 69 19 	lds	r24, 0x1969	; 0x801969 <pxCurrentTCB>
    286a:	90 91 6a 19 	lds	r25, 0x196A	; 0x80196a <pxCurrentTCB+0x1>
    286e:	02 96       	adiw	r24, 0x02	; 2
    2870:	0e 94 bf 0b 	call	0x177e	; 0x177e <uxListRemove>
    2874:	8f ef       	ldi	r24, 0xFF	; 255
    2876:	c8 16       	cp	r12, r24
    2878:	d8 06       	cpc	r13, r24
    287a:	e8 06       	cpc	r14, r24
    287c:	f8 06       	cpc	r15, r24
    287e:	69 f4       	brne	.+26     	; 0x289a <prvAddCurrentTaskToDelayedList+0x5c>
    2880:	cc 23       	and	r28, r28
    2882:	59 f0       	breq	.+22     	; 0x289a <prvAddCurrentTaskToDelayedList+0x5c>
    2884:	60 91 69 19 	lds	r22, 0x1969	; 0x801969 <pxCurrentTCB>
    2888:	70 91 6a 19 	lds	r23, 0x196A	; 0x80196a <pxCurrentTCB+0x1>
    288c:	6e 5f       	subi	r22, 0xFE	; 254
    288e:	7f 4f       	sbci	r23, 0xFF	; 255
    2890:	81 e0       	ldi	r24, 0x01	; 1
    2892:	99 e1       	ldi	r25, 0x19	; 25
    2894:	0e 94 61 0b 	call	0x16c2	; 0x16c2 <vListInsertEnd>
    2898:	3f c0       	rjmp	.+126    	; 0x2918 <prvAddCurrentTaskToDelayedList+0xda>
    289a:	c8 0c       	add	r12, r8
    289c:	d9 1c       	adc	r13, r9
    289e:	ea 1c       	adc	r14, r10
    28a0:	fb 1c       	adc	r15, r11
    28a2:	e0 91 69 19 	lds	r30, 0x1969	; 0x801969 <pxCurrentTCB>
    28a6:	f0 91 6a 19 	lds	r31, 0x196A	; 0x80196a <pxCurrentTCB+0x1>
    28aa:	c2 82       	std	Z+2, r12	; 0x02
    28ac:	d3 82       	std	Z+3, r13	; 0x03
    28ae:	e4 82       	std	Z+4, r14	; 0x04
    28b0:	f5 82       	std	Z+5, r15	; 0x05
    28b2:	c8 14       	cp	r12, r8
    28b4:	d9 04       	cpc	r13, r9
    28b6:	ea 04       	cpc	r14, r10
    28b8:	fb 04       	cpc	r15, r11
    28ba:	68 f4       	brcc	.+26     	; 0x28d6 <prvAddCurrentTaskToDelayedList+0x98>
    28bc:	60 91 69 19 	lds	r22, 0x1969	; 0x801969 <pxCurrentTCB>
    28c0:	70 91 6a 19 	lds	r23, 0x196A	; 0x80196a <pxCurrentTCB+0x1>
    28c4:	80 91 23 19 	lds	r24, 0x1923	; 0x801923 <pxOverflowDelayedTaskList>
    28c8:	90 91 24 19 	lds	r25, 0x1924	; 0x801924 <pxOverflowDelayedTaskList+0x1>
    28cc:	6e 5f       	subi	r22, 0xFE	; 254
    28ce:	7f 4f       	sbci	r23, 0xFF	; 255
    28d0:	0e 94 82 0b 	call	0x1704	; 0x1704 <vListInsert>
    28d4:	21 c0       	rjmp	.+66     	; 0x2918 <prvAddCurrentTaskToDelayedList+0xda>
    28d6:	60 91 69 19 	lds	r22, 0x1969	; 0x801969 <pxCurrentTCB>
    28da:	70 91 6a 19 	lds	r23, 0x196A	; 0x80196a <pxCurrentTCB+0x1>
    28de:	80 91 25 19 	lds	r24, 0x1925	; 0x801925 <pxDelayedTaskList>
    28e2:	90 91 26 19 	lds	r25, 0x1926	; 0x801926 <pxDelayedTaskList+0x1>
    28e6:	6e 5f       	subi	r22, 0xFE	; 254
    28e8:	7f 4f       	sbci	r23, 0xFF	; 255
    28ea:	0e 94 82 0b 	call	0x1704	; 0x1704 <vListInsert>
    28ee:	80 91 f2 18 	lds	r24, 0x18F2	; 0x8018f2 <xNextTaskUnblockTime>
    28f2:	90 91 f3 18 	lds	r25, 0x18F3	; 0x8018f3 <xNextTaskUnblockTime+0x1>
    28f6:	a0 91 f4 18 	lds	r26, 0x18F4	; 0x8018f4 <xNextTaskUnblockTime+0x2>
    28fa:	b0 91 f5 18 	lds	r27, 0x18F5	; 0x8018f5 <xNextTaskUnblockTime+0x3>
    28fe:	c8 16       	cp	r12, r24
    2900:	d9 06       	cpc	r13, r25
    2902:	ea 06       	cpc	r14, r26
    2904:	fb 06       	cpc	r15, r27
    2906:	40 f4       	brcc	.+16     	; 0x2918 <prvAddCurrentTaskToDelayedList+0xda>
    2908:	c0 92 f2 18 	sts	0x18F2, r12	; 0x8018f2 <xNextTaskUnblockTime>
    290c:	d0 92 f3 18 	sts	0x18F3, r13	; 0x8018f3 <xNextTaskUnblockTime+0x1>
    2910:	e0 92 f4 18 	sts	0x18F4, r14	; 0x8018f4 <xNextTaskUnblockTime+0x2>
    2914:	f0 92 f5 18 	sts	0x18F5, r15	; 0x8018f5 <xNextTaskUnblockTime+0x3>
    2918:	cf 91       	pop	r28
    291a:	ff 90       	pop	r15
    291c:	ef 90       	pop	r14
    291e:	df 90       	pop	r13
    2920:	cf 90       	pop	r12
    2922:	bf 90       	pop	r11
    2924:	af 90       	pop	r10
    2926:	9f 90       	pop	r9
    2928:	8f 90       	pop	r8
    292a:	08 95       	ret

0000292c <xTaskCreate>:
    292c:	4f 92       	push	r4
    292e:	5f 92       	push	r5
    2930:	6f 92       	push	r6
    2932:	7f 92       	push	r7
    2934:	8f 92       	push	r8
    2936:	9f 92       	push	r9
    2938:	af 92       	push	r10
    293a:	bf 92       	push	r11
    293c:	cf 92       	push	r12
    293e:	df 92       	push	r13
    2940:	ef 92       	push	r14
    2942:	ff 92       	push	r15
    2944:	0f 93       	push	r16
    2946:	cf 93       	push	r28
    2948:	df 93       	push	r29
    294a:	4c 01       	movw	r8, r24
    294c:	6b 01       	movw	r12, r22
    294e:	5a 01       	movw	r10, r20
    2950:	29 01       	movw	r4, r18
    2952:	ca 01       	movw	r24, r20
    2954:	0e 94 62 0a 	call	0x14c4	; 0x14c4 <pvPortMalloc>
    2958:	3c 01       	movw	r6, r24
    295a:	89 2b       	or	r24, r25
    295c:	09 f4       	brne	.+2      	; 0x2960 <xTaskCreate+0x34>
    295e:	f4 c0       	rjmp	.+488    	; 0x2b48 <xTaskCreate+0x21c>
    2960:	80 e3       	ldi	r24, 0x30	; 48
    2962:	90 e0       	ldi	r25, 0x00	; 0
    2964:	0e 94 62 0a 	call	0x14c4	; 0x14c4 <pvPortMalloc>
    2968:	ec 01       	movw	r28, r24
    296a:	89 2b       	or	r24, r25
    296c:	99 f0       	breq	.+38     	; 0x2994 <xTaskCreate+0x68>
    296e:	7c 8e       	std	Y+28, r7	; 0x1c
    2970:	6b 8e       	std	Y+27, r6	; 0x1b
    2972:	a5 01       	movw	r20, r10
    2974:	65 ea       	ldi	r22, 0xA5	; 165
    2976:	70 e0       	ldi	r23, 0x00	; 0
    2978:	c3 01       	movw	r24, r6
    297a:	0e 94 b9 2e 	call	0x5d72	; 0x5d72 <memset>
    297e:	21 e0       	ldi	r18, 0x01	; 1
    2980:	a2 1a       	sub	r10, r18
    2982:	b1 08       	sbc	r11, r1
    2984:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2986:	9c 8d       	ldd	r25, Y+28	; 0x1c
    2988:	a8 0e       	add	r10, r24
    298a:	b9 1e       	adc	r11, r25
    298c:	c1 14       	cp	r12, r1
    298e:	d1 04       	cpc	r13, r1
    2990:	29 f4       	brne	.+10     	; 0x299c <xTaskCreate+0x70>
    2992:	20 c0       	rjmp	.+64     	; 0x29d4 <xTaskCreate+0xa8>
    2994:	c3 01       	movw	r24, r6
    2996:	0e 94 1b 0b 	call	0x1636	; 0x1636 <vPortFree>
    299a:	d6 c0       	rjmp	.+428    	; 0x2b48 <xTaskCreate+0x21c>
    299c:	d6 01       	movw	r26, r12
    299e:	8c 91       	ld	r24, X
    29a0:	8d 8f       	std	Y+29, r24	; 0x1d
    29a2:	8c 91       	ld	r24, X
    29a4:	88 23       	and	r24, r24
    29a6:	a1 f0       	breq	.+40     	; 0x29d0 <xTaskCreate+0xa4>
    29a8:	ae 01       	movw	r20, r28
    29aa:	42 5e       	subi	r20, 0xE2	; 226
    29ac:	5f 4f       	sbci	r21, 0xFF	; 255
    29ae:	f6 01       	movw	r30, r12
    29b0:	31 96       	adiw	r30, 0x01	; 1
    29b2:	b8 e0       	ldi	r27, 0x08	; 8
    29b4:	cb 0e       	add	r12, r27
    29b6:	d1 1c       	adc	r13, r1
    29b8:	cf 01       	movw	r24, r30
    29ba:	21 91       	ld	r18, Z+
    29bc:	da 01       	movw	r26, r20
    29be:	2d 93       	st	X+, r18
    29c0:	ad 01       	movw	r20, r26
    29c2:	dc 01       	movw	r26, r24
    29c4:	8c 91       	ld	r24, X
    29c6:	88 23       	and	r24, r24
    29c8:	19 f0       	breq	.+6      	; 0x29d0 <xTaskCreate+0xa4>
    29ca:	ec 15       	cp	r30, r12
    29cc:	fd 05       	cpc	r31, r13
    29ce:	a1 f7       	brne	.-24     	; 0x29b8 <xTaskCreate+0x8c>
    29d0:	1c a2       	std	Y+36, r1	; 0x24
    29d2:	01 c0       	rjmp	.+2      	; 0x29d6 <xTaskCreate+0xaa>
    29d4:	1d 8e       	std	Y+29, r1	; 0x1d
    29d6:	04 30       	cpi	r16, 0x04	; 4
    29d8:	08 f0       	brcs	.+2      	; 0x29dc <xTaskCreate+0xb0>
    29da:	03 e0       	ldi	r16, 0x03	; 3
    29dc:	0a 8f       	std	Y+26, r16	; 0x1a
    29de:	0f a3       	std	Y+39, r16	; 0x27
    29e0:	18 a6       	std	Y+40, r1	; 0x28
    29e2:	6e 01       	movw	r12, r28
    29e4:	b2 e0       	ldi	r27, 0x02	; 2
    29e6:	cb 0e       	add	r12, r27
    29e8:	d1 1c       	adc	r13, r1
    29ea:	c6 01       	movw	r24, r12
    29ec:	0e 94 5d 0b 	call	0x16ba	; 0x16ba <vListInitialiseItem>
    29f0:	ce 01       	movw	r24, r28
    29f2:	0e 96       	adiw	r24, 0x0e	; 14
    29f4:	0e 94 5d 0b 	call	0x16ba	; 0x16ba <vListInitialiseItem>
    29f8:	db 87       	std	Y+11, r29	; 0x0b
    29fa:	ca 87       	std	Y+10, r28	; 0x0a
    29fc:	84 e0       	ldi	r24, 0x04	; 4
    29fe:	90 e0       	ldi	r25, 0x00	; 0
    2a00:	a0 e0       	ldi	r26, 0x00	; 0
    2a02:	b0 e0       	ldi	r27, 0x00	; 0
    2a04:	80 1b       	sub	r24, r16
    2a06:	91 09       	sbc	r25, r1
    2a08:	a1 09       	sbc	r26, r1
    2a0a:	b1 09       	sbc	r27, r1
    2a0c:	8e 87       	std	Y+14, r24	; 0x0e
    2a0e:	9f 87       	std	Y+15, r25	; 0x0f
    2a10:	a8 8b       	std	Y+16, r26	; 0x10
    2a12:	b9 8b       	std	Y+17, r27	; 0x11
    2a14:	df 8b       	std	Y+23, r29	; 0x17
    2a16:	ce 8b       	std	Y+22, r28	; 0x16
    2a18:	1a a6       	std	Y+42, r1	; 0x2a
    2a1a:	19 a6       	std	Y+41, r1	; 0x29
    2a1c:	1b a6       	std	Y+43, r1	; 0x2b
    2a1e:	1c a6       	std	Y+44, r1	; 0x2c
    2a20:	1d a6       	std	Y+45, r1	; 0x2d
    2a22:	1e a6       	std	Y+46, r1	; 0x2e
    2a24:	1f a6       	std	Y+47, r1	; 0x2f
    2a26:	a2 01       	movw	r20, r4
    2a28:	b4 01       	movw	r22, r8
    2a2a:	c5 01       	movw	r24, r10
    2a2c:	0e 94 e6 0b 	call	0x17cc	; 0x17cc <pxPortInitialiseStack>
    2a30:	99 83       	std	Y+1, r25	; 0x01
    2a32:	88 83       	st	Y, r24
    2a34:	e1 14       	cp	r14, r1
    2a36:	f1 04       	cpc	r15, r1
    2a38:	19 f0       	breq	.+6      	; 0x2a40 <xTaskCreate+0x114>
    2a3a:	f7 01       	movw	r30, r14
    2a3c:	d1 83       	std	Z+1, r29	; 0x01
    2a3e:	c0 83       	st	Z, r28
    2a40:	0f b6       	in	r0, 0x3f	; 63
    2a42:	f8 94       	cli
    2a44:	0f 92       	push	r0
    2a46:	80 91 00 19 	lds	r24, 0x1900	; 0x801900 <uxCurrentNumberOfTasks>
    2a4a:	8f 5f       	subi	r24, 0xFF	; 255
    2a4c:	80 93 00 19 	sts	0x1900, r24	; 0x801900 <uxCurrentNumberOfTasks>
    2a50:	80 91 69 19 	lds	r24, 0x1969	; 0x801969 <pxCurrentTCB>
    2a54:	90 91 6a 19 	lds	r25, 0x196A	; 0x80196a <pxCurrentTCB+0x1>
    2a58:	89 2b       	or	r24, r25
    2a5a:	d1 f5       	brne	.+116    	; 0x2ad0 <xTaskCreate+0x1a4>
    2a5c:	d0 93 6a 19 	sts	0x196A, r29	; 0x80196a <pxCurrentTCB+0x1>
    2a60:	c0 93 69 19 	sts	0x1969, r28	; 0x801969 <pxCurrentTCB>
    2a64:	80 91 00 19 	lds	r24, 0x1900	; 0x801900 <uxCurrentNumberOfTasks>
    2a68:	81 30       	cpi	r24, 0x01	; 1
    2a6a:	09 f0       	breq	.+2      	; 0x2a6e <xTaskCreate+0x142>
    2a6c:	41 c0       	rjmp	.+130    	; 0x2af0 <xTaskCreate+0x1c4>
    2a6e:	8d e3       	ldi	r24, 0x3D	; 61
    2a70:	99 e1       	ldi	r25, 0x19	; 25
    2a72:	0e 94 4c 0b 	call	0x1698	; 0x1698 <vListInitialise>
    2a76:	88 e4       	ldi	r24, 0x48	; 72
    2a78:	99 e1       	ldi	r25, 0x19	; 25
    2a7a:	0e 94 4c 0b 	call	0x1698	; 0x1698 <vListInitialise>
    2a7e:	83 e5       	ldi	r24, 0x53	; 83
    2a80:	99 e1       	ldi	r25, 0x19	; 25
    2a82:	0e 94 4c 0b 	call	0x1698	; 0x1698 <vListInitialise>
    2a86:	8e e5       	ldi	r24, 0x5E	; 94
    2a88:	99 e1       	ldi	r25, 0x19	; 25
    2a8a:	0e 94 4c 0b 	call	0x1698	; 0x1698 <vListInitialise>
    2a8e:	82 e3       	ldi	r24, 0x32	; 50
    2a90:	99 e1       	ldi	r25, 0x19	; 25
    2a92:	0e 94 4c 0b 	call	0x1698	; 0x1698 <vListInitialise>
    2a96:	87 e2       	ldi	r24, 0x27	; 39
    2a98:	99 e1       	ldi	r25, 0x19	; 25
    2a9a:	0e 94 4c 0b 	call	0x1698	; 0x1698 <vListInitialise>
    2a9e:	88 e1       	ldi	r24, 0x18	; 24
    2aa0:	99 e1       	ldi	r25, 0x19	; 25
    2aa2:	0e 94 4c 0b 	call	0x1698	; 0x1698 <vListInitialise>
    2aa6:	8d e0       	ldi	r24, 0x0D	; 13
    2aa8:	99 e1       	ldi	r25, 0x19	; 25
    2aaa:	0e 94 4c 0b 	call	0x1698	; 0x1698 <vListInitialise>
    2aae:	81 e0       	ldi	r24, 0x01	; 1
    2ab0:	99 e1       	ldi	r25, 0x19	; 25
    2ab2:	0e 94 4c 0b 	call	0x1698	; 0x1698 <vListInitialise>
    2ab6:	82 e3       	ldi	r24, 0x32	; 50
    2ab8:	99 e1       	ldi	r25, 0x19	; 25
    2aba:	90 93 26 19 	sts	0x1926, r25	; 0x801926 <pxDelayedTaskList+0x1>
    2abe:	80 93 25 19 	sts	0x1925, r24	; 0x801925 <pxDelayedTaskList>
    2ac2:	87 e2       	ldi	r24, 0x27	; 39
    2ac4:	99 e1       	ldi	r25, 0x19	; 25
    2ac6:	90 93 24 19 	sts	0x1924, r25	; 0x801924 <pxOverflowDelayedTaskList+0x1>
    2aca:	80 93 23 19 	sts	0x1923, r24	; 0x801923 <pxOverflowDelayedTaskList>
    2ace:	10 c0       	rjmp	.+32     	; 0x2af0 <xTaskCreate+0x1c4>
    2ad0:	80 91 fa 18 	lds	r24, 0x18FA	; 0x8018fa <xSchedulerRunning>
    2ad4:	81 11       	cpse	r24, r1
    2ad6:	0c c0       	rjmp	.+24     	; 0x2af0 <xTaskCreate+0x1c4>
    2ad8:	e0 91 69 19 	lds	r30, 0x1969	; 0x801969 <pxCurrentTCB>
    2adc:	f0 91 6a 19 	lds	r31, 0x196A	; 0x80196a <pxCurrentTCB+0x1>
    2ae0:	92 8d       	ldd	r25, Z+26	; 0x1a
    2ae2:	8a 8d       	ldd	r24, Y+26	; 0x1a
    2ae4:	89 17       	cp	r24, r25
    2ae6:	20 f0       	brcs	.+8      	; 0x2af0 <xTaskCreate+0x1c4>
    2ae8:	d0 93 6a 19 	sts	0x196A, r29	; 0x80196a <pxCurrentTCB+0x1>
    2aec:	c0 93 69 19 	sts	0x1969, r28	; 0x801969 <pxCurrentTCB>
    2af0:	80 91 f6 18 	lds	r24, 0x18F6	; 0x8018f6 <uxTaskNumber>
    2af4:	8f 5f       	subi	r24, 0xFF	; 255
    2af6:	80 93 f6 18 	sts	0x18F6, r24	; 0x8018f6 <uxTaskNumber>
    2afa:	8d a3       	std	Y+37, r24	; 0x25
    2afc:	8a 8d       	ldd	r24, Y+26	; 0x1a
    2afe:	90 91 fb 18 	lds	r25, 0x18FB	; 0x8018fb <uxTopReadyPriority>
    2b02:	98 17       	cp	r25, r24
    2b04:	10 f4       	brcc	.+4      	; 0x2b0a <xTaskCreate+0x1de>
    2b06:	80 93 fb 18 	sts	0x18FB, r24	; 0x8018fb <uxTopReadyPriority>
    2b0a:	fb e0       	ldi	r31, 0x0B	; 11
    2b0c:	8f 9f       	mul	r24, r31
    2b0e:	c0 01       	movw	r24, r0
    2b10:	11 24       	eor	r1, r1
    2b12:	b6 01       	movw	r22, r12
    2b14:	83 5c       	subi	r24, 0xC3	; 195
    2b16:	96 4e       	sbci	r25, 0xE6	; 230
    2b18:	0e 94 61 0b 	call	0x16c2	; 0x16c2 <vListInsertEnd>
    2b1c:	0f 90       	pop	r0
    2b1e:	0f be       	out	0x3f, r0	; 63
    2b20:	80 91 fa 18 	lds	r24, 0x18FA	; 0x8018fa <xSchedulerRunning>
    2b24:	88 23       	and	r24, r24
    2b26:	61 f0       	breq	.+24     	; 0x2b40 <xTaskCreate+0x214>
    2b28:	e0 91 69 19 	lds	r30, 0x1969	; 0x801969 <pxCurrentTCB>
    2b2c:	f0 91 6a 19 	lds	r31, 0x196A	; 0x80196a <pxCurrentTCB+0x1>
    2b30:	92 8d       	ldd	r25, Z+26	; 0x1a
    2b32:	8a 8d       	ldd	r24, Y+26	; 0x1a
    2b34:	98 17       	cp	r25, r24
    2b36:	30 f4       	brcc	.+12     	; 0x2b44 <xTaskCreate+0x218>
    2b38:	0e 94 94 0c 	call	0x1928	; 0x1928 <vPortYield>
    2b3c:	81 e0       	ldi	r24, 0x01	; 1
    2b3e:	05 c0       	rjmp	.+10     	; 0x2b4a <xTaskCreate+0x21e>
    2b40:	81 e0       	ldi	r24, 0x01	; 1
    2b42:	03 c0       	rjmp	.+6      	; 0x2b4a <xTaskCreate+0x21e>
    2b44:	81 e0       	ldi	r24, 0x01	; 1
    2b46:	01 c0       	rjmp	.+2      	; 0x2b4a <xTaskCreate+0x21e>
    2b48:	8f ef       	ldi	r24, 0xFF	; 255
    2b4a:	df 91       	pop	r29
    2b4c:	cf 91       	pop	r28
    2b4e:	0f 91       	pop	r16
    2b50:	ff 90       	pop	r15
    2b52:	ef 90       	pop	r14
    2b54:	df 90       	pop	r13
    2b56:	cf 90       	pop	r12
    2b58:	bf 90       	pop	r11
    2b5a:	af 90       	pop	r10
    2b5c:	9f 90       	pop	r9
    2b5e:	8f 90       	pop	r8
    2b60:	7f 90       	pop	r7
    2b62:	6f 90       	pop	r6
    2b64:	5f 90       	pop	r5
    2b66:	4f 90       	pop	r4
    2b68:	08 95       	ret

00002b6a <vTaskStartScheduler>:
    2b6a:	ef 92       	push	r14
    2b6c:	ff 92       	push	r15
    2b6e:	0f 93       	push	r16
    2b70:	0f 2e       	mov	r0, r31
    2b72:	f0 ef       	ldi	r31, 0xF0	; 240
    2b74:	ef 2e       	mov	r14, r31
    2b76:	f8 e1       	ldi	r31, 0x18	; 24
    2b78:	ff 2e       	mov	r15, r31
    2b7a:	f0 2d       	mov	r31, r0
    2b7c:	00 e0       	ldi	r16, 0x00	; 0
    2b7e:	20 e0       	ldi	r18, 0x00	; 0
    2b80:	30 e0       	ldi	r19, 0x00	; 0
    2b82:	40 ec       	ldi	r20, 0xC0	; 192
    2b84:	50 e0       	ldi	r21, 0x00	; 0
    2b86:	6f e7       	ldi	r22, 0x7F	; 127
    2b88:	75 e0       	ldi	r23, 0x05	; 5
    2b8a:	8d ec       	ldi	r24, 0xCD	; 205
    2b8c:	90 e0       	ldi	r25, 0x00	; 0
    2b8e:	ce de       	rcall	.-612    	; 0x292c <xTaskCreate>
    2b90:	81 30       	cpi	r24, 0x01	; 1
    2b92:	19 f5       	brne	.+70     	; 0x2bda <vTaskStartScheduler+0x70>
    2b94:	cc d6       	rcall	.+3480   	; 0x392e <xTimerCreateTimerTask>
    2b96:	81 30       	cpi	r24, 0x01	; 1
    2b98:	01 f5       	brne	.+64     	; 0x2bda <vTaskStartScheduler+0x70>
    2b9a:	f8 94       	cli
    2b9c:	8f ef       	ldi	r24, 0xFF	; 255
    2b9e:	9f ef       	ldi	r25, 0xFF	; 255
    2ba0:	dc 01       	movw	r26, r24
    2ba2:	80 93 f2 18 	sts	0x18F2, r24	; 0x8018f2 <xNextTaskUnblockTime>
    2ba6:	90 93 f3 18 	sts	0x18F3, r25	; 0x8018f3 <xNextTaskUnblockTime+0x1>
    2baa:	a0 93 f4 18 	sts	0x18F4, r26	; 0x8018f4 <xNextTaskUnblockTime+0x2>
    2bae:	b0 93 f5 18 	sts	0x18F5, r27	; 0x8018f5 <xNextTaskUnblockTime+0x3>
    2bb2:	81 e0       	ldi	r24, 0x01	; 1
    2bb4:	80 93 fa 18 	sts	0x18FA, r24	; 0x8018fa <xSchedulerRunning>
    2bb8:	10 92 fc 18 	sts	0x18FC, r1	; 0x8018fc <xTickCount>
    2bbc:	10 92 fd 18 	sts	0x18FD, r1	; 0x8018fd <xTickCount+0x1>
    2bc0:	10 92 fe 18 	sts	0x18FE, r1	; 0x8018fe <xTickCount+0x2>
    2bc4:	10 92 ff 18 	sts	0x18FF, r1	; 0x8018ff <xTickCount+0x3>
    2bc8:	e0 91 69 19 	lds	r30, 0x1969	; 0x801969 <pxCurrentTCB>
    2bcc:	f0 91 6a 19 	lds	r31, 0x196A	; 0x80196a <pxCurrentTCB+0x1>
    2bd0:	81 a5       	ldd	r24, Z+41	; 0x29
    2bd2:	0e 94 99 08 	call	0x1132	; 0x1132 <task_switch_in>
    2bd6:	0e 94 58 0c 	call	0x18b0	; 0x18b0 <xPortStartScheduler>
    2bda:	0f 91       	pop	r16
    2bdc:	ff 90       	pop	r15
    2bde:	ef 90       	pop	r14
    2be0:	08 95       	ret

00002be2 <vTaskSuspendAll>:
    2be2:	80 91 ef 18 	lds	r24, 0x18EF	; 0x8018ef <uxSchedulerSuspended>
    2be6:	8f 5f       	subi	r24, 0xFF	; 255
    2be8:	80 93 ef 18 	sts	0x18EF, r24	; 0x8018ef <uxSchedulerSuspended>
    2bec:	08 95       	ret

00002bee <xTaskGetTickCount>:
    2bee:	0f b6       	in	r0, 0x3f	; 63
    2bf0:	f8 94       	cli
    2bf2:	0f 92       	push	r0
    2bf4:	60 91 fc 18 	lds	r22, 0x18FC	; 0x8018fc <xTickCount>
    2bf8:	70 91 fd 18 	lds	r23, 0x18FD	; 0x8018fd <xTickCount+0x1>
    2bfc:	80 91 fe 18 	lds	r24, 0x18FE	; 0x8018fe <xTickCount+0x2>
    2c00:	90 91 ff 18 	lds	r25, 0x18FF	; 0x8018ff <xTickCount+0x3>
    2c04:	0f 90       	pop	r0
    2c06:	0f be       	out	0x3f, r0	; 63
    2c08:	08 95       	ret

00002c0a <xTaskIncrementTick>:
    2c0a:	9f 92       	push	r9
    2c0c:	af 92       	push	r10
    2c0e:	bf 92       	push	r11
    2c10:	cf 92       	push	r12
    2c12:	df 92       	push	r13
    2c14:	ef 92       	push	r14
    2c16:	ff 92       	push	r15
    2c18:	0f 93       	push	r16
    2c1a:	1f 93       	push	r17
    2c1c:	cf 93       	push	r28
    2c1e:	df 93       	push	r29
    2c20:	80 91 ef 18 	lds	r24, 0x18EF	; 0x8018ef <uxSchedulerSuspended>
    2c24:	81 11       	cpse	r24, r1
    2c26:	ad c0       	rjmp	.+346    	; 0x2d82 <xTaskIncrementTick+0x178>
    2c28:	c0 90 fc 18 	lds	r12, 0x18FC	; 0x8018fc <xTickCount>
    2c2c:	d0 90 fd 18 	lds	r13, 0x18FD	; 0x8018fd <xTickCount+0x1>
    2c30:	e0 90 fe 18 	lds	r14, 0x18FE	; 0x8018fe <xTickCount+0x2>
    2c34:	f0 90 ff 18 	lds	r15, 0x18FF	; 0x8018ff <xTickCount+0x3>
    2c38:	8f ef       	ldi	r24, 0xFF	; 255
    2c3a:	c8 1a       	sub	r12, r24
    2c3c:	d8 0a       	sbc	r13, r24
    2c3e:	e8 0a       	sbc	r14, r24
    2c40:	f8 0a       	sbc	r15, r24
    2c42:	c0 92 fc 18 	sts	0x18FC, r12	; 0x8018fc <xTickCount>
    2c46:	d0 92 fd 18 	sts	0x18FD, r13	; 0x8018fd <xTickCount+0x1>
    2c4a:	e0 92 fe 18 	sts	0x18FE, r14	; 0x8018fe <xTickCount+0x2>
    2c4e:	f0 92 ff 18 	sts	0x18FF, r15	; 0x8018ff <xTickCount+0x3>
    2c52:	c1 14       	cp	r12, r1
    2c54:	d1 04       	cpc	r13, r1
    2c56:	e1 04       	cpc	r14, r1
    2c58:	f1 04       	cpc	r15, r1
    2c5a:	b1 f4       	brne	.+44     	; 0x2c88 <xTaskIncrementTick+0x7e>
    2c5c:	80 91 25 19 	lds	r24, 0x1925	; 0x801925 <pxDelayedTaskList>
    2c60:	90 91 26 19 	lds	r25, 0x1926	; 0x801926 <pxDelayedTaskList+0x1>
    2c64:	20 91 23 19 	lds	r18, 0x1923	; 0x801923 <pxOverflowDelayedTaskList>
    2c68:	30 91 24 19 	lds	r19, 0x1924	; 0x801924 <pxOverflowDelayedTaskList+0x1>
    2c6c:	30 93 26 19 	sts	0x1926, r19	; 0x801926 <pxDelayedTaskList+0x1>
    2c70:	20 93 25 19 	sts	0x1925, r18	; 0x801925 <pxDelayedTaskList>
    2c74:	90 93 24 19 	sts	0x1924, r25	; 0x801924 <pxOverflowDelayedTaskList+0x1>
    2c78:	80 93 23 19 	sts	0x1923, r24	; 0x801923 <pxOverflowDelayedTaskList>
    2c7c:	80 91 f7 18 	lds	r24, 0x18F7	; 0x8018f7 <xNumOfOverflows>
    2c80:	8f 5f       	subi	r24, 0xFF	; 255
    2c82:	80 93 f7 18 	sts	0x18F7, r24	; 0x8018f7 <xNumOfOverflows>
    2c86:	b1 dd       	rcall	.-1182   	; 0x27ea <prvResetNextTaskUnblockTime>
    2c88:	80 91 f2 18 	lds	r24, 0x18F2	; 0x8018f2 <xNextTaskUnblockTime>
    2c8c:	90 91 f3 18 	lds	r25, 0x18F3	; 0x8018f3 <xNextTaskUnblockTime+0x1>
    2c90:	a0 91 f4 18 	lds	r26, 0x18F4	; 0x8018f4 <xNextTaskUnblockTime+0x2>
    2c94:	b0 91 f5 18 	lds	r27, 0x18F5	; 0x8018f5 <xNextTaskUnblockTime+0x3>
    2c98:	c8 16       	cp	r12, r24
    2c9a:	d9 06       	cpc	r13, r25
    2c9c:	ea 06       	cpc	r14, r26
    2c9e:	fb 06       	cpc	r15, r27
    2ca0:	10 f4       	brcc	.+4      	; 0x2ca6 <xTaskIncrementTick+0x9c>
    2ca2:	b1 2c       	mov	r11, r1
    2ca4:	5d c0       	rjmp	.+186    	; 0x2d60 <xTaskIncrementTick+0x156>
    2ca6:	b1 2c       	mov	r11, r1
    2ca8:	0f 2e       	mov	r0, r31
    2caa:	fb e0       	ldi	r31, 0x0B	; 11
    2cac:	af 2e       	mov	r10, r31
    2cae:	f0 2d       	mov	r31, r0
    2cb0:	99 24       	eor	r9, r9
    2cb2:	93 94       	inc	r9
    2cb4:	e0 91 25 19 	lds	r30, 0x1925	; 0x801925 <pxDelayedTaskList>
    2cb8:	f0 91 26 19 	lds	r31, 0x1926	; 0x801926 <pxDelayedTaskList+0x1>
    2cbc:	80 81       	ld	r24, Z
    2cbe:	81 11       	cpse	r24, r1
    2cc0:	0c c0       	rjmp	.+24     	; 0x2cda <xTaskIncrementTick+0xd0>
    2cc2:	8f ef       	ldi	r24, 0xFF	; 255
    2cc4:	9f ef       	ldi	r25, 0xFF	; 255
    2cc6:	dc 01       	movw	r26, r24
    2cc8:	80 93 f2 18 	sts	0x18F2, r24	; 0x8018f2 <xNextTaskUnblockTime>
    2ccc:	90 93 f3 18 	sts	0x18F3, r25	; 0x8018f3 <xNextTaskUnblockTime+0x1>
    2cd0:	a0 93 f4 18 	sts	0x18F4, r26	; 0x8018f4 <xNextTaskUnblockTime+0x2>
    2cd4:	b0 93 f5 18 	sts	0x18F5, r27	; 0x8018f5 <xNextTaskUnblockTime+0x3>
    2cd8:	43 c0       	rjmp	.+134    	; 0x2d60 <xTaskIncrementTick+0x156>
    2cda:	e0 91 25 19 	lds	r30, 0x1925	; 0x801925 <pxDelayedTaskList>
    2cde:	f0 91 26 19 	lds	r31, 0x1926	; 0x801926 <pxDelayedTaskList+0x1>
    2ce2:	07 80       	ldd	r0, Z+7	; 0x07
    2ce4:	f0 85       	ldd	r31, Z+8	; 0x08
    2ce6:	e0 2d       	mov	r30, r0
    2ce8:	c0 85       	ldd	r28, Z+8	; 0x08
    2cea:	d1 85       	ldd	r29, Z+9	; 0x09
    2cec:	8a 81       	ldd	r24, Y+2	; 0x02
    2cee:	9b 81       	ldd	r25, Y+3	; 0x03
    2cf0:	ac 81       	ldd	r26, Y+4	; 0x04
    2cf2:	bd 81       	ldd	r27, Y+5	; 0x05
    2cf4:	c8 16       	cp	r12, r24
    2cf6:	d9 06       	cpc	r13, r25
    2cf8:	ea 06       	cpc	r14, r26
    2cfa:	fb 06       	cpc	r15, r27
    2cfc:	48 f4       	brcc	.+18     	; 0x2d10 <xTaskIncrementTick+0x106>
    2cfe:	80 93 f2 18 	sts	0x18F2, r24	; 0x8018f2 <xNextTaskUnblockTime>
    2d02:	90 93 f3 18 	sts	0x18F3, r25	; 0x8018f3 <xNextTaskUnblockTime+0x1>
    2d06:	a0 93 f4 18 	sts	0x18F4, r26	; 0x8018f4 <xNextTaskUnblockTime+0x2>
    2d0a:	b0 93 f5 18 	sts	0x18F5, r27	; 0x8018f5 <xNextTaskUnblockTime+0x3>
    2d0e:	28 c0       	rjmp	.+80     	; 0x2d60 <xTaskIncrementTick+0x156>
    2d10:	8e 01       	movw	r16, r28
    2d12:	0e 5f       	subi	r16, 0xFE	; 254
    2d14:	1f 4f       	sbci	r17, 0xFF	; 255
    2d16:	c8 01       	movw	r24, r16
    2d18:	0e 94 bf 0b 	call	0x177e	; 0x177e <uxListRemove>
    2d1c:	88 8d       	ldd	r24, Y+24	; 0x18
    2d1e:	99 8d       	ldd	r25, Y+25	; 0x19
    2d20:	89 2b       	or	r24, r25
    2d22:	21 f0       	breq	.+8      	; 0x2d2c <xTaskIncrementTick+0x122>
    2d24:	ce 01       	movw	r24, r28
    2d26:	0e 96       	adiw	r24, 0x0e	; 14
    2d28:	0e 94 bf 0b 	call	0x177e	; 0x177e <uxListRemove>
    2d2c:	8a 8d       	ldd	r24, Y+26	; 0x1a
    2d2e:	90 91 fb 18 	lds	r25, 0x18FB	; 0x8018fb <uxTopReadyPriority>
    2d32:	98 17       	cp	r25, r24
    2d34:	10 f4       	brcc	.+4      	; 0x2d3a <xTaskIncrementTick+0x130>
    2d36:	80 93 fb 18 	sts	0x18FB, r24	; 0x8018fb <uxTopReadyPriority>
    2d3a:	a8 9e       	mul	r10, r24
    2d3c:	c0 01       	movw	r24, r0
    2d3e:	11 24       	eor	r1, r1
    2d40:	b8 01       	movw	r22, r16
    2d42:	83 5c       	subi	r24, 0xC3	; 195
    2d44:	96 4e       	sbci	r25, 0xE6	; 230
    2d46:	0e 94 61 0b 	call	0x16c2	; 0x16c2 <vListInsertEnd>
    2d4a:	e0 91 69 19 	lds	r30, 0x1969	; 0x801969 <pxCurrentTCB>
    2d4e:	f0 91 6a 19 	lds	r31, 0x196A	; 0x80196a <pxCurrentTCB+0x1>
    2d52:	9a 8d       	ldd	r25, Y+26	; 0x1a
    2d54:	82 8d       	ldd	r24, Z+26	; 0x1a
    2d56:	98 17       	cp	r25, r24
    2d58:	08 f4       	brcc	.+2      	; 0x2d5c <xTaskIncrementTick+0x152>
    2d5a:	ac cf       	rjmp	.-168    	; 0x2cb4 <xTaskIncrementTick+0xaa>
    2d5c:	b9 2c       	mov	r11, r9
    2d5e:	aa cf       	rjmp	.-172    	; 0x2cb4 <xTaskIncrementTick+0xaa>
    2d60:	e0 91 69 19 	lds	r30, 0x1969	; 0x801969 <pxCurrentTCB>
    2d64:	f0 91 6a 19 	lds	r31, 0x196A	; 0x80196a <pxCurrentTCB+0x1>
    2d68:	e2 8d       	ldd	r30, Z+26	; 0x1a
    2d6a:	8b e0       	ldi	r24, 0x0B	; 11
    2d6c:	e8 9f       	mul	r30, r24
    2d6e:	f0 01       	movw	r30, r0
    2d70:	11 24       	eor	r1, r1
    2d72:	e3 5c       	subi	r30, 0xC3	; 195
    2d74:	f6 4e       	sbci	r31, 0xE6	; 230
    2d76:	80 81       	ld	r24, Z
    2d78:	82 30       	cpi	r24, 0x02	; 2
    2d7a:	48 f0       	brcs	.+18     	; 0x2d8e <xTaskIncrementTick+0x184>
    2d7c:	bb 24       	eor	r11, r11
    2d7e:	b3 94       	inc	r11
    2d80:	06 c0       	rjmp	.+12     	; 0x2d8e <xTaskIncrementTick+0x184>
    2d82:	80 91 f9 18 	lds	r24, 0x18F9	; 0x8018f9 <uxPendedTicks>
    2d86:	8f 5f       	subi	r24, 0xFF	; 255
    2d88:	80 93 f9 18 	sts	0x18F9, r24	; 0x8018f9 <uxPendedTicks>
    2d8c:	b1 2c       	mov	r11, r1
    2d8e:	80 91 f8 18 	lds	r24, 0x18F8	; 0x8018f8 <xYieldPending>
    2d92:	88 23       	and	r24, r24
    2d94:	11 f0       	breq	.+4      	; 0x2d9a <xTaskIncrementTick+0x190>
    2d96:	bb 24       	eor	r11, r11
    2d98:	b3 94       	inc	r11
    2d9a:	8b 2d       	mov	r24, r11
    2d9c:	df 91       	pop	r29
    2d9e:	cf 91       	pop	r28
    2da0:	1f 91       	pop	r17
    2da2:	0f 91       	pop	r16
    2da4:	ff 90       	pop	r15
    2da6:	ef 90       	pop	r14
    2da8:	df 90       	pop	r13
    2daa:	cf 90       	pop	r12
    2dac:	bf 90       	pop	r11
    2dae:	af 90       	pop	r10
    2db0:	9f 90       	pop	r9
    2db2:	08 95       	ret

00002db4 <xTaskResumeAll>:
    2db4:	cf 92       	push	r12
    2db6:	df 92       	push	r13
    2db8:	ef 92       	push	r14
    2dba:	ff 92       	push	r15
    2dbc:	0f 93       	push	r16
    2dbe:	1f 93       	push	r17
    2dc0:	cf 93       	push	r28
    2dc2:	df 93       	push	r29
    2dc4:	0f b6       	in	r0, 0x3f	; 63
    2dc6:	f8 94       	cli
    2dc8:	0f 92       	push	r0
    2dca:	80 91 ef 18 	lds	r24, 0x18EF	; 0x8018ef <uxSchedulerSuspended>
    2dce:	81 50       	subi	r24, 0x01	; 1
    2dd0:	80 93 ef 18 	sts	0x18EF, r24	; 0x8018ef <uxSchedulerSuspended>
    2dd4:	80 91 ef 18 	lds	r24, 0x18EF	; 0x8018ef <uxSchedulerSuspended>
    2dd8:	81 11       	cpse	r24, r1
    2dda:	5a c0       	rjmp	.+180    	; 0x2e90 <xTaskResumeAll+0xdc>
    2ddc:	80 91 00 19 	lds	r24, 0x1900	; 0x801900 <uxCurrentNumberOfTasks>
    2de0:	81 11       	cpse	r24, r1
    2de2:	2c c0       	rjmp	.+88     	; 0x2e3c <xTaskResumeAll+0x88>
    2de4:	58 c0       	rjmp	.+176    	; 0x2e96 <xTaskResumeAll+0xe2>
    2de6:	d7 01       	movw	r26, r14
    2de8:	17 96       	adiw	r26, 0x07	; 7
    2dea:	ed 91       	ld	r30, X+
    2dec:	fc 91       	ld	r31, X
    2dee:	18 97       	sbiw	r26, 0x08	; 8
    2df0:	c0 85       	ldd	r28, Z+8	; 0x08
    2df2:	d1 85       	ldd	r29, Z+9	; 0x09
    2df4:	ce 01       	movw	r24, r28
    2df6:	0e 96       	adiw	r24, 0x0e	; 14
    2df8:	0e 94 bf 0b 	call	0x177e	; 0x177e <uxListRemove>
    2dfc:	8e 01       	movw	r16, r28
    2dfe:	0e 5f       	subi	r16, 0xFE	; 254
    2e00:	1f 4f       	sbci	r17, 0xFF	; 255
    2e02:	c8 01       	movw	r24, r16
    2e04:	0e 94 bf 0b 	call	0x177e	; 0x177e <uxListRemove>
    2e08:	8a 8d       	ldd	r24, Y+26	; 0x1a
    2e0a:	90 91 fb 18 	lds	r25, 0x18FB	; 0x8018fb <uxTopReadyPriority>
    2e0e:	98 17       	cp	r25, r24
    2e10:	10 f4       	brcc	.+4      	; 0x2e16 <xTaskResumeAll+0x62>
    2e12:	80 93 fb 18 	sts	0x18FB, r24	; 0x8018fb <uxTopReadyPriority>
    2e16:	d8 9e       	mul	r13, r24
    2e18:	c0 01       	movw	r24, r0
    2e1a:	11 24       	eor	r1, r1
    2e1c:	b8 01       	movw	r22, r16
    2e1e:	83 5c       	subi	r24, 0xC3	; 195
    2e20:	96 4e       	sbci	r25, 0xE6	; 230
    2e22:	0e 94 61 0b 	call	0x16c2	; 0x16c2 <vListInsertEnd>
    2e26:	e0 91 69 19 	lds	r30, 0x1969	; 0x801969 <pxCurrentTCB>
    2e2a:	f0 91 6a 19 	lds	r31, 0x196A	; 0x80196a <pxCurrentTCB+0x1>
    2e2e:	9a 8d       	ldd	r25, Y+26	; 0x1a
    2e30:	82 8d       	ldd	r24, Z+26	; 0x1a
    2e32:	98 17       	cp	r25, r24
    2e34:	88 f0       	brcs	.+34     	; 0x2e58 <xTaskResumeAll+0xa4>
    2e36:	c0 92 f8 18 	sts	0x18F8, r12	; 0x8018f8 <xYieldPending>
    2e3a:	0e c0       	rjmp	.+28     	; 0x2e58 <xTaskResumeAll+0xa4>
    2e3c:	c0 e0       	ldi	r28, 0x00	; 0
    2e3e:	d0 e0       	ldi	r29, 0x00	; 0
    2e40:	0f 2e       	mov	r0, r31
    2e42:	f8 e1       	ldi	r31, 0x18	; 24
    2e44:	ef 2e       	mov	r14, r31
    2e46:	f9 e1       	ldi	r31, 0x19	; 25
    2e48:	ff 2e       	mov	r15, r31
    2e4a:	f0 2d       	mov	r31, r0
    2e4c:	0f 2e       	mov	r0, r31
    2e4e:	fb e0       	ldi	r31, 0x0B	; 11
    2e50:	df 2e       	mov	r13, r31
    2e52:	f0 2d       	mov	r31, r0
    2e54:	cc 24       	eor	r12, r12
    2e56:	c3 94       	inc	r12
    2e58:	f7 01       	movw	r30, r14
    2e5a:	80 81       	ld	r24, Z
    2e5c:	81 11       	cpse	r24, r1
    2e5e:	c3 cf       	rjmp	.-122    	; 0x2de6 <xTaskResumeAll+0x32>
    2e60:	cd 2b       	or	r28, r29
    2e62:	09 f0       	breq	.+2      	; 0x2e66 <xTaskResumeAll+0xb2>
    2e64:	c2 dc       	rcall	.-1660   	; 0x27ea <prvResetNextTaskUnblockTime>
    2e66:	c0 91 f9 18 	lds	r28, 0x18F9	; 0x8018f9 <uxPendedTicks>
    2e6a:	cc 23       	and	r28, r28
    2e6c:	49 f0       	breq	.+18     	; 0x2e80 <xTaskResumeAll+0xcc>
    2e6e:	d1 e0       	ldi	r29, 0x01	; 1
    2e70:	cc de       	rcall	.-616    	; 0x2c0a <xTaskIncrementTick>
    2e72:	81 11       	cpse	r24, r1
    2e74:	d0 93 f8 18 	sts	0x18F8, r29	; 0x8018f8 <xYieldPending>
    2e78:	c1 50       	subi	r28, 0x01	; 1
    2e7a:	d1 f7       	brne	.-12     	; 0x2e70 <xTaskResumeAll+0xbc>
    2e7c:	10 92 f9 18 	sts	0x18F9, r1	; 0x8018f9 <uxPendedTicks>
    2e80:	80 91 f8 18 	lds	r24, 0x18F8	; 0x8018f8 <xYieldPending>
    2e84:	88 23       	and	r24, r24
    2e86:	31 f0       	breq	.+12     	; 0x2e94 <xTaskResumeAll+0xe0>
    2e88:	0e 94 94 0c 	call	0x1928	; 0x1928 <vPortYield>
    2e8c:	81 e0       	ldi	r24, 0x01	; 1
    2e8e:	03 c0       	rjmp	.+6      	; 0x2e96 <xTaskResumeAll+0xe2>
    2e90:	80 e0       	ldi	r24, 0x00	; 0
    2e92:	01 c0       	rjmp	.+2      	; 0x2e96 <xTaskResumeAll+0xe2>
    2e94:	80 e0       	ldi	r24, 0x00	; 0
    2e96:	0f 90       	pop	r0
    2e98:	0f be       	out	0x3f, r0	; 63
    2e9a:	df 91       	pop	r29
    2e9c:	cf 91       	pop	r28
    2e9e:	1f 91       	pop	r17
    2ea0:	0f 91       	pop	r16
    2ea2:	ff 90       	pop	r15
    2ea4:	ef 90       	pop	r14
    2ea6:	df 90       	pop	r13
    2ea8:	cf 90       	pop	r12
    2eaa:	08 95       	ret

00002eac <vTaskDelay>:
    2eac:	cf 92       	push	r12
    2eae:	df 92       	push	r13
    2eb0:	ef 92       	push	r14
    2eb2:	ff 92       	push	r15
    2eb4:	6b 01       	movw	r12, r22
    2eb6:	7c 01       	movw	r14, r24
    2eb8:	67 2b       	or	r22, r23
    2eba:	68 2b       	or	r22, r24
    2ebc:	69 2b       	or	r22, r25
    2ebe:	41 f0       	breq	.+16     	; 0x2ed0 <vTaskDelay+0x24>
    2ec0:	90 de       	rcall	.-736    	; 0x2be2 <vTaskSuspendAll>
    2ec2:	40 e0       	ldi	r20, 0x00	; 0
    2ec4:	c7 01       	movw	r24, r14
    2ec6:	b6 01       	movw	r22, r12
    2ec8:	ba dc       	rcall	.-1676   	; 0x283e <prvAddCurrentTaskToDelayedList>
    2eca:	74 df       	rcall	.-280    	; 0x2db4 <xTaskResumeAll>
    2ecc:	81 11       	cpse	r24, r1
    2ece:	02 c0       	rjmp	.+4      	; 0x2ed4 <vTaskDelay+0x28>
    2ed0:	0e 94 94 0c 	call	0x1928	; 0x1928 <vPortYield>
    2ed4:	ff 90       	pop	r15
    2ed6:	ef 90       	pop	r14
    2ed8:	df 90       	pop	r13
    2eda:	cf 90       	pop	r12
    2edc:	08 95       	ret

00002ede <vTaskSwitchContext>:
    2ede:	80 91 ef 18 	lds	r24, 0x18EF	; 0x8018ef <uxSchedulerSuspended>
    2ee2:	88 23       	and	r24, r24
    2ee4:	21 f0       	breq	.+8      	; 0x2eee <vTaskSwitchContext+0x10>
    2ee6:	81 e0       	ldi	r24, 0x01	; 1
    2ee8:	80 93 f8 18 	sts	0x18F8, r24	; 0x8018f8 <xYieldPending>
    2eec:	08 95       	ret
    2eee:	10 92 f8 18 	sts	0x18F8, r1	; 0x8018f8 <xYieldPending>
    2ef2:	e0 91 69 19 	lds	r30, 0x1969	; 0x801969 <pxCurrentTCB>
    2ef6:	f0 91 6a 19 	lds	r31, 0x196A	; 0x80196a <pxCurrentTCB+0x1>
    2efa:	81 a5       	ldd	r24, Z+41	; 0x29
    2efc:	0e 94 a3 08 	call	0x1146	; 0x1146 <task_switch_out>
    2f00:	a0 91 69 19 	lds	r26, 0x1969	; 0x801969 <pxCurrentTCB>
    2f04:	b0 91 6a 19 	lds	r27, 0x196A	; 0x80196a <pxCurrentTCB+0x1>
    2f08:	e0 91 69 19 	lds	r30, 0x1969	; 0x801969 <pxCurrentTCB>
    2f0c:	f0 91 6a 19 	lds	r31, 0x196A	; 0x80196a <pxCurrentTCB+0x1>
    2f10:	2d 91       	ld	r18, X+
    2f12:	3c 91       	ld	r19, X
    2f14:	83 8d       	ldd	r24, Z+27	; 0x1b
    2f16:	94 8d       	ldd	r25, Z+28	; 0x1c
    2f18:	82 17       	cp	r24, r18
    2f1a:	93 07       	cpc	r25, r19
    2f1c:	58 f0       	brcs	.+22     	; 0x2f34 <vTaskSwitchContext+0x56>
    2f1e:	60 91 69 19 	lds	r22, 0x1969	; 0x801969 <pxCurrentTCB>
    2f22:	70 91 6a 19 	lds	r23, 0x196A	; 0x80196a <pxCurrentTCB+0x1>
    2f26:	80 91 69 19 	lds	r24, 0x1969	; 0x801969 <pxCurrentTCB>
    2f2a:	90 91 6a 19 	lds	r25, 0x196A	; 0x80196a <pxCurrentTCB+0x1>
    2f2e:	63 5e       	subi	r22, 0xE3	; 227
    2f30:	7f 4f       	sbci	r23, 0xFF	; 255
    2f32:	20 d6       	rcall	.+3136   	; 0x3b74 <vApplicationStackOverflowHook>
    2f34:	80 91 fb 18 	lds	r24, 0x18FB	; 0x8018fb <uxTopReadyPriority>
    2f38:	28 2f       	mov	r18, r24
    2f3a:	30 e0       	ldi	r19, 0x00	; 0
    2f3c:	9b e0       	ldi	r25, 0x0B	; 11
    2f3e:	89 9f       	mul	r24, r25
    2f40:	f0 01       	movw	r30, r0
    2f42:	11 24       	eor	r1, r1
    2f44:	e3 5c       	subi	r30, 0xC3	; 195
    2f46:	f6 4e       	sbci	r31, 0xE6	; 230
    2f48:	90 81       	ld	r25, Z
    2f4a:	91 11       	cpse	r25, r1
    2f4c:	0e c0       	rjmp	.+28     	; 0x2f6a <vTaskSwitchContext+0x8c>
    2f4e:	4b e0       	ldi	r20, 0x0B	; 11
    2f50:	81 50       	subi	r24, 0x01	; 1
    2f52:	28 2f       	mov	r18, r24
    2f54:	30 e0       	ldi	r19, 0x00	; 0
    2f56:	42 9f       	mul	r20, r18
    2f58:	f0 01       	movw	r30, r0
    2f5a:	43 9f       	mul	r20, r19
    2f5c:	f0 0d       	add	r31, r0
    2f5e:	11 24       	eor	r1, r1
    2f60:	e3 5c       	subi	r30, 0xC3	; 195
    2f62:	f6 4e       	sbci	r31, 0xE6	; 230
    2f64:	90 81       	ld	r25, Z
    2f66:	99 23       	and	r25, r25
    2f68:	99 f3       	breq	.-26     	; 0x2f50 <vTaskSwitchContext+0x72>
    2f6a:	9b e0       	ldi	r25, 0x0B	; 11
    2f6c:	92 9f       	mul	r25, r18
    2f6e:	a0 01       	movw	r20, r0
    2f70:	93 9f       	mul	r25, r19
    2f72:	50 0d       	add	r21, r0
    2f74:	11 24       	eor	r1, r1
    2f76:	da 01       	movw	r26, r20
    2f78:	a3 5c       	subi	r26, 0xC3	; 195
    2f7a:	b6 4e       	sbci	r27, 0xE6	; 230
    2f7c:	11 96       	adiw	r26, 0x01	; 1
    2f7e:	ed 91       	ld	r30, X+
    2f80:	fc 91       	ld	r31, X
    2f82:	12 97       	sbiw	r26, 0x02	; 2
    2f84:	04 80       	ldd	r0, Z+4	; 0x04
    2f86:	f5 81       	ldd	r31, Z+5	; 0x05
    2f88:	e0 2d       	mov	r30, r0
    2f8a:	12 96       	adiw	r26, 0x02	; 2
    2f8c:	fc 93       	st	X, r31
    2f8e:	ee 93       	st	-X, r30
    2f90:	11 97       	sbiw	r26, 0x01	; 1
    2f92:	40 5c       	subi	r20, 0xC0	; 192
    2f94:	56 4e       	sbci	r21, 0xE6	; 230
    2f96:	e4 17       	cp	r30, r20
    2f98:	f5 07       	cpc	r31, r21
    2f9a:	29 f4       	brne	.+10     	; 0x2fa6 <vTaskSwitchContext+0xc8>
    2f9c:	44 81       	ldd	r20, Z+4	; 0x04
    2f9e:	55 81       	ldd	r21, Z+5	; 0x05
    2fa0:	fd 01       	movw	r30, r26
    2fa2:	52 83       	std	Z+2, r21	; 0x02
    2fa4:	41 83       	std	Z+1, r20	; 0x01
    2fa6:	9b e0       	ldi	r25, 0x0B	; 11
    2fa8:	92 9f       	mul	r25, r18
    2faa:	f0 01       	movw	r30, r0
    2fac:	93 9f       	mul	r25, r19
    2fae:	f0 0d       	add	r31, r0
    2fb0:	11 24       	eor	r1, r1
    2fb2:	e3 5c       	subi	r30, 0xC3	; 195
    2fb4:	f6 4e       	sbci	r31, 0xE6	; 230
    2fb6:	01 80       	ldd	r0, Z+1	; 0x01
    2fb8:	f2 81       	ldd	r31, Z+2	; 0x02
    2fba:	e0 2d       	mov	r30, r0
    2fbc:	20 85       	ldd	r18, Z+8	; 0x08
    2fbe:	31 85       	ldd	r19, Z+9	; 0x09
    2fc0:	30 93 6a 19 	sts	0x196A, r19	; 0x80196a <pxCurrentTCB+0x1>
    2fc4:	20 93 69 19 	sts	0x1969, r18	; 0x801969 <pxCurrentTCB>
    2fc8:	80 93 fb 18 	sts	0x18FB, r24	; 0x8018fb <uxTopReadyPriority>
    2fcc:	e0 91 69 19 	lds	r30, 0x1969	; 0x801969 <pxCurrentTCB>
    2fd0:	f0 91 6a 19 	lds	r31, 0x196A	; 0x80196a <pxCurrentTCB+0x1>
    2fd4:	81 a5       	ldd	r24, Z+41	; 0x29
    2fd6:	0c 94 99 08 	jmp	0x1132	; 0x1132 <task_switch_in>
    2fda:	08 95       	ret

00002fdc <vTaskPlaceOnEventList>:
    2fdc:	cf 92       	push	r12
    2fde:	df 92       	push	r13
    2fe0:	ef 92       	push	r14
    2fe2:	ff 92       	push	r15
    2fe4:	6a 01       	movw	r12, r20
    2fe6:	7b 01       	movw	r14, r22
    2fe8:	60 91 69 19 	lds	r22, 0x1969	; 0x801969 <pxCurrentTCB>
    2fec:	70 91 6a 19 	lds	r23, 0x196A	; 0x80196a <pxCurrentTCB+0x1>
    2ff0:	62 5f       	subi	r22, 0xF2	; 242
    2ff2:	7f 4f       	sbci	r23, 0xFF	; 255
    2ff4:	0e 94 82 0b 	call	0x1704	; 0x1704 <vListInsert>
    2ff8:	41 e0       	ldi	r20, 0x01	; 1
    2ffa:	c7 01       	movw	r24, r14
    2ffc:	b6 01       	movw	r22, r12
    2ffe:	1f dc       	rcall	.-1986   	; 0x283e <prvAddCurrentTaskToDelayedList>
    3000:	ff 90       	pop	r15
    3002:	ef 90       	pop	r14
    3004:	df 90       	pop	r13
    3006:	cf 90       	pop	r12
    3008:	08 95       	ret

0000300a <vTaskPlaceOnUnorderedEventList>:
    300a:	cf 92       	push	r12
    300c:	df 92       	push	r13
    300e:	ef 92       	push	r14
    3010:	ff 92       	push	r15
    3012:	0f 93       	push	r16
    3014:	1f 93       	push	r17
    3016:	68 01       	movw	r12, r16
    3018:	79 01       	movw	r14, r18
    301a:	e0 91 69 19 	lds	r30, 0x1969	; 0x801969 <pxCurrentTCB>
    301e:	f0 91 6a 19 	lds	r31, 0x196A	; 0x80196a <pxCurrentTCB+0x1>
    3022:	70 68       	ori	r23, 0x80	; 128
    3024:	46 87       	std	Z+14, r20	; 0x0e
    3026:	57 87       	std	Z+15, r21	; 0x0f
    3028:	60 8b       	std	Z+16, r22	; 0x10
    302a:	71 8b       	std	Z+17, r23	; 0x11
    302c:	60 91 69 19 	lds	r22, 0x1969	; 0x801969 <pxCurrentTCB>
    3030:	70 91 6a 19 	lds	r23, 0x196A	; 0x80196a <pxCurrentTCB+0x1>
    3034:	62 5f       	subi	r22, 0xF2	; 242
    3036:	7f 4f       	sbci	r23, 0xFF	; 255
    3038:	0e 94 61 0b 	call	0x16c2	; 0x16c2 <vListInsertEnd>
    303c:	41 e0       	ldi	r20, 0x01	; 1
    303e:	c7 01       	movw	r24, r14
    3040:	b6 01       	movw	r22, r12
    3042:	fd db       	rcall	.-2054   	; 0x283e <prvAddCurrentTaskToDelayedList>
    3044:	1f 91       	pop	r17
    3046:	0f 91       	pop	r16
    3048:	ff 90       	pop	r15
    304a:	ef 90       	pop	r14
    304c:	df 90       	pop	r13
    304e:	cf 90       	pop	r12
    3050:	08 95       	ret

00003052 <vTaskPlaceOnEventListRestricted>:
    3052:	cf 92       	push	r12
    3054:	df 92       	push	r13
    3056:	ef 92       	push	r14
    3058:	ff 92       	push	r15
    305a:	cf 93       	push	r28
    305c:	6a 01       	movw	r12, r20
    305e:	7b 01       	movw	r14, r22
    3060:	c2 2f       	mov	r28, r18
    3062:	60 91 69 19 	lds	r22, 0x1969	; 0x801969 <pxCurrentTCB>
    3066:	70 91 6a 19 	lds	r23, 0x196A	; 0x80196a <pxCurrentTCB+0x1>
    306a:	62 5f       	subi	r22, 0xF2	; 242
    306c:	7f 4f       	sbci	r23, 0xFF	; 255
    306e:	0e 94 61 0b 	call	0x16c2	; 0x16c2 <vListInsertEnd>
    3072:	cc 23       	and	r28, r28
    3074:	21 f0       	breq	.+8      	; 0x307e <vTaskPlaceOnEventListRestricted+0x2c>
    3076:	cc 24       	eor	r12, r12
    3078:	ca 94       	dec	r12
    307a:	dc 2c       	mov	r13, r12
    307c:	76 01       	movw	r14, r12
    307e:	4c 2f       	mov	r20, r28
    3080:	c7 01       	movw	r24, r14
    3082:	b6 01       	movw	r22, r12
    3084:	dc db       	rcall	.-2120   	; 0x283e <prvAddCurrentTaskToDelayedList>
    3086:	cf 91       	pop	r28
    3088:	ff 90       	pop	r15
    308a:	ef 90       	pop	r14
    308c:	df 90       	pop	r13
    308e:	cf 90       	pop	r12
    3090:	08 95       	ret

00003092 <xTaskRemoveFromEventList>:
    3092:	0f 93       	push	r16
    3094:	1f 93       	push	r17
    3096:	cf 93       	push	r28
    3098:	df 93       	push	r29
    309a:	dc 01       	movw	r26, r24
    309c:	17 96       	adiw	r26, 0x07	; 7
    309e:	ed 91       	ld	r30, X+
    30a0:	fc 91       	ld	r31, X
    30a2:	18 97       	sbiw	r26, 0x08	; 8
    30a4:	c0 85       	ldd	r28, Z+8	; 0x08
    30a6:	d1 85       	ldd	r29, Z+9	; 0x09
    30a8:	8e 01       	movw	r16, r28
    30aa:	02 5f       	subi	r16, 0xF2	; 242
    30ac:	1f 4f       	sbci	r17, 0xFF	; 255
    30ae:	c8 01       	movw	r24, r16
    30b0:	0e 94 bf 0b 	call	0x177e	; 0x177e <uxListRemove>
    30b4:	80 91 ef 18 	lds	r24, 0x18EF	; 0x8018ef <uxSchedulerSuspended>
    30b8:	81 11       	cpse	r24, r1
    30ba:	16 c0       	rjmp	.+44     	; 0x30e8 <xTaskRemoveFromEventList+0x56>
    30bc:	0c 50       	subi	r16, 0x0C	; 12
    30be:	11 09       	sbc	r17, r1
    30c0:	c8 01       	movw	r24, r16
    30c2:	0e 94 bf 0b 	call	0x177e	; 0x177e <uxListRemove>
    30c6:	8a 8d       	ldd	r24, Y+26	; 0x1a
    30c8:	90 91 fb 18 	lds	r25, 0x18FB	; 0x8018fb <uxTopReadyPriority>
    30cc:	98 17       	cp	r25, r24
    30ce:	10 f4       	brcc	.+4      	; 0x30d4 <xTaskRemoveFromEventList+0x42>
    30d0:	80 93 fb 18 	sts	0x18FB, r24	; 0x8018fb <uxTopReadyPriority>
    30d4:	bb e0       	ldi	r27, 0x0B	; 11
    30d6:	8b 9f       	mul	r24, r27
    30d8:	c0 01       	movw	r24, r0
    30da:	11 24       	eor	r1, r1
    30dc:	b8 01       	movw	r22, r16
    30de:	83 5c       	subi	r24, 0xC3	; 195
    30e0:	96 4e       	sbci	r25, 0xE6	; 230
    30e2:	0e 94 61 0b 	call	0x16c2	; 0x16c2 <vListInsertEnd>
    30e6:	05 c0       	rjmp	.+10     	; 0x30f2 <xTaskRemoveFromEventList+0x60>
    30e8:	b8 01       	movw	r22, r16
    30ea:	88 e1       	ldi	r24, 0x18	; 24
    30ec:	99 e1       	ldi	r25, 0x19	; 25
    30ee:	0e 94 61 0b 	call	0x16c2	; 0x16c2 <vListInsertEnd>
    30f2:	e0 91 69 19 	lds	r30, 0x1969	; 0x801969 <pxCurrentTCB>
    30f6:	f0 91 6a 19 	lds	r31, 0x196A	; 0x80196a <pxCurrentTCB+0x1>
    30fa:	9a 8d       	ldd	r25, Y+26	; 0x1a
    30fc:	82 8d       	ldd	r24, Z+26	; 0x1a
    30fe:	89 17       	cp	r24, r25
    3100:	20 f4       	brcc	.+8      	; 0x310a <xTaskRemoveFromEventList+0x78>
    3102:	81 e0       	ldi	r24, 0x01	; 1
    3104:	80 93 f8 18 	sts	0x18F8, r24	; 0x8018f8 <xYieldPending>
    3108:	01 c0       	rjmp	.+2      	; 0x310c <xTaskRemoveFromEventList+0x7a>
    310a:	80 e0       	ldi	r24, 0x00	; 0
    310c:	df 91       	pop	r29
    310e:	cf 91       	pop	r28
    3110:	1f 91       	pop	r17
    3112:	0f 91       	pop	r16
    3114:	08 95       	ret

00003116 <vTaskRemoveFromUnorderedEventList>:
    3116:	0f 93       	push	r16
    3118:	1f 93       	push	r17
    311a:	cf 93       	push	r28
    311c:	df 93       	push	r29
    311e:	70 68       	ori	r23, 0x80	; 128
    3120:	fc 01       	movw	r30, r24
    3122:	40 83       	st	Z, r20
    3124:	51 83       	std	Z+1, r21	; 0x01
    3126:	62 83       	std	Z+2, r22	; 0x02
    3128:	73 83       	std	Z+3, r23	; 0x03
    312a:	c0 85       	ldd	r28, Z+8	; 0x08
    312c:	d1 85       	ldd	r29, Z+9	; 0x09
    312e:	0e 94 bf 0b 	call	0x177e	; 0x177e <uxListRemove>
    3132:	8e 01       	movw	r16, r28
    3134:	0e 5f       	subi	r16, 0xFE	; 254
    3136:	1f 4f       	sbci	r17, 0xFF	; 255
    3138:	c8 01       	movw	r24, r16
    313a:	0e 94 bf 0b 	call	0x177e	; 0x177e <uxListRemove>
    313e:	8a 8d       	ldd	r24, Y+26	; 0x1a
    3140:	90 91 fb 18 	lds	r25, 0x18FB	; 0x8018fb <uxTopReadyPriority>
    3144:	98 17       	cp	r25, r24
    3146:	10 f4       	brcc	.+4      	; 0x314c <vTaskRemoveFromUnorderedEventList+0x36>
    3148:	80 93 fb 18 	sts	0x18FB, r24	; 0x8018fb <uxTopReadyPriority>
    314c:	fb e0       	ldi	r31, 0x0B	; 11
    314e:	8f 9f       	mul	r24, r31
    3150:	c0 01       	movw	r24, r0
    3152:	11 24       	eor	r1, r1
    3154:	b8 01       	movw	r22, r16
    3156:	83 5c       	subi	r24, 0xC3	; 195
    3158:	96 4e       	sbci	r25, 0xE6	; 230
    315a:	0e 94 61 0b 	call	0x16c2	; 0x16c2 <vListInsertEnd>
    315e:	e0 91 69 19 	lds	r30, 0x1969	; 0x801969 <pxCurrentTCB>
    3162:	f0 91 6a 19 	lds	r31, 0x196A	; 0x80196a <pxCurrentTCB+0x1>
    3166:	9a 8d       	ldd	r25, Y+26	; 0x1a
    3168:	82 8d       	ldd	r24, Z+26	; 0x1a
    316a:	89 17       	cp	r24, r25
    316c:	18 f4       	brcc	.+6      	; 0x3174 <vTaskRemoveFromUnorderedEventList+0x5e>
    316e:	81 e0       	ldi	r24, 0x01	; 1
    3170:	80 93 f8 18 	sts	0x18F8, r24	; 0x8018f8 <xYieldPending>
    3174:	df 91       	pop	r29
    3176:	cf 91       	pop	r28
    3178:	1f 91       	pop	r17
    317a:	0f 91       	pop	r16
    317c:	08 95       	ret

0000317e <vTaskSetTimeOutState>:
    317e:	0f b6       	in	r0, 0x3f	; 63
    3180:	f8 94       	cli
    3182:	0f 92       	push	r0
    3184:	20 91 f7 18 	lds	r18, 0x18F7	; 0x8018f7 <xNumOfOverflows>
    3188:	fc 01       	movw	r30, r24
    318a:	20 83       	st	Z, r18
    318c:	40 91 fc 18 	lds	r20, 0x18FC	; 0x8018fc <xTickCount>
    3190:	50 91 fd 18 	lds	r21, 0x18FD	; 0x8018fd <xTickCount+0x1>
    3194:	60 91 fe 18 	lds	r22, 0x18FE	; 0x8018fe <xTickCount+0x2>
    3198:	70 91 ff 18 	lds	r23, 0x18FF	; 0x8018ff <xTickCount+0x3>
    319c:	41 83       	std	Z+1, r20	; 0x01
    319e:	52 83       	std	Z+2, r21	; 0x02
    31a0:	63 83       	std	Z+3, r22	; 0x03
    31a2:	74 83       	std	Z+4, r23	; 0x04
    31a4:	0f 90       	pop	r0
    31a6:	0f be       	out	0x3f, r0	; 63
    31a8:	08 95       	ret

000031aa <vTaskInternalSetTimeOutState>:
    31aa:	20 91 f7 18 	lds	r18, 0x18F7	; 0x8018f7 <xNumOfOverflows>
    31ae:	fc 01       	movw	r30, r24
    31b0:	20 83       	st	Z, r18
    31b2:	40 91 fc 18 	lds	r20, 0x18FC	; 0x8018fc <xTickCount>
    31b6:	50 91 fd 18 	lds	r21, 0x18FD	; 0x8018fd <xTickCount+0x1>
    31ba:	60 91 fe 18 	lds	r22, 0x18FE	; 0x8018fe <xTickCount+0x2>
    31be:	70 91 ff 18 	lds	r23, 0x18FF	; 0x8018ff <xTickCount+0x3>
    31c2:	41 83       	std	Z+1, r20	; 0x01
    31c4:	52 83       	std	Z+2, r21	; 0x02
    31c6:	63 83       	std	Z+3, r22	; 0x03
    31c8:	74 83       	std	Z+4, r23	; 0x04
    31ca:	08 95       	ret

000031cc <xTaskCheckForTimeOut>:
    31cc:	cf 92       	push	r12
    31ce:	df 92       	push	r13
    31d0:	ef 92       	push	r14
    31d2:	ff 92       	push	r15
    31d4:	0f 93       	push	r16
    31d6:	1f 93       	push	r17
    31d8:	cf 93       	push	r28
    31da:	df 93       	push	r29
    31dc:	fb 01       	movw	r30, r22
    31de:	0f b6       	in	r0, 0x3f	; 63
    31e0:	f8 94       	cli
    31e2:	0f 92       	push	r0
    31e4:	40 91 fc 18 	lds	r20, 0x18FC	; 0x8018fc <xTickCount>
    31e8:	50 91 fd 18 	lds	r21, 0x18FD	; 0x8018fd <xTickCount+0x1>
    31ec:	60 91 fe 18 	lds	r22, 0x18FE	; 0x8018fe <xTickCount+0x2>
    31f0:	70 91 ff 18 	lds	r23, 0x18FF	; 0x8018ff <xTickCount+0x3>
    31f4:	00 81       	ld	r16, Z
    31f6:	11 81       	ldd	r17, Z+1	; 0x01
    31f8:	22 81       	ldd	r18, Z+2	; 0x02
    31fa:	33 81       	ldd	r19, Z+3	; 0x03
    31fc:	0f 3f       	cpi	r16, 0xFF	; 255
    31fe:	af ef       	ldi	r26, 0xFF	; 255
    3200:	1a 07       	cpc	r17, r26
    3202:	2a 07       	cpc	r18, r26
    3204:	3a 07       	cpc	r19, r26
    3206:	49 f1       	breq	.+82     	; 0x325a <xTaskCheckForTimeOut+0x8e>
    3208:	ec 01       	movw	r28, r24
    320a:	c9 80       	ldd	r12, Y+1	; 0x01
    320c:	da 80       	ldd	r13, Y+2	; 0x02
    320e:	eb 80       	ldd	r14, Y+3	; 0x03
    3210:	fc 80       	ldd	r15, Y+4	; 0x04
    3212:	a0 91 f7 18 	lds	r26, 0x18F7	; 0x8018f7 <xNumOfOverflows>
    3216:	b8 81       	ld	r27, Y
    3218:	ba 17       	cp	r27, r26
    321a:	29 f0       	breq	.+10     	; 0x3226 <xTaskCheckForTimeOut+0x5a>
    321c:	4c 15       	cp	r20, r12
    321e:	5d 05       	cpc	r21, r13
    3220:	6e 05       	cpc	r22, r14
    3222:	7f 05       	cpc	r23, r15
    3224:	e0 f4       	brcc	.+56     	; 0x325e <xTaskCheckForTimeOut+0x92>
    3226:	4c 19       	sub	r20, r12
    3228:	5d 09       	sbc	r21, r13
    322a:	6e 09       	sbc	r22, r14
    322c:	7f 09       	sbc	r23, r15
    322e:	40 17       	cp	r20, r16
    3230:	51 07       	cpc	r21, r17
    3232:	62 07       	cpc	r22, r18
    3234:	73 07       	cpc	r23, r19
    3236:	58 f4       	brcc	.+22     	; 0x324e <xTaskCheckForTimeOut+0x82>
    3238:	04 1b       	sub	r16, r20
    323a:	15 0b       	sbc	r17, r21
    323c:	26 0b       	sbc	r18, r22
    323e:	37 0b       	sbc	r19, r23
    3240:	00 83       	st	Z, r16
    3242:	11 83       	std	Z+1, r17	; 0x01
    3244:	22 83       	std	Z+2, r18	; 0x02
    3246:	33 83       	std	Z+3, r19	; 0x03
    3248:	b0 df       	rcall	.-160    	; 0x31aa <vTaskInternalSetTimeOutState>
    324a:	80 e0       	ldi	r24, 0x00	; 0
    324c:	09 c0       	rjmp	.+18     	; 0x3260 <xTaskCheckForTimeOut+0x94>
    324e:	10 82       	st	Z, r1
    3250:	11 82       	std	Z+1, r1	; 0x01
    3252:	12 82       	std	Z+2, r1	; 0x02
    3254:	13 82       	std	Z+3, r1	; 0x03
    3256:	81 e0       	ldi	r24, 0x01	; 1
    3258:	03 c0       	rjmp	.+6      	; 0x3260 <xTaskCheckForTimeOut+0x94>
    325a:	80 e0       	ldi	r24, 0x00	; 0
    325c:	01 c0       	rjmp	.+2      	; 0x3260 <xTaskCheckForTimeOut+0x94>
    325e:	81 e0       	ldi	r24, 0x01	; 1
    3260:	0f 90       	pop	r0
    3262:	0f be       	out	0x3f, r0	; 63
    3264:	df 91       	pop	r29
    3266:	cf 91       	pop	r28
    3268:	1f 91       	pop	r17
    326a:	0f 91       	pop	r16
    326c:	ff 90       	pop	r15
    326e:	ef 90       	pop	r14
    3270:	df 90       	pop	r13
    3272:	cf 90       	pop	r12
    3274:	08 95       	ret

00003276 <vTaskMissedYield>:
    3276:	81 e0       	ldi	r24, 0x01	; 1
    3278:	80 93 f8 18 	sts	0x18F8, r24	; 0x8018f8 <xYieldPending>
    327c:	08 95       	ret

0000327e <xTaskGetCurrentTaskHandle>:
    327e:	80 91 69 19 	lds	r24, 0x1969	; 0x801969 <pxCurrentTCB>
    3282:	90 91 6a 19 	lds	r25, 0x196A	; 0x80196a <pxCurrentTCB+0x1>
    3286:	08 95       	ret

00003288 <xTaskGetSchedulerState>:
    3288:	80 91 fa 18 	lds	r24, 0x18FA	; 0x8018fa <xSchedulerRunning>
    328c:	88 23       	and	r24, r24
    328e:	31 f0       	breq	.+12     	; 0x329c <xTaskGetSchedulerState+0x14>
    3290:	80 91 ef 18 	lds	r24, 0x18EF	; 0x8018ef <uxSchedulerSuspended>
    3294:	88 23       	and	r24, r24
    3296:	21 f0       	breq	.+8      	; 0x32a0 <xTaskGetSchedulerState+0x18>
    3298:	80 e0       	ldi	r24, 0x00	; 0
    329a:	08 95       	ret
    329c:	81 e0       	ldi	r24, 0x01	; 1
    329e:	08 95       	ret
    32a0:	82 e0       	ldi	r24, 0x02	; 2
    32a2:	08 95       	ret

000032a4 <xTaskPriorityInherit>:
    32a4:	0f 93       	push	r16
    32a6:	1f 93       	push	r17
    32a8:	cf 93       	push	r28
    32aa:	df 93       	push	r29
    32ac:	fc 01       	movw	r30, r24
    32ae:	89 2b       	or	r24, r25
    32b0:	09 f4       	brne	.+2      	; 0x32b4 <xTaskPriorityInherit+0x10>
    32b2:	60 c0       	rjmp	.+192    	; 0x3374 <xTaskPriorityInherit+0xd0>
    32b4:	82 8d       	ldd	r24, Z+26	; 0x1a
    32b6:	a0 91 69 19 	lds	r26, 0x1969	; 0x801969 <pxCurrentTCB>
    32ba:	b0 91 6a 19 	lds	r27, 0x196A	; 0x80196a <pxCurrentTCB+0x1>
    32be:	5a 96       	adiw	r26, 0x1a	; 26
    32c0:	9c 91       	ld	r25, X
    32c2:	89 17       	cp	r24, r25
    32c4:	08 f0       	brcs	.+2      	; 0x32c8 <xTaskPriorityInherit+0x24>
    32c6:	4a c0       	rjmp	.+148    	; 0x335c <xTaskPriorityInherit+0xb8>
    32c8:	46 85       	ldd	r20, Z+14	; 0x0e
    32ca:	57 85       	ldd	r21, Z+15	; 0x0f
    32cc:	60 89       	ldd	r22, Z+16	; 0x10
    32ce:	71 89       	ldd	r23, Z+17	; 0x11
    32d0:	77 23       	and	r23, r23
    32d2:	94 f0       	brlt	.+36     	; 0x32f8 <xTaskPriorityInherit+0x54>
    32d4:	a0 91 69 19 	lds	r26, 0x1969	; 0x801969 <pxCurrentTCB>
    32d8:	b0 91 6a 19 	lds	r27, 0x196A	; 0x80196a <pxCurrentTCB+0x1>
    32dc:	5a 96       	adiw	r26, 0x1a	; 26
    32de:	9c 91       	ld	r25, X
    32e0:	44 e0       	ldi	r20, 0x04	; 4
    32e2:	50 e0       	ldi	r21, 0x00	; 0
    32e4:	60 e0       	ldi	r22, 0x00	; 0
    32e6:	70 e0       	ldi	r23, 0x00	; 0
    32e8:	49 1b       	sub	r20, r25
    32ea:	51 09       	sbc	r21, r1
    32ec:	61 09       	sbc	r22, r1
    32ee:	71 09       	sbc	r23, r1
    32f0:	46 87       	std	Z+14, r20	; 0x0e
    32f2:	57 87       	std	Z+15, r21	; 0x0f
    32f4:	60 8b       	std	Z+16, r22	; 0x10
    32f6:	71 8b       	std	Z+17, r23	; 0x11
    32f8:	2b e0       	ldi	r18, 0x0B	; 11
    32fa:	82 9f       	mul	r24, r18
    32fc:	c0 01       	movw	r24, r0
    32fe:	11 24       	eor	r1, r1
    3300:	83 5c       	subi	r24, 0xC3	; 195
    3302:	96 4e       	sbci	r25, 0xE6	; 230
    3304:	24 85       	ldd	r18, Z+12	; 0x0c
    3306:	35 85       	ldd	r19, Z+13	; 0x0d
    3308:	28 17       	cp	r18, r24
    330a:	39 07       	cpc	r19, r25
    330c:	f1 f4       	brne	.+60     	; 0x334a <xTaskPriorityInherit+0xa6>
    330e:	8f 01       	movw	r16, r30
    3310:	ef 01       	movw	r28, r30
    3312:	22 96       	adiw	r28, 0x02	; 2
    3314:	ce 01       	movw	r24, r28
    3316:	0e 94 bf 0b 	call	0x177e	; 0x177e <uxListRemove>
    331a:	e0 91 69 19 	lds	r30, 0x1969	; 0x801969 <pxCurrentTCB>
    331e:	f0 91 6a 19 	lds	r31, 0x196A	; 0x80196a <pxCurrentTCB+0x1>
    3322:	82 8d       	ldd	r24, Z+26	; 0x1a
    3324:	f8 01       	movw	r30, r16
    3326:	82 8f       	std	Z+26, r24	; 0x1a
    3328:	90 91 fb 18 	lds	r25, 0x18FB	; 0x8018fb <uxTopReadyPriority>
    332c:	98 17       	cp	r25, r24
    332e:	10 f4       	brcc	.+4      	; 0x3334 <xTaskPriorityInherit+0x90>
    3330:	80 93 fb 18 	sts	0x18FB, r24	; 0x8018fb <uxTopReadyPriority>
    3334:	fb e0       	ldi	r31, 0x0B	; 11
    3336:	8f 9f       	mul	r24, r31
    3338:	c0 01       	movw	r24, r0
    333a:	11 24       	eor	r1, r1
    333c:	be 01       	movw	r22, r28
    333e:	83 5c       	subi	r24, 0xC3	; 195
    3340:	96 4e       	sbci	r25, 0xE6	; 230
    3342:	0e 94 61 0b 	call	0x16c2	; 0x16c2 <vListInsertEnd>
    3346:	81 e0       	ldi	r24, 0x01	; 1
    3348:	16 c0       	rjmp	.+44     	; 0x3376 <xTaskPriorityInherit+0xd2>
    334a:	a0 91 69 19 	lds	r26, 0x1969	; 0x801969 <pxCurrentTCB>
    334e:	b0 91 6a 19 	lds	r27, 0x196A	; 0x80196a <pxCurrentTCB+0x1>
    3352:	5a 96       	adiw	r26, 0x1a	; 26
    3354:	8c 91       	ld	r24, X
    3356:	82 8f       	std	Z+26, r24	; 0x1a
    3358:	81 e0       	ldi	r24, 0x01	; 1
    335a:	0d c0       	rjmp	.+26     	; 0x3376 <xTaskPriorityInherit+0xd2>
    335c:	a0 91 69 19 	lds	r26, 0x1969	; 0x801969 <pxCurrentTCB>
    3360:	b0 91 6a 19 	lds	r27, 0x196A	; 0x80196a <pxCurrentTCB+0x1>
    3364:	81 e0       	ldi	r24, 0x01	; 1
    3366:	27 a1       	ldd	r18, Z+39	; 0x27
    3368:	5a 96       	adiw	r26, 0x1a	; 26
    336a:	9c 91       	ld	r25, X
    336c:	29 17       	cp	r18, r25
    336e:	18 f0       	brcs	.+6      	; 0x3376 <xTaskPriorityInherit+0xd2>
    3370:	80 e0       	ldi	r24, 0x00	; 0
    3372:	01 c0       	rjmp	.+2      	; 0x3376 <xTaskPriorityInherit+0xd2>
    3374:	80 e0       	ldi	r24, 0x00	; 0
    3376:	df 91       	pop	r29
    3378:	cf 91       	pop	r28
    337a:	1f 91       	pop	r17
    337c:	0f 91       	pop	r16
    337e:	08 95       	ret

00003380 <xTaskPriorityDisinherit>:
    3380:	0f 93       	push	r16
    3382:	1f 93       	push	r17
    3384:	cf 93       	push	r28
    3386:	df 93       	push	r29
    3388:	fc 01       	movw	r30, r24
    338a:	89 2b       	or	r24, r25
    338c:	79 f1       	breq	.+94     	; 0x33ec <xTaskPriorityDisinherit+0x6c>
    338e:	80 a5       	ldd	r24, Z+40	; 0x28
    3390:	81 50       	subi	r24, 0x01	; 1
    3392:	80 a7       	std	Z+40, r24	; 0x28
    3394:	22 8d       	ldd	r18, Z+26	; 0x1a
    3396:	97 a1       	ldd	r25, Z+39	; 0x27
    3398:	29 17       	cp	r18, r25
    339a:	51 f1       	breq	.+84     	; 0x33f0 <xTaskPriorityDisinherit+0x70>
    339c:	81 11       	cpse	r24, r1
    339e:	2a c0       	rjmp	.+84     	; 0x33f4 <xTaskPriorityDisinherit+0x74>
    33a0:	ef 01       	movw	r28, r30
    33a2:	8f 01       	movw	r16, r30
    33a4:	0e 5f       	subi	r16, 0xFE	; 254
    33a6:	1f 4f       	sbci	r17, 0xFF	; 255
    33a8:	c8 01       	movw	r24, r16
    33aa:	0e 94 bf 0b 	call	0x177e	; 0x177e <uxListRemove>
    33ae:	8f a1       	ldd	r24, Y+39	; 0x27
    33b0:	8a 8f       	std	Y+26, r24	; 0x1a
    33b2:	44 e0       	ldi	r20, 0x04	; 4
    33b4:	50 e0       	ldi	r21, 0x00	; 0
    33b6:	60 e0       	ldi	r22, 0x00	; 0
    33b8:	70 e0       	ldi	r23, 0x00	; 0
    33ba:	48 1b       	sub	r20, r24
    33bc:	51 09       	sbc	r21, r1
    33be:	61 09       	sbc	r22, r1
    33c0:	71 09       	sbc	r23, r1
    33c2:	4e 87       	std	Y+14, r20	; 0x0e
    33c4:	5f 87       	std	Y+15, r21	; 0x0f
    33c6:	68 8b       	std	Y+16, r22	; 0x10
    33c8:	79 8b       	std	Y+17, r23	; 0x11
    33ca:	90 91 fb 18 	lds	r25, 0x18FB	; 0x8018fb <uxTopReadyPriority>
    33ce:	98 17       	cp	r25, r24
    33d0:	10 f4       	brcc	.+4      	; 0x33d6 <xTaskPriorityDisinherit+0x56>
    33d2:	80 93 fb 18 	sts	0x18FB, r24	; 0x8018fb <uxTopReadyPriority>
    33d6:	2b e0       	ldi	r18, 0x0B	; 11
    33d8:	82 9f       	mul	r24, r18
    33da:	c0 01       	movw	r24, r0
    33dc:	11 24       	eor	r1, r1
    33de:	b8 01       	movw	r22, r16
    33e0:	83 5c       	subi	r24, 0xC3	; 195
    33e2:	96 4e       	sbci	r25, 0xE6	; 230
    33e4:	0e 94 61 0b 	call	0x16c2	; 0x16c2 <vListInsertEnd>
    33e8:	81 e0       	ldi	r24, 0x01	; 1
    33ea:	05 c0       	rjmp	.+10     	; 0x33f6 <xTaskPriorityDisinherit+0x76>
    33ec:	80 e0       	ldi	r24, 0x00	; 0
    33ee:	03 c0       	rjmp	.+6      	; 0x33f6 <xTaskPriorityDisinherit+0x76>
    33f0:	80 e0       	ldi	r24, 0x00	; 0
    33f2:	01 c0       	rjmp	.+2      	; 0x33f6 <xTaskPriorityDisinherit+0x76>
    33f4:	80 e0       	ldi	r24, 0x00	; 0
    33f6:	df 91       	pop	r29
    33f8:	cf 91       	pop	r28
    33fa:	1f 91       	pop	r17
    33fc:	0f 91       	pop	r16
    33fe:	08 95       	ret

00003400 <vTaskPriorityDisinheritAfterTimeout>:
    3400:	0f 93       	push	r16
    3402:	1f 93       	push	r17
    3404:	cf 93       	push	r28
    3406:	df 93       	push	r29
    3408:	fc 01       	movw	r30, r24
    340a:	89 2b       	or	r24, r25
    340c:	09 f4       	brne	.+2      	; 0x3410 <vTaskPriorityDisinheritAfterTimeout+0x10>
    340e:	3f c0       	rjmp	.+126    	; 0x348e <vTaskPriorityDisinheritAfterTimeout+0x8e>
    3410:	87 a1       	ldd	r24, Z+39	; 0x27
    3412:	86 17       	cp	r24, r22
    3414:	08 f4       	brcc	.+2      	; 0x3418 <vTaskPriorityDisinheritAfterTimeout+0x18>
    3416:	86 2f       	mov	r24, r22
    3418:	92 8d       	ldd	r25, Z+26	; 0x1a
    341a:	98 17       	cp	r25, r24
    341c:	c1 f1       	breq	.+112    	; 0x348e <vTaskPriorityDisinheritAfterTimeout+0x8e>
    341e:	20 a5       	ldd	r18, Z+40	; 0x28
    3420:	21 30       	cpi	r18, 0x01	; 1
    3422:	a9 f5       	brne	.+106    	; 0x348e <vTaskPriorityDisinheritAfterTimeout+0x8e>
    3424:	82 8f       	std	Z+26, r24	; 0x1a
    3426:	46 85       	ldd	r20, Z+14	; 0x0e
    3428:	57 85       	ldd	r21, Z+15	; 0x0f
    342a:	60 89       	ldd	r22, Z+16	; 0x10
    342c:	71 89       	ldd	r23, Z+17	; 0x11
    342e:	77 23       	and	r23, r23
    3430:	64 f0       	brlt	.+24     	; 0x344a <vTaskPriorityDisinheritAfterTimeout+0x4a>
    3432:	44 e0       	ldi	r20, 0x04	; 4
    3434:	50 e0       	ldi	r21, 0x00	; 0
    3436:	60 e0       	ldi	r22, 0x00	; 0
    3438:	70 e0       	ldi	r23, 0x00	; 0
    343a:	48 1b       	sub	r20, r24
    343c:	51 09       	sbc	r21, r1
    343e:	61 09       	sbc	r22, r1
    3440:	71 09       	sbc	r23, r1
    3442:	46 87       	std	Z+14, r20	; 0x0e
    3444:	57 87       	std	Z+15, r21	; 0x0f
    3446:	60 8b       	std	Z+16, r22	; 0x10
    3448:	71 8b       	std	Z+17, r23	; 0x11
    344a:	2b e0       	ldi	r18, 0x0B	; 11
    344c:	92 9f       	mul	r25, r18
    344e:	c0 01       	movw	r24, r0
    3450:	11 24       	eor	r1, r1
    3452:	83 5c       	subi	r24, 0xC3	; 195
    3454:	96 4e       	sbci	r25, 0xE6	; 230
    3456:	24 85       	ldd	r18, Z+12	; 0x0c
    3458:	35 85       	ldd	r19, Z+13	; 0x0d
    345a:	28 17       	cp	r18, r24
    345c:	39 07       	cpc	r19, r25
    345e:	b9 f4       	brne	.+46     	; 0x348e <vTaskPriorityDisinheritAfterTimeout+0x8e>
    3460:	ef 01       	movw	r28, r30
    3462:	8f 01       	movw	r16, r30
    3464:	0e 5f       	subi	r16, 0xFE	; 254
    3466:	1f 4f       	sbci	r17, 0xFF	; 255
    3468:	c8 01       	movw	r24, r16
    346a:	0e 94 bf 0b 	call	0x177e	; 0x177e <uxListRemove>
    346e:	8a 8d       	ldd	r24, Y+26	; 0x1a
    3470:	90 91 fb 18 	lds	r25, 0x18FB	; 0x8018fb <uxTopReadyPriority>
    3474:	98 17       	cp	r25, r24
    3476:	10 f4       	brcc	.+4      	; 0x347c <vTaskPriorityDisinheritAfterTimeout+0x7c>
    3478:	80 93 fb 18 	sts	0x18FB, r24	; 0x8018fb <uxTopReadyPriority>
    347c:	2b e0       	ldi	r18, 0x0B	; 11
    347e:	82 9f       	mul	r24, r18
    3480:	c0 01       	movw	r24, r0
    3482:	11 24       	eor	r1, r1
    3484:	b8 01       	movw	r22, r16
    3486:	83 5c       	subi	r24, 0xC3	; 195
    3488:	96 4e       	sbci	r25, 0xE6	; 230
    348a:	0e 94 61 0b 	call	0x16c2	; 0x16c2 <vListInsertEnd>
    348e:	df 91       	pop	r29
    3490:	cf 91       	pop	r28
    3492:	1f 91       	pop	r17
    3494:	0f 91       	pop	r16
    3496:	08 95       	ret

00003498 <uxTaskResetEventItemValue>:
    3498:	cf 92       	push	r12
    349a:	df 92       	push	r13
    349c:	ef 92       	push	r14
    349e:	ff 92       	push	r15
    34a0:	e0 91 69 19 	lds	r30, 0x1969	; 0x801969 <pxCurrentTCB>
    34a4:	f0 91 6a 19 	lds	r31, 0x196A	; 0x80196a <pxCurrentTCB+0x1>
    34a8:	66 85       	ldd	r22, Z+14	; 0x0e
    34aa:	77 85       	ldd	r23, Z+15	; 0x0f
    34ac:	80 89       	ldd	r24, Z+16	; 0x10
    34ae:	91 89       	ldd	r25, Z+17	; 0x11
    34b0:	e0 91 69 19 	lds	r30, 0x1969	; 0x801969 <pxCurrentTCB>
    34b4:	f0 91 6a 19 	lds	r31, 0x196A	; 0x80196a <pxCurrentTCB+0x1>
    34b8:	a0 91 69 19 	lds	r26, 0x1969	; 0x801969 <pxCurrentTCB>
    34bc:	b0 91 6a 19 	lds	r27, 0x196A	; 0x80196a <pxCurrentTCB+0x1>
    34c0:	5a 96       	adiw	r26, 0x1a	; 26
    34c2:	2c 91       	ld	r18, X
    34c4:	c1 2c       	mov	r12, r1
    34c6:	d1 2c       	mov	r13, r1
    34c8:	76 01       	movw	r14, r12
    34ca:	68 94       	set
    34cc:	c2 f8       	bld	r12, 2
    34ce:	c2 1a       	sub	r12, r18
    34d0:	d1 08       	sbc	r13, r1
    34d2:	e1 08       	sbc	r14, r1
    34d4:	f1 08       	sbc	r15, r1
    34d6:	c6 86       	std	Z+14, r12	; 0x0e
    34d8:	d7 86       	std	Z+15, r13	; 0x0f
    34da:	e0 8a       	std	Z+16, r14	; 0x10
    34dc:	f1 8a       	std	Z+17, r15	; 0x11
    34de:	ff 90       	pop	r15
    34e0:	ef 90       	pop	r14
    34e2:	df 90       	pop	r13
    34e4:	cf 90       	pop	r12
    34e6:	08 95       	ret

000034e8 <pvTaskIncrementMutexHeldCount>:
    34e8:	80 91 69 19 	lds	r24, 0x1969	; 0x801969 <pxCurrentTCB>
    34ec:	90 91 6a 19 	lds	r25, 0x196A	; 0x80196a <pxCurrentTCB+0x1>
    34f0:	89 2b       	or	r24, r25
    34f2:	39 f0       	breq	.+14     	; 0x3502 <pvTaskIncrementMutexHeldCount+0x1a>
    34f4:	e0 91 69 19 	lds	r30, 0x1969	; 0x801969 <pxCurrentTCB>
    34f8:	f0 91 6a 19 	lds	r31, 0x196A	; 0x80196a <pxCurrentTCB+0x1>
    34fc:	80 a5       	ldd	r24, Z+40	; 0x28
    34fe:	8f 5f       	subi	r24, 0xFF	; 255
    3500:	80 a7       	std	Z+40, r24	; 0x28
    3502:	80 91 69 19 	lds	r24, 0x1969	; 0x801969 <pxCurrentTCB>
    3506:	90 91 6a 19 	lds	r25, 0x196A	; 0x80196a <pxCurrentTCB+0x1>
    350a:	08 95       	ret

0000350c <xTaskNotifyWait>:
    350c:	4f 92       	push	r4
    350e:	5f 92       	push	r5
    3510:	6f 92       	push	r6
    3512:	7f 92       	push	r7
    3514:	8f 92       	push	r8
    3516:	9f 92       	push	r9
    3518:	af 92       	push	r10
    351a:	bf 92       	push	r11
    351c:	cf 92       	push	r12
    351e:	df 92       	push	r13
    3520:	ef 92       	push	r14
    3522:	ff 92       	push	r15
    3524:	0f 93       	push	r16
    3526:	1f 93       	push	r17
    3528:	49 01       	movw	r8, r18
    352a:	5a 01       	movw	r10, r20
    352c:	0f b6       	in	r0, 0x3f	; 63
    352e:	f8 94       	cli
    3530:	0f 92       	push	r0
    3532:	e0 91 69 19 	lds	r30, 0x1969	; 0x801969 <pxCurrentTCB>
    3536:	f0 91 6a 19 	lds	r31, 0x196A	; 0x80196a <pxCurrentTCB+0x1>
    353a:	27 a5       	ldd	r18, Z+47	; 0x2f
    353c:	22 30       	cpi	r18, 0x02	; 2
    353e:	39 f1       	breq	.+78     	; 0x358e <xTaskNotifyWait+0x82>
    3540:	e0 91 69 19 	lds	r30, 0x1969	; 0x801969 <pxCurrentTCB>
    3544:	f0 91 6a 19 	lds	r31, 0x196A	; 0x80196a <pxCurrentTCB+0x1>
    3548:	43 a4       	ldd	r4, Z+43	; 0x2b
    354a:	54 a4       	ldd	r5, Z+44	; 0x2c
    354c:	65 a4       	ldd	r6, Z+45	; 0x2d
    354e:	76 a4       	ldd	r7, Z+46	; 0x2e
    3550:	dc 01       	movw	r26, r24
    3552:	cb 01       	movw	r24, r22
    3554:	80 95       	com	r24
    3556:	90 95       	com	r25
    3558:	a0 95       	com	r26
    355a:	b0 95       	com	r27
    355c:	84 21       	and	r24, r4
    355e:	95 21       	and	r25, r5
    3560:	a6 21       	and	r26, r6
    3562:	b7 21       	and	r27, r7
    3564:	83 a7       	std	Z+43, r24	; 0x2b
    3566:	94 a7       	std	Z+44, r25	; 0x2c
    3568:	a5 a7       	std	Z+45, r26	; 0x2d
    356a:	b6 a7       	std	Z+46, r27	; 0x2e
    356c:	e0 91 69 19 	lds	r30, 0x1969	; 0x801969 <pxCurrentTCB>
    3570:	f0 91 6a 19 	lds	r31, 0x196A	; 0x80196a <pxCurrentTCB+0x1>
    3574:	81 e0       	ldi	r24, 0x01	; 1
    3576:	87 a7       	std	Z+47, r24	; 0x2f
    3578:	c1 14       	cp	r12, r1
    357a:	d1 04       	cpc	r13, r1
    357c:	e1 04       	cpc	r14, r1
    357e:	f1 04       	cpc	r15, r1
    3580:	31 f0       	breq	.+12     	; 0x358e <xTaskNotifyWait+0x82>
    3582:	41 e0       	ldi	r20, 0x01	; 1
    3584:	c7 01       	movw	r24, r14
    3586:	b6 01       	movw	r22, r12
    3588:	5a d9       	rcall	.-3404   	; 0x283e <prvAddCurrentTaskToDelayedList>
    358a:	0e 94 94 0c 	call	0x1928	; 0x1928 <vPortYield>
    358e:	0f 90       	pop	r0
    3590:	0f be       	out	0x3f, r0	; 63
    3592:	0f b6       	in	r0, 0x3f	; 63
    3594:	f8 94       	cli
    3596:	0f 92       	push	r0
    3598:	01 15       	cp	r16, r1
    359a:	11 05       	cpc	r17, r1
    359c:	69 f0       	breq	.+26     	; 0x35b8 <xTaskNotifyWait+0xac>
    359e:	e0 91 69 19 	lds	r30, 0x1969	; 0x801969 <pxCurrentTCB>
    35a2:	f0 91 6a 19 	lds	r31, 0x196A	; 0x80196a <pxCurrentTCB+0x1>
    35a6:	83 a5       	ldd	r24, Z+43	; 0x2b
    35a8:	94 a5       	ldd	r25, Z+44	; 0x2c
    35aa:	a5 a5       	ldd	r26, Z+45	; 0x2d
    35ac:	b6 a5       	ldd	r27, Z+46	; 0x2e
    35ae:	f8 01       	movw	r30, r16
    35b0:	80 83       	st	Z, r24
    35b2:	91 83       	std	Z+1, r25	; 0x01
    35b4:	a2 83       	std	Z+2, r26	; 0x02
    35b6:	b3 83       	std	Z+3, r27	; 0x03
    35b8:	e0 91 69 19 	lds	r30, 0x1969	; 0x801969 <pxCurrentTCB>
    35bc:	f0 91 6a 19 	lds	r31, 0x196A	; 0x80196a <pxCurrentTCB+0x1>
    35c0:	87 a5       	ldd	r24, Z+47	; 0x2f
    35c2:	82 30       	cpi	r24, 0x02	; 2
    35c4:	b1 f4       	brne	.+44     	; 0x35f2 <xTaskNotifyWait+0xe6>
    35c6:	e0 91 69 19 	lds	r30, 0x1969	; 0x801969 <pxCurrentTCB>
    35ca:	f0 91 6a 19 	lds	r31, 0x196A	; 0x80196a <pxCurrentTCB+0x1>
    35ce:	83 a5       	ldd	r24, Z+43	; 0x2b
    35d0:	94 a5       	ldd	r25, Z+44	; 0x2c
    35d2:	a5 a5       	ldd	r26, Z+45	; 0x2d
    35d4:	b6 a5       	ldd	r27, Z+46	; 0x2e
    35d6:	80 94       	com	r8
    35d8:	90 94       	com	r9
    35da:	a0 94       	com	r10
    35dc:	b0 94       	com	r11
    35de:	88 22       	and	r8, r24
    35e0:	99 22       	and	r9, r25
    35e2:	aa 22       	and	r10, r26
    35e4:	bb 22       	and	r11, r27
    35e6:	83 a6       	std	Z+43, r8	; 0x2b
    35e8:	94 a6       	std	Z+44, r9	; 0x2c
    35ea:	a5 a6       	std	Z+45, r10	; 0x2d
    35ec:	b6 a6       	std	Z+46, r11	; 0x2e
    35ee:	81 e0       	ldi	r24, 0x01	; 1
    35f0:	01 c0       	rjmp	.+2      	; 0x35f4 <xTaskNotifyWait+0xe8>
    35f2:	80 e0       	ldi	r24, 0x00	; 0
    35f4:	e0 91 69 19 	lds	r30, 0x1969	; 0x801969 <pxCurrentTCB>
    35f8:	f0 91 6a 19 	lds	r31, 0x196A	; 0x80196a <pxCurrentTCB+0x1>
    35fc:	17 a6       	std	Z+47, r1	; 0x2f
    35fe:	0f 90       	pop	r0
    3600:	0f be       	out	0x3f, r0	; 63
    3602:	1f 91       	pop	r17
    3604:	0f 91       	pop	r16
    3606:	ff 90       	pop	r15
    3608:	ef 90       	pop	r14
    360a:	df 90       	pop	r13
    360c:	cf 90       	pop	r12
    360e:	bf 90       	pop	r11
    3610:	af 90       	pop	r10
    3612:	9f 90       	pop	r9
    3614:	8f 90       	pop	r8
    3616:	7f 90       	pop	r7
    3618:	6f 90       	pop	r6
    361a:	5f 90       	pop	r5
    361c:	4f 90       	pop	r4
    361e:	08 95       	ret

00003620 <xTaskGenericNotify>:
    3620:	0f 93       	push	r16
    3622:	1f 93       	push	r17
    3624:	cf 93       	push	r28
    3626:	df 93       	push	r29
    3628:	fc 01       	movw	r30, r24
    362a:	0f b6       	in	r0, 0x3f	; 63
    362c:	f8 94       	cli
    362e:	0f 92       	push	r0
    3630:	01 15       	cp	r16, r1
    3632:	11 05       	cpc	r17, r1
    3634:	49 f0       	breq	.+18     	; 0x3648 <xTaskGenericNotify+0x28>
    3636:	83 a5       	ldd	r24, Z+43	; 0x2b
    3638:	94 a5       	ldd	r25, Z+44	; 0x2c
    363a:	a5 a5       	ldd	r26, Z+45	; 0x2d
    363c:	b6 a5       	ldd	r27, Z+46	; 0x2e
    363e:	e8 01       	movw	r28, r16
    3640:	88 83       	st	Y, r24
    3642:	99 83       	std	Y+1, r25	; 0x01
    3644:	aa 83       	std	Y+2, r26	; 0x02
    3646:	bb 83       	std	Y+3, r27	; 0x03
    3648:	87 a5       	ldd	r24, Z+47	; 0x2f
    364a:	92 e0       	ldi	r25, 0x02	; 2
    364c:	97 a7       	std	Z+47, r25	; 0x2f
    364e:	22 30       	cpi	r18, 0x02	; 2
    3650:	b1 f0       	breq	.+44     	; 0x367e <xTaskGenericNotify+0x5e>
    3652:	18 f4       	brcc	.+6      	; 0x365a <xTaskGenericNotify+0x3a>
    3654:	21 30       	cpi	r18, 0x01	; 1
    3656:	31 f0       	breq	.+12     	; 0x3664 <xTaskGenericNotify+0x44>
    3658:	2a c0       	rjmp	.+84     	; 0x36ae <xTaskGenericNotify+0x8e>
    365a:	23 30       	cpi	r18, 0x03	; 3
    365c:	e9 f0       	breq	.+58     	; 0x3698 <xTaskGenericNotify+0x78>
    365e:	24 30       	cpi	r18, 0x04	; 4
    3660:	01 f1       	breq	.+64     	; 0x36a2 <xTaskGenericNotify+0x82>
    3662:	25 c0       	rjmp	.+74     	; 0x36ae <xTaskGenericNotify+0x8e>
    3664:	03 a5       	ldd	r16, Z+43	; 0x2b
    3666:	14 a5       	ldd	r17, Z+44	; 0x2c
    3668:	25 a5       	ldd	r18, Z+45	; 0x2d
    366a:	36 a5       	ldd	r19, Z+46	; 0x2e
    366c:	40 2b       	or	r20, r16
    366e:	51 2b       	or	r21, r17
    3670:	62 2b       	or	r22, r18
    3672:	73 2b       	or	r23, r19
    3674:	43 a7       	std	Z+43, r20	; 0x2b
    3676:	54 a7       	std	Z+44, r21	; 0x2c
    3678:	65 a7       	std	Z+45, r22	; 0x2d
    367a:	76 a7       	std	Z+46, r23	; 0x2e
    367c:	18 c0       	rjmp	.+48     	; 0x36ae <xTaskGenericNotify+0x8e>
    367e:	43 a5       	ldd	r20, Z+43	; 0x2b
    3680:	54 a5       	ldd	r21, Z+44	; 0x2c
    3682:	65 a5       	ldd	r22, Z+45	; 0x2d
    3684:	76 a5       	ldd	r23, Z+46	; 0x2e
    3686:	4f 5f       	subi	r20, 0xFF	; 255
    3688:	5f 4f       	sbci	r21, 0xFF	; 255
    368a:	6f 4f       	sbci	r22, 0xFF	; 255
    368c:	7f 4f       	sbci	r23, 0xFF	; 255
    368e:	43 a7       	std	Z+43, r20	; 0x2b
    3690:	54 a7       	std	Z+44, r21	; 0x2c
    3692:	65 a7       	std	Z+45, r22	; 0x2d
    3694:	76 a7       	std	Z+46, r23	; 0x2e
    3696:	0b c0       	rjmp	.+22     	; 0x36ae <xTaskGenericNotify+0x8e>
    3698:	43 a7       	std	Z+43, r20	; 0x2b
    369a:	54 a7       	std	Z+44, r21	; 0x2c
    369c:	65 a7       	std	Z+45, r22	; 0x2d
    369e:	76 a7       	std	Z+46, r23	; 0x2e
    36a0:	06 c0       	rjmp	.+12     	; 0x36ae <xTaskGenericNotify+0x8e>
    36a2:	82 30       	cpi	r24, 0x02	; 2
    36a4:	49 f1       	breq	.+82     	; 0x36f8 <xTaskGenericNotify+0xd8>
    36a6:	43 a7       	std	Z+43, r20	; 0x2b
    36a8:	54 a7       	std	Z+44, r21	; 0x2c
    36aa:	65 a7       	std	Z+45, r22	; 0x2d
    36ac:	76 a7       	std	Z+46, r23	; 0x2e
    36ae:	81 30       	cpi	r24, 0x01	; 1
    36b0:	29 f5       	brne	.+74     	; 0x36fc <xTaskGenericNotify+0xdc>
    36b2:	ef 01       	movw	r28, r30
    36b4:	8f 01       	movw	r16, r30
    36b6:	0e 5f       	subi	r16, 0xFE	; 254
    36b8:	1f 4f       	sbci	r17, 0xFF	; 255
    36ba:	c8 01       	movw	r24, r16
    36bc:	0e 94 bf 0b 	call	0x177e	; 0x177e <uxListRemove>
    36c0:	8a 8d       	ldd	r24, Y+26	; 0x1a
    36c2:	90 91 fb 18 	lds	r25, 0x18FB	; 0x8018fb <uxTopReadyPriority>
    36c6:	98 17       	cp	r25, r24
    36c8:	10 f4       	brcc	.+4      	; 0x36ce <xTaskGenericNotify+0xae>
    36ca:	80 93 fb 18 	sts	0x18FB, r24	; 0x8018fb <uxTopReadyPriority>
    36ce:	2b e0       	ldi	r18, 0x0B	; 11
    36d0:	82 9f       	mul	r24, r18
    36d2:	c0 01       	movw	r24, r0
    36d4:	11 24       	eor	r1, r1
    36d6:	b8 01       	movw	r22, r16
    36d8:	83 5c       	subi	r24, 0xC3	; 195
    36da:	96 4e       	sbci	r25, 0xE6	; 230
    36dc:	0e 94 61 0b 	call	0x16c2	; 0x16c2 <vListInsertEnd>
    36e0:	e0 91 69 19 	lds	r30, 0x1969	; 0x801969 <pxCurrentTCB>
    36e4:	f0 91 6a 19 	lds	r31, 0x196A	; 0x80196a <pxCurrentTCB+0x1>
    36e8:	9a 8d       	ldd	r25, Y+26	; 0x1a
    36ea:	82 8d       	ldd	r24, Z+26	; 0x1a
    36ec:	89 17       	cp	r24, r25
    36ee:	40 f4       	brcc	.+16     	; 0x3700 <xTaskGenericNotify+0xe0>
    36f0:	0e 94 94 0c 	call	0x1928	; 0x1928 <vPortYield>
    36f4:	81 e0       	ldi	r24, 0x01	; 1
    36f6:	05 c0       	rjmp	.+10     	; 0x3702 <xTaskGenericNotify+0xe2>
    36f8:	80 e0       	ldi	r24, 0x00	; 0
    36fa:	03 c0       	rjmp	.+6      	; 0x3702 <xTaskGenericNotify+0xe2>
    36fc:	81 e0       	ldi	r24, 0x01	; 1
    36fe:	01 c0       	rjmp	.+2      	; 0x3702 <xTaskGenericNotify+0xe2>
    3700:	81 e0       	ldi	r24, 0x01	; 1
    3702:	0f 90       	pop	r0
    3704:	0f be       	out	0x3f, r0	; 63
    3706:	df 91       	pop	r29
    3708:	cf 91       	pop	r28
    370a:	1f 91       	pop	r17
    370c:	0f 91       	pop	r16
    370e:	08 95       	ret

00003710 <xTaskGenericNotifyFromISR>:
    3710:	ef 92       	push	r14
    3712:	ff 92       	push	r15
    3714:	0f 93       	push	r16
    3716:	1f 93       	push	r17
    3718:	cf 93       	push	r28
    371a:	df 93       	push	r29
    371c:	fc 01       	movw	r30, r24
    371e:	01 15       	cp	r16, r1
    3720:	11 05       	cpc	r17, r1
    3722:	49 f0       	breq	.+18     	; 0x3736 <xTaskGenericNotifyFromISR+0x26>
    3724:	83 a5       	ldd	r24, Z+43	; 0x2b
    3726:	94 a5       	ldd	r25, Z+44	; 0x2c
    3728:	a5 a5       	ldd	r26, Z+45	; 0x2d
    372a:	b6 a5       	ldd	r27, Z+46	; 0x2e
    372c:	e8 01       	movw	r28, r16
    372e:	88 83       	st	Y, r24
    3730:	99 83       	std	Y+1, r25	; 0x01
    3732:	aa 83       	std	Y+2, r26	; 0x02
    3734:	bb 83       	std	Y+3, r27	; 0x03
    3736:	87 a5       	ldd	r24, Z+47	; 0x2f
    3738:	92 e0       	ldi	r25, 0x02	; 2
    373a:	97 a7       	std	Z+47, r25	; 0x2f
    373c:	22 30       	cpi	r18, 0x02	; 2
    373e:	b1 f0       	breq	.+44     	; 0x376c <xTaskGenericNotifyFromISR+0x5c>
    3740:	18 f4       	brcc	.+6      	; 0x3748 <xTaskGenericNotifyFromISR+0x38>
    3742:	21 30       	cpi	r18, 0x01	; 1
    3744:	31 f0       	breq	.+12     	; 0x3752 <xTaskGenericNotifyFromISR+0x42>
    3746:	2a c0       	rjmp	.+84     	; 0x379c <xTaskGenericNotifyFromISR+0x8c>
    3748:	23 30       	cpi	r18, 0x03	; 3
    374a:	e9 f0       	breq	.+58     	; 0x3786 <xTaskGenericNotifyFromISR+0x76>
    374c:	24 30       	cpi	r18, 0x04	; 4
    374e:	01 f1       	breq	.+64     	; 0x3790 <xTaskGenericNotifyFromISR+0x80>
    3750:	25 c0       	rjmp	.+74     	; 0x379c <xTaskGenericNotifyFromISR+0x8c>
    3752:	03 a5       	ldd	r16, Z+43	; 0x2b
    3754:	14 a5       	ldd	r17, Z+44	; 0x2c
    3756:	25 a5       	ldd	r18, Z+45	; 0x2d
    3758:	36 a5       	ldd	r19, Z+46	; 0x2e
    375a:	40 2b       	or	r20, r16
    375c:	51 2b       	or	r21, r17
    375e:	62 2b       	or	r22, r18
    3760:	73 2b       	or	r23, r19
    3762:	43 a7       	std	Z+43, r20	; 0x2b
    3764:	54 a7       	std	Z+44, r21	; 0x2c
    3766:	65 a7       	std	Z+45, r22	; 0x2d
    3768:	76 a7       	std	Z+46, r23	; 0x2e
    376a:	18 c0       	rjmp	.+48     	; 0x379c <xTaskGenericNotifyFromISR+0x8c>
    376c:	43 a5       	ldd	r20, Z+43	; 0x2b
    376e:	54 a5       	ldd	r21, Z+44	; 0x2c
    3770:	65 a5       	ldd	r22, Z+45	; 0x2d
    3772:	76 a5       	ldd	r23, Z+46	; 0x2e
    3774:	4f 5f       	subi	r20, 0xFF	; 255
    3776:	5f 4f       	sbci	r21, 0xFF	; 255
    3778:	6f 4f       	sbci	r22, 0xFF	; 255
    377a:	7f 4f       	sbci	r23, 0xFF	; 255
    377c:	43 a7       	std	Z+43, r20	; 0x2b
    377e:	54 a7       	std	Z+44, r21	; 0x2c
    3780:	65 a7       	std	Z+45, r22	; 0x2d
    3782:	76 a7       	std	Z+46, r23	; 0x2e
    3784:	0b c0       	rjmp	.+22     	; 0x379c <xTaskGenericNotifyFromISR+0x8c>
    3786:	43 a7       	std	Z+43, r20	; 0x2b
    3788:	54 a7       	std	Z+44, r21	; 0x2c
    378a:	65 a7       	std	Z+45, r22	; 0x2d
    378c:	76 a7       	std	Z+46, r23	; 0x2e
    378e:	06 c0       	rjmp	.+12     	; 0x379c <xTaskGenericNotifyFromISR+0x8c>
    3790:	82 30       	cpi	r24, 0x02	; 2
    3792:	d9 f1       	breq	.+118    	; 0x380a <xTaskGenericNotifyFromISR+0xfa>
    3794:	43 a7       	std	Z+43, r20	; 0x2b
    3796:	54 a7       	std	Z+44, r21	; 0x2c
    3798:	65 a7       	std	Z+45, r22	; 0x2d
    379a:	76 a7       	std	Z+46, r23	; 0x2e
    379c:	81 30       	cpi	r24, 0x01	; 1
    379e:	b9 f5       	brne	.+110    	; 0x380e <xTaskGenericNotifyFromISR+0xfe>
    37a0:	ef 01       	movw	r28, r30
    37a2:	80 91 ef 18 	lds	r24, 0x18EF	; 0x8018ef <uxSchedulerSuspended>
    37a6:	81 11       	cpse	r24, r1
    37a8:	17 c0       	rjmp	.+46     	; 0x37d8 <xTaskGenericNotifyFromISR+0xc8>
    37aa:	8f 01       	movw	r16, r30
    37ac:	0e 5f       	subi	r16, 0xFE	; 254
    37ae:	1f 4f       	sbci	r17, 0xFF	; 255
    37b0:	c8 01       	movw	r24, r16
    37b2:	0e 94 bf 0b 	call	0x177e	; 0x177e <uxListRemove>
    37b6:	8a 8d       	ldd	r24, Y+26	; 0x1a
    37b8:	90 91 fb 18 	lds	r25, 0x18FB	; 0x8018fb <uxTopReadyPriority>
    37bc:	98 17       	cp	r25, r24
    37be:	10 f4       	brcc	.+4      	; 0x37c4 <xTaskGenericNotifyFromISR+0xb4>
    37c0:	80 93 fb 18 	sts	0x18FB, r24	; 0x8018fb <uxTopReadyPriority>
    37c4:	eb e0       	ldi	r30, 0x0B	; 11
    37c6:	8e 9f       	mul	r24, r30
    37c8:	c0 01       	movw	r24, r0
    37ca:	11 24       	eor	r1, r1
    37cc:	b8 01       	movw	r22, r16
    37ce:	83 5c       	subi	r24, 0xC3	; 195
    37d0:	96 4e       	sbci	r25, 0xE6	; 230
    37d2:	0e 94 61 0b 	call	0x16c2	; 0x16c2 <vListInsertEnd>
    37d6:	07 c0       	rjmp	.+14     	; 0x37e6 <xTaskGenericNotifyFromISR+0xd6>
    37d8:	bf 01       	movw	r22, r30
    37da:	62 5f       	subi	r22, 0xF2	; 242
    37dc:	7f 4f       	sbci	r23, 0xFF	; 255
    37de:	88 e1       	ldi	r24, 0x18	; 24
    37e0:	99 e1       	ldi	r25, 0x19	; 25
    37e2:	0e 94 61 0b 	call	0x16c2	; 0x16c2 <vListInsertEnd>
    37e6:	e0 91 69 19 	lds	r30, 0x1969	; 0x801969 <pxCurrentTCB>
    37ea:	f0 91 6a 19 	lds	r31, 0x196A	; 0x80196a <pxCurrentTCB+0x1>
    37ee:	9a 8d       	ldd	r25, Y+26	; 0x1a
    37f0:	82 8d       	ldd	r24, Z+26	; 0x1a
    37f2:	89 17       	cp	r24, r25
    37f4:	70 f4       	brcc	.+28     	; 0x3812 <xTaskGenericNotifyFromISR+0x102>
    37f6:	e1 14       	cp	r14, r1
    37f8:	f1 04       	cpc	r15, r1
    37fa:	19 f0       	breq	.+6      	; 0x3802 <xTaskGenericNotifyFromISR+0xf2>
    37fc:	81 e0       	ldi	r24, 0x01	; 1
    37fe:	e7 01       	movw	r28, r14
    3800:	88 83       	st	Y, r24
    3802:	81 e0       	ldi	r24, 0x01	; 1
    3804:	80 93 f8 18 	sts	0x18F8, r24	; 0x8018f8 <xYieldPending>
    3808:	05 c0       	rjmp	.+10     	; 0x3814 <xTaskGenericNotifyFromISR+0x104>
    380a:	80 e0       	ldi	r24, 0x00	; 0
    380c:	03 c0       	rjmp	.+6      	; 0x3814 <xTaskGenericNotifyFromISR+0x104>
    380e:	81 e0       	ldi	r24, 0x01	; 1
    3810:	01 c0       	rjmp	.+2      	; 0x3814 <xTaskGenericNotifyFromISR+0x104>
    3812:	81 e0       	ldi	r24, 0x01	; 1
    3814:	df 91       	pop	r29
    3816:	cf 91       	pop	r28
    3818:	1f 91       	pop	r17
    381a:	0f 91       	pop	r16
    381c:	ff 90       	pop	r15
    381e:	ef 90       	pop	r14
    3820:	08 95       	ret

00003822 <xTaskNotifyStateClear>:
    3822:	00 97       	sbiw	r24, 0x00	; 0
    3824:	21 f4       	brne	.+8      	; 0x382e <xTaskNotifyStateClear+0xc>
    3826:	80 91 69 19 	lds	r24, 0x1969	; 0x801969 <pxCurrentTCB>
    382a:	90 91 6a 19 	lds	r25, 0x196A	; 0x80196a <pxCurrentTCB+0x1>
    382e:	0f b6       	in	r0, 0x3f	; 63
    3830:	f8 94       	cli
    3832:	0f 92       	push	r0
    3834:	fc 01       	movw	r30, r24
    3836:	27 a5       	ldd	r18, Z+47	; 0x2f
    3838:	22 30       	cpi	r18, 0x02	; 2
    383a:	19 f4       	brne	.+6      	; 0x3842 <xTaskNotifyStateClear+0x20>
    383c:	17 a6       	std	Z+47, r1	; 0x2f
    383e:	81 e0       	ldi	r24, 0x01	; 1
    3840:	01 c0       	rjmp	.+2      	; 0x3844 <xTaskNotifyStateClear+0x22>
    3842:	80 e0       	ldi	r24, 0x00	; 0
    3844:	0f 90       	pop	r0
    3846:	0f be       	out	0x3f, r0	; 63
    3848:	08 95       	ret

0000384a <prvInsertTimerInActiveList>:
    384a:	cf 92       	push	r12
    384c:	df 92       	push	r13
    384e:	ef 92       	push	r14
    3850:	ff 92       	push	r15
    3852:	0f 93       	push	r16
    3854:	1f 93       	push	r17
    3856:	fc 01       	movw	r30, r24
    3858:	42 83       	std	Z+2, r20	; 0x02
    385a:	53 83       	std	Z+3, r21	; 0x03
    385c:	64 83       	std	Z+4, r22	; 0x04
    385e:	75 83       	std	Z+5, r23	; 0x05
    3860:	93 87       	std	Z+11, r25	; 0x0b
    3862:	82 87       	std	Z+10, r24	; 0x0a
    3864:	04 17       	cp	r16, r20
    3866:	15 07       	cpc	r17, r21
    3868:	26 07       	cpc	r18, r22
    386a:	37 07       	cpc	r19, r23
    386c:	c0 f0       	brcs	.+48     	; 0x389e <prvInsertTimerInActiveList+0x54>
    386e:	0c 19       	sub	r16, r12
    3870:	1d 09       	sbc	r17, r13
    3872:	2e 09       	sbc	r18, r14
    3874:	3f 09       	sbc	r19, r15
    3876:	86 85       	ldd	r24, Z+14	; 0x0e
    3878:	97 85       	ldd	r25, Z+15	; 0x0f
    387a:	a0 89       	ldd	r26, Z+16	; 0x10
    387c:	b1 89       	ldd	r27, Z+17	; 0x11
    387e:	08 17       	cp	r16, r24
    3880:	19 07       	cpc	r17, r25
    3882:	2a 07       	cpc	r18, r26
    3884:	3b 07       	cpc	r19, r27
    3886:	00 f5       	brcc	.+64     	; 0x38c8 <prvInsertTimerInActiveList+0x7e>
    3888:	bf 01       	movw	r22, r30
    388a:	6e 5f       	subi	r22, 0xFE	; 254
    388c:	7f 4f       	sbci	r23, 0xFF	; 255
    388e:	80 91 73 19 	lds	r24, 0x1973	; 0x801973 <pxOverflowTimerList>
    3892:	90 91 74 19 	lds	r25, 0x1974	; 0x801974 <pxOverflowTimerList+0x1>
    3896:	0e 94 82 0b 	call	0x1704	; 0x1704 <vListInsert>
    389a:	80 e0       	ldi	r24, 0x00	; 0
    389c:	18 c0       	rjmp	.+48     	; 0x38ce <prvInsertTimerInActiveList+0x84>
    389e:	0c 15       	cp	r16, r12
    38a0:	1d 05       	cpc	r17, r13
    38a2:	2e 05       	cpc	r18, r14
    38a4:	3f 05       	cpc	r19, r15
    38a6:	28 f4       	brcc	.+10     	; 0x38b2 <prvInsertTimerInActiveList+0x68>
    38a8:	4c 15       	cp	r20, r12
    38aa:	5d 05       	cpc	r21, r13
    38ac:	6e 05       	cpc	r22, r14
    38ae:	7f 05       	cpc	r23, r15
    38b0:	68 f4       	brcc	.+26     	; 0x38cc <prvInsertTimerInActiveList+0x82>
    38b2:	bf 01       	movw	r22, r30
    38b4:	6e 5f       	subi	r22, 0xFE	; 254
    38b6:	7f 4f       	sbci	r23, 0xFF	; 255
    38b8:	80 91 75 19 	lds	r24, 0x1975	; 0x801975 <pxCurrentTimerList>
    38bc:	90 91 76 19 	lds	r25, 0x1976	; 0x801976 <pxCurrentTimerList+0x1>
    38c0:	0e 94 82 0b 	call	0x1704	; 0x1704 <vListInsert>
    38c4:	80 e0       	ldi	r24, 0x00	; 0
    38c6:	03 c0       	rjmp	.+6      	; 0x38ce <prvInsertTimerInActiveList+0x84>
    38c8:	81 e0       	ldi	r24, 0x01	; 1
    38ca:	01 c0       	rjmp	.+2      	; 0x38ce <prvInsertTimerInActiveList+0x84>
    38cc:	81 e0       	ldi	r24, 0x01	; 1
    38ce:	1f 91       	pop	r17
    38d0:	0f 91       	pop	r16
    38d2:	ff 90       	pop	r15
    38d4:	ef 90       	pop	r14
    38d6:	df 90       	pop	r13
    38d8:	cf 90       	pop	r12
    38da:	08 95       	ret

000038dc <prvCheckForValidListAndQueue>:
    38dc:	0f b6       	in	r0, 0x3f	; 63
    38de:	f8 94       	cli
    38e0:	0f 92       	push	r0
    38e2:	80 91 71 19 	lds	r24, 0x1971	; 0x801971 <xTimerQueue>
    38e6:	90 91 72 19 	lds	r25, 0x1972	; 0x801972 <xTimerQueue+0x1>
    38ea:	89 2b       	or	r24, r25
    38ec:	e9 f4       	brne	.+58     	; 0x3928 <prvCheckForValidListAndQueue+0x4c>
    38ee:	82 e8       	ldi	r24, 0x82	; 130
    38f0:	99 e1       	ldi	r25, 0x19	; 25
    38f2:	0e 94 4c 0b 	call	0x1698	; 0x1698 <vListInitialise>
    38f6:	87 e7       	ldi	r24, 0x77	; 119
    38f8:	99 e1       	ldi	r25, 0x19	; 25
    38fa:	0e 94 4c 0b 	call	0x1698	; 0x1698 <vListInitialise>
    38fe:	82 e8       	ldi	r24, 0x82	; 130
    3900:	99 e1       	ldi	r25, 0x19	; 25
    3902:	90 93 76 19 	sts	0x1976, r25	; 0x801976 <pxCurrentTimerList+0x1>
    3906:	80 93 75 19 	sts	0x1975, r24	; 0x801975 <pxCurrentTimerList>
    390a:	87 e7       	ldi	r24, 0x77	; 119
    390c:	99 e1       	ldi	r25, 0x19	; 25
    390e:	90 93 74 19 	sts	0x1974, r25	; 0x801974 <pxOverflowTimerList+0x1>
    3912:	80 93 73 19 	sts	0x1973, r24	; 0x801973 <pxOverflowTimerList>
    3916:	40 e0       	ldi	r20, 0x00	; 0
    3918:	67 e0       	ldi	r22, 0x07	; 7
    391a:	8a e0       	ldi	r24, 0x0A	; 10
    391c:	0e 94 70 0e 	call	0x1ce0	; 0x1ce0 <xQueueGenericCreate>
    3920:	90 93 72 19 	sts	0x1972, r25	; 0x801972 <xTimerQueue+0x1>
    3924:	80 93 71 19 	sts	0x1971, r24	; 0x801971 <xTimerQueue>
    3928:	0f 90       	pop	r0
    392a:	0f be       	out	0x3f, r0	; 63
    392c:	08 95       	ret

0000392e <xTimerCreateTimerTask>:
    392e:	ef 92       	push	r14
    3930:	ff 92       	push	r15
    3932:	0f 93       	push	r16
    3934:	d3 df       	rcall	.-90     	; 0x38dc <prvCheckForValidListAndQueue>
    3936:	80 91 71 19 	lds	r24, 0x1971	; 0x801971 <xTimerQueue>
    393a:	90 91 72 19 	lds	r25, 0x1972	; 0x801972 <xTimerQueue+0x1>
    393e:	89 2b       	or	r24, r25
    3940:	91 f0       	breq	.+36     	; 0x3966 <xTimerCreateTimerTask+0x38>
    3942:	0f 2e       	mov	r0, r31
    3944:	ff e6       	ldi	r31, 0x6F	; 111
    3946:	ef 2e       	mov	r14, r31
    3948:	f9 e1       	ldi	r31, 0x19	; 25
    394a:	ff 2e       	mov	r15, r31
    394c:	f0 2d       	mov	r31, r0
    394e:	03 e0       	ldi	r16, 0x03	; 3
    3950:	20 e0       	ldi	r18, 0x00	; 0
    3952:	30 e0       	ldi	r19, 0x00	; 0
    3954:	45 e5       	ldi	r20, 0x55	; 85
    3956:	50 e0       	ldi	r21, 0x00	; 0
    3958:	64 e8       	ldi	r22, 0x84	; 132
    395a:	75 e0       	ldi	r23, 0x05	; 5
    395c:	87 e0       	ldi	r24, 0x07	; 7
    395e:	91 e0       	ldi	r25, 0x01	; 1
    3960:	0e 94 96 14 	call	0x292c	; 0x292c <xTaskCreate>
    3964:	01 c0       	rjmp	.+2      	; 0x3968 <xTimerCreateTimerTask+0x3a>
    3966:	80 e0       	ldi	r24, 0x00	; 0
    3968:	0f 91       	pop	r16
    396a:	ff 90       	pop	r15
    396c:	ef 90       	pop	r14
    396e:	08 95       	ret

00003970 <xTimerGenericCommand>:
    3970:	8f 92       	push	r8
    3972:	9f 92       	push	r9
    3974:	af 92       	push	r10
    3976:	bf 92       	push	r11
    3978:	cf 92       	push	r12
    397a:	df 92       	push	r13
    397c:	ef 92       	push	r14
    397e:	ff 92       	push	r15
    3980:	0f 93       	push	r16
    3982:	1f 93       	push	r17
    3984:	cf 93       	push	r28
    3986:	df 93       	push	r29
    3988:	cd b7       	in	r28, 0x3d	; 61
    398a:	de b7       	in	r29, 0x3e	; 62
    398c:	27 97       	sbiw	r28, 0x07	; 7
    398e:	0f b6       	in	r0, 0x3f	; 63
    3990:	f8 94       	cli
    3992:	de bf       	out	0x3e, r29	; 62
    3994:	0f be       	out	0x3f, r0	; 63
    3996:	cd bf       	out	0x3d, r28	; 61
    3998:	e0 91 71 19 	lds	r30, 0x1971	; 0x801971 <xTimerQueue>
    399c:	f0 91 72 19 	lds	r31, 0x1972	; 0x801972 <xTimerQueue+0x1>
    39a0:	30 97       	sbiw	r30, 0x00	; 0
    39a2:	81 f1       	breq	.+96     	; 0x3a04 <xTimerGenericCommand+0x94>
    39a4:	69 83       	std	Y+1, r22	; 0x01
    39a6:	2a 83       	std	Y+2, r18	; 0x02
    39a8:	3b 83       	std	Y+3, r19	; 0x03
    39aa:	4c 83       	std	Y+4, r20	; 0x04
    39ac:	5d 83       	std	Y+5, r21	; 0x05
    39ae:	9f 83       	std	Y+7, r25	; 0x07
    39b0:	8e 83       	std	Y+6, r24	; 0x06
    39b2:	66 30       	cpi	r22, 0x06	; 6
    39b4:	f4 f4       	brge	.+60     	; 0x39f2 <xTimerGenericCommand+0x82>
    39b6:	68 dc       	rcall	.-1840   	; 0x3288 <xTaskGetSchedulerState>
    39b8:	82 30       	cpi	r24, 0x02	; 2
    39ba:	69 f4       	brne	.+26     	; 0x39d6 <xTimerGenericCommand+0x66>
    39bc:	00 e0       	ldi	r16, 0x00	; 0
    39be:	a7 01       	movw	r20, r14
    39c0:	96 01       	movw	r18, r12
    39c2:	be 01       	movw	r22, r28
    39c4:	6f 5f       	subi	r22, 0xFF	; 255
    39c6:	7f 4f       	sbci	r23, 0xFF	; 255
    39c8:	80 91 71 19 	lds	r24, 0x1971	; 0x801971 <xTimerQueue>
    39cc:	90 91 72 19 	lds	r25, 0x1972	; 0x801972 <xTimerQueue+0x1>
    39d0:	0e 94 9e 0e 	call	0x1d3c	; 0x1d3c <xQueueGenericSend>
    39d4:	18 c0       	rjmp	.+48     	; 0x3a06 <xTimerGenericCommand+0x96>
    39d6:	00 e0       	ldi	r16, 0x00	; 0
    39d8:	20 e0       	ldi	r18, 0x00	; 0
    39da:	30 e0       	ldi	r19, 0x00	; 0
    39dc:	a9 01       	movw	r20, r18
    39de:	be 01       	movw	r22, r28
    39e0:	6f 5f       	subi	r22, 0xFF	; 255
    39e2:	7f 4f       	sbci	r23, 0xFF	; 255
    39e4:	80 91 71 19 	lds	r24, 0x1971	; 0x801971 <xTimerQueue>
    39e8:	90 91 72 19 	lds	r25, 0x1972	; 0x801972 <xTimerQueue+0x1>
    39ec:	0e 94 9e 0e 	call	0x1d3c	; 0x1d3c <xQueueGenericSend>
    39f0:	0a c0       	rjmp	.+20     	; 0x3a06 <xTimerGenericCommand+0x96>
    39f2:	20 e0       	ldi	r18, 0x00	; 0
    39f4:	a8 01       	movw	r20, r16
    39f6:	be 01       	movw	r22, r28
    39f8:	6f 5f       	subi	r22, 0xFF	; 255
    39fa:	7f 4f       	sbci	r23, 0xFF	; 255
    39fc:	cf 01       	movw	r24, r30
    39fe:	0e 94 59 0f 	call	0x1eb2	; 0x1eb2 <xQueueGenericSendFromISR>
    3a02:	01 c0       	rjmp	.+2      	; 0x3a06 <xTimerGenericCommand+0x96>
    3a04:	80 e0       	ldi	r24, 0x00	; 0
    3a06:	27 96       	adiw	r28, 0x07	; 7
    3a08:	0f b6       	in	r0, 0x3f	; 63
    3a0a:	f8 94       	cli
    3a0c:	de bf       	out	0x3e, r29	; 62
    3a0e:	0f be       	out	0x3f, r0	; 63
    3a10:	cd bf       	out	0x3d, r28	; 61
    3a12:	df 91       	pop	r29
    3a14:	cf 91       	pop	r28
    3a16:	1f 91       	pop	r17
    3a18:	0f 91       	pop	r16
    3a1a:	ff 90       	pop	r15
    3a1c:	ef 90       	pop	r14
    3a1e:	df 90       	pop	r13
    3a20:	cf 90       	pop	r12
    3a22:	bf 90       	pop	r11
    3a24:	af 90       	pop	r10
    3a26:	9f 90       	pop	r9
    3a28:	8f 90       	pop	r8
    3a2a:	08 95       	ret

00003a2c <prvSampleTimeNow>:
    3a2c:	2f 92       	push	r2
    3a2e:	3f 92       	push	r3
    3a30:	4f 92       	push	r4
    3a32:	5f 92       	push	r5
    3a34:	6f 92       	push	r6
    3a36:	7f 92       	push	r7
    3a38:	8f 92       	push	r8
    3a3a:	9f 92       	push	r9
    3a3c:	af 92       	push	r10
    3a3e:	bf 92       	push	r11
    3a40:	cf 92       	push	r12
    3a42:	df 92       	push	r13
    3a44:	ef 92       	push	r14
    3a46:	ff 92       	push	r15
    3a48:	0f 93       	push	r16
    3a4a:	1f 93       	push	r17
    3a4c:	cf 93       	push	r28
    3a4e:	df 93       	push	r29
    3a50:	1c 01       	movw	r2, r24
    3a52:	cd d8       	rcall	.-3686   	; 0x2bee <xTaskGetTickCount>
    3a54:	2b 01       	movw	r4, r22
    3a56:	3c 01       	movw	r6, r24
    3a58:	80 91 6b 19 	lds	r24, 0x196B	; 0x80196b <xLastTime.2432>
    3a5c:	90 91 6c 19 	lds	r25, 0x196C	; 0x80196c <xLastTime.2432+0x1>
    3a60:	a0 91 6d 19 	lds	r26, 0x196D	; 0x80196d <xLastTime.2432+0x2>
    3a64:	b0 91 6e 19 	lds	r27, 0x196E	; 0x80196e <xLastTime.2432+0x3>
    3a68:	48 16       	cp	r4, r24
    3a6a:	59 06       	cpc	r5, r25
    3a6c:	6a 06       	cpc	r6, r26
    3a6e:	7b 06       	cpc	r7, r27
    3a70:	08 f0       	brcs	.+2      	; 0x3a74 <prvSampleTimeNow+0x48>
    3a72:	53 c0       	rjmp	.+166    	; 0x3b1a <prvSampleTimeNow+0xee>
    3a74:	3b c0       	rjmp	.+118    	; 0x3aec <prvSampleTimeNow+0xc0>
    3a76:	07 80       	ldd	r0, Z+7	; 0x07
    3a78:	f0 85       	ldd	r31, Z+8	; 0x08
    3a7a:	e0 2d       	mov	r30, r0
    3a7c:	80 80       	ld	r8, Z
    3a7e:	91 80       	ldd	r9, Z+1	; 0x01
    3a80:	a2 80       	ldd	r10, Z+2	; 0x02
    3a82:	b3 80       	ldd	r11, Z+3	; 0x03
    3a84:	c0 85       	ldd	r28, Z+8	; 0x08
    3a86:	d1 85       	ldd	r29, Z+9	; 0x09
    3a88:	8e 01       	movw	r16, r28
    3a8a:	0e 5f       	subi	r16, 0xFE	; 254
    3a8c:	1f 4f       	sbci	r17, 0xFF	; 255
    3a8e:	c8 01       	movw	r24, r16
    3a90:	0e 94 bf 0b 	call	0x177e	; 0x177e <uxListRemove>
    3a94:	ec 89       	ldd	r30, Y+20	; 0x14
    3a96:	fd 89       	ldd	r31, Y+21	; 0x15
    3a98:	ce 01       	movw	r24, r28
    3a9a:	19 95       	eicall
    3a9c:	8f 89       	ldd	r24, Y+23	; 0x17
    3a9e:	82 ff       	sbrs	r24, 2
    3aa0:	25 c0       	rjmp	.+74     	; 0x3aec <prvSampleTimeNow+0xc0>
    3aa2:	8e 85       	ldd	r24, Y+14	; 0x0e
    3aa4:	9f 85       	ldd	r25, Y+15	; 0x0f
    3aa6:	a8 89       	ldd	r26, Y+16	; 0x10
    3aa8:	b9 89       	ldd	r27, Y+17	; 0x11
    3aaa:	88 0d       	add	r24, r8
    3aac:	99 1d       	adc	r25, r9
    3aae:	aa 1d       	adc	r26, r10
    3ab0:	bb 1d       	adc	r27, r11
    3ab2:	88 16       	cp	r8, r24
    3ab4:	99 06       	cpc	r9, r25
    3ab6:	aa 06       	cpc	r10, r26
    3ab8:	bb 06       	cpc	r11, r27
    3aba:	70 f4       	brcc	.+28     	; 0x3ad8 <prvSampleTimeNow+0xac>
    3abc:	8a 83       	std	Y+2, r24	; 0x02
    3abe:	9b 83       	std	Y+3, r25	; 0x03
    3ac0:	ac 83       	std	Y+4, r26	; 0x04
    3ac2:	bd 83       	std	Y+5, r27	; 0x05
    3ac4:	db 87       	std	Y+11, r29	; 0x0b
    3ac6:	ca 87       	std	Y+10, r28	; 0x0a
    3ac8:	b8 01       	movw	r22, r16
    3aca:	80 91 75 19 	lds	r24, 0x1975	; 0x801975 <pxCurrentTimerList>
    3ace:	90 91 76 19 	lds	r25, 0x1976	; 0x801976 <pxCurrentTimerList+0x1>
    3ad2:	0e 94 82 0b 	call	0x1704	; 0x1704 <vListInsert>
    3ad6:	0a c0       	rjmp	.+20     	; 0x3aec <prvSampleTimeNow+0xc0>
    3ad8:	c1 2c       	mov	r12, r1
    3ada:	d1 2c       	mov	r13, r1
    3adc:	76 01       	movw	r14, r12
    3ade:	00 e0       	ldi	r16, 0x00	; 0
    3ae0:	10 e0       	ldi	r17, 0x00	; 0
    3ae2:	a5 01       	movw	r20, r10
    3ae4:	94 01       	movw	r18, r8
    3ae6:	60 e0       	ldi	r22, 0x00	; 0
    3ae8:	ce 01       	movw	r24, r28
    3aea:	42 df       	rcall	.-380    	; 0x3970 <xTimerGenericCommand>
    3aec:	e0 91 75 19 	lds	r30, 0x1975	; 0x801975 <pxCurrentTimerList>
    3af0:	f0 91 76 19 	lds	r31, 0x1976	; 0x801976 <pxCurrentTimerList+0x1>
    3af4:	80 81       	ld	r24, Z
    3af6:	81 11       	cpse	r24, r1
    3af8:	be cf       	rjmp	.-132    	; 0x3a76 <prvSampleTimeNow+0x4a>
    3afa:	80 91 73 19 	lds	r24, 0x1973	; 0x801973 <pxOverflowTimerList>
    3afe:	90 91 74 19 	lds	r25, 0x1974	; 0x801974 <pxOverflowTimerList+0x1>
    3b02:	90 93 76 19 	sts	0x1976, r25	; 0x801976 <pxCurrentTimerList+0x1>
    3b06:	80 93 75 19 	sts	0x1975, r24	; 0x801975 <pxCurrentTimerList>
    3b0a:	f0 93 74 19 	sts	0x1974, r31	; 0x801974 <pxOverflowTimerList+0x1>
    3b0e:	e0 93 73 19 	sts	0x1973, r30	; 0x801973 <pxOverflowTimerList>
    3b12:	81 e0       	ldi	r24, 0x01	; 1
    3b14:	f1 01       	movw	r30, r2
    3b16:	80 83       	st	Z, r24
    3b18:	02 c0       	rjmp	.+4      	; 0x3b1e <prvSampleTimeNow+0xf2>
    3b1a:	f1 01       	movw	r30, r2
    3b1c:	10 82       	st	Z, r1
    3b1e:	40 92 6b 19 	sts	0x196B, r4	; 0x80196b <xLastTime.2432>
    3b22:	50 92 6c 19 	sts	0x196C, r5	; 0x80196c <xLastTime.2432+0x1>
    3b26:	60 92 6d 19 	sts	0x196D, r6	; 0x80196d <xLastTime.2432+0x2>
    3b2a:	70 92 6e 19 	sts	0x196E, r7	; 0x80196e <xLastTime.2432+0x3>
    3b2e:	c3 01       	movw	r24, r6
    3b30:	b2 01       	movw	r22, r4
    3b32:	df 91       	pop	r29
    3b34:	cf 91       	pop	r28
    3b36:	1f 91       	pop	r17
    3b38:	0f 91       	pop	r16
    3b3a:	ff 90       	pop	r15
    3b3c:	ef 90       	pop	r14
    3b3e:	df 90       	pop	r13
    3b40:	cf 90       	pop	r12
    3b42:	bf 90       	pop	r11
    3b44:	af 90       	pop	r10
    3b46:	9f 90       	pop	r9
    3b48:	8f 90       	pop	r8
    3b4a:	7f 90       	pop	r7
    3b4c:	6f 90       	pop	r6
    3b4e:	5f 90       	pop	r5
    3b50:	4f 90       	pop	r4
    3b52:	3f 90       	pop	r3
    3b54:	2f 90       	pop	r2
    3b56:	08 95       	ret

00003b58 <vApplicationIdleHook>:
    3b58:	08 95       	ret

00003b5a <vApplicationMallocFailedHook>:
    3b5a:	27 9a       	sbi	0x04, 7	; 4
    3b5c:	2f 9a       	sbi	0x05, 7	; 5
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    3b5e:	2f ef       	ldi	r18, 0xFF	; 255
    3b60:	80 e7       	ldi	r24, 0x70	; 112
    3b62:	92 e0       	ldi	r25, 0x02	; 2
    3b64:	21 50       	subi	r18, 0x01	; 1
    3b66:	80 40       	sbci	r24, 0x00	; 0
    3b68:	90 40       	sbci	r25, 0x00	; 0
    3b6a:	e1 f7       	brne	.-8      	; 0x3b64 <vApplicationMallocFailedHook+0xa>
    3b6c:	00 c0       	rjmp	.+0      	; 0x3b6e <vApplicationMallocFailedHook+0x14>
    3b6e:	00 00       	nop
    3b70:	1f 9a       	sbi	0x03, 7	; 3
    3b72:	f5 cf       	rjmp	.-22     	; 0x3b5e <vApplicationMallocFailedHook+0x4>

00003b74 <vApplicationStackOverflowHook>:
    3b74:	27 9a       	sbi	0x04, 7	; 4
    3b76:	2f 9a       	sbi	0x05, 7	; 5
    3b78:	2f ef       	ldi	r18, 0xFF	; 255
    3b7a:	87 ea       	ldi	r24, 0xA7	; 167
    3b7c:	91 e6       	ldi	r25, 0x61	; 97
    3b7e:	21 50       	subi	r18, 0x01	; 1
    3b80:	80 40       	sbci	r24, 0x00	; 0
    3b82:	90 40       	sbci	r25, 0x00	; 0
    3b84:	e1 f7       	brne	.-8      	; 0x3b7e <vApplicationStackOverflowHook+0xa>
    3b86:	00 c0       	rjmp	.+0      	; 0x3b88 <vApplicationStackOverflowHook+0x14>
    3b88:	00 00       	nop
    3b8a:	1f 9a       	sbi	0x03, 7	; 3
    3b8c:	f5 cf       	rjmp	.-22     	; 0x3b78 <vApplicationStackOverflowHook+0x4>

00003b8e <create_tasks_and_semaphores>:
	hih8120Create();
	
}

void doStuff()
{
    3b8e:	8f 92       	push	r8
    3b90:	9f 92       	push	r9
    3b92:	af 92       	push	r10
    3b94:	bf 92       	push	r11
    3b96:	cf 92       	push	r12
    3b98:	df 92       	push	r13
    3b9a:	ef 92       	push	r14
    3b9c:	ff 92       	push	r15
    3b9e:	0f 93       	push	r16
    3ba0:	1f 93       	push	r17
    3ba2:	cf 93       	push	r28
    3ba4:	df 93       	push	r29
    3ba6:	0e 94 a9 08 	call	0x1152	; 0x1152 <xEventGroupCreate>
    3baa:	90 93 fd 1a 	sts	0x1AFD, r25	; 0x801afd <startMeasureEventGroup+0x1>
    3bae:	80 93 fc 1a 	sts	0x1AFC, r24	; 0x801afc <startMeasureEventGroup>
    3bb2:	0e 94 a9 08 	call	0x1152	; 0x1152 <xEventGroupCreate>
    3bb6:	90 93 e3 1a 	sts	0x1AE3, r25	; 0x801ae3 <readyEventGroup+0x1>
    3bba:	80 93 e2 1a 	sts	0x1AE2, r24	; 0x801ae2 <readyEventGroup>
    3bbe:	41 e0       	ldi	r20, 0x01	; 1
    3bc0:	60 e0       	ldi	r22, 0x00	; 0
    3bc2:	70 e0       	ldi	r23, 0x00	; 0
    3bc4:	84 e6       	ldi	r24, 0x64	; 100
    3bc6:	90 e0       	ldi	r25, 0x00	; 0
    3bc8:	0e 94 fb 11 	call	0x23f6	; 0x23f6 <xStreamBufferGenericCreate>
    3bcc:	90 93 df 1a 	sts	0x1ADF, r25	; 0x801adf <xMessageBuffer+0x1>
    3bd0:	80 93 de 1a 	sts	0x1ADE, r24	; 0x801ade <xMessageBuffer>
    3bd4:	41 e0       	ldi	r20, 0x01	; 1
    3bd6:	60 e0       	ldi	r22, 0x00	; 0
    3bd8:	70 e0       	ldi	r23, 0x00	; 0
    3bda:	8c e2       	ldi	r24, 0x2C	; 44
    3bdc:	90 e0       	ldi	r25, 0x00	; 0
    3bde:	0e 94 fb 11 	call	0x23f6	; 0x23f6 <xStreamBufferGenericCreate>
    3be2:	90 93 e1 1a 	sts	0x1AE1, r25	; 0x801ae1 <_downlinkMessagebuffer+0x1>
    3be6:	80 93 e0 1a 	sts	0x1AE0, r24	; 0x801ae0 <_downlinkMessagebuffer>
    3bea:	0e 94 31 03 	call	0x662	; 0x662 <configuration_create>
    3bee:	e0 90 e2 1a 	lds	r14, 0x1AE2	; 0x801ae2 <readyEventGroup>
    3bf2:	f0 90 e3 1a 	lds	r15, 0x1AE3	; 0x801ae3 <readyEventGroup+0x1>
    3bf6:	40 91 fc 1a 	lds	r20, 0x1AFC	; 0x801afc <startMeasureEventGroup>
    3bfa:	50 91 fd 1a 	lds	r21, 0x1AFD	; 0x801afd <startMeasureEventGroup+0x1>
    3bfe:	a1 2c       	mov	r10, r1
    3c00:	b1 2c       	mov	r11, r1
    3c02:	65 01       	movw	r12, r10
    3c04:	68 94       	set
    3c06:	a4 f8       	bld	r10, 4
    3c08:	01 e0       	ldi	r16, 0x01	; 1
    3c0a:	10 e0       	ldi	r17, 0x00	; 0
    3c0c:	20 e0       	ldi	r18, 0x00	; 0
    3c0e:	30 e0       	ldi	r19, 0x00	; 0
    3c10:	60 ec       	ldi	r22, 0xC0	; 192
    3c12:	81 e0       	ldi	r24, 0x01	; 1
    3c14:	0e 94 3c 06 	call	0xc78	; 0xc78 <humAndTempReader_create>
    3c18:	c8 2f       	mov	r28, r24
    3c1a:	d9 2f       	mov	r29, r25
    3c1c:	e0 90 e2 1a 	lds	r14, 0x1AE2	; 0x801ae2 <readyEventGroup>
    3c20:	f0 90 e3 1a 	lds	r15, 0x1AE3	; 0x801ae3 <readyEventGroup+0x1>
    3c24:	40 91 fc 1a 	lds	r20, 0x1AFC	; 0x801afc <startMeasureEventGroup>
    3c28:	50 91 fd 1a 	lds	r21, 0x1AFD	; 0x801afd <startMeasureEventGroup+0x1>
    3c2c:	a1 2c       	mov	r10, r1
    3c2e:	b1 2c       	mov	r11, r1
    3c30:	65 01       	movw	r12, r10
    3c32:	68 94       	set
    3c34:	a5 f8       	bld	r10, 5
    3c36:	02 e0       	ldi	r16, 0x02	; 2
    3c38:	10 e0       	ldi	r17, 0x00	; 0
    3c3a:	20 e0       	ldi	r18, 0x00	; 0
    3c3c:	30 e0       	ldi	r19, 0x00	; 0
    3c3e:	60 ec       	ldi	r22, 0xC0	; 192
    3c40:	81 e0       	ldi	r24, 0x01	; 1
    3c42:	0e 94 73 02 	call	0x4e6	; 0x4e6 <co2Reader_create>
    3c46:	e0 90 e2 1a 	lds	r14, 0x1AE2	; 0x801ae2 <readyEventGroup>
    3c4a:	f0 90 e3 1a 	lds	r15, 0x1AE3	; 0x801ae3 <readyEventGroup+0x1>
    3c4e:	40 91 fc 1a 	lds	r20, 0x1AFC	; 0x801afc <startMeasureEventGroup>
    3c52:	50 91 fd 1a 	lds	r21, 0x1AFD	; 0x801afd <startMeasureEventGroup+0x1>
    3c56:	20 91 df 1a 	lds	r18, 0x1ADF	; 0x801adf <xMessageBuffer+0x1>
    3c5a:	2f 93       	push	r18
    3c5c:	20 91 de 1a 	lds	r18, 0x1ADE	; 0x801ade <xMessageBuffer>
    3c60:	2f 93       	push	r18
    3c62:	df 93       	push	r29
    3c64:	cf 93       	push	r28
    3c66:	4c 01       	movw	r8, r24
    3c68:	0f 2e       	mov	r0, r31
    3c6a:	f0 e3       	ldi	r31, 0x30	; 48
    3c6c:	af 2e       	mov	r10, r31
    3c6e:	b1 2c       	mov	r11, r1
    3c70:	c1 2c       	mov	r12, r1
    3c72:	d1 2c       	mov	r13, r1
    3c74:	f0 2d       	mov	r31, r0
    3c76:	03 e0       	ldi	r16, 0x03	; 3
    3c78:	10 e0       	ldi	r17, 0x00	; 0
    3c7a:	20 e0       	ldi	r18, 0x00	; 0
    3c7c:	30 e0       	ldi	r19, 0x00	; 0
    3c7e:	60 ec       	ldi	r22, 0xC0	; 192
    3c80:	82 e0       	ldi	r24, 0x02	; 2
    3c82:	0e 94 10 04 	call	0x820	; 0x820 <device_create>
    3c86:	60 91 de 1a 	lds	r22, 0x1ADE	; 0x801ade <xMessageBuffer>
    3c8a:	70 91 df 1a 	lds	r23, 0x1ADF	; 0x801adf <xMessageBuffer+0x1>
    3c8e:	81 e0       	ldi	r24, 0x01	; 1
    3c90:	0e 94 30 07 	call	0xe60	; 0xe60 <lora_UpLinkHandler_create>
    3c94:	60 91 e0 1a 	lds	r22, 0x1AE0	; 0x801ae0 <_downlinkMessagebuffer>
    3c98:	70 91 e1 1a 	lds	r23, 0x1AE1	; 0x801ae1 <_downlinkMessagebuffer+0x1>
    3c9c:	81 e0       	ldi	r24, 0x01	; 1
    3c9e:	90 e0       	ldi	r25, 0x00	; 0
    3ca0:	0e 94 8f 05 	call	0xb1e	; 0xb1e <lora_DownLinkHandler_create>
    3ca4:	0f 90       	pop	r0
    3ca6:	0f 90       	pop	r0
    3ca8:	0f 90       	pop	r0
    3caa:	0f 90       	pop	r0
    3cac:	df 91       	pop	r29
    3cae:	cf 91       	pop	r28
    3cb0:	1f 91       	pop	r17
    3cb2:	0f 91       	pop	r16
    3cb4:	ff 90       	pop	r15
    3cb6:	ef 90       	pop	r14
    3cb8:	df 90       	pop	r13
    3cba:	cf 90       	pop	r12
    3cbc:	bf 90       	pop	r11
    3cbe:	af 90       	pop	r10
    3cc0:	9f 90       	pop	r9
    3cc2:	8f 90       	pop	r8
    3cc4:	08 95       	ret

00003cc6 <initialiseSystem>:
    3cc6:	81 b1       	in	r24, 0x01	; 1
    3cc8:	81 68       	ori	r24, 0x81	; 129
    3cca:	81 b9       	out	0x01, r24	; 1
    3ccc:	0e 94 93 08 	call	0x1126	; 0x1126 <trace_init>
    3cd0:	80 e0       	ldi	r24, 0x00	; 0
    3cd2:	0e 94 75 29 	call	0x52ea	; 0x52ea <stdioCreate>
    3cd6:	85 e0       	ldi	r24, 0x05	; 5
    3cd8:	11 d0       	rcall	.+34     	; 0x3cfc <hal_create>
    3cda:	60 91 e0 1a 	lds	r22, 0x1AE0	; 0x801ae0 <_downlinkMessagebuffer>
    3cde:	70 91 e1 1a 	lds	r23, 0x1AE1	; 0x801ae1 <_downlinkMessagebuffer+0x1>
    3ce2:	81 e0       	ldi	r24, 0x01	; 1
    3ce4:	c3 d3       	rcall	.+1926   	; 0x446c <lora_driver_create>
    3ce6:	69 c0       	rjmp	.+210    	; 0x3dba <hih8120Create>
    3ce8:	08 95       	ret

00003cea <main>:
	//bytesToSend=xMessageBufferSend(xMessageBuffer,(void*) &payload,sizeof(payload),portMAX_DELAY);
}
/*-----------------------------------------------------------*/
int main(void)
{
	initialiseSystem(); // Must be done as the very first thing!!
    3cea:	ed df       	rcall	.-38     	; 0x3cc6 <initialiseSystem>
	printf("Program Started!!\n");
    3cec:	8c e8       	ldi	r24, 0x8C	; 140
    3cee:	95 e0       	ldi	r25, 0x05	; 5
    3cf0:	0e 94 22 2f 	call	0x5e44	; 0x5e44 <puts>
	create_tasks_and_semaphores();
    3cf4:	4c df       	rcall	.-360    	; 0x3b8e <create_tasks_and_semaphores>
	vTaskStartScheduler(); // Initialise and run the freeRTOS scheduler. Execution should never return from here.
    3cf6:	0e 94 b5 15 	call	0x2b6a	; 0x2b6a <vTaskStartScheduler>
    3cfa:	ff cf       	rjmp	.-2      	; 0x3cfa <main+0x10>

00003cfc <hal_create>:
    3cfc:	ee ef       	ldi	r30, 0xFE	; 254
    3cfe:	fa e1       	ldi	r31, 0x1A	; 26
    3d00:	2b e8       	ldi	r18, 0x8B	; 139
    3d02:	35 e2       	ldi	r19, 0x25	; 37
    3d04:	31 83       	std	Z+1, r19	; 0x01
    3d06:	20 83       	st	Z, r18
    3d08:	2e e8       	ldi	r18, 0x8E	; 142
    3d0a:	35 e2       	ldi	r19, 0x25	; 37
    3d0c:	33 83       	std	Z+3, r19	; 0x03
    3d0e:	22 83       	std	Z+2, r18	; 0x02
    3d10:	29 e9       	ldi	r18, 0x99	; 153
    3d12:	35 e2       	ldi	r19, 0x25	; 37
    3d14:	35 83       	std	Z+5, r19	; 0x05
    3d16:	24 83       	std	Z+4, r18	; 0x04
    3d18:	2d e9       	ldi	r18, 0x9D	; 157
    3d1a:	35 e2       	ldi	r19, 0x25	; 37
    3d1c:	37 83       	std	Z+7, r19	; 0x07
    3d1e:	26 83       	std	Z+6, r18	; 0x06
    3d20:	23 ea       	ldi	r18, 0xA3	; 163
    3d22:	35 e2       	ldi	r19, 0x25	; 37
    3d24:	31 87       	std	Z+9, r19	; 0x09
    3d26:	20 87       	std	Z+8, r18	; 0x08
    3d28:	2f ea       	ldi	r18, 0xAF	; 175
    3d2a:	35 e2       	ldi	r19, 0x25	; 37
    3d2c:	33 87       	std	Z+11, r19	; 0x0b
    3d2e:	22 87       	std	Z+10, r18	; 0x0a
    3d30:	24 eb       	ldi	r18, 0xB4	; 180
    3d32:	35 e2       	ldi	r19, 0x25	; 37
    3d34:	35 87       	std	Z+13, r19	; 0x0d
    3d36:	24 87       	std	Z+12, r18	; 0x0c
    3d38:	20 ec       	ldi	r18, 0xC0	; 192
    3d3a:	35 e2       	ldi	r19, 0x25	; 37
    3d3c:	37 87       	std	Z+15, r19	; 0x0f
    3d3e:	26 87       	std	Z+14, r18	; 0x0e
    3d40:	20 ea       	ldi	r18, 0xA0	; 160
    3d42:	35 e2       	ldi	r19, 0x25	; 37
    3d44:	31 8b       	std	Z+17, r19	; 0x11
    3d46:	20 8b       	std	Z+16, r18	; 0x10
    3d48:	25 ec       	ldi	r18, 0xC5	; 197
    3d4a:	35 e2       	ldi	r19, 0x25	; 37
    3d4c:	33 8b       	std	Z+19, r19	; 0x13
    3d4e:	22 8b       	std	Z+18, r18	; 0x12
    3d50:	22 ed       	ldi	r18, 0xD2	; 210
    3d52:	35 e2       	ldi	r19, 0x25	; 37
    3d54:	35 8b       	std	Z+21, r19	; 0x15
    3d56:	24 8b       	std	Z+20, r18	; 0x14
    3d58:	68 2f       	mov	r22, r24
    3d5a:	cf 01       	movw	r24, r30
    3d5c:	53 c1       	rjmp	.+678    	; 0x4004 <led_create>
    3d5e:	08 95       	ret

00003d60 <_hihTwiCallback>:
    3d60:	65 30       	cpi	r22, 0x05	; 5
    3d62:	f1 f4       	brne	.+60     	; 0x3da0 <_hihTwiCallback+0x40>
    3d64:	fa 01       	movw	r30, r20
    3d66:	80 81       	ld	r24, Z
    3d68:	8f 73       	andi	r24, 0x3F	; 63
    3d6a:	90 e0       	ldi	r25, 0x00	; 0
    3d6c:	98 2f       	mov	r25, r24
    3d6e:	88 27       	eor	r24, r24
    3d70:	21 81       	ldd	r18, Z+1	; 0x01
    3d72:	82 2b       	or	r24, r18
    3d74:	90 93 09 02 	sts	0x0209, r25	; 0x800209 <_hum+0x1>
    3d78:	80 93 08 02 	sts	0x0208, r24	; 0x800208 <_hum>
    3d7c:	82 81       	ldd	r24, Z+2	; 0x02
    3d7e:	f0 e4       	ldi	r31, 0x40	; 64
    3d80:	8f 9f       	mul	r24, r31
    3d82:	c0 01       	movw	r24, r0
    3d84:	11 24       	eor	r1, r1
    3d86:	fa 01       	movw	r30, r20
    3d88:	23 81       	ldd	r18, Z+3	; 0x03
    3d8a:	26 95       	lsr	r18
    3d8c:	26 95       	lsr	r18
    3d8e:	82 2b       	or	r24, r18
    3d90:	90 93 07 02 	sts	0x0207, r25	; 0x800207 <_temp+0x1>
    3d94:	80 93 06 02 	sts	0x0206, r24	; 0x800206 <_temp>
    3d98:	81 e0       	ldi	r24, 0x01	; 1
    3d9a:	80 93 8d 19 	sts	0x198D, r24	; 0x80198d <_measuringIsReady>
    3d9e:	08 95       	ret
    3da0:	64 30       	cpi	r22, 0x04	; 4
    3da2:	51 f0       	breq	.+20     	; 0x3db8 <_hihTwiCallback+0x58>
    3da4:	80 e0       	ldi	r24, 0x00	; 0
    3da6:	90 e4       	ldi	r25, 0x40	; 64
    3da8:	90 93 07 02 	sts	0x0207, r25	; 0x800207 <_temp+0x1>
    3dac:	80 93 06 02 	sts	0x0206, r24	; 0x800206 <_temp>
    3db0:	90 93 09 02 	sts	0x0209, r25	; 0x800209 <_hum+0x1>
    3db4:	80 93 08 02 	sts	0x0208, r24	; 0x800208 <_hum>
    3db8:	08 95       	ret

00003dba <hih8120Create>:
    3dba:	0f 93       	push	r16
    3dbc:	1f 93       	push	r17
    3dbe:	00 eb       	ldi	r16, 0xB0	; 176
    3dc0:	1e e1       	ldi	r17, 0x1E	; 30
    3dc2:	20 e0       	ldi	r18, 0x00	; 0
    3dc4:	34 e2       	ldi	r19, 0x24	; 36
    3dc6:	44 ef       	ldi	r20, 0xF4	; 244
    3dc8:	50 e0       	ldi	r21, 0x00	; 0
    3dca:	60 e0       	ldi	r22, 0x00	; 0
    3dcc:	87 e2       	ldi	r24, 0x27	; 39
    3dce:	0e 94 af 29 	call	0x535e	; 0x535e <twiCreate>
    3dd2:	90 93 8f 19 	sts	0x198F, r25	; 0x80198f <_hih8120Handler+0x1>
    3dd6:	80 93 8e 19 	sts	0x198E, r24	; 0x80198e <_hih8120Handler>
    3dda:	21 e0       	ldi	r18, 0x01	; 1
    3ddc:	89 2b       	or	r24, r25
    3dde:	09 f0       	breq	.+2      	; 0x3de2 <hih8120Create+0x28>
    3de0:	20 e0       	ldi	r18, 0x00	; 0
    3de2:	82 2f       	mov	r24, r18
    3de4:	1f 91       	pop	r17
    3de6:	0f 91       	pop	r16
    3de8:	08 95       	ret

00003dea <hih8120IsReady>:
    3dea:	80 91 8d 19 	lds	r24, 0x198D	; 0x80198d <_measuringIsReady>
    3dee:	08 95       	ret

00003df0 <hih8120Wakeup>:
    3df0:	80 91 8e 19 	lds	r24, 0x198E	; 0x80198e <_hih8120Handler>
    3df4:	90 91 8f 19 	lds	r25, 0x198F	; 0x80198f <_hih8120Handler+0x1>
    3df8:	00 97       	sbiw	r24, 0x00	; 0
    3dfa:	59 f0       	breq	.+22     	; 0x3e12 <hih8120Wakeup+0x22>
    3dfc:	40 e0       	ldi	r20, 0x00	; 0
    3dfe:	60 e0       	ldi	r22, 0x00	; 0
    3e00:	70 e0       	ldi	r23, 0x00	; 0
    3e02:	0e 94 00 2a 	call	0x5400	; 0x5400 <twiTransmit>
    3e06:	84 30       	cpi	r24, 0x04	; 4
    3e08:	31 f4       	brne	.+12     	; 0x3e16 <hih8120Wakeup+0x26>
    3e0a:	10 92 8d 19 	sts	0x198D, r1	; 0x80198d <_measuringIsReady>
    3e0e:	80 e0       	ldi	r24, 0x00	; 0
    3e10:	08 95       	ret
    3e12:	82 e0       	ldi	r24, 0x02	; 2
    3e14:	08 95       	ret
    3e16:	83 e0       	ldi	r24, 0x03	; 3
    3e18:	08 95       	ret

00003e1a <hih8120Meassure>:
    3e1a:	80 91 8e 19 	lds	r24, 0x198E	; 0x80198e <_hih8120Handler>
    3e1e:	90 91 8f 19 	lds	r25, 0x198F	; 0x80198f <_hih8120Handler+0x1>
    3e22:	00 97       	sbiw	r24, 0x00	; 0
    3e24:	39 f0       	breq	.+14     	; 0x3e34 <hih8120Meassure+0x1a>
    3e26:	64 e0       	ldi	r22, 0x04	; 4
    3e28:	0e 94 4c 2a 	call	0x5498	; 0x5498 <twiReceive>
    3e2c:	85 30       	cpi	r24, 0x05	; 5
    3e2e:	21 f0       	breq	.+8      	; 0x3e38 <hih8120Meassure+0x1e>
    3e30:	83 e0       	ldi	r24, 0x03	; 3
    3e32:	08 95       	ret
    3e34:	82 e0       	ldi	r24, 0x02	; 2
    3e36:	08 95       	ret
    3e38:	80 e0       	ldi	r24, 0x00	; 0
    3e3a:	08 95       	ret

00003e3c <hih8120GetHumidity>:
    3e3c:	60 91 08 02 	lds	r22, 0x0208	; 0x800208 <_hum>
    3e40:	70 91 09 02 	lds	r23, 0x0209	; 0x800209 <_hum+0x1>
    3e44:	80 e0       	ldi	r24, 0x00	; 0
    3e46:	90 e0       	ldi	r25, 0x00	; 0
    3e48:	0e 94 56 2c 	call	0x58ac	; 0x58ac <__floatunsisf>
    3e4c:	20 e0       	ldi	r18, 0x00	; 0
    3e4e:	30 e0       	ldi	r19, 0x00	; 0
    3e50:	48 ec       	ldi	r20, 0xC8	; 200
    3e52:	52 e4       	ldi	r21, 0x42	; 66
    3e54:	0e 94 e4 2c 	call	0x59c8	; 0x59c8 <__mulsf3>
    3e58:	20 e0       	ldi	r18, 0x00	; 0
    3e5a:	38 ef       	ldi	r19, 0xF8	; 248
    3e5c:	4f e7       	ldi	r20, 0x7F	; 127
    3e5e:	56 e4       	ldi	r21, 0x46	; 70
    3e60:	0c 94 bd 2b 	jmp	0x577a	; 0x577a <__divsf3>
    3e64:	08 95       	ret

00003e66 <hih8120GetHumidityPercent_x10>:
    3e66:	ea df       	rcall	.-44     	; 0x3e3c <hih8120GetHumidity>
    3e68:	20 e0       	ldi	r18, 0x00	; 0
    3e6a:	30 e0       	ldi	r19, 0x00	; 0
    3e6c:	40 e2       	ldi	r20, 0x20	; 32
    3e6e:	51 e4       	ldi	r21, 0x41	; 65
    3e70:	0e 94 e4 2c 	call	0x59c8	; 0x59c8 <__mulsf3>
    3e74:	0e 94 2a 2c 	call	0x5854	; 0x5854 <__fixunssfsi>
    3e78:	cb 01       	movw	r24, r22
    3e7a:	08 95       	ret

00003e7c <hih8120GetTemperature>:
    3e7c:	60 91 06 02 	lds	r22, 0x0206	; 0x800206 <_temp>
    3e80:	70 91 07 02 	lds	r23, 0x0207	; 0x800207 <_temp+0x1>
    3e84:	80 e0       	ldi	r24, 0x00	; 0
    3e86:	90 e0       	ldi	r25, 0x00	; 0
    3e88:	0e 94 56 2c 	call	0x58ac	; 0x58ac <__floatunsisf>
    3e8c:	20 e0       	ldi	r18, 0x00	; 0
    3e8e:	30 e0       	ldi	r19, 0x00	; 0
    3e90:	45 e2       	ldi	r20, 0x25	; 37
    3e92:	53 e4       	ldi	r21, 0x43	; 67
    3e94:	0e 94 e4 2c 	call	0x59c8	; 0x59c8 <__mulsf3>
    3e98:	20 e0       	ldi	r18, 0x00	; 0
    3e9a:	38 ef       	ldi	r19, 0xF8	; 248
    3e9c:	4f e7       	ldi	r20, 0x7F	; 127
    3e9e:	56 e4       	ldi	r21, 0x46	; 70
    3ea0:	0e 94 bd 2b 	call	0x577a	; 0x577a <__divsf3>
    3ea4:	20 e0       	ldi	r18, 0x00	; 0
    3ea6:	30 e0       	ldi	r19, 0x00	; 0
    3ea8:	40 e2       	ldi	r20, 0x20	; 32
    3eaa:	52 e4       	ldi	r21, 0x42	; 66
    3eac:	0c 94 58 2b 	jmp	0x56b0	; 0x56b0 <__subsf3>
    3eb0:	08 95       	ret

00003eb2 <hih8120GetTemperature_x10>:
    3eb2:	e4 df       	rcall	.-56     	; 0x3e7c <hih8120GetTemperature>
    3eb4:	20 e0       	ldi	r18, 0x00	; 0
    3eb6:	30 e0       	ldi	r19, 0x00	; 0
    3eb8:	40 e2       	ldi	r20, 0x20	; 32
    3eba:	51 e4       	ldi	r21, 0x41	; 65
    3ebc:	0e 94 e4 2c 	call	0x59c8	; 0x59c8 <__mulsf3>
    3ec0:	0e 94 25 2c 	call	0x584a	; 0x584a <__fixsfsi>
    3ec4:	cb 01       	movw	r24, r22
    3ec6:	08 95       	ret

00003ec8 <_turn_off>:
    3ec8:	cf 93       	push	r28
    3eca:	df 93       	push	r29
    3ecc:	90 e0       	ldi	r25, 0x00	; 0
    3ece:	fc 01       	movw	r30, r24
    3ed0:	ee 0f       	add	r30, r30
    3ed2:	ff 1f       	adc	r31, r31
    3ed4:	e8 0f       	add	r30, r24
    3ed6:	f9 1f       	adc	r31, r25
    3ed8:	ee 0f       	add	r30, r30
    3eda:	ff 1f       	adc	r31, r31
    3edc:	e0 57       	subi	r30, 0x70	; 112
    3ede:	f6 4e       	sbci	r31, 0xE6	; 230
    3ee0:	23 81       	ldd	r18, Z+3	; 0x03
    3ee2:	21 11       	cpse	r18, r1
    3ee4:	0a c0       	rjmp	.+20     	; 0x3efa <_turn_off+0x32>
    3ee6:	ef 01       	movw	r28, r30
    3ee8:	e0 91 06 1b 	lds	r30, 0x1B06	; 0x801b06 <register_access+0x8>
    3eec:	f0 91 07 1b 	lds	r31, 0x1B07	; 0x801b07 <register_access+0x9>
    3ef0:	6a 81       	ldd	r22, Y+2	; 0x02
    3ef2:	88 81       	ld	r24, Y
    3ef4:	99 81       	ldd	r25, Y+1	; 0x01
    3ef6:	19 95       	eicall
    3ef8:	12 c0       	rjmp	.+36     	; 0x3f1e <_turn_off+0x56>
    3efa:	dc 01       	movw	r26, r24
    3efc:	aa 0f       	add	r26, r26
    3efe:	bb 1f       	adc	r27, r27
    3f00:	ed 01       	movw	r28, r26
    3f02:	c8 0f       	add	r28, r24
    3f04:	d9 1f       	adc	r29, r25
    3f06:	cc 0f       	add	r28, r28
    3f08:	dd 1f       	adc	r29, r29
    3f0a:	c0 57       	subi	r28, 0x70	; 112
    3f0c:	d6 4e       	sbci	r29, 0xE6	; 230
    3f0e:	e0 91 10 1b 	lds	r30, 0x1B10	; 0x801b10 <register_access+0x12>
    3f12:	f0 91 11 1b 	lds	r31, 0x1B11	; 0x801b11 <register_access+0x13>
    3f16:	6a 81       	ldd	r22, Y+2	; 0x02
    3f18:	88 81       	ld	r24, Y
    3f1a:	99 81       	ldd	r25, Y+1	; 0x01
    3f1c:	19 95       	eicall
    3f1e:	df 91       	pop	r29
    3f20:	cf 91       	pop	r28
    3f22:	08 95       	ret

00003f24 <_turn_on>:
    3f24:	cf 93       	push	r28
    3f26:	df 93       	push	r29
    3f28:	90 e0       	ldi	r25, 0x00	; 0
    3f2a:	fc 01       	movw	r30, r24
    3f2c:	ee 0f       	add	r30, r30
    3f2e:	ff 1f       	adc	r31, r31
    3f30:	e8 0f       	add	r30, r24
    3f32:	f9 1f       	adc	r31, r25
    3f34:	ee 0f       	add	r30, r30
    3f36:	ff 1f       	adc	r31, r31
    3f38:	e0 57       	subi	r30, 0x70	; 112
    3f3a:	f6 4e       	sbci	r31, 0xE6	; 230
    3f3c:	23 81       	ldd	r18, Z+3	; 0x03
    3f3e:	21 11       	cpse	r18, r1
    3f40:	0a c0       	rjmp	.+20     	; 0x3f56 <_turn_on+0x32>
    3f42:	ef 01       	movw	r28, r30
    3f44:	e0 91 10 1b 	lds	r30, 0x1B10	; 0x801b10 <register_access+0x12>
    3f48:	f0 91 11 1b 	lds	r31, 0x1B11	; 0x801b11 <register_access+0x13>
    3f4c:	6a 81       	ldd	r22, Y+2	; 0x02
    3f4e:	88 81       	ld	r24, Y
    3f50:	99 81       	ldd	r25, Y+1	; 0x01
    3f52:	19 95       	eicall
    3f54:	12 c0       	rjmp	.+36     	; 0x3f7a <_turn_on+0x56>
    3f56:	dc 01       	movw	r26, r24
    3f58:	aa 0f       	add	r26, r26
    3f5a:	bb 1f       	adc	r27, r27
    3f5c:	ed 01       	movw	r28, r26
    3f5e:	c8 0f       	add	r28, r24
    3f60:	d9 1f       	adc	r29, r25
    3f62:	cc 0f       	add	r28, r28
    3f64:	dd 1f       	adc	r29, r29
    3f66:	c0 57       	subi	r28, 0x70	; 112
    3f68:	d6 4e       	sbci	r29, 0xE6	; 230
    3f6a:	e0 91 06 1b 	lds	r30, 0x1B06	; 0x801b06 <register_access+0x8>
    3f6e:	f0 91 07 1b 	lds	r31, 0x1B07	; 0x801b07 <register_access+0x9>
    3f72:	6a 81       	ldd	r22, Y+2	; 0x02
    3f74:	88 81       	ld	r24, Y
    3f76:	99 81       	ldd	r25, Y+1	; 0x01
    3f78:	19 95       	eicall
    3f7a:	df 91       	pop	r29
    3f7c:	cf 91       	pop	r28
    3f7e:	08 95       	ret

00003f80 <_hal_led_task>:
    3f80:	0f 2e       	mov	r0, r31
    3f82:	fe ef       	ldi	r31, 0xFE	; 254
    3f84:	cf 2e       	mov	r12, r31
    3f86:	fa e1       	ldi	r31, 0x1A	; 26
    3f88:	df 2e       	mov	r13, r31
    3f8a:	f0 2d       	mov	r31, r0
    3f8c:	04 e0       	ldi	r16, 0x04	; 4
    3f8e:	c0 e9       	ldi	r28, 0x90	; 144
    3f90:	d9 e1       	ldi	r29, 0x19	; 25
    3f92:	10 e0       	ldi	r17, 0x00	; 0
    3f94:	8c 81       	ldd	r24, Y+4	; 0x04
    3f96:	81 30       	cpi	r24, 0x01	; 1
    3f98:	69 f0       	breq	.+26     	; 0x3fb4 <_hal_led_task+0x34>
    3f9a:	e8 f0       	brcs	.+58     	; 0x3fd6 <_hal_led_task+0x56>
    3f9c:	82 30       	cpi	r24, 0x02	; 2
    3f9e:	39 f5       	brne	.+78     	; 0x3fee <_hal_led_task+0x6e>
    3fa0:	d6 01       	movw	r26, r12
    3fa2:	1c 96       	adiw	r26, 0x0c	; 12
    3fa4:	ed 91       	ld	r30, X+
    3fa6:	fc 91       	ld	r31, X
    3fa8:	1d 97       	sbiw	r26, 0x0d	; 13
    3faa:	6a 81       	ldd	r22, Y+2	; 0x02
    3fac:	88 81       	ld	r24, Y
    3fae:	99 81       	ldd	r25, Y+1	; 0x01
    3fb0:	19 95       	eicall
    3fb2:	1d c0       	rjmp	.+58     	; 0x3fee <_hal_led_task+0x6e>
    3fb4:	8d 81       	ldd	r24, Y+5	; 0x05
    3fb6:	8f 5f       	subi	r24, 0xFF	; 255
    3fb8:	8a 30       	cpi	r24, 0x0A	; 10
    3fba:	10 f4       	brcc	.+4      	; 0x3fc0 <_hal_led_task+0x40>
    3fbc:	8d 83       	std	Y+5, r24	; 0x05
    3fbe:	17 c0       	rjmp	.+46     	; 0x3fee <_hal_led_task+0x6e>
    3fc0:	1d 82       	std	Y+5, r1	; 0x05
    3fc2:	d6 01       	movw	r26, r12
    3fc4:	1c 96       	adiw	r26, 0x0c	; 12
    3fc6:	ed 91       	ld	r30, X+
    3fc8:	fc 91       	ld	r31, X
    3fca:	1d 97       	sbiw	r26, 0x0d	; 13
    3fcc:	6a 81       	ldd	r22, Y+2	; 0x02
    3fce:	88 81       	ld	r24, Y
    3fd0:	99 81       	ldd	r25, Y+1	; 0x01
    3fd2:	19 95       	eicall
    3fd4:	0c c0       	rjmp	.+24     	; 0x3fee <_hal_led_task+0x6e>
    3fd6:	8d 81       	ldd	r24, Y+5	; 0x05
    3fd8:	88 23       	and	r24, r24
    3fda:	31 f0       	breq	.+12     	; 0x3fe8 <_hal_led_task+0x68>
    3fdc:	81 2f       	mov	r24, r17
    3fde:	a2 df       	rcall	.-188    	; 0x3f24 <_turn_on>
    3fe0:	8d 81       	ldd	r24, Y+5	; 0x05
    3fe2:	81 50       	subi	r24, 0x01	; 1
    3fe4:	8d 83       	std	Y+5, r24	; 0x05
    3fe6:	03 c0       	rjmp	.+6      	; 0x3fee <_hal_led_task+0x6e>
    3fe8:	0c 83       	std	Y+4, r16	; 0x04
    3fea:	81 2f       	mov	r24, r17
    3fec:	6d df       	rcall	.-294    	; 0x3ec8 <_turn_off>
    3fee:	1f 5f       	subi	r17, 0xFF	; 255
    3ff0:	26 96       	adiw	r28, 0x06	; 6
    3ff2:	14 30       	cpi	r17, 0x04	; 4
    3ff4:	79 f6       	brne	.-98     	; 0x3f94 <_hal_led_task+0x14>
    3ff6:	65 e0       	ldi	r22, 0x05	; 5
    3ff8:	70 e0       	ldi	r23, 0x00	; 0
    3ffa:	80 e0       	ldi	r24, 0x00	; 0
    3ffc:	90 e0       	ldi	r25, 0x00	; 0
    3ffe:	0e 94 56 17 	call	0x2eac	; 0x2eac <vTaskDelay>
    4002:	c5 cf       	rjmp	.-118    	; 0x3f8e <_hal_led_task+0xe>

00004004 <led_create>:
    4004:	cf 92       	push	r12
    4006:	df 92       	push	r13
    4008:	ef 92       	push	r14
    400a:	ff 92       	push	r15
    400c:	0f 93       	push	r16
    400e:	1f 93       	push	r17
    4010:	cf 93       	push	r28
    4012:	df 93       	push	r29
    4014:	06 2f       	mov	r16, r22
    4016:	0f 2e       	mov	r0, r31
    4018:	fe ef       	ldi	r31, 0xFE	; 254
    401a:	ef 2e       	mov	r14, r31
    401c:	fa e1       	ldi	r31, 0x1A	; 26
    401e:	ff 2e       	mov	r15, r31
    4020:	f0 2d       	mov	r31, r0
    4022:	d7 01       	movw	r26, r14
    4024:	18 96       	adiw	r26, 0x08	; 8
    4026:	ed 91       	ld	r30, X+
    4028:	fc 91       	ld	r31, X
    402a:	19 97       	sbiw	r26, 0x09	; 9
    402c:	66 e0       	ldi	r22, 0x06	; 6
    402e:	87 e2       	ldi	r24, 0x27	; 39
    4030:	90 e0       	ldi	r25, 0x00	; 0
    4032:	19 95       	eicall
    4034:	c0 e9       	ldi	r28, 0x90	; 144
    4036:	d9 e1       	ldi	r29, 0x19	; 25
    4038:	0f 2e       	mov	r0, r31
    403a:	f8 e2       	ldi	r31, 0x28	; 40
    403c:	cf 2e       	mov	r12, r31
    403e:	d1 2c       	mov	r13, r1
    4040:	f0 2d       	mov	r31, r0
    4042:	d9 82       	std	Y+1, r13	; 0x01
    4044:	c8 82       	st	Y, r12
    4046:	86 e0       	ldi	r24, 0x06	; 6
    4048:	8a 83       	std	Y+2, r24	; 0x02
    404a:	1b 82       	std	Y+3, r1	; 0x03
    404c:	14 e0       	ldi	r17, 0x04	; 4
    404e:	1c 83       	std	Y+4, r17	; 0x04
    4050:	80 e0       	ldi	r24, 0x00	; 0
    4052:	3a df       	rcall	.-396    	; 0x3ec8 <_turn_off>
    4054:	d7 01       	movw	r26, r14
    4056:	18 96       	adiw	r26, 0x08	; 8
    4058:	ed 91       	ld	r30, X+
    405a:	fc 91       	ld	r31, X
    405c:	19 97       	sbiw	r26, 0x09	; 9
    405e:	67 e0       	ldi	r22, 0x07	; 7
    4060:	87 e2       	ldi	r24, 0x27	; 39
    4062:	90 e0       	ldi	r25, 0x00	; 0
    4064:	19 95       	eicall
    4066:	df 82       	std	Y+7, r13	; 0x07
    4068:	ce 82       	std	Y+6, r12	; 0x06
    406a:	87 e0       	ldi	r24, 0x07	; 7
    406c:	88 87       	std	Y+8, r24	; 0x08
    406e:	19 86       	std	Y+9, r1	; 0x09
    4070:	1a 87       	std	Y+10, r17	; 0x0a
    4072:	81 e0       	ldi	r24, 0x01	; 1
    4074:	29 df       	rcall	.-430    	; 0x3ec8 <_turn_off>
    4076:	d7 01       	movw	r26, r14
    4078:	18 96       	adiw	r26, 0x08	; 8
    407a:	ed 91       	ld	r30, X+
    407c:	fc 91       	ld	r31, X
    407e:	19 97       	sbiw	r26, 0x09	; 9
    4080:	65 e0       	ldi	r22, 0x05	; 5
    4082:	83 e3       	ldi	r24, 0x33	; 51
    4084:	90 e0       	ldi	r25, 0x00	; 0
    4086:	19 95       	eicall
    4088:	d7 01       	movw	r26, r14
    408a:	18 96       	adiw	r26, 0x08	; 8
    408c:	ed 91       	ld	r30, X+
    408e:	fc 91       	ld	r31, X
    4090:	19 97       	sbiw	r26, 0x09	; 9
    4092:	61 e0       	ldi	r22, 0x01	; 1
    4094:	84 e3       	ldi	r24, 0x34	; 52
    4096:	90 e0       	ldi	r25, 0x00	; 0
    4098:	19 95       	eicall
    409a:	84 e3       	ldi	r24, 0x34	; 52
    409c:	90 e0       	ldi	r25, 0x00	; 0
    409e:	9d 87       	std	Y+13, r25	; 0x0d
    40a0:	8c 87       	std	Y+12, r24	; 0x0c
    40a2:	85 e0       	ldi	r24, 0x05	; 5
    40a4:	8e 87       	std	Y+14, r24	; 0x0e
    40a6:	1f 86       	std	Y+15, r1	; 0x0f
    40a8:	18 8b       	std	Y+16, r17	; 0x10
    40aa:	82 e0       	ldi	r24, 0x02	; 2
    40ac:	0d df       	rcall	.-486    	; 0x3ec8 <_turn_off>
    40ae:	d7 01       	movw	r26, r14
    40b0:	18 96       	adiw	r26, 0x08	; 8
    40b2:	ed 91       	ld	r30, X+
    40b4:	fc 91       	ld	r31, X
    40b6:	19 97       	sbiw	r26, 0x09	; 9
    40b8:	64 e0       	ldi	r22, 0x04	; 4
    40ba:	81 e0       	ldi	r24, 0x01	; 1
    40bc:	91 e0       	ldi	r25, 0x01	; 1
    40be:	19 95       	eicall
    40c0:	d7 01       	movw	r26, r14
    40c2:	18 96       	adiw	r26, 0x08	; 8
    40c4:	ed 91       	ld	r30, X+
    40c6:	fc 91       	ld	r31, X
    40c8:	19 97       	sbiw	r26, 0x09	; 9
    40ca:	61 e0       	ldi	r22, 0x01	; 1
    40cc:	82 e0       	ldi	r24, 0x02	; 2
    40ce:	91 e0       	ldi	r25, 0x01	; 1
    40d0:	19 95       	eicall
    40d2:	82 e0       	ldi	r24, 0x02	; 2
    40d4:	91 e0       	ldi	r25, 0x01	; 1
    40d6:	9b 8b       	std	Y+19, r25	; 0x13
    40d8:	8a 8b       	std	Y+18, r24	; 0x12
    40da:	1c 8b       	std	Y+20, r17	; 0x14
    40dc:	1d 8a       	std	Y+21, r1	; 0x15
    40de:	1e 8b       	std	Y+22, r17	; 0x16
    40e0:	83 e0       	ldi	r24, 0x03	; 3
    40e2:	f2 de       	rcall	.-540    	; 0x3ec8 <_turn_off>
    40e4:	e1 2c       	mov	r14, r1
    40e6:	f1 2c       	mov	r15, r1
    40e8:	20 e0       	ldi	r18, 0x00	; 0
    40ea:	30 e0       	ldi	r19, 0x00	; 0
    40ec:	40 ec       	ldi	r20, 0xC0	; 192
    40ee:	50 e0       	ldi	r21, 0x00	; 0
    40f0:	6e e9       	ldi	r22, 0x9E	; 158
    40f2:	75 e0       	ldi	r23, 0x05	; 5
    40f4:	80 ec       	ldi	r24, 0xC0	; 192
    40f6:	9f e1       	ldi	r25, 0x1F	; 31
    40f8:	0e 94 96 14 	call	0x292c	; 0x292c <xTaskCreate>
    40fc:	df 91       	pop	r29
    40fe:	cf 91       	pop	r28
    4100:	1f 91       	pop	r17
    4102:	0f 91       	pop	r16
    4104:	ff 90       	pop	r15
    4106:	ef 90       	pop	r14
    4108:	df 90       	pop	r13
    410a:	cf 90       	pop	r12
    410c:	08 95       	ret

0000410e <led_slow_blink>:
    410e:	0f 93       	push	r16
    4110:	1f 93       	push	r17
    4112:	cf 93       	push	r28
    4114:	df 93       	push	r29
    4116:	c8 2f       	mov	r28, r24
    4118:	d0 e0       	ldi	r29, 0x00	; 0
    411a:	8e 01       	movw	r16, r28
    411c:	00 0f       	add	r16, r16
    411e:	11 1f       	adc	r17, r17
    4120:	d8 01       	movw	r26, r16
    4122:	ac 0f       	add	r26, r28
    4124:	bd 1f       	adc	r27, r29
    4126:	aa 0f       	add	r26, r26
    4128:	bb 1f       	adc	r27, r27
    412a:	a0 57       	subi	r26, 0x70	; 112
    412c:	b6 4e       	sbci	r27, 0xE6	; 230
    412e:	e0 91 0a 1b 	lds	r30, 0x1B0A	; 0x801b0a <register_access+0xc>
    4132:	f0 91 0b 1b 	lds	r31, 0x1B0B	; 0x801b0b <register_access+0xd>
    4136:	12 96       	adiw	r26, 0x02	; 2
    4138:	6c 91       	ld	r22, X
    413a:	12 97       	sbiw	r26, 0x02	; 2
    413c:	8d 91       	ld	r24, X+
    413e:	9c 91       	ld	r25, X
    4140:	19 95       	eicall
    4142:	c0 0f       	add	r28, r16
    4144:	d1 1f       	adc	r29, r17
    4146:	cc 0f       	add	r28, r28
    4148:	dd 1f       	adc	r29, r29
    414a:	c0 57       	subi	r28, 0x70	; 112
    414c:	d6 4e       	sbci	r29, 0xE6	; 230
    414e:	81 e0       	ldi	r24, 0x01	; 1
    4150:	8c 83       	std	Y+4, r24	; 0x04
    4152:	df 91       	pop	r29
    4154:	cf 91       	pop	r28
    4156:	1f 91       	pop	r17
    4158:	0f 91       	pop	r16
    415a:	08 95       	ret

0000415c <led_fast_blink>:
    415c:	0f 93       	push	r16
    415e:	1f 93       	push	r17
    4160:	cf 93       	push	r28
    4162:	df 93       	push	r29
    4164:	c8 2f       	mov	r28, r24
    4166:	d0 e0       	ldi	r29, 0x00	; 0
    4168:	8e 01       	movw	r16, r28
    416a:	00 0f       	add	r16, r16
    416c:	11 1f       	adc	r17, r17
    416e:	d8 01       	movw	r26, r16
    4170:	ac 0f       	add	r26, r28
    4172:	bd 1f       	adc	r27, r29
    4174:	aa 0f       	add	r26, r26
    4176:	bb 1f       	adc	r27, r27
    4178:	a0 57       	subi	r26, 0x70	; 112
    417a:	b6 4e       	sbci	r27, 0xE6	; 230
    417c:	e0 91 0a 1b 	lds	r30, 0x1B0A	; 0x801b0a <register_access+0xc>
    4180:	f0 91 0b 1b 	lds	r31, 0x1B0B	; 0x801b0b <register_access+0xd>
    4184:	12 96       	adiw	r26, 0x02	; 2
    4186:	6c 91       	ld	r22, X
    4188:	12 97       	sbiw	r26, 0x02	; 2
    418a:	8d 91       	ld	r24, X+
    418c:	9c 91       	ld	r25, X
    418e:	19 95       	eicall
    4190:	c0 0f       	add	r28, r16
    4192:	d1 1f       	adc	r29, r17
    4194:	cc 0f       	add	r28, r28
    4196:	dd 1f       	adc	r29, r29
    4198:	c0 57       	subi	r28, 0x70	; 112
    419a:	d6 4e       	sbci	r29, 0xE6	; 230
    419c:	82 e0       	ldi	r24, 0x02	; 2
    419e:	8c 83       	std	Y+4, r24	; 0x04
    41a0:	df 91       	pop	r29
    41a2:	cf 91       	pop	r28
    41a4:	1f 91       	pop	r17
    41a6:	0f 91       	pop	r16
    41a8:	08 95       	ret

000041aa <led_led_on>:
    41aa:	28 2f       	mov	r18, r24
    41ac:	30 e0       	ldi	r19, 0x00	; 0
    41ae:	f9 01       	movw	r30, r18
    41b0:	ee 0f       	add	r30, r30
    41b2:	ff 1f       	adc	r31, r31
    41b4:	e2 0f       	add	r30, r18
    41b6:	f3 1f       	adc	r31, r19
    41b8:	ee 0f       	add	r30, r30
    41ba:	ff 1f       	adc	r31, r31
    41bc:	e0 57       	subi	r30, 0x70	; 112
    41be:	f6 4e       	sbci	r31, 0xE6	; 230
    41c0:	93 e0       	ldi	r25, 0x03	; 3
    41c2:	94 83       	std	Z+4, r25	; 0x04
    41c4:	af ce       	rjmp	.-674    	; 0x3f24 <_turn_on>
    41c6:	08 95       	ret

000041c8 <led_led_off>:
    41c8:	28 2f       	mov	r18, r24
    41ca:	30 e0       	ldi	r19, 0x00	; 0
    41cc:	f9 01       	movw	r30, r18
    41ce:	ee 0f       	add	r30, r30
    41d0:	ff 1f       	adc	r31, r31
    41d2:	e2 0f       	add	r30, r18
    41d4:	f3 1f       	adc	r31, r19
    41d6:	ee 0f       	add	r30, r30
    41d8:	ff 1f       	adc	r31, r31
    41da:	e0 57       	subi	r30, 0x70	; 112
    41dc:	f6 4e       	sbci	r31, 0xE6	; 230
    41de:	94 e0       	ldi	r25, 0x04	; 4
    41e0:	94 83       	std	Z+4, r25	; 0x04
    41e2:	72 ce       	rjmp	.-796    	; 0x3ec8 <_turn_off>
    41e4:	08 95       	ret

000041e6 <led_long_puls>:
    41e6:	90 e0       	ldi	r25, 0x00	; 0
    41e8:	fc 01       	movw	r30, r24
    41ea:	ee 0f       	add	r30, r30
    41ec:	ff 1f       	adc	r31, r31
    41ee:	df 01       	movw	r26, r30
    41f0:	a8 0f       	add	r26, r24
    41f2:	b9 1f       	adc	r27, r25
    41f4:	aa 0f       	add	r26, r26
    41f6:	bb 1f       	adc	r27, r27
    41f8:	a0 57       	subi	r26, 0x70	; 112
    41fa:	b6 4e       	sbci	r27, 0xE6	; 230
    41fc:	24 e0       	ldi	r18, 0x04	; 4
    41fe:	15 96       	adiw	r26, 0x05	; 5
    4200:	2c 93       	st	X, r18
    4202:	15 97       	sbiw	r26, 0x05	; 5
    4204:	fd 01       	movw	r30, r26
    4206:	14 82       	std	Z+4, r1	; 0x04
    4208:	08 95       	ret

0000420a <led_short_puls>:
    420a:	90 e0       	ldi	r25, 0x00	; 0
    420c:	fc 01       	movw	r30, r24
    420e:	ee 0f       	add	r30, r30
    4210:	ff 1f       	adc	r31, r31
    4212:	df 01       	movw	r26, r30
    4214:	a8 0f       	add	r26, r24
    4216:	b9 1f       	adc	r27, r25
    4218:	aa 0f       	add	r26, r26
    421a:	bb 1f       	adc	r27, r27
    421c:	a0 57       	subi	r26, 0x70	; 112
    421e:	b6 4e       	sbci	r27, 0xE6	; 230
    4220:	21 e0       	ldi	r18, 0x01	; 1
    4222:	15 96       	adiw	r26, 0x05	; 5
    4224:	2c 93       	st	X, r18
    4226:	15 97       	sbiw	r26, 0x05	; 5
    4228:	fd 01       	movw	r30, r26
    422a:	14 82       	std	Z+4, r1	; 0x04
    422c:	08 95       	ret

0000422e <_serial_call_back>:
    422e:	0f 93       	push	r16
    4230:	1f 93       	push	r17
    4232:	cf 93       	push	r28
    4234:	df 93       	push	r29
    4236:	1f 92       	push	r1
    4238:	1f 92       	push	r1
    423a:	cd b7       	in	r28, 0x3d	; 61
    423c:	de b7       	in	r29, 0x3e	; 62
    423e:	8c 01       	movw	r16, r24
    4240:	19 82       	std	Y+1, r1	; 0x01
    4242:	2d c0       	rjmp	.+90     	; 0x429e <_serial_call_back+0x70>
    4244:	e0 91 0c 1a 	lds	r30, 0x1A0C	; 0x801a0c <rec_buf_inp.2947>
    4248:	ec 32       	cpi	r30, 0x2C	; 44
    424a:	50 f4       	brcc	.+20     	; 0x4260 <_serial_call_back+0x32>
    424c:	81 e0       	ldi	r24, 0x01	; 1
    424e:	8e 0f       	add	r24, r30
    4250:	80 93 0c 1a 	sts	0x1A0C, r24	; 0x801a0c <rec_buf_inp.2947>
    4254:	f0 e0       	ldi	r31, 0x00	; 0
    4256:	e2 5c       	subi	r30, 0xC2	; 194
    4258:	f5 4e       	sbci	r31, 0xE5	; 229
    425a:	8a 81       	ldd	r24, Y+2	; 0x02
    425c:	80 83       	st	Z, r24
    425e:	02 c0       	rjmp	.+4      	; 0x4264 <_serial_call_back+0x36>
    4260:	10 92 0c 1a 	sts	0x1A0C, r1	; 0x801a0c <rec_buf_inp.2947>
    4264:	8a 81       	ldd	r24, Y+2	; 0x02
    4266:	8a 30       	cpi	r24, 0x0A	; 10
    4268:	d1 f4       	brne	.+52     	; 0x429e <_serial_call_back+0x70>
    426a:	40 91 0c 1a 	lds	r20, 0x1A0C	; 0x801a0c <rec_buf_inp.2947>
    426e:	50 e0       	ldi	r21, 0x00	; 0
    4270:	fa 01       	movw	r30, r20
    4272:	e4 5c       	subi	r30, 0xC4	; 196
    4274:	f5 4e       	sbci	r31, 0xE5	; 229
    4276:	10 82       	st	Z, r1
    4278:	41 50       	subi	r20, 0x01	; 1
    427a:	51 09       	sbc	r21, r1
    427c:	9e 01       	movw	r18, r28
    427e:	2f 5f       	subi	r18, 0xFF	; 255
    4280:	3f 4f       	sbci	r19, 0xFF	; 255
    4282:	6e e3       	ldi	r22, 0x3E	; 62
    4284:	7a e1       	ldi	r23, 0x1A	; 26
    4286:	80 91 0f 1a 	lds	r24, 0x1A0F	; 0x801a0f <_serial_reply_buffer_handle>
    428a:	90 91 10 1a 	lds	r25, 0x1A10	; 0x801a10 <_serial_reply_buffer_handle+0x1>
    428e:	0e 94 10 13 	call	0x2620	; 0x2620 <xStreamBufferSendFromISR>
    4292:	89 81       	ldd	r24, Y+1	; 0x01
    4294:	81 11       	cpse	r24, r1
    4296:	0e 94 94 0c 	call	0x1928	; 0x1928 <vPortYield>
    429a:	10 92 0c 1a 	sts	0x1A0C, r1	; 0x801a0c <rec_buf_inp.2947>
    429e:	be 01       	movw	r22, r28
    42a0:	6e 5f       	subi	r22, 0xFE	; 254
    42a2:	7f 4f       	sbci	r23, 0xFF	; 255
    42a4:	c8 01       	movw	r24, r16
    42a6:	8f d5       	rcall	.+2846   	; 0x4dc6 <serial_get_byte>
    42a8:	88 23       	and	r24, r24
    42aa:	61 f2       	breq	.-104    	; 0x4244 <_serial_call_back+0x16>
    42ac:	0f 90       	pop	r0
    42ae:	0f 90       	pop	r0
    42b0:	df 91       	pop	r29
    42b2:	cf 91       	pop	r28
    42b4:	1f 91       	pop	r17
    42b6:	0f 91       	pop	r16
    42b8:	08 95       	ret

000042ba <_upload_message>:
    42ba:	0f 93       	push	r16
    42bc:	1f 93       	push	r17
    42be:	cf 93       	push	r28
    42c0:	df 93       	push	r29
    42c2:	8c 01       	movw	r16, r24
    42c4:	eb 01       	movw	r28, r22
    42c6:	80 91 0f 1a 	lds	r24, 0x1A0F	; 0x801a0f <_serial_reply_buffer_handle>
    42ca:	90 91 10 1a 	lds	r25, 0x1A10	; 0x801a10 <_serial_reply_buffer_handle+0x1>
    42ce:	0e 94 27 12 	call	0x244e	; 0x244e <xStreamBufferReset>
    42d2:	b8 01       	movw	r22, r16
    42d4:	88 ea       	ldi	r24, 0xA8	; 168
    42d6:	99 e1       	ldi	r25, 0x19	; 25
    42d8:	0e 94 f0 2e 	call	0x5de0	; 0x5de0 <strcpy>
    42dc:	20 97       	sbiw	r28, 0x00	; 0
    42de:	79 f0       	breq	.+30     	; 0x42fe <_upload_message+0x44>
    42e0:	e8 ea       	ldi	r30, 0xA8	; 168
    42e2:	f9 e1       	ldi	r31, 0x19	; 25
    42e4:	01 90       	ld	r0, Z+
    42e6:	00 20       	and	r0, r0
    42e8:	e9 f7       	brne	.-6      	; 0x42e4 <_upload_message+0x2a>
    42ea:	31 97       	sbiw	r30, 0x01	; 1
    42ec:	80 e2       	ldi	r24, 0x20	; 32
    42ee:	90 e0       	ldi	r25, 0x00	; 0
    42f0:	91 83       	std	Z+1, r25	; 0x01
    42f2:	80 83       	st	Z, r24
    42f4:	be 01       	movw	r22, r28
    42f6:	88 ea       	ldi	r24, 0xA8	; 168
    42f8:	99 e1       	ldi	r25, 0x19	; 25
    42fa:	0e 94 e5 2e 	call	0x5dca	; 0x5dca <strcat>
    42fe:	e8 ea       	ldi	r30, 0xA8	; 168
    4300:	f9 e1       	ldi	r31, 0x19	; 25
    4302:	df 01       	movw	r26, r30
    4304:	0d 90       	ld	r0, X+
    4306:	00 20       	and	r0, r0
    4308:	e9 f7       	brne	.-6      	; 0x4304 <_upload_message+0x4a>
    430a:	11 97       	sbiw	r26, 0x01	; 1
    430c:	8d e0       	ldi	r24, 0x0D	; 13
    430e:	9a e0       	ldi	r25, 0x0A	; 10
    4310:	11 96       	adiw	r26, 0x01	; 1
    4312:	9c 93       	st	X, r25
    4314:	8e 93       	st	-X, r24
    4316:	12 96       	adiw	r26, 0x02	; 2
    4318:	1c 92       	st	X, r1
    431a:	01 90       	ld	r0, Z+
    431c:	00 20       	and	r0, r0
    431e:	e9 f7       	brne	.-6      	; 0x431a <_upload_message+0x60>
    4320:	31 97       	sbiw	r30, 0x01	; 1
    4322:	e8 5a       	subi	r30, 0xA8	; 168
    4324:	f9 41       	sbci	r31, 0x19	; 25
    4326:	ae 2f       	mov	r26, r30
    4328:	88 ea       	ldi	r24, 0xA8	; 168
    432a:	99 e1       	ldi	r25, 0x19	; 25
    432c:	ac 01       	movw	r20, r24
    432e:	6a 2f       	mov	r22, r26
    4330:	80 91 11 1a 	lds	r24, 0x1A11	; 0x801a11 <_rn2483_serial>
    4334:	90 91 12 1a 	lds	r25, 0x1A12	; 0x801a12 <_rn2483_serial+0x1>
    4338:	f6 d4       	rcall	.+2540   	; 0x4d26 <serial_send_bytes>
    433a:	81 11       	cpse	r24, r1
    433c:	11 c0       	rjmp	.+34     	; 0x4360 <_upload_message+0xa6>
    433e:	08 e2       	ldi	r16, 0x28	; 40
    4340:	15 e0       	ldi	r17, 0x05	; 5
    4342:	20 e0       	ldi	r18, 0x00	; 0
    4344:	30 e0       	ldi	r19, 0x00	; 0
    4346:	4d e2       	ldi	r20, 0x2D	; 45
    4348:	50 e0       	ldi	r21, 0x00	; 0
    434a:	68 e9       	ldi	r22, 0x98	; 152
    434c:	7a e1       	ldi	r23, 0x1A	; 26
    434e:	80 91 0f 1a 	lds	r24, 0x1A0F	; 0x801a0f <_serial_reply_buffer_handle>
    4352:	90 91 10 1a 	lds	r25, 0x1A10	; 0x801a10 <_serial_reply_buffer_handle+0x1>
    4356:	0e 94 53 13 	call	0x26a6	; 0x26a6 <xStreamBufferReceive>
    435a:	88 e9       	ldi	r24, 0x98	; 152
    435c:	9a e1       	ldi	r25, 0x1A	; 26
    435e:	02 c0       	rjmp	.+4      	; 0x4364 <_upload_message+0xaa>
    4360:	80 e0       	ldi	r24, 0x00	; 0
    4362:	90 e0       	ldi	r25, 0x00	; 0
    4364:	df 91       	pop	r29
    4366:	cf 91       	pop	r28
    4368:	1f 91       	pop	r17
    436a:	0f 91       	pop	r16
    436c:	08 95       	ret

0000436e <_reply2return_code>:
    436e:	2f 92       	push	r2
    4370:	3f 92       	push	r3
    4372:	4f 92       	push	r4
    4374:	5f 92       	push	r5
    4376:	6f 92       	push	r6
    4378:	7f 92       	push	r7
    437a:	8f 92       	push	r8
    437c:	9f 92       	push	r9
    437e:	af 92       	push	r10
    4380:	bf 92       	push	r11
    4382:	cf 92       	push	r12
    4384:	df 92       	push	r13
    4386:	ef 92       	push	r14
    4388:	ff 92       	push	r15
    438a:	0f 93       	push	r16
    438c:	1f 93       	push	r17
    438e:	cf 93       	push	r28
    4390:	df 93       	push	r29
    4392:	5c 01       	movw	r10, r24
    4394:	fc 01       	movw	r30, r24
    4396:	01 90       	ld	r0, Z+
    4398:	00 20       	and	r0, r0
    439a:	e9 f7       	brne	.-6      	; 0x4396 <_reply2return_code+0x28>
    439c:	31 97       	sbiw	r30, 0x01	; 1
    439e:	6f 01       	movw	r12, r30
    43a0:	c8 1a       	sub	r12, r24
    43a2:	d9 0a       	sbc	r13, r25
    43a4:	5c 2c       	mov	r5, r12
    43a6:	0f 2e       	mov	r0, r31
    43a8:	ff e3       	ldi	r31, 0x3F	; 63
    43aa:	8f 2e       	mov	r8, r31
    43ac:	f8 e0       	ldi	r31, 0x08	; 8
    43ae:	9f 2e       	mov	r9, r31
    43b0:	f0 2d       	mov	r31, r0
    43b2:	e1 2c       	mov	r14, r1
    43b4:	f1 2c       	mov	r15, r1
    43b6:	4c 2c       	mov	r4, r12
    43b8:	37 01       	movw	r6, r14
    43ba:	f4 01       	movw	r30, r8
    43bc:	01 81       	ldd	r16, Z+1	; 0x01
    43be:	12 81       	ldd	r17, Z+2	; 0x02
    43c0:	e8 01       	movw	r28, r16
    43c2:	09 90       	ld	r0, Y+
    43c4:	00 20       	and	r0, r0
    43c6:	e9 f7       	brne	.-6      	; 0x43c2 <_reply2return_code+0x54>
    43c8:	21 97       	sbiw	r28, 0x01	; 1
    43ca:	c0 1b       	sub	r28, r16
    43cc:	d1 0b       	sbc	r29, r17
    43ce:	3c 2e       	mov	r3, r28
    43d0:	f9 e0       	ldi	r31, 0x09	; 9
    43d2:	cf 16       	cp	r12, r31
    43d4:	d1 04       	cpc	r13, r1
    43d6:	58 f0       	brcs	.+22     	; 0x43ee <_reply2return_code+0x80>
    43d8:	f4 01       	movw	r30, r8
    43da:	20 80       	ld	r2, Z
    43dc:	fe e0       	ldi	r31, 0x0E	; 14
    43de:	2f 12       	cpse	r2, r31
    43e0:	06 c0       	rjmp	.+12     	; 0x43ee <_reply2return_code+0x80>
    43e2:	b8 01       	movw	r22, r16
    43e4:	c5 01       	movw	r24, r10
    43e6:	0e 94 c0 2e 	call	0x5d80	; 0x5d80 <strcasestr>
    43ea:	89 2b       	or	r24, r25
    43ec:	09 f5       	brne	.+66     	; 0x4430 <_reply2return_code+0xc2>
    43ee:	44 2d       	mov	r20, r4
    43f0:	35 14       	cp	r3, r5
    43f2:	08 f4       	brcc	.+2      	; 0x43f6 <_reply2return_code+0x88>
    43f4:	4c 2f       	mov	r20, r28
    43f6:	50 e0       	ldi	r21, 0x00	; 0
    43f8:	b8 01       	movw	r22, r16
    43fa:	c5 01       	movw	r24, r10
    43fc:	0e 94 f7 2e 	call	0x5dee	; 0x5dee <strncasecmp>
    4400:	89 2b       	or	r24, r25
    4402:	49 f4       	brne	.+18     	; 0x4416 <_reply2return_code+0xa8>
    4404:	f3 01       	movw	r30, r6
    4406:	ee 0f       	add	r30, r30
    4408:	ff 1f       	adc	r31, r31
    440a:	e6 0d       	add	r30, r6
    440c:	f7 1d       	adc	r31, r7
    440e:	e1 5c       	subi	r30, 0xC1	; 193
    4410:	f7 4f       	sbci	r31, 0xF7	; 247
    4412:	20 80       	ld	r2, Z
    4414:	0d c0       	rjmp	.+26     	; 0x4430 <_reply2return_code+0xc2>
    4416:	8f ef       	ldi	r24, 0xFF	; 255
    4418:	e8 1a       	sub	r14, r24
    441a:	f8 0a       	sbc	r15, r24
    441c:	e3 e0       	ldi	r30, 0x03	; 3
    441e:	8e 0e       	add	r8, r30
    4420:	91 1c       	adc	r9, r1
    4422:	f1 e1       	ldi	r31, 0x11	; 17
    4424:	ef 16       	cp	r14, r31
    4426:	f1 04       	cpc	r15, r1
    4428:	39 f6       	brne	.-114    	; 0x43b8 <_reply2return_code+0x4a>
    442a:	68 94       	set
    442c:	22 24       	eor	r2, r2
    442e:	24 f8       	bld	r2, 4
    4430:	82 2d       	mov	r24, r2
    4432:	df 91       	pop	r29
    4434:	cf 91       	pop	r28
    4436:	1f 91       	pop	r17
    4438:	0f 91       	pop	r16
    443a:	ff 90       	pop	r15
    443c:	ef 90       	pop	r14
    443e:	df 90       	pop	r13
    4440:	cf 90       	pop	r12
    4442:	bf 90       	pop	r11
    4444:	af 90       	pop	r10
    4446:	9f 90       	pop	r9
    4448:	8f 90       	pop	r8
    444a:	7f 90       	pop	r7
    444c:	6f 90       	pop	r6
    444e:	5f 90       	pop	r5
    4450:	4f 90       	pop	r4
    4452:	3f 90       	pop	r3
    4454:	2f 90       	pop	r2
    4456:	08 95       	ret

00004458 <_upload_message_rc>:
    4458:	30 df       	rcall	.-416    	; 0x42ba <_upload_message>
    445a:	89 cf       	rjmp	.-238    	; 0x436e <_reply2return_code>
    445c:	08 95       	ret

0000445e <lora_driver_flush_buffers>:
    445e:	80 91 0f 1a 	lds	r24, 0x1A0F	; 0x801a0f <_serial_reply_buffer_handle>
    4462:	90 91 10 1a 	lds	r25, 0x1A10	; 0x801a10 <_serial_reply_buffer_handle+0x1>
    4466:	0c 94 27 12 	jmp	0x244e	; 0x244e <xStreamBufferReset>
    446a:	08 95       	ret

0000446c <lora_driver_create>:
    446c:	8f 92       	push	r8
    446e:	9f 92       	push	r9
    4470:	af 92       	push	r10
    4472:	cf 92       	push	r12
    4474:	ef 92       	push	r14
    4476:	0f 93       	push	r16
    4478:	1f 93       	push	r17
    447a:	cf 93       	push	r28
    447c:	c8 2f       	mov	r28, r24
    447e:	8b 01       	movw	r16, r22
    4480:	41 e0       	ldi	r20, 0x01	; 1
    4482:	60 e0       	ldi	r22, 0x00	; 0
    4484:	70 e0       	ldi	r23, 0x00	; 0
    4486:	88 ec       	ldi	r24, 0xC8	; 200
    4488:	90 e0       	ldi	r25, 0x00	; 0
    448a:	0e 94 fb 11 	call	0x23f6	; 0x23f6 <xStreamBufferGenericCreate>
    448e:	90 93 10 1a 	sts	0x1A10, r25	; 0x801a10 <_serial_reply_buffer_handle+0x1>
    4492:	80 93 0f 1a 	sts	0x1A0F, r24	; 0x801a0f <_serial_reply_buffer_handle>
    4496:	10 93 0e 1a 	sts	0x1A0E, r17	; 0x801a0e <_downlinkMessageBuffer+0x1>
    449a:	00 93 0d 1a 	sts	0x1A0D, r16	; 0x801a0d <_downlinkMessageBuffer>
    449e:	0f 2e       	mov	r0, r31
    44a0:	f7 e1       	ldi	r31, 0x17	; 23
    44a2:	8f 2e       	mov	r8, r31
    44a4:	f1 e2       	ldi	r31, 0x21	; 33
    44a6:	9f 2e       	mov	r9, r31
    44a8:	f0 2d       	mov	r31, r0
    44aa:	68 94       	set
    44ac:	aa 24       	eor	r10, r10
    44ae:	a6 f8       	bld	r10, 6
    44b0:	68 94       	set
    44b2:	cc 24       	eor	r12, r12
    44b4:	c6 f8       	bld	r12, 6
    44b6:	e1 2c       	mov	r14, r1
    44b8:	00 e0       	ldi	r16, 0x00	; 0
    44ba:	23 e0       	ldi	r18, 0x03	; 3
    44bc:	40 e0       	ldi	r20, 0x00	; 0
    44be:	51 ee       	ldi	r21, 0xE1	; 225
    44c0:	60 e0       	ldi	r22, 0x00	; 0
    44c2:	70 e0       	ldi	r23, 0x00	; 0
    44c4:	8c 2f       	mov	r24, r28
    44c6:	74 d3       	rcall	.+1768   	; 0x4bb0 <serial_new_instance>
    44c8:	90 93 12 1a 	sts	0x1A12, r25	; 0x801a12 <_rn2483_serial+0x1>
    44cc:	80 93 11 1a 	sts	0x1A11, r24	; 0x801a11 <_rn2483_serial>
    44d0:	e0 91 06 1b 	lds	r30, 0x1B06	; 0x801b06 <register_access+0x8>
    44d4:	f0 91 07 1b 	lds	r31, 0x1B07	; 0x801b07 <register_access+0x9>
    44d8:	64 e0       	ldi	r22, 0x04	; 4
    44da:	87 e0       	ldi	r24, 0x07	; 7
    44dc:	91 e0       	ldi	r25, 0x01	; 1
    44de:	19 95       	eicall
    44e0:	cf 91       	pop	r28
    44e2:	1f 91       	pop	r17
    44e4:	0f 91       	pop	r16
    44e6:	ef 90       	pop	r14
    44e8:	cf 90       	pop	r12
    44ea:	af 90       	pop	r10
    44ec:	9f 90       	pop	r9
    44ee:	8f 90       	pop	r8
    44f0:	08 95       	ret

000044f2 <lora_driver_reset_rn2483>:
    44f2:	88 23       	and	r24, r24
    44f4:	49 f0       	breq	.+18     	; 0x4508 <lora_driver_reset_rn2483+0x16>
    44f6:	e0 91 10 1b 	lds	r30, 0x1B10	; 0x801b10 <register_access+0x12>
    44fa:	f0 91 11 1b 	lds	r31, 0x1B11	; 0x801b11 <register_access+0x13>
    44fe:	64 e0       	ldi	r22, 0x04	; 4
    4500:	88 e0       	ldi	r24, 0x08	; 8
    4502:	91 e0       	ldi	r25, 0x01	; 1
    4504:	19 95       	eicall
    4506:	08 95       	ret
    4508:	e0 91 06 1b 	lds	r30, 0x1B06	; 0x801b06 <register_access+0x8>
    450c:	f0 91 07 1b 	lds	r31, 0x1B07	; 0x801b07 <register_access+0x9>
    4510:	64 e0       	ldi	r22, 0x04	; 4
    4512:	88 e0       	ldi	r24, 0x08	; 8
    4514:	91 e0       	ldi	r25, 0x01	; 1
    4516:	19 95       	eicall
    4518:	08 95       	ret

0000451a <lora_driver_rn2483_factory_reset>:
    451a:	60 e0       	ldi	r22, 0x00	; 0
    451c:	70 e0       	ldi	r23, 0x00	; 0
    451e:	85 ec       	ldi	r24, 0xC5	; 197
    4520:	95 e0       	ldi	r25, 0x05	; 5
    4522:	cb de       	rcall	.-618    	; 0x42ba <_upload_message>
    4524:	e8 e9       	ldi	r30, 0x98	; 152
    4526:	fa e1       	ldi	r31, 0x1A	; 26
    4528:	01 90       	ld	r0, Z+
    452a:	00 20       	and	r0, r0
    452c:	e9 f7       	brne	.-6      	; 0x4528 <lora_driver_rn2483_factory_reset+0xe>
    452e:	31 97       	sbiw	r30, 0x01	; 1
    4530:	e8 59       	subi	r30, 0x98	; 152
    4532:	fa 41       	sbci	r31, 0x1A	; 26
    4534:	81 e0       	ldi	r24, 0x01	; 1
    4536:	75 97       	sbiw	r30, 0x15	; 21
    4538:	08 f0       	brcs	.+2      	; 0x453c <lora_driver_rn2483_factory_reset+0x22>
    453a:	80 e0       	ldi	r24, 0x00	; 0
    453c:	08 95       	ret

0000453e <lora_driver_get_rn2483_hweui>:
    453e:	cf 93       	push	r28
    4540:	df 93       	push	r29
    4542:	ec 01       	movw	r28, r24
    4544:	60 e0       	ldi	r22, 0x00	; 0
    4546:	70 e0       	ldi	r23, 0x00	; 0
    4548:	86 ed       	ldi	r24, 0xD6	; 214
    454a:	95 e0       	ldi	r25, 0x05	; 5
    454c:	b6 de       	rcall	.-660    	; 0x42ba <_upload_message>
    454e:	e8 e9       	ldi	r30, 0x98	; 152
    4550:	fa e1       	ldi	r31, 0x1A	; 26
    4552:	01 90       	ld	r0, Z+
    4554:	00 20       	and	r0, r0
    4556:	e9 f7       	brne	.-6      	; 0x4552 <lora_driver_get_rn2483_hweui+0x14>
    4558:	e9 5a       	subi	r30, 0xA9	; 169
    455a:	fa 41       	sbci	r31, 0x1A	; 26
    455c:	39 f4       	brne	.+14     	; 0x456c <lora_driver_get_rn2483_hweui+0x2e>
    455e:	68 e9       	ldi	r22, 0x98	; 152
    4560:	7a e1       	ldi	r23, 0x1A	; 26
    4562:	ce 01       	movw	r24, r28
    4564:	0e 94 f0 2e 	call	0x5de0	; 0x5de0 <strcpy>
    4568:	80 e0       	ldi	r24, 0x00	; 0
    456a:	02 c0       	rjmp	.+4      	; 0x4570 <lora_driver_get_rn2483_hweui+0x32>
    456c:	18 82       	st	Y, r1
    456e:	81 e0       	ldi	r24, 0x01	; 1
    4570:	df 91       	pop	r29
    4572:	cf 91       	pop	r28
    4574:	08 95       	ret

00004576 <lora_driver_set_device_identifier>:
    4576:	fc 01       	movw	r30, r24
    4578:	01 90       	ld	r0, Z+
    457a:	00 20       	and	r0, r0
    457c:	e9 f7       	brne	.-6      	; 0x4578 <lora_driver_set_device_identifier+0x2>
    457e:	9f 01       	movw	r18, r30
    4580:	21 51       	subi	r18, 0x11	; 17
    4582:	31 09       	sbc	r19, r1
    4584:	28 17       	cp	r18, r24
    4586:	39 07       	cpc	r19, r25
    4588:	29 f4       	brne	.+10     	; 0x4594 <lora_driver_set_device_identifier+0x1e>
    458a:	bc 01       	movw	r22, r24
    458c:	84 e0       	ldi	r24, 0x04	; 4
    458e:	96 e0       	ldi	r25, 0x06	; 6
    4590:	63 cf       	rjmp	.-314    	; 0x4458 <_upload_message_rc>
    4592:	08 95       	ret
    4594:	89 e0       	ldi	r24, 0x09	; 9
    4596:	08 95       	ret

00004598 <lora_driver_set_application_identifier>:
    4598:	fc 01       	movw	r30, r24
    459a:	01 90       	ld	r0, Z+
    459c:	00 20       	and	r0, r0
    459e:	e9 f7       	brne	.-6      	; 0x459a <lora_driver_set_application_identifier+0x2>
    45a0:	9f 01       	movw	r18, r30
    45a2:	21 51       	subi	r18, 0x11	; 17
    45a4:	31 09       	sbc	r19, r1
    45a6:	28 17       	cp	r18, r24
    45a8:	39 07       	cpc	r19, r25
    45aa:	29 f4       	brne	.+10     	; 0x45b6 <lora_driver_set_application_identifier+0x1e>
    45ac:	bc 01       	movw	r22, r24
    45ae:	83 e1       	ldi	r24, 0x13	; 19
    45b0:	96 e0       	ldi	r25, 0x06	; 6
    45b2:	52 cf       	rjmp	.-348    	; 0x4458 <_upload_message_rc>
    45b4:	08 95       	ret
    45b6:	89 e0       	ldi	r24, 0x09	; 9
    45b8:	08 95       	ret

000045ba <lora_driver_set_application_key>:
    45ba:	fc 01       	movw	r30, r24
    45bc:	01 90       	ld	r0, Z+
    45be:	00 20       	and	r0, r0
    45c0:	e9 f7       	brne	.-6      	; 0x45bc <lora_driver_set_application_key+0x2>
    45c2:	9f 01       	movw	r18, r30
    45c4:	21 52       	subi	r18, 0x21	; 33
    45c6:	31 09       	sbc	r19, r1
    45c8:	28 17       	cp	r18, r24
    45ca:	39 07       	cpc	r19, r25
    45cc:	29 f4       	brne	.+10     	; 0x45d8 <lora_driver_set_application_key+0x1e>
    45ce:	bc 01       	movw	r22, r24
    45d0:	82 e2       	ldi	r24, 0x22	; 34
    45d2:	96 e0       	ldi	r25, 0x06	; 6
    45d4:	41 cf       	rjmp	.-382    	; 0x4458 <_upload_message_rc>
    45d6:	08 95       	ret
    45d8:	89 e0       	ldi	r24, 0x09	; 9
    45da:	08 95       	ret

000045dc <lora_driver_save_mac>:
    45dc:	60 e0       	ldi	r22, 0x00	; 0
    45de:	70 e0       	ldi	r23, 0x00	; 0
    45e0:	81 e6       	ldi	r24, 0x61	; 97
    45e2:	96 e0       	ldi	r25, 0x06	; 6
    45e4:	39 cf       	rjmp	.-398    	; 0x4458 <_upload_message_rc>
    45e6:	08 95       	ret

000045e8 <lora_driver_join>:
    45e8:	0f 93       	push	r16
    45ea:	1f 93       	push	r17
    45ec:	e8 2f       	mov	r30, r24
    45ee:	f0 e0       	ldi	r31, 0x00	; 0
    45f0:	ee 0f       	add	r30, r30
    45f2:	ff 1f       	adc	r31, r31
    45f4:	e5 5c       	subi	r30, 0xC5	; 197
    45f6:	f7 4f       	sbci	r31, 0xF7	; 247
    45f8:	60 81       	ld	r22, Z
    45fa:	71 81       	ldd	r23, Z+1	; 0x01
    45fc:	8a e6       	ldi	r24, 0x6A	; 106
    45fe:	96 e0       	ldi	r25, 0x06	; 6
    4600:	2b df       	rcall	.-426    	; 0x4458 <_upload_message_rc>
    4602:	81 11       	cpse	r24, r1
    4604:	14 c0       	rjmp	.+40     	; 0x462e <lora_driver_join+0x46>
    4606:	08 e2       	ldi	r16, 0x28	; 40
    4608:	15 e0       	ldi	r17, 0x05	; 5
    460a:	20 e0       	ldi	r18, 0x00	; 0
    460c:	30 e0       	ldi	r19, 0x00	; 0
    460e:	4d e2       	ldi	r20, 0x2D	; 45
    4610:	50 e0       	ldi	r21, 0x00	; 0
    4612:	68 e9       	ldi	r22, 0x98	; 152
    4614:	7a e1       	ldi	r23, 0x1A	; 26
    4616:	80 91 0f 1a 	lds	r24, 0x1A0F	; 0x801a0f <_serial_reply_buffer_handle>
    461a:	90 91 10 1a 	lds	r25, 0x1A10	; 0x801a10 <_serial_reply_buffer_handle+0x1>
    461e:	0e 94 53 13 	call	0x26a6	; 0x26a6 <xStreamBufferReceive>
    4622:	88 23       	and	r24, r24
    4624:	21 f0       	breq	.+8      	; 0x462e <lora_driver_join+0x46>
    4626:	88 e9       	ldi	r24, 0x98	; 152
    4628:	9a e1       	ldi	r25, 0x1A	; 26
    462a:	a1 de       	rcall	.-702    	; 0x436e <_reply2return_code>
    462c:	03 c0       	rjmp	.+6      	; 0x4634 <lora_driver_join+0x4c>
    462e:	88 e9       	ldi	r24, 0x98	; 152
    4630:	9a e1       	ldi	r25, 0x1A	; 26
    4632:	9d de       	rcall	.-710    	; 0x436e <_reply2return_code>
    4634:	1f 91       	pop	r17
    4636:	0f 91       	pop	r16
    4638:	08 95       	ret

0000463a <lora_driver_sent_upload_message>:
    463a:	0f 93       	push	r16
    463c:	1f 93       	push	r17
    463e:	cf 93       	push	r28
    4640:	df 93       	push	r29
    4642:	1f 92       	push	r1
    4644:	cd b7       	in	r28, 0x3d	; 61
    4646:	de b7       	in	r29, 0x3e	; 62
    4648:	db 01       	movw	r26, r22
    464a:	11 96       	adiw	r26, 0x01	; 1
    464c:	9c 91       	ld	r25, X
    464e:	11 97       	sbiw	r26, 0x01	; 1
    4650:	95 31       	cpi	r25, 0x15	; 21
    4652:	08 f0       	brcs	.+2      	; 0x4656 <lora_driver_sent_upload_message+0x1c>
    4654:	b4 c0       	rjmp	.+360    	; 0x47be <lora_driver_sent_upload_message+0x184>
    4656:	99 23       	and	r25, r25
    4658:	81 f1       	breq	.+96     	; 0x46ba <lora_driver_sent_upload_message+0x80>
    465a:	60 e0       	ldi	r22, 0x00	; 0
    465c:	70 e0       	ldi	r23, 0x00	; 0
    465e:	27 2f       	mov	r18, r23
    4660:	30 e0       	ldi	r19, 0x00	; 0
    4662:	46 2f       	mov	r20, r22
    4664:	50 e0       	ldi	r21, 0x00	; 0
    4666:	fd 01       	movw	r30, r26
    4668:	e4 0f       	add	r30, r20
    466a:	f5 1f       	adc	r31, r21
    466c:	92 81       	ldd	r25, Z+2	; 0x02
    466e:	92 95       	swap	r25
    4670:	9f 70       	andi	r25, 0x0F	; 15
    4672:	9a 30       	cpi	r25, 0x0A	; 10
    4674:	10 f0       	brcs	.+4      	; 0x467a <lora_driver_sent_upload_message+0x40>
    4676:	99 5c       	subi	r25, 0xC9	; 201
    4678:	01 c0       	rjmp	.+2      	; 0x467c <lora_driver_sent_upload_message+0x42>
    467a:	90 5d       	subi	r25, 0xD0	; 208
    467c:	f9 01       	movw	r30, r18
    467e:	e7 5d       	subi	r30, 0xD7	; 215
    4680:	f5 4e       	sbci	r31, 0xE5	; 229
    4682:	90 83       	st	Z, r25
    4684:	2f 5f       	subi	r18, 0xFF	; 255
    4686:	3f 4f       	sbci	r19, 0xFF	; 255
    4688:	fd 01       	movw	r30, r26
    468a:	e4 0f       	add	r30, r20
    468c:	f5 1f       	adc	r31, r21
    468e:	92 81       	ldd	r25, Z+2	; 0x02
    4690:	9f 70       	andi	r25, 0x0F	; 15
    4692:	49 2f       	mov	r20, r25
    4694:	50 e0       	ldi	r21, 0x00	; 0
    4696:	4a 30       	cpi	r20, 0x0A	; 10
    4698:	51 05       	cpc	r21, r1
    469a:	14 f0       	brlt	.+4      	; 0x46a0 <lora_driver_sent_upload_message+0x66>
    469c:	99 5c       	subi	r25, 0xC9	; 201
    469e:	01 c0       	rjmp	.+2      	; 0x46a2 <lora_driver_sent_upload_message+0x68>
    46a0:	90 5d       	subi	r25, 0xD0	; 208
    46a2:	f9 01       	movw	r30, r18
    46a4:	e7 5d       	subi	r30, 0xD7	; 215
    46a6:	f5 4e       	sbci	r31, 0xE5	; 229
    46a8:	90 83       	st	Z, r25
    46aa:	7e 5f       	subi	r23, 0xFE	; 254
    46ac:	6f 5f       	subi	r22, 0xFF	; 255
    46ae:	11 96       	adiw	r26, 0x01	; 1
    46b0:	9c 91       	ld	r25, X
    46b2:	11 97       	sbiw	r26, 0x01	; 1
    46b4:	69 17       	cp	r22, r25
    46b6:	98 f2       	brcs	.-90     	; 0x465e <lora_driver_sent_upload_message+0x24>
    46b8:	01 c0       	rjmp	.+2      	; 0x46bc <lora_driver_sent_upload_message+0x82>
    46ba:	70 e0       	ldi	r23, 0x00	; 0
    46bc:	e7 2f       	mov	r30, r23
    46be:	f0 e0       	ldi	r31, 0x00	; 0
    46c0:	e7 5d       	subi	r30, 0xD7	; 215
    46c2:	f5 4e       	sbci	r31, 0xE5	; 229
    46c4:	10 82       	st	Z, r1
    46c6:	4c 91       	ld	r20, X
    46c8:	81 11       	cpse	r24, r1
    46ca:	03 c0       	rjmp	.+6      	; 0x46d2 <lora_driver_sent_upload_message+0x98>
    46cc:	83 e7       	ldi	r24, 0x73	; 115
    46ce:	96 e0       	ldi	r25, 0x06	; 6
    46d0:	02 c0       	rjmp	.+4      	; 0x46d6 <lora_driver_sent_upload_message+0x9c>
    46d2:	85 e7       	ldi	r24, 0x75	; 117
    46d4:	96 e0       	ldi	r25, 0x06	; 6
    46d6:	29 e2       	ldi	r18, 0x29	; 41
    46d8:	3a e1       	ldi	r19, 0x1A	; 26
    46da:	3f 93       	push	r19
    46dc:	2f 93       	push	r18
    46de:	1f 92       	push	r1
    46e0:	4f 93       	push	r20
    46e2:	9f 93       	push	r25
    46e4:	8f 93       	push	r24
    46e6:	89 e7       	ldi	r24, 0x79	; 121
    46e8:	96 e0       	ldi	r25, 0x06	; 6
    46ea:	9f 93       	push	r25
    46ec:	8f 93       	push	r24
    46ee:	8b e6       	ldi	r24, 0x6B	; 107
    46f0:	9a e1       	ldi	r25, 0x1A	; 26
    46f2:	9f 93       	push	r25
    46f4:	8f 93       	push	r24
    46f6:	0e 94 52 2f 	call	0x5ea4	; 0x5ea4 <sprintf>
    46fa:	60 e0       	ldi	r22, 0x00	; 0
    46fc:	70 e0       	ldi	r23, 0x00	; 0
    46fe:	8b e6       	ldi	r24, 0x6B	; 107
    4700:	9a e1       	ldi	r25, 0x1A	; 26
    4702:	aa de       	rcall	.-684    	; 0x4458 <_upload_message_rc>
    4704:	0f b6       	in	r0, 0x3f	; 63
    4706:	f8 94       	cli
    4708:	de bf       	out	0x3e, r29	; 62
    470a:	0f be       	out	0x3f, r0	; 63
    470c:	cd bf       	out	0x3d, r28	; 61
    470e:	81 11       	cpse	r24, r1
    4710:	59 c0       	rjmp	.+178    	; 0x47c4 <lora_driver_sent_upload_message+0x18a>
    4712:	08 e2       	ldi	r16, 0x28	; 40
    4714:	15 e0       	ldi	r17, 0x05	; 5
    4716:	20 e0       	ldi	r18, 0x00	; 0
    4718:	30 e0       	ldi	r19, 0x00	; 0
    471a:	4d e2       	ldi	r20, 0x2D	; 45
    471c:	50 e0       	ldi	r21, 0x00	; 0
    471e:	68 e9       	ldi	r22, 0x98	; 152
    4720:	7a e1       	ldi	r23, 0x1A	; 26
    4722:	80 91 0f 1a 	lds	r24, 0x1A0F	; 0x801a0f <_serial_reply_buffer_handle>
    4726:	90 91 10 1a 	lds	r25, 0x1A10	; 0x801a10 <_serial_reply_buffer_handle+0x1>
    472a:	0e 94 53 13 	call	0x26a6	; 0x26a6 <xStreamBufferReceive>
    472e:	88 23       	and	r24, r24
    4730:	09 f4       	brne	.+2      	; 0x4734 <lora_driver_sent_upload_message+0xfa>
    4732:	47 c0       	rjmp	.+142    	; 0x47c2 <lora_driver_sent_upload_message+0x188>
    4734:	88 e9       	ldi	r24, 0x98	; 152
    4736:	9a e1       	ldi	r25, 0x1A	; 26
    4738:	1a de       	rcall	.-972    	; 0x436e <_reply2return_code>
    473a:	8e 30       	cpi	r24, 0x0E	; 14
    473c:	09 f0       	breq	.+2      	; 0x4740 <lora_driver_sent_upload_message+0x106>
    473e:	42 c0       	rjmp	.+132    	; 0x47c4 <lora_driver_sent_upload_message+0x18a>
    4740:	87 e0       	ldi	r24, 0x07	; 7
    4742:	89 83       	std	Y+1, r24	; 0x01
    4744:	80 91 0d 1a 	lds	r24, 0x1A0D	; 0x801a0d <_downlinkMessageBuffer>
    4748:	90 91 0e 1a 	lds	r25, 0x1A0E	; 0x801a0e <_downlinkMessageBuffer+0x1>
    474c:	89 2b       	or	r24, r25
    474e:	a9 f1       	breq	.+106    	; 0x47ba <lora_driver_sent_upload_message+0x180>
    4750:	be 01       	movw	r22, r28
    4752:	6f 5f       	subi	r22, 0xFF	; 255
    4754:	7f 4f       	sbci	r23, 0xFF	; 255
    4756:	88 e9       	ldi	r24, 0x98	; 152
    4758:	9a e1       	ldi	r25, 0x1A	; 26
    475a:	68 d1       	rcall	.+720    	; 0x4a2c <decode_port_no>
    475c:	80 93 13 1a 	sts	0x1A13, r24	; 0x801a13 <_downlink_payload>
    4760:	e9 81       	ldd	r30, Y+1	; 0x01
    4762:	f0 e0       	ldi	r31, 0x00	; 0
    4764:	e8 56       	subi	r30, 0x68	; 104
    4766:	f5 4e       	sbci	r31, 0xE5	; 229
    4768:	df 01       	movw	r26, r30
    476a:	0d 90       	ld	r0, X+
    476c:	00 20       	and	r0, r0
    476e:	e9 f7       	brne	.-6      	; 0x476a <lora_driver_sent_upload_message+0x130>
    4770:	11 97       	sbiw	r26, 0x01	; 1
    4772:	ae 1b       	sub	r26, r30
    4774:	bf 0b       	sbc	r27, r31
    4776:	aa 23       	and	r26, r26
    4778:	91 f0       	breq	.+36     	; 0x479e <lora_driver_sent_upload_message+0x164>
    477a:	bb 27       	eor	r27, r27
    477c:	cd 01       	movw	r24, r26
    477e:	01 97       	sbiw	r24, 0x01	; 1
    4780:	9c 01       	movw	r18, r24
    4782:	12 f4       	brpl	.+4      	; 0x4788 <lora_driver_sent_upload_message+0x14e>
    4784:	2f 5f       	subi	r18, 0xFF	; 255
    4786:	3f 4f       	sbci	r19, 0xFF	; 255
    4788:	35 95       	asr	r19
    478a:	27 95       	ror	r18
    478c:	20 93 14 1a 	sts	0x1A14, r18	; 0x801a14 <_downlink_payload+0x1>
    4790:	af 01       	movw	r20, r30
    4792:	4f 5f       	subi	r20, 0xFF	; 255
    4794:	5f 4f       	sbci	r21, 0xFF	; 255
    4796:	64 e1       	ldi	r22, 0x14	; 20
    4798:	85 e1       	ldi	r24, 0x15	; 21
    479a:	9a e1       	ldi	r25, 0x1A	; 26
    479c:	73 d1       	rcall	.+742    	; 0x4a84 <decode_hexadecimal_string_bytes>
    479e:	01 e0       	ldi	r16, 0x01	; 1
    47a0:	10 e0       	ldi	r17, 0x00	; 0
    47a2:	20 e0       	ldi	r18, 0x00	; 0
    47a4:	30 e0       	ldi	r19, 0x00	; 0
    47a6:	46 e1       	ldi	r20, 0x16	; 22
    47a8:	50 e0       	ldi	r21, 0x00	; 0
    47aa:	63 e1       	ldi	r22, 0x13	; 19
    47ac:	7a e1       	ldi	r23, 0x1A	; 26
    47ae:	80 91 0d 1a 	lds	r24, 0x1A0D	; 0x801a0d <_downlinkMessageBuffer>
    47b2:	90 91 0e 1a 	lds	r25, 0x1A0E	; 0x801a0e <_downlinkMessageBuffer+0x1>
    47b6:	0e 94 66 12 	call	0x24cc	; 0x24cc <xStreamBufferSend>
    47ba:	8e e0       	ldi	r24, 0x0E	; 14
    47bc:	03 c0       	rjmp	.+6      	; 0x47c4 <lora_driver_sent_upload_message+0x18a>
    47be:	84 e1       	ldi	r24, 0x14	; 20
    47c0:	01 c0       	rjmp	.+2      	; 0x47c4 <lora_driver_sent_upload_message+0x18a>
    47c2:	80 e0       	ldi	r24, 0x00	; 0
    47c4:	0f 90       	pop	r0
    47c6:	df 91       	pop	r29
    47c8:	cf 91       	pop	r28
    47ca:	1f 91       	pop	r17
    47cc:	0f 91       	pop	r16
    47ce:	08 95       	ret

000047d0 <lora_driver_set_adaptive_data_rate>:
    47d0:	81 30       	cpi	r24, 0x01	; 1
    47d2:	19 f0       	breq	.+6      	; 0x47da <lora_driver_set_adaptive_data_rate+0xa>
    47d4:	69 e8       	ldi	r22, 0x89	; 137
    47d6:	76 e0       	ldi	r23, 0x06	; 6
    47d8:	02 c0       	rjmp	.+4      	; 0x47de <lora_driver_set_adaptive_data_rate+0xe>
    47da:	62 e6       	ldi	r22, 0x62	; 98
    47dc:	77 e0       	ldi	r23, 0x07	; 7
    47de:	8d e8       	ldi	r24, 0x8D	; 141
    47e0:	96 e0       	ldi	r25, 0x06	; 6
    47e2:	3a ce       	rjmp	.-908    	; 0x4458 <_upload_message_rc>
    47e4:	08 95       	ret

000047e6 <lora_driver_set_receive_delay>:
    47e6:	9f 93       	push	r25
    47e8:	8f 93       	push	r24
    47ea:	8e eb       	ldi	r24, 0xBE	; 190
    47ec:	96 e0       	ldi	r25, 0x06	; 6
    47ee:	9f 93       	push	r25
    47f0:	8f 93       	push	r24
    47f2:	8b e6       	ldi	r24, 0x6B	; 107
    47f4:	9a e1       	ldi	r25, 0x1A	; 26
    47f6:	9f 93       	push	r25
    47f8:	8f 93       	push	r24
    47fa:	0e 94 52 2f 	call	0x5ea4	; 0x5ea4 <sprintf>
    47fe:	60 e0       	ldi	r22, 0x00	; 0
    4800:	70 e0       	ldi	r23, 0x00	; 0
    4802:	8b e6       	ldi	r24, 0x6B	; 107
    4804:	9a e1       	ldi	r25, 0x1A	; 26
    4806:	28 de       	rcall	.-944    	; 0x4458 <_upload_message_rc>
    4808:	0f 90       	pop	r0
    480a:	0f 90       	pop	r0
    480c:	0f 90       	pop	r0
    480e:	0f 90       	pop	r0
    4810:	0f 90       	pop	r0
    4812:	0f 90       	pop	r0
    4814:	08 95       	ret

00004816 <lora_driver_configure_to_eu868>:
    4816:	2f 92       	push	r2
    4818:	3f 92       	push	r3
    481a:	4f 92       	push	r4
    481c:	5f 92       	push	r5
    481e:	6f 92       	push	r6
    4820:	7f 92       	push	r7
    4822:	8f 92       	push	r8
    4824:	9f 92       	push	r9
    4826:	af 92       	push	r10
    4828:	bf 92       	push	r11
    482a:	cf 92       	push	r12
    482c:	df 92       	push	r13
    482e:	ef 92       	push	r14
    4830:	ff 92       	push	r15
    4832:	0f 93       	push	r16
    4834:	1f 93       	push	r17
    4836:	cf 93       	push	r28
    4838:	df 93       	push	r29
    483a:	cd b7       	in	r28, 0x3d	; 61
    483c:	de b7       	in	r29, 0x3e	; 62
    483e:	a0 97       	sbiw	r28, 0x20	; 32
    4840:	0f b6       	in	r0, 0x3f	; 63
    4842:	f8 94       	cli
    4844:	de bf       	out	0x3e, r29	; 62
    4846:	0f be       	out	0x3f, r0	; 63
    4848:	cd bf       	out	0x3d, r28	; 61
    484a:	6b ee       	ldi	r22, 0xEB	; 235
    484c:	76 e0       	ldi	r23, 0x06	; 6
    484e:	87 ef       	ldi	r24, 0xF7	; 247
    4850:	96 e0       	ldi	r25, 0x06	; 6
    4852:	33 dd       	rcall	.-1434   	; 0x42ba <_upload_message>
    4854:	8c dd       	rcall	.-1256   	; 0x436e <_reply2return_code>
    4856:	81 11       	cpse	r24, r1
    4858:	a3 c0       	rjmp	.+326    	; 0x49a0 <lora_driver_configure_to_eu868+0x18a>
    485a:	80 e2       	ldi	r24, 0x20	; 32
    485c:	e1 e2       	ldi	r30, 0x21	; 33
    485e:	f2 e0       	ldi	r31, 0x02	; 2
    4860:	de 01       	movw	r26, r28
    4862:	11 96       	adiw	r26, 0x01	; 1
    4864:	01 90       	ld	r0, Z+
    4866:	0d 92       	st	X+, r0
    4868:	8a 95       	dec	r24
    486a:	e1 f7       	brne	.-8      	; 0x4864 <lora_driver_configure_to_eu868+0x4e>
    486c:	9e 01       	movw	r18, r28
    486e:	2f 5f       	subi	r18, 0xFF	; 255
    4870:	3f 4f       	sbci	r19, 0xFF	; 255
    4872:	69 01       	movw	r12, r18
    4874:	e1 2c       	mov	r14, r1
    4876:	f1 2c       	mov	r15, r1
    4878:	0f 2e       	mov	r0, r31
    487a:	f3 e0       	ldi	r31, 0x03	; 3
    487c:	af 2e       	mov	r10, r31
    487e:	f7 e0       	ldi	r31, 0x07	; 7
    4880:	bf 2e       	mov	r11, r31
    4882:	f0 2d       	mov	r31, r0
    4884:	0b e6       	ldi	r16, 0x6B	; 107
    4886:	1a e1       	ldi	r17, 0x1A	; 26
    4888:	0f 2e       	mov	r0, r31
    488a:	fc e1       	ldi	r31, 0x1C	; 28
    488c:	4f 2e       	mov	r4, r31
    488e:	f7 e0       	ldi	r31, 0x07	; 7
    4890:	5f 2e       	mov	r5, r31
    4892:	f0 2d       	mov	r31, r0
    4894:	0f 2e       	mov	r0, r31
    4896:	f3 e3       	ldi	r31, 0x33	; 51
    4898:	8f 2e       	mov	r8, r31
    489a:	f7 e0       	ldi	r31, 0x07	; 7
    489c:	9f 2e       	mov	r9, r31
    489e:	f0 2d       	mov	r31, r0
    48a0:	0f 2e       	mov	r0, r31
    48a2:	fd e4       	ldi	r31, 0x4D	; 77
    48a4:	6f 2e       	mov	r6, r31
    48a6:	f7 e0       	ldi	r31, 0x07	; 7
    48a8:	7f 2e       	mov	r7, r31
    48aa:	f0 2d       	mov	r31, r0
    48ac:	3e 2c       	mov	r3, r14
    48ae:	2f 2c       	mov	r2, r15
    48b0:	ff 92       	push	r15
    48b2:	ef 92       	push	r14
    48b4:	bf 92       	push	r11
    48b6:	af 92       	push	r10
    48b8:	1f 93       	push	r17
    48ba:	0f 93       	push	r16
    48bc:	0e 94 52 2f 	call	0x5ea4	; 0x5ea4 <sprintf>
    48c0:	60 e0       	ldi	r22, 0x00	; 0
    48c2:	70 e0       	ldi	r23, 0x00	; 0
    48c4:	c8 01       	movw	r24, r16
    48c6:	f9 dc       	rcall	.-1550   	; 0x42ba <_upload_message>
    48c8:	52 dd       	rcall	.-1372   	; 0x436e <_reply2return_code>
    48ca:	0f 90       	pop	r0
    48cc:	0f 90       	pop	r0
    48ce:	0f 90       	pop	r0
    48d0:	0f 90       	pop	r0
    48d2:	0f 90       	pop	r0
    48d4:	0f 90       	pop	r0
    48d6:	81 11       	cpse	r24, r1
    48d8:	63 c0       	rjmp	.+198    	; 0x49a0 <lora_driver_configure_to_eu868+0x18a>
    48da:	32 e0       	ldi	r19, 0x02	; 2
    48dc:	3e 15       	cp	r19, r14
    48de:	e8 f4       	brcc	.+58     	; 0x491a <lora_driver_configure_to_eu868+0x104>
    48e0:	f6 01       	movw	r30, r12
    48e2:	83 81       	ldd	r24, Z+3	; 0x03
    48e4:	8f 93       	push	r24
    48e6:	82 81       	ldd	r24, Z+2	; 0x02
    48e8:	8f 93       	push	r24
    48ea:	81 81       	ldd	r24, Z+1	; 0x01
    48ec:	8f 93       	push	r24
    48ee:	80 81       	ld	r24, Z
    48f0:	8f 93       	push	r24
    48f2:	ff 92       	push	r15
    48f4:	ef 92       	push	r14
    48f6:	5f 92       	push	r5
    48f8:	4f 92       	push	r4
    48fa:	1f 93       	push	r17
    48fc:	0f 93       	push	r16
    48fe:	0e 94 52 2f 	call	0x5ea4	; 0x5ea4 <sprintf>
    4902:	60 e0       	ldi	r22, 0x00	; 0
    4904:	70 e0       	ldi	r23, 0x00	; 0
    4906:	c8 01       	movw	r24, r16
    4908:	d8 dc       	rcall	.-1616   	; 0x42ba <_upload_message>
    490a:	31 dd       	rcall	.-1438   	; 0x436e <_reply2return_code>
    490c:	0f b6       	in	r0, 0x3f	; 63
    490e:	f8 94       	cli
    4910:	de bf       	out	0x3e, r29	; 62
    4912:	0f be       	out	0x3f, r0	; 63
    4914:	cd bf       	out	0x3d, r28	; 61
    4916:	81 11       	cpse	r24, r1
    4918:	43 c0       	rjmp	.+134    	; 0x49a0 <lora_driver_configure_to_eu868+0x18a>
    491a:	2f 92       	push	r2
    491c:	3f 92       	push	r3
    491e:	9f 92       	push	r9
    4920:	8f 92       	push	r8
    4922:	1f 93       	push	r17
    4924:	0f 93       	push	r16
    4926:	0e 94 52 2f 	call	0x5ea4	; 0x5ea4 <sprintf>
    492a:	60 e0       	ldi	r22, 0x00	; 0
    492c:	70 e0       	ldi	r23, 0x00	; 0
    492e:	c8 01       	movw	r24, r16
    4930:	c4 dc       	rcall	.-1656   	; 0x42ba <_upload_message>
    4932:	1d dd       	rcall	.-1478   	; 0x436e <_reply2return_code>
    4934:	0f 90       	pop	r0
    4936:	0f 90       	pop	r0
    4938:	0f 90       	pop	r0
    493a:	0f 90       	pop	r0
    493c:	0f 90       	pop	r0
    493e:	0f 90       	pop	r0
    4940:	81 11       	cpse	r24, r1
    4942:	2e c0       	rjmp	.+92     	; 0x49a0 <lora_driver_configure_to_eu868+0x18a>
    4944:	2f 92       	push	r2
    4946:	3f 92       	push	r3
    4948:	7f 92       	push	r7
    494a:	6f 92       	push	r6
    494c:	1f 93       	push	r17
    494e:	0f 93       	push	r16
    4950:	0e 94 52 2f 	call	0x5ea4	; 0x5ea4 <sprintf>
    4954:	60 e0       	ldi	r22, 0x00	; 0
    4956:	70 e0       	ldi	r23, 0x00	; 0
    4958:	c8 01       	movw	r24, r16
    495a:	af dc       	rcall	.-1698   	; 0x42ba <_upload_message>
    495c:	08 dd       	rcall	.-1520   	; 0x436e <_reply2return_code>
    495e:	0f 90       	pop	r0
    4960:	0f 90       	pop	r0
    4962:	0f 90       	pop	r0
    4964:	0f 90       	pop	r0
    4966:	0f 90       	pop	r0
    4968:	0f 90       	pop	r0
    496a:	81 11       	cpse	r24, r1
    496c:	19 c0       	rjmp	.+50     	; 0x49a0 <lora_driver_configure_to_eu868+0x18a>
    496e:	3f ef       	ldi	r19, 0xFF	; 255
    4970:	e3 1a       	sub	r14, r19
    4972:	f3 0a       	sbc	r15, r19
    4974:	84 e0       	ldi	r24, 0x04	; 4
    4976:	c8 0e       	add	r12, r24
    4978:	d1 1c       	adc	r13, r1
    497a:	98 e0       	ldi	r25, 0x08	; 8
    497c:	e9 16       	cp	r14, r25
    497e:	f1 04       	cpc	r15, r1
    4980:	09 f0       	breq	.+2      	; 0x4984 <lora_driver_configure_to_eu868+0x16e>
    4982:	94 cf       	rjmp	.-216    	; 0x48ac <lora_driver_configure_to_eu868+0x96>
    4984:	60 e0       	ldi	r22, 0x00	; 0
    4986:	70 e0       	ldi	r23, 0x00	; 0
    4988:	85 e6       	ldi	r24, 0x65	; 101
    498a:	97 e0       	ldi	r25, 0x07	; 7
    498c:	96 dc       	rcall	.-1748   	; 0x42ba <_upload_message>
    498e:	ef dc       	rcall	.-1570   	; 0x436e <_reply2return_code>
    4990:	81 11       	cpse	r24, r1
    4992:	06 c0       	rjmp	.+12     	; 0x49a0 <lora_driver_configure_to_eu868+0x18a>
    4994:	60 e0       	ldi	r22, 0x00	; 0
    4996:	70 e0       	ldi	r23, 0x00	; 0
    4998:	86 e7       	ldi	r24, 0x76	; 118
    499a:	97 e0       	ldi	r25, 0x07	; 7
    499c:	8e dc       	rcall	.-1764   	; 0x42ba <_upload_message>
    499e:	e7 dc       	rcall	.-1586   	; 0x436e <_reply2return_code>
    49a0:	a0 96       	adiw	r28, 0x20	; 32
    49a2:	0f b6       	in	r0, 0x3f	; 63
    49a4:	f8 94       	cli
    49a6:	de bf       	out	0x3e, r29	; 62
    49a8:	0f be       	out	0x3f, r0	; 63
    49aa:	cd bf       	out	0x3d, r28	; 61
    49ac:	df 91       	pop	r29
    49ae:	cf 91       	pop	r28
    49b0:	1f 91       	pop	r17
    49b2:	0f 91       	pop	r16
    49b4:	ff 90       	pop	r15
    49b6:	ef 90       	pop	r14
    49b8:	df 90       	pop	r13
    49ba:	cf 90       	pop	r12
    49bc:	bf 90       	pop	r11
    49be:	af 90       	pop	r10
    49c0:	9f 90       	pop	r9
    49c2:	8f 90       	pop	r8
    49c4:	7f 90       	pop	r7
    49c6:	6f 90       	pop	r6
    49c8:	5f 90       	pop	r5
    49ca:	4f 90       	pop	r4
    49cc:	3f 90       	pop	r3
    49ce:	2f 90       	pop	r2
    49d0:	08 95       	ret

000049d2 <lora_driver_set_otaa_identity>:
    49d2:	ef 92       	push	r14
    49d4:	ff 92       	push	r15
    49d6:	0f 93       	push	r16
    49d8:	1f 93       	push	r17
    49da:	cf 93       	push	r28
    49dc:	df 93       	push	r29
    49de:	ec 01       	movw	r28, r24
    49e0:	8b 01       	movw	r16, r22
    49e2:	7a 01       	movw	r14, r20
    49e4:	81 e0       	ldi	r24, 0x01	; 1
    49e6:	f4 de       	rcall	.-536    	; 0x47d0 <lora_driver_set_adaptive_data_rate>
    49e8:	81 11       	cpse	r24, r1
    49ea:	0d c0       	rjmp	.+26     	; 0x4a06 <lora_driver_set_otaa_identity+0x34>
    49ec:	ce 01       	movw	r24, r28
    49ee:	d4 dd       	rcall	.-1112   	; 0x4598 <lora_driver_set_application_identifier>
    49f0:	81 11       	cpse	r24, r1
    49f2:	09 c0       	rjmp	.+18     	; 0x4a06 <lora_driver_set_otaa_identity+0x34>
    49f4:	c8 01       	movw	r24, r16
    49f6:	e1 dd       	rcall	.-1086   	; 0x45ba <lora_driver_set_application_key>
    49f8:	81 11       	cpse	r24, r1
    49fa:	05 c0       	rjmp	.+10     	; 0x4a06 <lora_driver_set_otaa_identity+0x34>
    49fc:	c7 01       	movw	r24, r14
    49fe:	bb dd       	rcall	.-1162   	; 0x4576 <lora_driver_set_device_identifier>
    4a00:	81 11       	cpse	r24, r1
    4a02:	01 c0       	rjmp	.+2      	; 0x4a06 <lora_driver_set_otaa_identity+0x34>
    4a04:	eb dd       	rcall	.-1066   	; 0x45dc <lora_driver_save_mac>
    4a06:	df 91       	pop	r29
    4a08:	cf 91       	pop	r28
    4a0a:	1f 91       	pop	r17
    4a0c:	0f 91       	pop	r16
    4a0e:	ff 90       	pop	r15
    4a10:	ef 90       	pop	r14
    4a12:	08 95       	ret

00004a14 <lora_driver_map_return_code_to_text>:
    4a14:	90 e0       	ldi	r25, 0x00	; 0
    4a16:	fc 01       	movw	r30, r24
    4a18:	ee 0f       	add	r30, r30
    4a1a:	ff 1f       	adc	r31, r31
    4a1c:	8e 0f       	add	r24, r30
    4a1e:	9f 1f       	adc	r25, r31
    4a20:	fc 01       	movw	r30, r24
    4a22:	e1 5c       	subi	r30, 0xC1	; 193
    4a24:	f7 4f       	sbci	r31, 0xF7	; 247
    4a26:	81 81       	ldd	r24, Z+1	; 0x01
    4a28:	92 81       	ldd	r25, Z+2	; 0x02
    4a2a:	08 95       	ret

00004a2c <decode_port_no>:
    4a2c:	dc 01       	movw	r26, r24
    4a2e:	00 97       	sbiw	r24, 0x00	; 0
    4a30:	29 f1       	breq	.+74     	; 0x4a7c <decode_port_no+0x50>
    4a32:	fb 01       	movw	r30, r22
    4a34:	20 81       	ld	r18, Z
    4a36:	fc 01       	movw	r30, r24
    4a38:	01 90       	ld	r0, Z+
    4a3a:	00 20       	and	r0, r0
    4a3c:	e9 f7       	brne	.-6      	; 0x4a38 <decode_port_no+0xc>
    4a3e:	31 97       	sbiw	r30, 0x01	; 1
    4a40:	e8 1b       	sub	r30, r24
    4a42:	f9 0b       	sbc	r31, r25
    4a44:	82 2f       	mov	r24, r18
    4a46:	90 e0       	ldi	r25, 0x00	; 0
    4a48:	e8 17       	cp	r30, r24
    4a4a:	f9 07       	cpc	r31, r25
    4a4c:	c8 f0       	brcs	.+50     	; 0x4a80 <decode_port_no+0x54>
    4a4e:	80 e0       	ldi	r24, 0x00	; 0
    4a50:	08 c0       	rjmp	.+16     	; 0x4a62 <decode_port_no+0x36>
    4a52:	88 0f       	add	r24, r24
    4a54:	38 2f       	mov	r19, r24
    4a56:	33 0f       	add	r19, r19
    4a58:	33 0f       	add	r19, r19
    4a5a:	83 0f       	add	r24, r19
    4a5c:	80 53       	subi	r24, 0x30	; 48
    4a5e:	89 0f       	add	r24, r25
    4a60:	2f 5f       	subi	r18, 0xFF	; 255
    4a62:	fd 01       	movw	r30, r26
    4a64:	e2 0f       	add	r30, r18
    4a66:	f1 1d       	adc	r31, r1
    4a68:	90 81       	ld	r25, Z
    4a6a:	30 ed       	ldi	r19, 0xD0	; 208
    4a6c:	39 0f       	add	r19, r25
    4a6e:	3a 30       	cpi	r19, 0x0A	; 10
    4a70:	10 f4       	brcc	.+4      	; 0x4a76 <decode_port_no+0x4a>
    4a72:	91 11       	cpse	r25, r1
    4a74:	ee cf       	rjmp	.-36     	; 0x4a52 <decode_port_no+0x26>
    4a76:	fb 01       	movw	r30, r22
    4a78:	20 83       	st	Z, r18
    4a7a:	08 95       	ret
    4a7c:	80 e0       	ldi	r24, 0x00	; 0
    4a7e:	08 95       	ret
    4a80:	80 e0       	ldi	r24, 0x00	; 0
    4a82:	08 95       	ret

00004a84 <decode_hexadecimal_string_bytes>:
    4a84:	0f 93       	push	r16
    4a86:	1f 93       	push	r17
    4a88:	cf 93       	push	r28
    4a8a:	df 93       	push	r29
    4a8c:	dc 01       	movw	r26, r24
    4a8e:	ea 01       	movw	r28, r20
    4a90:	20 97       	sbiw	r28, 0x00	; 0
    4a92:	e1 f1       	breq	.+120    	; 0x4b0c <decode_hexadecimal_string_bytes+0x88>
    4a94:	fa 01       	movw	r30, r20
    4a96:	01 90       	ld	r0, Z+
    4a98:	00 20       	and	r0, r0
    4a9a:	e9 f7       	brne	.-6      	; 0x4a96 <decode_hexadecimal_string_bytes+0x12>
    4a9c:	31 97       	sbiw	r30, 0x01	; 1
    4a9e:	e4 1b       	sub	r30, r20
    4aa0:	f5 0b       	sbc	r31, r21
    4aa2:	32 97       	sbiw	r30, 0x02	; 2
    4aa4:	10 f5       	brcc	.+68     	; 0x4aea <decode_hexadecimal_string_bytes+0x66>
    4aa6:	32 c0       	rjmp	.+100    	; 0x4b0c <decode_hexadecimal_string_bytes+0x88>
    4aa8:	8d 01       	movw	r16, r26
    4aaa:	04 0f       	add	r16, r20
    4aac:	15 1f       	adc	r17, r21
    4aae:	30 e0       	ldi	r19, 0x00	; 0
    4ab0:	ae 01       	movw	r20, r28
    4ab2:	42 0f       	add	r20, r18
    4ab4:	53 1f       	adc	r21, r19
    4ab6:	fa 01       	movw	r30, r20
    4ab8:	90 81       	ld	r25, Z
    4aba:	91 34       	cpi	r25, 0x41	; 65
    4abc:	28 f0       	brcs	.+10     	; 0x4ac8 <decode_hexadecimal_string_bytes+0x44>
    4abe:	97 53       	subi	r25, 0x37	; 55
    4ac0:	59 2f       	mov	r21, r25
    4ac2:	52 95       	swap	r21
    4ac4:	50 7f       	andi	r21, 0xF0	; 240
    4ac6:	03 c0       	rjmp	.+6      	; 0x4ace <decode_hexadecimal_string_bytes+0x4a>
    4ac8:	59 2f       	mov	r21, r25
    4aca:	52 95       	swap	r21
    4acc:	50 7f       	andi	r21, 0xF0	; 240
    4ace:	2c 0f       	add	r18, r28
    4ad0:	3d 1f       	adc	r19, r29
    4ad2:	f9 01       	movw	r30, r18
    4ad4:	91 81       	ldd	r25, Z+1	; 0x01
    4ad6:	91 34       	cpi	r25, 0x41	; 65
    4ad8:	10 f0       	brcs	.+4      	; 0x4ade <decode_hexadecimal_string_bytes+0x5a>
    4ada:	97 53       	subi	r25, 0x37	; 55
    4adc:	01 c0       	rjmp	.+2      	; 0x4ae0 <decode_hexadecimal_string_bytes+0x5c>
    4ade:	90 53       	subi	r25, 0x30	; 48
    4ae0:	95 0f       	add	r25, r21
    4ae2:	f8 01       	movw	r30, r16
    4ae4:	90 83       	st	Z, r25
    4ae6:	8f 5f       	subi	r24, 0xFF	; 255
    4ae8:	01 c0       	rjmp	.+2      	; 0x4aec <decode_hexadecimal_string_bytes+0x68>
    4aea:	80 e0       	ldi	r24, 0x00	; 0
    4aec:	28 2f       	mov	r18, r24
    4aee:	22 0f       	add	r18, r18
    4af0:	48 2f       	mov	r20, r24
    4af2:	50 e0       	ldi	r21, 0x00	; 0
    4af4:	fe 01       	movw	r30, r28
    4af6:	01 90       	ld	r0, Z+
    4af8:	00 20       	and	r0, r0
    4afa:	e9 f7       	brne	.-6      	; 0x4af6 <decode_hexadecimal_string_bytes+0x72>
    4afc:	31 97       	sbiw	r30, 0x01	; 1
    4afe:	ec 1b       	sub	r30, r28
    4b00:	fd 0b       	sbc	r31, r29
    4b02:	4e 17       	cp	r20, r30
    4b04:	5f 07       	cpc	r21, r31
    4b06:	10 f4       	brcc	.+4      	; 0x4b0c <decode_hexadecimal_string_bytes+0x88>
    4b08:	86 13       	cpse	r24, r22
    4b0a:	ce cf       	rjmp	.-100    	; 0x4aa8 <decode_hexadecimal_string_bytes+0x24>
    4b0c:	df 91       	pop	r29
    4b0e:	cf 91       	pop	r28
    4b10:	1f 91       	pop	r17
    4b12:	0f 91       	pop	r16
    4b14:	08 95       	ret

00004b16 <reg_read_register>:
    4b16:	fc 01       	movw	r30, r24
    4b18:	80 81       	ld	r24, Z
    4b1a:	08 95       	ret

00004b1c <reg_read_bit>:
    4b1c:	fc 01       	movw	r30, r24
    4b1e:	20 81       	ld	r18, Z
    4b20:	81 e0       	ldi	r24, 0x01	; 1
    4b22:	90 e0       	ldi	r25, 0x00	; 0
    4b24:	02 c0       	rjmp	.+4      	; 0x4b2a <reg_read_bit+0xe>
    4b26:	88 0f       	add	r24, r24
    4b28:	99 1f       	adc	r25, r25
    4b2a:	6a 95       	dec	r22
    4b2c:	e2 f7       	brpl	.-8      	; 0x4b26 <reg_read_bit+0xa>
    4b2e:	82 23       	and	r24, r18
    4b30:	08 95       	ret

00004b32 <reg_read_bits>:
    4b32:	fc 01       	movw	r30, r24
    4b34:	80 81       	ld	r24, Z
    4b36:	86 23       	and	r24, r22
    4b38:	08 95       	ret

00004b3a <reg_set_register>:
    4b3a:	fc 01       	movw	r30, r24
    4b3c:	60 83       	st	Z, r22
    4b3e:	08 95       	ret

00004b40 <reg_clear_register>:
    4b40:	fc 01       	movw	r30, r24
    4b42:	10 82       	st	Z, r1
    4b44:	08 95       	ret

00004b46 <reg_set_bit>:
    4b46:	fc 01       	movw	r30, r24
    4b48:	40 81       	ld	r20, Z
    4b4a:	21 e0       	ldi	r18, 0x01	; 1
    4b4c:	30 e0       	ldi	r19, 0x00	; 0
    4b4e:	02 c0       	rjmp	.+4      	; 0x4b54 <reg_set_bit+0xe>
    4b50:	22 0f       	add	r18, r18
    4b52:	33 1f       	adc	r19, r19
    4b54:	6a 95       	dec	r22
    4b56:	e2 f7       	brpl	.-8      	; 0x4b50 <reg_set_bit+0xa>
    4b58:	24 2b       	or	r18, r20
    4b5a:	20 83       	st	Z, r18
    4b5c:	08 95       	ret

00004b5e <reg_set_bits>:
    4b5e:	fc 01       	movw	r30, r24
    4b60:	20 81       	ld	r18, Z
    4b62:	62 2b       	or	r22, r18
    4b64:	60 83       	st	Z, r22
    4b66:	08 95       	ret

00004b68 <reg_toggle_bit>:
    4b68:	fc 01       	movw	r30, r24
    4b6a:	40 81       	ld	r20, Z
    4b6c:	21 e0       	ldi	r18, 0x01	; 1
    4b6e:	30 e0       	ldi	r19, 0x00	; 0
    4b70:	02 c0       	rjmp	.+4      	; 0x4b76 <reg_toggle_bit+0xe>
    4b72:	22 0f       	add	r18, r18
    4b74:	33 1f       	adc	r19, r19
    4b76:	6a 95       	dec	r22
    4b78:	e2 f7       	brpl	.-8      	; 0x4b72 <reg_toggle_bit+0xa>
    4b7a:	24 27       	eor	r18, r20
    4b7c:	20 83       	st	Z, r18
    4b7e:	08 95       	ret

00004b80 <reg_toggle_bits>:
    4b80:	fc 01       	movw	r30, r24
    4b82:	20 81       	ld	r18, Z
    4b84:	62 27       	eor	r22, r18
    4b86:	60 83       	st	Z, r22
    4b88:	08 95       	ret

00004b8a <reg_clear_bit>:
    4b8a:	fc 01       	movw	r30, r24
    4b8c:	90 81       	ld	r25, Z
    4b8e:	21 e0       	ldi	r18, 0x01	; 1
    4b90:	30 e0       	ldi	r19, 0x00	; 0
    4b92:	02 c0       	rjmp	.+4      	; 0x4b98 <reg_clear_bit+0xe>
    4b94:	22 0f       	add	r18, r18
    4b96:	33 1f       	adc	r19, r19
    4b98:	6a 95       	dec	r22
    4b9a:	e2 f7       	brpl	.-8      	; 0x4b94 <reg_clear_bit+0xa>
    4b9c:	20 95       	com	r18
    4b9e:	29 23       	and	r18, r25
    4ba0:	20 83       	st	Z, r18
    4ba2:	08 95       	ret

00004ba4 <reg_clear_bits>:
    4ba4:	fc 01       	movw	r30, r24
    4ba6:	90 81       	ld	r25, Z
    4ba8:	60 95       	com	r22
    4baa:	69 23       	and	r22, r25
    4bac:	60 83       	st	Z, r22
    4bae:	08 95       	ret

00004bb0 <serial_new_instance>:
    4bb0:	2f 92       	push	r2
    4bb2:	3f 92       	push	r3
    4bb4:	4f 92       	push	r4
    4bb6:	5f 92       	push	r5
    4bb8:	6f 92       	push	r6
    4bba:	7f 92       	push	r7
    4bbc:	8f 92       	push	r8
    4bbe:	9f 92       	push	r9
    4bc0:	af 92       	push	r10
    4bc2:	cf 92       	push	r12
    4bc4:	ef 92       	push	r14
    4bc6:	ff 92       	push	r15
    4bc8:	0f 93       	push	r16
    4bca:	1f 93       	push	r17
    4bcc:	cf 93       	push	r28
    4bce:	df 93       	push	r29
    4bd0:	cd b7       	in	r28, 0x3d	; 61
    4bd2:	de b7       	in	r29, 0x3e	; 62
    4bd4:	f8 2e       	mov	r15, r24
    4bd6:	2a 01       	movw	r4, r20
    4bd8:	3b 01       	movw	r6, r22
    4bda:	88 e0       	ldi	r24, 0x08	; 8
    4bdc:	90 e0       	ldi	r25, 0x00	; 0
    4bde:	9b d7       	rcall	.+3894   	; 0x5b16 <malloc>
    4be0:	8c 01       	movw	r16, r24
    4be2:	8f 2d       	mov	r24, r15
    4be4:	90 e0       	ldi	r25, 0x00	; 0
    4be6:	88 0f       	add	r24, r24
    4be8:	99 1f       	adc	r25, r25
    4bea:	fc 01       	movw	r30, r24
    4bec:	eb 53       	subi	r30, 0x3B	; 59
    4bee:	f5 4e       	sbci	r31, 0xE5	; 229
    4bf0:	11 83       	std	Z+1, r17	; 0x01
    4bf2:	00 83       	st	Z, r16
    4bf4:	fc 01       	movw	r30, r24
    4bf6:	e6 5f       	subi	r30, 0xF6	; 246
    4bf8:	fd 4f       	sbci	r31, 0xFD	; 253
    4bfa:	80 81       	ld	r24, Z
    4bfc:	91 81       	ldd	r25, Z+1	; 0x01
    4bfe:	d8 01       	movw	r26, r16
    4c00:	8d 93       	st	X+, r24
    4c02:	9c 93       	st	X, r25
    4c04:	6c 2d       	mov	r22, r12
    4c06:	70 e0       	ldi	r23, 0x00	; 0
    4c08:	84 e0       	ldi	r24, 0x04	; 4
    4c0a:	90 e0       	ldi	r25, 0x00	; 0
    4c0c:	6a d7       	rcall	.+3796   	; 0x5ae2 <calloc>
    4c0e:	1c 01       	movw	r2, r24
    4c10:	61 e0       	ldi	r22, 0x01	; 1
    4c12:	70 e0       	ldi	r23, 0x00	; 0
    4c14:	86 e0       	ldi	r24, 0x06	; 6
    4c16:	90 e0       	ldi	r25, 0x00	; 0
    4c18:	64 d7       	rcall	.+3784   	; 0x5ae2 <calloc>
    4c1a:	7c 01       	movw	r14, r24
    4c1c:	4c 2d       	mov	r20, r12
    4c1e:	b1 01       	movw	r22, r2
    4c20:	2b d5       	rcall	.+2646   	; 0x5678 <fifo_init>
    4c22:	f8 01       	movw	r30, r16
    4c24:	f5 82       	std	Z+5, r15	; 0x05
    4c26:	e4 82       	std	Z+4, r14	; 0x04
    4c28:	6a 2d       	mov	r22, r10
    4c2a:	70 e0       	ldi	r23, 0x00	; 0
    4c2c:	84 e0       	ldi	r24, 0x04	; 4
    4c2e:	90 e0       	ldi	r25, 0x00	; 0
    4c30:	58 d7       	rcall	.+3760   	; 0x5ae2 <calloc>
    4c32:	1c 01       	movw	r2, r24
    4c34:	61 e0       	ldi	r22, 0x01	; 1
    4c36:	70 e0       	ldi	r23, 0x00	; 0
    4c38:	86 e0       	ldi	r24, 0x06	; 6
    4c3a:	90 e0       	ldi	r25, 0x00	; 0
    4c3c:	52 d7       	rcall	.+3748   	; 0x5ae2 <calloc>
    4c3e:	7c 01       	movw	r14, r24
    4c40:	4a 2d       	mov	r20, r10
    4c42:	b1 01       	movw	r22, r2
    4c44:	19 d5       	rcall	.+2610   	; 0x5678 <fifo_init>
    4c46:	d8 01       	movw	r26, r16
    4c48:	13 96       	adiw	r26, 0x03	; 3
    4c4a:	fc 92       	st	X, r15
    4c4c:	ee 92       	st	-X, r14
    4c4e:	12 97       	sbiw	r26, 0x02	; 2
    4c50:	17 96       	adiw	r26, 0x07	; 7
    4c52:	9c 92       	st	X, r9
    4c54:	8e 92       	st	-X, r8
    4c56:	16 97       	sbiw	r26, 0x06	; 6
    4c58:	ff b6       	in	r15, 0x3f	; 63
    4c5a:	f8 94       	cli
    4c5c:	ed 91       	ld	r30, X+
    4c5e:	fc 91       	ld	r31, X
    4c60:	11 97       	sbiw	r26, 0x01	; 1
    4c62:	36 97       	sbiw	r30, 0x06	; 6
    4c64:	80 81       	ld	r24, Z
    4c66:	82 60       	ori	r24, 0x02	; 2
    4c68:	80 83       	st	Z, r24
    4c6a:	8d 90       	ld	r8, X+
    4c6c:	9c 90       	ld	r9, X
    4c6e:	c3 01       	movw	r24, r6
    4c70:	b2 01       	movw	r22, r4
    4c72:	1c d6       	rcall	.+3128   	; 0x58ac <__floatunsisf>
    4c74:	20 e0       	ldi	r18, 0x00	; 0
    4c76:	30 e0       	ldi	r19, 0x00	; 0
    4c78:	40 e0       	ldi	r20, 0x00	; 0
    4c7a:	51 e4       	ldi	r21, 0x41	; 65
    4c7c:	a5 d6       	rcall	.+3402   	; 0x59c8 <__mulsf3>
    4c7e:	9b 01       	movw	r18, r22
    4c80:	ac 01       	movw	r20, r24
    4c82:	60 e0       	ldi	r22, 0x00	; 0
    4c84:	74 e2       	ldi	r23, 0x24	; 36
    4c86:	84 e7       	ldi	r24, 0x74	; 116
    4c88:	9b e4       	ldi	r25, 0x4B	; 75
    4c8a:	77 d5       	rcall	.+2798   	; 0x577a <__divsf3>
    4c8c:	20 e0       	ldi	r18, 0x00	; 0
    4c8e:	30 e0       	ldi	r19, 0x00	; 0
    4c90:	40 e8       	ldi	r20, 0x80	; 128
    4c92:	5f e3       	ldi	r21, 0x3F	; 63
    4c94:	0d d5       	rcall	.+2586   	; 0x56b0 <__subsf3>
    4c96:	de d5       	rcall	.+3004   	; 0x5854 <__fixunssfsi>
    4c98:	f4 01       	movw	r30, r8
    4c9a:	32 97       	sbiw	r30, 0x02	; 2
    4c9c:	60 83       	st	Z, r22
    4c9e:	d8 01       	movw	r26, r16
    4ca0:	ed 91       	ld	r30, X+
    4ca2:	fc 91       	ld	r31, X
    4ca4:	11 97       	sbiw	r26, 0x01	; 1
    4ca6:	35 97       	sbiw	r30, 0x05	; 5
    4ca8:	88 e9       	ldi	r24, 0x98	; 152
    4caa:	80 83       	st	Z, r24
    4cac:	ed 91       	ld	r30, X+
    4cae:	fc 91       	ld	r31, X
    4cb0:	34 97       	sbiw	r30, 0x04	; 4
    4cb2:	86 e0       	ldi	r24, 0x06	; 6
    4cb4:	80 83       	st	Z, r24
    4cb6:	ff be       	out	0x3f, r15	; 63
    4cb8:	c8 01       	movw	r24, r16
    4cba:	df 91       	pop	r29
    4cbc:	cf 91       	pop	r28
    4cbe:	1f 91       	pop	r17
    4cc0:	0f 91       	pop	r16
    4cc2:	ff 90       	pop	r15
    4cc4:	ef 90       	pop	r14
    4cc6:	cf 90       	pop	r12
    4cc8:	af 90       	pop	r10
    4cca:	9f 90       	pop	r9
    4ccc:	8f 90       	pop	r8
    4cce:	7f 90       	pop	r7
    4cd0:	6f 90       	pop	r6
    4cd2:	5f 90       	pop	r5
    4cd4:	4f 90       	pop	r4
    4cd6:	3f 90       	pop	r3
    4cd8:	2f 90       	pop	r2
    4cda:	08 95       	ret

00004cdc <serial_send_byte>:
    4cdc:	cf 93       	push	r28
    4cde:	df 93       	push	r29
    4ce0:	ec 01       	movw	r28, r24
    4ce2:	ea 81       	ldd	r30, Y+2	; 0x02
    4ce4:	fb 81       	ldd	r31, Y+3	; 0x03
    4ce6:	93 81       	ldd	r25, Z+3	; 0x03
    4ce8:	82 81       	ldd	r24, Z+2	; 0x02
    4cea:	25 81       	ldd	r18, Z+5	; 0x05
    4cec:	98 1b       	sub	r25, r24
    4cee:	92 23       	and	r25, r18
    4cf0:	84 81       	ldd	r24, Z+4	; 0x04
    4cf2:	98 17       	cp	r25, r24
    4cf4:	a1 f0       	breq	.+40     	; 0x4d1e <serial_send_byte+0x42>
    4cf6:	93 81       	ldd	r25, Z+3	; 0x03
    4cf8:	26 95       	lsr	r18
    4cfa:	29 23       	and	r18, r25
    4cfc:	a0 81       	ld	r26, Z
    4cfe:	b1 81       	ldd	r27, Z+1	; 0x01
    4d00:	a2 0f       	add	r26, r18
    4d02:	b1 1d       	adc	r27, r1
    4d04:	6c 93       	st	X, r22
    4d06:	9f 5f       	subi	r25, 0xFF	; 255
    4d08:	25 81       	ldd	r18, Z+5	; 0x05
    4d0a:	92 23       	and	r25, r18
    4d0c:	93 83       	std	Z+3, r25	; 0x03
    4d0e:	e8 81       	ld	r30, Y
    4d10:	f9 81       	ldd	r31, Y+1	; 0x01
    4d12:	35 97       	sbiw	r30, 0x05	; 5
    4d14:	80 81       	ld	r24, Z
    4d16:	80 62       	ori	r24, 0x20	; 32
    4d18:	80 83       	st	Z, r24
    4d1a:	80 e0       	ldi	r24, 0x00	; 0
    4d1c:	01 c0       	rjmp	.+2      	; 0x4d20 <serial_send_byte+0x44>
    4d1e:	82 e0       	ldi	r24, 0x02	; 2
    4d20:	df 91       	pop	r29
    4d22:	cf 91       	pop	r28
    4d24:	08 95       	ret

00004d26 <serial_send_bytes>:
    4d26:	ef 92       	push	r14
    4d28:	ff 92       	push	r15
    4d2a:	0f 93       	push	r16
    4d2c:	1f 93       	push	r17
    4d2e:	cf 93       	push	r28
    4d30:	df 93       	push	r29
    4d32:	7c 01       	movw	r14, r24
    4d34:	dc 01       	movw	r26, r24
    4d36:	12 96       	adiw	r26, 0x02	; 2
    4d38:	ed 91       	ld	r30, X+
    4d3a:	fc 91       	ld	r31, X
    4d3c:	13 97       	sbiw	r26, 0x03	; 3
    4d3e:	93 81       	ldd	r25, Z+3	; 0x03
    4d40:	82 81       	ldd	r24, Z+2	; 0x02
    4d42:	98 1b       	sub	r25, r24
    4d44:	85 81       	ldd	r24, Z+5	; 0x05
    4d46:	98 23       	and	r25, r24
    4d48:	84 81       	ldd	r24, Z+4	; 0x04
    4d4a:	89 1b       	sub	r24, r25
    4d4c:	86 17       	cp	r24, r22
    4d4e:	98 f1       	brcs	.+102    	; 0x4db6 <serial_send_bytes+0x90>
    4d50:	66 23       	and	r22, r22
    4d52:	41 f1       	breq	.+80     	; 0x4da4 <serial_send_bytes+0x7e>
    4d54:	84 2f       	mov	r24, r20
    4d56:	95 2f       	mov	r25, r21
    4d58:	dc 01       	movw	r26, r24
    4d5a:	61 50       	subi	r22, 0x01	; 1
    4d5c:	46 2f       	mov	r20, r22
    4d5e:	50 e0       	ldi	r21, 0x00	; 0
    4d60:	4f 5f       	subi	r20, 0xFF	; 255
    4d62:	5f 4f       	sbci	r21, 0xFF	; 255
    4d64:	48 0f       	add	r20, r24
    4d66:	59 1f       	adc	r21, r25
    4d68:	e7 01       	movw	r28, r14
    4d6a:	ea 81       	ldd	r30, Y+2	; 0x02
    4d6c:	fb 81       	ldd	r31, Y+3	; 0x03
    4d6e:	93 81       	ldd	r25, Z+3	; 0x03
    4d70:	82 81       	ldd	r24, Z+2	; 0x02
    4d72:	25 81       	ldd	r18, Z+5	; 0x05
    4d74:	98 1b       	sub	r25, r24
    4d76:	92 23       	and	r25, r18
    4d78:	84 81       	ldd	r24, Z+4	; 0x04
    4d7a:	98 17       	cp	r25, r24
    4d7c:	79 f0       	breq	.+30     	; 0x4d9c <serial_send_bytes+0x76>
    4d7e:	8c 91       	ld	r24, X
    4d80:	93 81       	ldd	r25, Z+3	; 0x03
    4d82:	26 95       	lsr	r18
    4d84:	29 23       	and	r18, r25
    4d86:	60 81       	ld	r22, Z
    4d88:	71 81       	ldd	r23, Z+1	; 0x01
    4d8a:	8b 01       	movw	r16, r22
    4d8c:	02 0f       	add	r16, r18
    4d8e:	11 1d       	adc	r17, r1
    4d90:	e8 01       	movw	r28, r16
    4d92:	88 83       	st	Y, r24
    4d94:	9f 5f       	subi	r25, 0xFF	; 255
    4d96:	85 81       	ldd	r24, Z+5	; 0x05
    4d98:	98 23       	and	r25, r24
    4d9a:	93 83       	std	Z+3, r25	; 0x03
    4d9c:	11 96       	adiw	r26, 0x01	; 1
    4d9e:	a4 17       	cp	r26, r20
    4da0:	b5 07       	cpc	r27, r21
    4da2:	11 f7       	brne	.-60     	; 0x4d68 <serial_send_bytes+0x42>
    4da4:	d7 01       	movw	r26, r14
    4da6:	ed 91       	ld	r30, X+
    4da8:	fc 91       	ld	r31, X
    4daa:	35 97       	sbiw	r30, 0x05	; 5
    4dac:	80 81       	ld	r24, Z
    4dae:	80 62       	ori	r24, 0x20	; 32
    4db0:	80 83       	st	Z, r24
    4db2:	80 e0       	ldi	r24, 0x00	; 0
    4db4:	01 c0       	rjmp	.+2      	; 0x4db8 <serial_send_bytes+0x92>
    4db6:	82 e0       	ldi	r24, 0x02	; 2
    4db8:	df 91       	pop	r29
    4dba:	cf 91       	pop	r28
    4dbc:	1f 91       	pop	r17
    4dbe:	0f 91       	pop	r16
    4dc0:	ff 90       	pop	r15
    4dc2:	ef 90       	pop	r14
    4dc4:	08 95       	ret

00004dc6 <serial_get_byte>:
    4dc6:	dc 01       	movw	r26, r24
    4dc8:	14 96       	adiw	r26, 0x04	; 4
    4dca:	ed 91       	ld	r30, X+
    4dcc:	fc 91       	ld	r31, X
    4dce:	15 97       	sbiw	r26, 0x05	; 5
    4dd0:	93 81       	ldd	r25, Z+3	; 0x03
    4dd2:	82 81       	ldd	r24, Z+2	; 0x02
    4dd4:	98 17       	cp	r25, r24
    4dd6:	89 f0       	breq	.+34     	; 0x4dfa <serial_get_byte+0x34>
    4dd8:	92 81       	ldd	r25, Z+2	; 0x02
    4dda:	85 81       	ldd	r24, Z+5	; 0x05
    4ddc:	86 95       	lsr	r24
    4dde:	89 23       	and	r24, r25
    4de0:	a0 81       	ld	r26, Z
    4de2:	b1 81       	ldd	r27, Z+1	; 0x01
    4de4:	a8 0f       	add	r26, r24
    4de6:	b1 1d       	adc	r27, r1
    4de8:	8c 91       	ld	r24, X
    4dea:	db 01       	movw	r26, r22
    4dec:	8c 93       	st	X, r24
    4dee:	9f 5f       	subi	r25, 0xFF	; 255
    4df0:	85 81       	ldd	r24, Z+5	; 0x05
    4df2:	98 23       	and	r25, r24
    4df4:	92 83       	std	Z+2, r25	; 0x02
    4df6:	80 e0       	ldi	r24, 0x00	; 0
    4df8:	08 95       	ret
    4dfa:	83 e0       	ldi	r24, 0x03	; 3
    4dfc:	08 95       	ret

00004dfe <__vector_25>:
    4dfe:	1f 92       	push	r1
    4e00:	0f 92       	push	r0
    4e02:	0f b6       	in	r0, 0x3f	; 63
    4e04:	0f 92       	push	r0
    4e06:	11 24       	eor	r1, r1
    4e08:	0b b6       	in	r0, 0x3b	; 59
    4e0a:	0f 92       	push	r0
    4e0c:	2f 93       	push	r18
    4e0e:	3f 93       	push	r19
    4e10:	4f 93       	push	r20
    4e12:	5f 93       	push	r21
    4e14:	6f 93       	push	r22
    4e16:	7f 93       	push	r23
    4e18:	8f 93       	push	r24
    4e1a:	9f 93       	push	r25
    4e1c:	af 93       	push	r26
    4e1e:	bf 93       	push	r27
    4e20:	cf 93       	push	r28
    4e22:	df 93       	push	r29
    4e24:	ef 93       	push	r30
    4e26:	ff 93       	push	r31
    4e28:	a0 91 c5 1a 	lds	r26, 0x1AC5	; 0x801ac5 <_ser_handle>
    4e2c:	b0 91 c6 1a 	lds	r27, 0x1AC6	; 0x801ac6 <_ser_handle+0x1>
    4e30:	10 97       	sbiw	r26, 0x00	; 0
    4e32:	11 f1       	breq	.+68     	; 0x4e78 <__vector_25+0x7a>
    4e34:	60 91 c6 00 	lds	r22, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
    4e38:	14 96       	adiw	r26, 0x04	; 4
    4e3a:	ed 91       	ld	r30, X+
    4e3c:	fc 91       	ld	r31, X
    4e3e:	15 97       	sbiw	r26, 0x05	; 5
    4e40:	93 81       	ldd	r25, Z+3	; 0x03
    4e42:	82 81       	ldd	r24, Z+2	; 0x02
    4e44:	25 81       	ldd	r18, Z+5	; 0x05
    4e46:	98 1b       	sub	r25, r24
    4e48:	92 23       	and	r25, r18
    4e4a:	84 81       	ldd	r24, Z+4	; 0x04
    4e4c:	98 17       	cp	r25, r24
    4e4e:	61 f0       	breq	.+24     	; 0x4e68 <__vector_25+0x6a>
    4e50:	83 81       	ldd	r24, Z+3	; 0x03
    4e52:	26 95       	lsr	r18
    4e54:	28 23       	and	r18, r24
    4e56:	c0 81       	ld	r28, Z
    4e58:	d1 81       	ldd	r29, Z+1	; 0x01
    4e5a:	c2 0f       	add	r28, r18
    4e5c:	d1 1d       	adc	r29, r1
    4e5e:	68 83       	st	Y, r22
    4e60:	8f 5f       	subi	r24, 0xFF	; 255
    4e62:	95 81       	ldd	r25, Z+5	; 0x05
    4e64:	89 23       	and	r24, r25
    4e66:	83 83       	std	Z+3, r24	; 0x03
    4e68:	16 96       	adiw	r26, 0x06	; 6
    4e6a:	ed 91       	ld	r30, X+
    4e6c:	fc 91       	ld	r31, X
    4e6e:	17 97       	sbiw	r26, 0x07	; 7
    4e70:	30 97       	sbiw	r30, 0x00	; 0
    4e72:	11 f0       	breq	.+4      	; 0x4e78 <__vector_25+0x7a>
    4e74:	cd 01       	movw	r24, r26
    4e76:	19 95       	eicall
    4e78:	ff 91       	pop	r31
    4e7a:	ef 91       	pop	r30
    4e7c:	df 91       	pop	r29
    4e7e:	cf 91       	pop	r28
    4e80:	bf 91       	pop	r27
    4e82:	af 91       	pop	r26
    4e84:	9f 91       	pop	r25
    4e86:	8f 91       	pop	r24
    4e88:	7f 91       	pop	r23
    4e8a:	6f 91       	pop	r22
    4e8c:	5f 91       	pop	r21
    4e8e:	4f 91       	pop	r20
    4e90:	3f 91       	pop	r19
    4e92:	2f 91       	pop	r18
    4e94:	0f 90       	pop	r0
    4e96:	0b be       	out	0x3b, r0	; 59
    4e98:	0f 90       	pop	r0
    4e9a:	0f be       	out	0x3f, r0	; 63
    4e9c:	0f 90       	pop	r0
    4e9e:	1f 90       	pop	r1
    4ea0:	18 95       	reti

00004ea2 <__vector_26>:
    4ea2:	1f 92       	push	r1
    4ea4:	0f 92       	push	r0
    4ea6:	0f b6       	in	r0, 0x3f	; 63
    4ea8:	0f 92       	push	r0
    4eaa:	11 24       	eor	r1, r1
    4eac:	0b b6       	in	r0, 0x3b	; 59
    4eae:	0f 92       	push	r0
    4eb0:	2f 93       	push	r18
    4eb2:	8f 93       	push	r24
    4eb4:	9f 93       	push	r25
    4eb6:	af 93       	push	r26
    4eb8:	bf 93       	push	r27
    4eba:	ef 93       	push	r30
    4ebc:	ff 93       	push	r31
    4ebe:	e0 91 c5 1a 	lds	r30, 0x1AC5	; 0x801ac5 <_ser_handle>
    4ec2:	f0 91 c6 1a 	lds	r31, 0x1AC6	; 0x801ac6 <_ser_handle+0x1>
    4ec6:	30 97       	sbiw	r30, 0x00	; 0
    4ec8:	b9 f0       	breq	.+46     	; 0x4ef8 <__vector_26+0x56>
    4eca:	02 80       	ldd	r0, Z+2	; 0x02
    4ecc:	f3 81       	ldd	r31, Z+3	; 0x03
    4ece:	e0 2d       	mov	r30, r0
    4ed0:	93 81       	ldd	r25, Z+3	; 0x03
    4ed2:	82 81       	ldd	r24, Z+2	; 0x02
    4ed4:	98 17       	cp	r25, r24
    4ed6:	b1 f0       	breq	.+44     	; 0x4f04 <__vector_26+0x62>
    4ed8:	92 81       	ldd	r25, Z+2	; 0x02
    4eda:	85 81       	ldd	r24, Z+5	; 0x05
    4edc:	28 2f       	mov	r18, r24
    4ede:	26 95       	lsr	r18
    4ee0:	29 23       	and	r18, r25
    4ee2:	a0 81       	ld	r26, Z
    4ee4:	b1 81       	ldd	r27, Z+1	; 0x01
    4ee6:	a2 0f       	add	r26, r18
    4ee8:	b1 1d       	adc	r27, r1
    4eea:	2c 91       	ld	r18, X
    4eec:	9f 5f       	subi	r25, 0xFF	; 255
    4eee:	89 23       	and	r24, r25
    4ef0:	82 83       	std	Z+2, r24	; 0x02
    4ef2:	20 93 c6 00 	sts	0x00C6, r18	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
    4ef6:	0b c0       	rjmp	.+22     	; 0x4f0e <__vector_26+0x6c>
    4ef8:	e1 ec       	ldi	r30, 0xC1	; 193
    4efa:	f0 e0       	ldi	r31, 0x00	; 0
    4efc:	80 81       	ld	r24, Z
    4efe:	8f 7d       	andi	r24, 0xDF	; 223
    4f00:	80 83       	st	Z, r24
    4f02:	05 c0       	rjmp	.+10     	; 0x4f0e <__vector_26+0x6c>
    4f04:	e1 ec       	ldi	r30, 0xC1	; 193
    4f06:	f0 e0       	ldi	r31, 0x00	; 0
    4f08:	80 81       	ld	r24, Z
    4f0a:	8f 7d       	andi	r24, 0xDF	; 223
    4f0c:	80 83       	st	Z, r24
    4f0e:	ff 91       	pop	r31
    4f10:	ef 91       	pop	r30
    4f12:	bf 91       	pop	r27
    4f14:	af 91       	pop	r26
    4f16:	9f 91       	pop	r25
    4f18:	8f 91       	pop	r24
    4f1a:	2f 91       	pop	r18
    4f1c:	0f 90       	pop	r0
    4f1e:	0b be       	out	0x3b, r0	; 59
    4f20:	0f 90       	pop	r0
    4f22:	0f be       	out	0x3f, r0	; 63
    4f24:	0f 90       	pop	r0
    4f26:	1f 90       	pop	r1
    4f28:	18 95       	reti

00004f2a <__vector_36>:
    4f2a:	1f 92       	push	r1
    4f2c:	0f 92       	push	r0
    4f2e:	0f b6       	in	r0, 0x3f	; 63
    4f30:	0f 92       	push	r0
    4f32:	11 24       	eor	r1, r1
    4f34:	0b b6       	in	r0, 0x3b	; 59
    4f36:	0f 92       	push	r0
    4f38:	2f 93       	push	r18
    4f3a:	3f 93       	push	r19
    4f3c:	4f 93       	push	r20
    4f3e:	5f 93       	push	r21
    4f40:	6f 93       	push	r22
    4f42:	7f 93       	push	r23
    4f44:	8f 93       	push	r24
    4f46:	9f 93       	push	r25
    4f48:	af 93       	push	r26
    4f4a:	bf 93       	push	r27
    4f4c:	cf 93       	push	r28
    4f4e:	df 93       	push	r29
    4f50:	ef 93       	push	r30
    4f52:	ff 93       	push	r31
    4f54:	a0 91 c7 1a 	lds	r26, 0x1AC7	; 0x801ac7 <_ser_handle+0x2>
    4f58:	b0 91 c8 1a 	lds	r27, 0x1AC8	; 0x801ac8 <_ser_handle+0x3>
    4f5c:	10 97       	sbiw	r26, 0x00	; 0
    4f5e:	11 f1       	breq	.+68     	; 0x4fa4 <__vector_36+0x7a>
    4f60:	60 91 ce 00 	lds	r22, 0x00CE	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7000ce>
    4f64:	14 96       	adiw	r26, 0x04	; 4
    4f66:	ed 91       	ld	r30, X+
    4f68:	fc 91       	ld	r31, X
    4f6a:	15 97       	sbiw	r26, 0x05	; 5
    4f6c:	93 81       	ldd	r25, Z+3	; 0x03
    4f6e:	82 81       	ldd	r24, Z+2	; 0x02
    4f70:	25 81       	ldd	r18, Z+5	; 0x05
    4f72:	98 1b       	sub	r25, r24
    4f74:	92 23       	and	r25, r18
    4f76:	84 81       	ldd	r24, Z+4	; 0x04
    4f78:	98 17       	cp	r25, r24
    4f7a:	61 f0       	breq	.+24     	; 0x4f94 <__vector_36+0x6a>
    4f7c:	83 81       	ldd	r24, Z+3	; 0x03
    4f7e:	26 95       	lsr	r18
    4f80:	28 23       	and	r18, r24
    4f82:	c0 81       	ld	r28, Z
    4f84:	d1 81       	ldd	r29, Z+1	; 0x01
    4f86:	c2 0f       	add	r28, r18
    4f88:	d1 1d       	adc	r29, r1
    4f8a:	68 83       	st	Y, r22
    4f8c:	8f 5f       	subi	r24, 0xFF	; 255
    4f8e:	95 81       	ldd	r25, Z+5	; 0x05
    4f90:	89 23       	and	r24, r25
    4f92:	83 83       	std	Z+3, r24	; 0x03
    4f94:	16 96       	adiw	r26, 0x06	; 6
    4f96:	ed 91       	ld	r30, X+
    4f98:	fc 91       	ld	r31, X
    4f9a:	17 97       	sbiw	r26, 0x07	; 7
    4f9c:	30 97       	sbiw	r30, 0x00	; 0
    4f9e:	11 f0       	breq	.+4      	; 0x4fa4 <__vector_36+0x7a>
    4fa0:	cd 01       	movw	r24, r26
    4fa2:	19 95       	eicall
    4fa4:	ff 91       	pop	r31
    4fa6:	ef 91       	pop	r30
    4fa8:	df 91       	pop	r29
    4faa:	cf 91       	pop	r28
    4fac:	bf 91       	pop	r27
    4fae:	af 91       	pop	r26
    4fb0:	9f 91       	pop	r25
    4fb2:	8f 91       	pop	r24
    4fb4:	7f 91       	pop	r23
    4fb6:	6f 91       	pop	r22
    4fb8:	5f 91       	pop	r21
    4fba:	4f 91       	pop	r20
    4fbc:	3f 91       	pop	r19
    4fbe:	2f 91       	pop	r18
    4fc0:	0f 90       	pop	r0
    4fc2:	0b be       	out	0x3b, r0	; 59
    4fc4:	0f 90       	pop	r0
    4fc6:	0f be       	out	0x3f, r0	; 63
    4fc8:	0f 90       	pop	r0
    4fca:	1f 90       	pop	r1
    4fcc:	18 95       	reti

00004fce <__vector_37>:
    4fce:	1f 92       	push	r1
    4fd0:	0f 92       	push	r0
    4fd2:	0f b6       	in	r0, 0x3f	; 63
    4fd4:	0f 92       	push	r0
    4fd6:	11 24       	eor	r1, r1
    4fd8:	0b b6       	in	r0, 0x3b	; 59
    4fda:	0f 92       	push	r0
    4fdc:	2f 93       	push	r18
    4fde:	8f 93       	push	r24
    4fe0:	9f 93       	push	r25
    4fe2:	af 93       	push	r26
    4fe4:	bf 93       	push	r27
    4fe6:	ef 93       	push	r30
    4fe8:	ff 93       	push	r31
    4fea:	e0 91 c7 1a 	lds	r30, 0x1AC7	; 0x801ac7 <_ser_handle+0x2>
    4fee:	f0 91 c8 1a 	lds	r31, 0x1AC8	; 0x801ac8 <_ser_handle+0x3>
    4ff2:	30 97       	sbiw	r30, 0x00	; 0
    4ff4:	b9 f0       	breq	.+46     	; 0x5024 <__vector_37+0x56>
    4ff6:	02 80       	ldd	r0, Z+2	; 0x02
    4ff8:	f3 81       	ldd	r31, Z+3	; 0x03
    4ffa:	e0 2d       	mov	r30, r0
    4ffc:	93 81       	ldd	r25, Z+3	; 0x03
    4ffe:	82 81       	ldd	r24, Z+2	; 0x02
    5000:	98 17       	cp	r25, r24
    5002:	b1 f0       	breq	.+44     	; 0x5030 <__vector_37+0x62>
    5004:	92 81       	ldd	r25, Z+2	; 0x02
    5006:	85 81       	ldd	r24, Z+5	; 0x05
    5008:	28 2f       	mov	r18, r24
    500a:	26 95       	lsr	r18
    500c:	29 23       	and	r18, r25
    500e:	a0 81       	ld	r26, Z
    5010:	b1 81       	ldd	r27, Z+1	; 0x01
    5012:	a2 0f       	add	r26, r18
    5014:	b1 1d       	adc	r27, r1
    5016:	2c 91       	ld	r18, X
    5018:	9f 5f       	subi	r25, 0xFF	; 255
    501a:	89 23       	and	r24, r25
    501c:	82 83       	std	Z+2, r24	; 0x02
    501e:	20 93 ce 00 	sts	0x00CE, r18	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7000ce>
    5022:	0b c0       	rjmp	.+22     	; 0x503a <__vector_37+0x6c>
    5024:	e9 ec       	ldi	r30, 0xC9	; 201
    5026:	f0 e0       	ldi	r31, 0x00	; 0
    5028:	80 81       	ld	r24, Z
    502a:	8f 7d       	andi	r24, 0xDF	; 223
    502c:	80 83       	st	Z, r24
    502e:	05 c0       	rjmp	.+10     	; 0x503a <__vector_37+0x6c>
    5030:	e9 ec       	ldi	r30, 0xC9	; 201
    5032:	f0 e0       	ldi	r31, 0x00	; 0
    5034:	80 81       	ld	r24, Z
    5036:	8f 7d       	andi	r24, 0xDF	; 223
    5038:	80 83       	st	Z, r24
    503a:	ff 91       	pop	r31
    503c:	ef 91       	pop	r30
    503e:	bf 91       	pop	r27
    5040:	af 91       	pop	r26
    5042:	9f 91       	pop	r25
    5044:	8f 91       	pop	r24
    5046:	2f 91       	pop	r18
    5048:	0f 90       	pop	r0
    504a:	0b be       	out	0x3b, r0	; 59
    504c:	0f 90       	pop	r0
    504e:	0f be       	out	0x3f, r0	; 63
    5050:	0f 90       	pop	r0
    5052:	1f 90       	pop	r1
    5054:	18 95       	reti

00005056 <__vector_51>:
    5056:	1f 92       	push	r1
    5058:	0f 92       	push	r0
    505a:	0f b6       	in	r0, 0x3f	; 63
    505c:	0f 92       	push	r0
    505e:	11 24       	eor	r1, r1
    5060:	0b b6       	in	r0, 0x3b	; 59
    5062:	0f 92       	push	r0
    5064:	2f 93       	push	r18
    5066:	3f 93       	push	r19
    5068:	4f 93       	push	r20
    506a:	5f 93       	push	r21
    506c:	6f 93       	push	r22
    506e:	7f 93       	push	r23
    5070:	8f 93       	push	r24
    5072:	9f 93       	push	r25
    5074:	af 93       	push	r26
    5076:	bf 93       	push	r27
    5078:	cf 93       	push	r28
    507a:	df 93       	push	r29
    507c:	ef 93       	push	r30
    507e:	ff 93       	push	r31
    5080:	a0 91 c9 1a 	lds	r26, 0x1AC9	; 0x801ac9 <_ser_handle+0x4>
    5084:	b0 91 ca 1a 	lds	r27, 0x1ACA	; 0x801aca <_ser_handle+0x5>
    5088:	10 97       	sbiw	r26, 0x00	; 0
    508a:	11 f1       	breq	.+68     	; 0x50d0 <__vector_51+0x7a>
    508c:	60 91 d6 00 	lds	r22, 0x00D6	; 0x8000d6 <__TEXT_REGION_LENGTH__+0x7000d6>
    5090:	14 96       	adiw	r26, 0x04	; 4
    5092:	ed 91       	ld	r30, X+
    5094:	fc 91       	ld	r31, X
    5096:	15 97       	sbiw	r26, 0x05	; 5
    5098:	93 81       	ldd	r25, Z+3	; 0x03
    509a:	82 81       	ldd	r24, Z+2	; 0x02
    509c:	25 81       	ldd	r18, Z+5	; 0x05
    509e:	98 1b       	sub	r25, r24
    50a0:	92 23       	and	r25, r18
    50a2:	84 81       	ldd	r24, Z+4	; 0x04
    50a4:	98 17       	cp	r25, r24
    50a6:	61 f0       	breq	.+24     	; 0x50c0 <__vector_51+0x6a>
    50a8:	83 81       	ldd	r24, Z+3	; 0x03
    50aa:	26 95       	lsr	r18
    50ac:	28 23       	and	r18, r24
    50ae:	c0 81       	ld	r28, Z
    50b0:	d1 81       	ldd	r29, Z+1	; 0x01
    50b2:	c2 0f       	add	r28, r18
    50b4:	d1 1d       	adc	r29, r1
    50b6:	68 83       	st	Y, r22
    50b8:	8f 5f       	subi	r24, 0xFF	; 255
    50ba:	95 81       	ldd	r25, Z+5	; 0x05
    50bc:	89 23       	and	r24, r25
    50be:	83 83       	std	Z+3, r24	; 0x03
    50c0:	16 96       	adiw	r26, 0x06	; 6
    50c2:	ed 91       	ld	r30, X+
    50c4:	fc 91       	ld	r31, X
    50c6:	17 97       	sbiw	r26, 0x07	; 7
    50c8:	30 97       	sbiw	r30, 0x00	; 0
    50ca:	11 f0       	breq	.+4      	; 0x50d0 <__vector_51+0x7a>
    50cc:	cd 01       	movw	r24, r26
    50ce:	19 95       	eicall
    50d0:	ff 91       	pop	r31
    50d2:	ef 91       	pop	r30
    50d4:	df 91       	pop	r29
    50d6:	cf 91       	pop	r28
    50d8:	bf 91       	pop	r27
    50da:	af 91       	pop	r26
    50dc:	9f 91       	pop	r25
    50de:	8f 91       	pop	r24
    50e0:	7f 91       	pop	r23
    50e2:	6f 91       	pop	r22
    50e4:	5f 91       	pop	r21
    50e6:	4f 91       	pop	r20
    50e8:	3f 91       	pop	r19
    50ea:	2f 91       	pop	r18
    50ec:	0f 90       	pop	r0
    50ee:	0b be       	out	0x3b, r0	; 59
    50f0:	0f 90       	pop	r0
    50f2:	0f be       	out	0x3f, r0	; 63
    50f4:	0f 90       	pop	r0
    50f6:	1f 90       	pop	r1
    50f8:	18 95       	reti

000050fa <__vector_52>:
    50fa:	1f 92       	push	r1
    50fc:	0f 92       	push	r0
    50fe:	0f b6       	in	r0, 0x3f	; 63
    5100:	0f 92       	push	r0
    5102:	11 24       	eor	r1, r1
    5104:	0b b6       	in	r0, 0x3b	; 59
    5106:	0f 92       	push	r0
    5108:	2f 93       	push	r18
    510a:	8f 93       	push	r24
    510c:	9f 93       	push	r25
    510e:	af 93       	push	r26
    5110:	bf 93       	push	r27
    5112:	ef 93       	push	r30
    5114:	ff 93       	push	r31
    5116:	e0 91 c9 1a 	lds	r30, 0x1AC9	; 0x801ac9 <_ser_handle+0x4>
    511a:	f0 91 ca 1a 	lds	r31, 0x1ACA	; 0x801aca <_ser_handle+0x5>
    511e:	30 97       	sbiw	r30, 0x00	; 0
    5120:	b9 f0       	breq	.+46     	; 0x5150 <__vector_52+0x56>
    5122:	02 80       	ldd	r0, Z+2	; 0x02
    5124:	f3 81       	ldd	r31, Z+3	; 0x03
    5126:	e0 2d       	mov	r30, r0
    5128:	93 81       	ldd	r25, Z+3	; 0x03
    512a:	82 81       	ldd	r24, Z+2	; 0x02
    512c:	98 17       	cp	r25, r24
    512e:	b1 f0       	breq	.+44     	; 0x515c <__vector_52+0x62>
    5130:	92 81       	ldd	r25, Z+2	; 0x02
    5132:	85 81       	ldd	r24, Z+5	; 0x05
    5134:	28 2f       	mov	r18, r24
    5136:	26 95       	lsr	r18
    5138:	29 23       	and	r18, r25
    513a:	a0 81       	ld	r26, Z
    513c:	b1 81       	ldd	r27, Z+1	; 0x01
    513e:	a2 0f       	add	r26, r18
    5140:	b1 1d       	adc	r27, r1
    5142:	2c 91       	ld	r18, X
    5144:	9f 5f       	subi	r25, 0xFF	; 255
    5146:	89 23       	and	r24, r25
    5148:	82 83       	std	Z+2, r24	; 0x02
    514a:	20 93 d6 00 	sts	0x00D6, r18	; 0x8000d6 <__TEXT_REGION_LENGTH__+0x7000d6>
    514e:	0b c0       	rjmp	.+22     	; 0x5166 <__vector_52+0x6c>
    5150:	e1 ed       	ldi	r30, 0xD1	; 209
    5152:	f0 e0       	ldi	r31, 0x00	; 0
    5154:	80 81       	ld	r24, Z
    5156:	8f 7d       	andi	r24, 0xDF	; 223
    5158:	80 83       	st	Z, r24
    515a:	05 c0       	rjmp	.+10     	; 0x5166 <__vector_52+0x6c>
    515c:	e1 ed       	ldi	r30, 0xD1	; 209
    515e:	f0 e0       	ldi	r31, 0x00	; 0
    5160:	80 81       	ld	r24, Z
    5162:	8f 7d       	andi	r24, 0xDF	; 223
    5164:	80 83       	st	Z, r24
    5166:	ff 91       	pop	r31
    5168:	ef 91       	pop	r30
    516a:	bf 91       	pop	r27
    516c:	af 91       	pop	r26
    516e:	9f 91       	pop	r25
    5170:	8f 91       	pop	r24
    5172:	2f 91       	pop	r18
    5174:	0f 90       	pop	r0
    5176:	0b be       	out	0x3b, r0	; 59
    5178:	0f 90       	pop	r0
    517a:	0f be       	out	0x3f, r0	; 63
    517c:	0f 90       	pop	r0
    517e:	1f 90       	pop	r1
    5180:	18 95       	reti

00005182 <__vector_54>:
    5182:	1f 92       	push	r1
    5184:	0f 92       	push	r0
    5186:	0f b6       	in	r0, 0x3f	; 63
    5188:	0f 92       	push	r0
    518a:	11 24       	eor	r1, r1
    518c:	0b b6       	in	r0, 0x3b	; 59
    518e:	0f 92       	push	r0
    5190:	2f 93       	push	r18
    5192:	3f 93       	push	r19
    5194:	4f 93       	push	r20
    5196:	5f 93       	push	r21
    5198:	6f 93       	push	r22
    519a:	7f 93       	push	r23
    519c:	8f 93       	push	r24
    519e:	9f 93       	push	r25
    51a0:	af 93       	push	r26
    51a2:	bf 93       	push	r27
    51a4:	cf 93       	push	r28
    51a6:	df 93       	push	r29
    51a8:	ef 93       	push	r30
    51aa:	ff 93       	push	r31
    51ac:	a0 91 cb 1a 	lds	r26, 0x1ACB	; 0x801acb <_ser_handle+0x6>
    51b0:	b0 91 cc 1a 	lds	r27, 0x1ACC	; 0x801acc <_ser_handle+0x7>
    51b4:	10 97       	sbiw	r26, 0x00	; 0
    51b6:	11 f1       	breq	.+68     	; 0x51fc <__vector_54+0x7a>
    51b8:	60 91 36 01 	lds	r22, 0x0136	; 0x800136 <__TEXT_REGION_LENGTH__+0x700136>
    51bc:	14 96       	adiw	r26, 0x04	; 4
    51be:	ed 91       	ld	r30, X+
    51c0:	fc 91       	ld	r31, X
    51c2:	15 97       	sbiw	r26, 0x05	; 5
    51c4:	93 81       	ldd	r25, Z+3	; 0x03
    51c6:	82 81       	ldd	r24, Z+2	; 0x02
    51c8:	25 81       	ldd	r18, Z+5	; 0x05
    51ca:	98 1b       	sub	r25, r24
    51cc:	92 23       	and	r25, r18
    51ce:	84 81       	ldd	r24, Z+4	; 0x04
    51d0:	98 17       	cp	r25, r24
    51d2:	61 f0       	breq	.+24     	; 0x51ec <__vector_54+0x6a>
    51d4:	83 81       	ldd	r24, Z+3	; 0x03
    51d6:	26 95       	lsr	r18
    51d8:	28 23       	and	r18, r24
    51da:	c0 81       	ld	r28, Z
    51dc:	d1 81       	ldd	r29, Z+1	; 0x01
    51de:	c2 0f       	add	r28, r18
    51e0:	d1 1d       	adc	r29, r1
    51e2:	68 83       	st	Y, r22
    51e4:	8f 5f       	subi	r24, 0xFF	; 255
    51e6:	95 81       	ldd	r25, Z+5	; 0x05
    51e8:	89 23       	and	r24, r25
    51ea:	83 83       	std	Z+3, r24	; 0x03
    51ec:	16 96       	adiw	r26, 0x06	; 6
    51ee:	ed 91       	ld	r30, X+
    51f0:	fc 91       	ld	r31, X
    51f2:	17 97       	sbiw	r26, 0x07	; 7
    51f4:	30 97       	sbiw	r30, 0x00	; 0
    51f6:	11 f0       	breq	.+4      	; 0x51fc <__vector_54+0x7a>
    51f8:	cd 01       	movw	r24, r26
    51fa:	19 95       	eicall
    51fc:	ff 91       	pop	r31
    51fe:	ef 91       	pop	r30
    5200:	df 91       	pop	r29
    5202:	cf 91       	pop	r28
    5204:	bf 91       	pop	r27
    5206:	af 91       	pop	r26
    5208:	9f 91       	pop	r25
    520a:	8f 91       	pop	r24
    520c:	7f 91       	pop	r23
    520e:	6f 91       	pop	r22
    5210:	5f 91       	pop	r21
    5212:	4f 91       	pop	r20
    5214:	3f 91       	pop	r19
    5216:	2f 91       	pop	r18
    5218:	0f 90       	pop	r0
    521a:	0b be       	out	0x3b, r0	; 59
    521c:	0f 90       	pop	r0
    521e:	0f be       	out	0x3f, r0	; 63
    5220:	0f 90       	pop	r0
    5222:	1f 90       	pop	r1
    5224:	18 95       	reti

00005226 <__vector_55>:
    5226:	1f 92       	push	r1
    5228:	0f 92       	push	r0
    522a:	0f b6       	in	r0, 0x3f	; 63
    522c:	0f 92       	push	r0
    522e:	11 24       	eor	r1, r1
    5230:	0b b6       	in	r0, 0x3b	; 59
    5232:	0f 92       	push	r0
    5234:	2f 93       	push	r18
    5236:	8f 93       	push	r24
    5238:	9f 93       	push	r25
    523a:	af 93       	push	r26
    523c:	bf 93       	push	r27
    523e:	ef 93       	push	r30
    5240:	ff 93       	push	r31
    5242:	e0 91 cb 1a 	lds	r30, 0x1ACB	; 0x801acb <_ser_handle+0x6>
    5246:	f0 91 cc 1a 	lds	r31, 0x1ACC	; 0x801acc <_ser_handle+0x7>
    524a:	30 97       	sbiw	r30, 0x00	; 0
    524c:	b9 f0       	breq	.+46     	; 0x527c <__vector_55+0x56>
    524e:	02 80       	ldd	r0, Z+2	; 0x02
    5250:	f3 81       	ldd	r31, Z+3	; 0x03
    5252:	e0 2d       	mov	r30, r0
    5254:	93 81       	ldd	r25, Z+3	; 0x03
    5256:	82 81       	ldd	r24, Z+2	; 0x02
    5258:	98 17       	cp	r25, r24
    525a:	b1 f0       	breq	.+44     	; 0x5288 <__vector_55+0x62>
    525c:	92 81       	ldd	r25, Z+2	; 0x02
    525e:	85 81       	ldd	r24, Z+5	; 0x05
    5260:	28 2f       	mov	r18, r24
    5262:	26 95       	lsr	r18
    5264:	29 23       	and	r18, r25
    5266:	a0 81       	ld	r26, Z
    5268:	b1 81       	ldd	r27, Z+1	; 0x01
    526a:	a2 0f       	add	r26, r18
    526c:	b1 1d       	adc	r27, r1
    526e:	2c 91       	ld	r18, X
    5270:	9f 5f       	subi	r25, 0xFF	; 255
    5272:	89 23       	and	r24, r25
    5274:	82 83       	std	Z+2, r24	; 0x02
    5276:	20 93 36 01 	sts	0x0136, r18	; 0x800136 <__TEXT_REGION_LENGTH__+0x700136>
    527a:	0b c0       	rjmp	.+22     	; 0x5292 <__vector_55+0x6c>
    527c:	e1 e3       	ldi	r30, 0x31	; 49
    527e:	f1 e0       	ldi	r31, 0x01	; 1
    5280:	80 81       	ld	r24, Z
    5282:	8f 7d       	andi	r24, 0xDF	; 223
    5284:	80 83       	st	Z, r24
    5286:	05 c0       	rjmp	.+10     	; 0x5292 <__vector_55+0x6c>
    5288:	e1 e3       	ldi	r30, 0x31	; 49
    528a:	f1 e0       	ldi	r31, 0x01	; 1
    528c:	80 81       	ld	r24, Z
    528e:	8f 7d       	andi	r24, 0xDF	; 223
    5290:	80 83       	st	Z, r24
    5292:	ff 91       	pop	r31
    5294:	ef 91       	pop	r30
    5296:	bf 91       	pop	r27
    5298:	af 91       	pop	r26
    529a:	9f 91       	pop	r25
    529c:	8f 91       	pop	r24
    529e:	2f 91       	pop	r18
    52a0:	0f 90       	pop	r0
    52a2:	0b be       	out	0x3b, r0	; 59
    52a4:	0f 90       	pop	r0
    52a6:	0f be       	out	0x3f, r0	; 63
    52a8:	0f 90       	pop	r0
    52aa:	1f 90       	pop	r1
    52ac:	18 95       	reti

000052ae <usart_getchar>:
    52ae:	cf 93       	push	r28
    52b0:	df 93       	push	r29
    52b2:	1f 92       	push	r1
    52b4:	cd b7       	in	r28, 0x3d	; 61
    52b6:	de b7       	in	r29, 0x3e	; 62
    52b8:	be 01       	movw	r22, r28
    52ba:	6f 5f       	subi	r22, 0xFF	; 255
    52bc:	7f 4f       	sbci	r23, 0xFF	; 255
    52be:	80 91 cd 1a 	lds	r24, 0x1ACD	; 0x801acd <_com_serial_instance>
    52c2:	90 91 ce 1a 	lds	r25, 0x1ACE	; 0x801ace <_com_serial_instance+0x1>
    52c6:	7f dd       	rcall	.-1282   	; 0x4dc6 <serial_get_byte>
    52c8:	81 11       	cpse	r24, r1
    52ca:	f6 cf       	rjmp	.-20     	; 0x52b8 <usart_getchar+0xa>
    52cc:	89 81       	ldd	r24, Y+1	; 0x01
    52ce:	90 e0       	ldi	r25, 0x00	; 0
    52d0:	0f 90       	pop	r0
    52d2:	df 91       	pop	r29
    52d4:	cf 91       	pop	r28
    52d6:	08 95       	ret

000052d8 <usart_putchar>:
    52d8:	68 2f       	mov	r22, r24
    52da:	80 91 cd 1a 	lds	r24, 0x1ACD	; 0x801acd <_com_serial_instance>
    52de:	90 91 ce 1a 	lds	r25, 0x1ACE	; 0x801ace <_com_serial_instance+0x1>
    52e2:	fc dc       	rcall	.-1544   	; 0x4cdc <serial_send_byte>
    52e4:	80 e0       	ldi	r24, 0x00	; 0
    52e6:	90 e0       	ldi	r25, 0x00	; 0
    52e8:	08 95       	ret

000052ea <stdioCreate>:
    52ea:	8f 92       	push	r8
    52ec:	9f 92       	push	r9
    52ee:	af 92       	push	r10
    52f0:	cf 92       	push	r12
    52f2:	ef 92       	push	r14
    52f4:	0f 93       	push	r16
    52f6:	81 2c       	mov	r8, r1
    52f8:	91 2c       	mov	r9, r1
    52fa:	68 94       	set
    52fc:	aa 24       	eor	r10, r10
    52fe:	a7 f8       	bld	r10, 7
    5300:	68 94       	set
    5302:	cc 24       	eor	r12, r12
    5304:	c7 f8       	bld	r12, 7
    5306:	e1 2c       	mov	r14, r1
    5308:	00 e0       	ldi	r16, 0x00	; 0
    530a:	23 e0       	ldi	r18, 0x03	; 3
    530c:	40 e0       	ldi	r20, 0x00	; 0
    530e:	51 ee       	ldi	r21, 0xE1	; 225
    5310:	60 e0       	ldi	r22, 0x00	; 0
    5312:	70 e0       	ldi	r23, 0x00	; 0
    5314:	4d dc       	rcall	.-1894   	; 0x4bb0 <serial_new_instance>
    5316:	90 93 ce 1a 	sts	0x1ACE, r25	; 0x801ace <_com_serial_instance+0x1>
    531a:	80 93 cd 1a 	sts	0x1ACD, r24	; 0x801acd <_com_serial_instance>
    531e:	e8 e1       	ldi	r30, 0x18	; 24
    5320:	fb e1       	ldi	r31, 0x1B	; 27
    5322:	82 e1       	ldi	r24, 0x12	; 18
    5324:	92 e0       	ldi	r25, 0x02	; 2
    5326:	91 83       	std	Z+1, r25	; 0x01
    5328:	80 83       	st	Z, r24
    532a:	93 83       	std	Z+3, r25	; 0x03
    532c:	82 83       	std	Z+2, r24	; 0x02
    532e:	0f 91       	pop	r16
    5330:	ef 90       	pop	r14
    5332:	cf 90       	pop	r12
    5334:	af 90       	pop	r10
    5336:	9f 90       	pop	r9
    5338:	8f 90       	pop	r8
    533a:	08 95       	ret

0000533c <_initTwiInterface>:
    533c:	80 91 dd 1a 	lds	r24, 0x1ADD	; 0x801add <_twiIsInitiated>
    5340:	81 11       	cpse	r24, r1
    5342:	0c c0       	rjmp	.+24     	; 0x535c <_initTwiInterface+0x20>
    5344:	8c e0       	ldi	r24, 0x0C	; 12
    5346:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7000b8>
    534a:	8f ef       	ldi	r24, 0xFF	; 255
    534c:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
    5350:	84 e0       	ldi	r24, 0x04	; 4
    5352:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
    5356:	81 e0       	ldi	r24, 0x01	; 1
    5358:	80 93 dd 1a 	sts	0x1ADD, r24	; 0x801add <_twiIsInitiated>
    535c:	08 95       	ret

0000535e <twiCreate>:
    535e:	af 92       	push	r10
    5360:	bf 92       	push	r11
    5362:	cf 92       	push	r12
    5364:	df 92       	push	r13
    5366:	ef 92       	push	r14
    5368:	ff 92       	push	r15
    536a:	0f 93       	push	r16
    536c:	1f 93       	push	r17
    536e:	cf 93       	push	r28
    5370:	df 93       	push	r29
    5372:	a8 2e       	mov	r10, r24
    5374:	b6 2e       	mov	r11, r22
    5376:	69 01       	movw	r12, r18
    5378:	7a 01       	movw	r14, r20
    537a:	84 e0       	ldi	r24, 0x04	; 4
    537c:	90 e0       	ldi	r25, 0x00	; 0
    537e:	cb d3       	rcall	.+1942   	; 0x5b16 <malloc>
    5380:	ec 01       	movw	r28, r24
    5382:	89 2b       	or	r24, r25
    5384:	61 f1       	breq	.+88     	; 0x53de <twiCreate+0x80>
    5386:	a8 82       	st	Y, r10
    5388:	81 e0       	ldi	r24, 0x01	; 1
    538a:	b8 12       	cpse	r11, r24
    538c:	12 c0       	rjmp	.+36     	; 0x53b2 <twiCreate+0x54>
    538e:	c7 01       	movw	r24, r14
    5390:	b6 01       	movw	r22, r12
    5392:	20 ea       	ldi	r18, 0xA0	; 160
    5394:	36 e8       	ldi	r19, 0x86	; 134
    5396:	41 e0       	ldi	r20, 0x01	; 1
    5398:	50 e0       	ldi	r21, 0x00	; 0
    539a:	79 d3       	rcall	.+1778   	; 0x5a8e <__udivmodsi4>
    539c:	da 01       	movw	r26, r20
    539e:	c9 01       	movw	r24, r18
    53a0:	40 97       	sbiw	r24, 0x10	; 16
    53a2:	a1 09       	sbc	r26, r1
    53a4:	b1 09       	sbc	r27, r1
    53a6:	b6 95       	lsr	r27
    53a8:	a7 95       	ror	r26
    53aa:	97 95       	ror	r25
    53ac:	87 95       	ror	r24
    53ae:	89 83       	std	Y+1, r24	; 0x01
    53b0:	11 c0       	rjmp	.+34     	; 0x53d4 <twiCreate+0x76>
    53b2:	c7 01       	movw	r24, r14
    53b4:	b6 01       	movw	r22, r12
    53b6:	20 e8       	ldi	r18, 0x80	; 128
    53b8:	3a e1       	ldi	r19, 0x1A	; 26
    53ba:	46 e0       	ldi	r20, 0x06	; 6
    53bc:	50 e0       	ldi	r21, 0x00	; 0
    53be:	67 d3       	rcall	.+1742   	; 0x5a8e <__udivmodsi4>
    53c0:	da 01       	movw	r26, r20
    53c2:	c9 01       	movw	r24, r18
    53c4:	40 97       	sbiw	r24, 0x10	; 16
    53c6:	a1 09       	sbc	r26, r1
    53c8:	b1 09       	sbc	r27, r1
    53ca:	b6 95       	lsr	r27
    53cc:	a7 95       	ror	r26
    53ce:	97 95       	ror	r25
    53d0:	87 95       	ror	r24
    53d2:	89 83       	std	Y+1, r24	; 0x01
    53d4:	1b 83       	std	Y+3, r17	; 0x03
    53d6:	0a 83       	std	Y+2, r16	; 0x02
    53d8:	8c 2f       	mov	r24, r28
    53da:	9d 2f       	mov	r25, r29
    53dc:	02 c0       	rjmp	.+4      	; 0x53e2 <twiCreate+0x84>
    53de:	80 e0       	ldi	r24, 0x00	; 0
    53e0:	90 e0       	ldi	r25, 0x00	; 0
    53e2:	df 91       	pop	r29
    53e4:	cf 91       	pop	r28
    53e6:	1f 91       	pop	r17
    53e8:	0f 91       	pop	r16
    53ea:	ff 90       	pop	r15
    53ec:	ef 90       	pop	r14
    53ee:	df 90       	pop	r13
    53f0:	cf 90       	pop	r12
    53f2:	bf 90       	pop	r11
    53f4:	af 90       	pop	r10
    53f6:	08 95       	ret

000053f8 <twiIsBusy>:
    53f8:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
    53fc:	81 70       	andi	r24, 0x01	; 1
    53fe:	08 95       	ret

00005400 <twiTransmit>:
    5400:	ff 92       	push	r15
    5402:	0f 93       	push	r16
    5404:	1f 93       	push	r17
    5406:	cf 93       	push	r28
    5408:	df 93       	push	r29
    540a:	00 97       	sbiw	r24, 0x00	; 0
    540c:	d1 f1       	breq	.+116    	; 0x5482 <twiTransmit+0x82>
    540e:	4a 30       	cpi	r20, 0x0A	; 10
    5410:	d0 f5       	brcc	.+116    	; 0x5486 <twiTransmit+0x86>
    5412:	f4 2e       	mov	r15, r20
    5414:	8b 01       	movw	r16, r22
    5416:	ec 01       	movw	r28, r24
    5418:	ef df       	rcall	.-34     	; 0x53f8 <twiIsBusy>
    541a:	81 11       	cpse	r24, r1
    541c:	36 c0       	rjmp	.+108    	; 0x548a <twiTransmit+0x8a>
    541e:	80 91 d0 1a 	lds	r24, 0x1AD0	; 0x801ad0 <_twiCurrentHandler>
    5422:	90 91 d1 1a 	lds	r25, 0x1AD1	; 0x801ad1 <_twiCurrentHandler+0x1>
    5426:	c8 17       	cp	r28, r24
    5428:	d9 07       	cpc	r29, r25
    542a:	41 f0       	breq	.+16     	; 0x543c <twiTransmit+0x3c>
    542c:	87 df       	rcall	.-242    	; 0x533c <_initTwiInterface>
    542e:	89 81       	ldd	r24, Y+1	; 0x01
    5430:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7000b8>
    5434:	d0 93 d1 1a 	sts	0x1AD1, r29	; 0x801ad1 <_twiCurrentHandler+0x1>
    5438:	c0 93 d0 1a 	sts	0x1AD0, r28	; 0x801ad0 <_twiCurrentHandler>
    543c:	81 e0       	ldi	r24, 0x01	; 1
    543e:	8f 0d       	add	r24, r15
    5440:	80 93 d2 1a 	sts	0x1AD2, r24	; 0x801ad2 <_twiMessageLen>
    5444:	88 81       	ld	r24, Y
    5446:	88 0f       	add	r24, r24
    5448:	80 93 d3 1a 	sts	0x1AD3, r24	; 0x801ad3 <_twiMessageBuffer>
    544c:	ff 20       	and	r15, r15
    544e:	89 f0       	breq	.+34     	; 0x5472 <twiTransmit+0x72>
    5450:	f8 01       	movw	r30, r16
    5452:	a4 ed       	ldi	r26, 0xD4	; 212
    5454:	ba e1       	ldi	r27, 0x1A	; 26
    5456:	4f ef       	ldi	r20, 0xFF	; 255
    5458:	4f 0d       	add	r20, r15
    545a:	64 2f       	mov	r22, r20
    545c:	70 e0       	ldi	r23, 0x00	; 0
    545e:	cb 01       	movw	r24, r22
    5460:	01 96       	adiw	r24, 0x01	; 1
    5462:	b8 01       	movw	r22, r16
    5464:	68 0f       	add	r22, r24
    5466:	79 1f       	adc	r23, r25
    5468:	81 91       	ld	r24, Z+
    546a:	8d 93       	st	X+, r24
    546c:	e6 17       	cp	r30, r22
    546e:	f7 07       	cpc	r31, r23
    5470:	d9 f7       	brne	.-10     	; 0x5468 <twiTransmit+0x68>
    5472:	88 ef       	ldi	r24, 0xF8	; 248
    5474:	80 93 20 02 	sts	0x0220, r24	; 0x800220 <_twiCurrentState>
    5478:	85 ea       	ldi	r24, 0xA5	; 165
    547a:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
    547e:	84 e0       	ldi	r24, 0x04	; 4
    5480:	05 c0       	rjmp	.+10     	; 0x548c <twiTransmit+0x8c>
    5482:	86 e0       	ldi	r24, 0x06	; 6
    5484:	03 c0       	rjmp	.+6      	; 0x548c <twiTransmit+0x8c>
    5486:	87 e0       	ldi	r24, 0x07	; 7
    5488:	01 c0       	rjmp	.+2      	; 0x548c <twiTransmit+0x8c>
    548a:	82 e0       	ldi	r24, 0x02	; 2
    548c:	df 91       	pop	r29
    548e:	cf 91       	pop	r28
    5490:	1f 91       	pop	r17
    5492:	0f 91       	pop	r16
    5494:	ff 90       	pop	r15
    5496:	08 95       	ret

00005498 <twiReceive>:
    5498:	1f 93       	push	r17
    549a:	cf 93       	push	r28
    549c:	df 93       	push	r29
    549e:	00 97       	sbiw	r24, 0x00	; 0
    54a0:	29 f1       	breq	.+74     	; 0x54ec <twiReceive+0x54>
    54a2:	6b 30       	cpi	r22, 0x0B	; 11
    54a4:	28 f5       	brcc	.+74     	; 0x54f0 <twiReceive+0x58>
    54a6:	16 2f       	mov	r17, r22
    54a8:	ec 01       	movw	r28, r24
    54aa:	a6 df       	rcall	.-180    	; 0x53f8 <twiIsBusy>
    54ac:	81 11       	cpse	r24, r1
    54ae:	22 c0       	rjmp	.+68     	; 0x54f4 <twiReceive+0x5c>
    54b0:	80 91 d0 1a 	lds	r24, 0x1AD0	; 0x801ad0 <_twiCurrentHandler>
    54b4:	90 91 d1 1a 	lds	r25, 0x1AD1	; 0x801ad1 <_twiCurrentHandler+0x1>
    54b8:	c8 17       	cp	r28, r24
    54ba:	d9 07       	cpc	r29, r25
    54bc:	41 f0       	breq	.+16     	; 0x54ce <twiReceive+0x36>
    54be:	3e df       	rcall	.-388    	; 0x533c <_initTwiInterface>
    54c0:	89 81       	ldd	r24, Y+1	; 0x01
    54c2:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7000b8>
    54c6:	d0 93 d1 1a 	sts	0x1AD1, r29	; 0x801ad1 <_twiCurrentHandler+0x1>
    54ca:	c0 93 d0 1a 	sts	0x1AD0, r28	; 0x801ad0 <_twiCurrentHandler>
    54ce:	10 93 d2 1a 	sts	0x1AD2, r17	; 0x801ad2 <_twiMessageLen>
    54d2:	88 81       	ld	r24, Y
    54d4:	88 0f       	add	r24, r24
    54d6:	81 60       	ori	r24, 0x01	; 1
    54d8:	80 93 d3 1a 	sts	0x1AD3, r24	; 0x801ad3 <_twiMessageBuffer>
    54dc:	88 ef       	ldi	r24, 0xF8	; 248
    54de:	80 93 20 02 	sts	0x0220, r24	; 0x800220 <_twiCurrentState>
    54e2:	85 ea       	ldi	r24, 0xA5	; 165
    54e4:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
    54e8:	85 e0       	ldi	r24, 0x05	; 5
    54ea:	05 c0       	rjmp	.+10     	; 0x54f6 <twiReceive+0x5e>
    54ec:	86 e0       	ldi	r24, 0x06	; 6
    54ee:	03 c0       	rjmp	.+6      	; 0x54f6 <twiReceive+0x5e>
    54f0:	87 e0       	ldi	r24, 0x07	; 7
    54f2:	01 c0       	rjmp	.+2      	; 0x54f6 <twiReceive+0x5e>
    54f4:	82 e0       	ldi	r24, 0x02	; 2
    54f6:	df 91       	pop	r29
    54f8:	cf 91       	pop	r28
    54fa:	1f 91       	pop	r17
    54fc:	08 95       	ret

000054fe <__vector_39>:
    54fe:	1f 92       	push	r1
    5500:	0f 92       	push	r0
    5502:	0f b6       	in	r0, 0x3f	; 63
    5504:	0f 92       	push	r0
    5506:	11 24       	eor	r1, r1
    5508:	0b b6       	in	r0, 0x3b	; 59
    550a:	0f 92       	push	r0
    550c:	2f 93       	push	r18
    550e:	3f 93       	push	r19
    5510:	4f 93       	push	r20
    5512:	5f 93       	push	r21
    5514:	6f 93       	push	r22
    5516:	7f 93       	push	r23
    5518:	8f 93       	push	r24
    551a:	9f 93       	push	r25
    551c:	af 93       	push	r26
    551e:	bf 93       	push	r27
    5520:	ef 93       	push	r30
    5522:	ff 93       	push	r31
    5524:	e0 91 b9 00 	lds	r30, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7000b9>
    5528:	8e 2f       	mov	r24, r30
    552a:	90 e0       	ldi	r25, 0x00	; 0
    552c:	fc 01       	movw	r30, r24
    552e:	38 97       	sbiw	r30, 0x08	; 8
    5530:	e1 35       	cpi	r30, 0x51	; 81
    5532:	f1 05       	cpc	r31, r1
    5534:	08 f0       	brcs	.+2      	; 0x5538 <__vector_39+0x3a>
    5536:	75 c0       	rjmp	.+234    	; 0x5622 <__vector_39+0x124>
    5538:	88 27       	eor	r24, r24
    553a:	e4 58       	subi	r30, 0x84	; 132
    553c:	ff 4f       	sbci	r31, 0xFF	; 255
    553e:	8f 4f       	sbci	r24, 0xFF	; 255
    5540:	c8 c2       	rjmp	.+1424   	; 0x5ad2 <__tablejump2__>
    5542:	10 92 cf 1a 	sts	0x1ACF, r1	; 0x801acf <_index.1885>
    5546:	e0 91 cf 1a 	lds	r30, 0x1ACF	; 0x801acf <_index.1885>
    554a:	80 91 d2 1a 	lds	r24, 0x1AD2	; 0x801ad2 <_twiMessageLen>
    554e:	e8 17       	cp	r30, r24
    5550:	70 f4       	brcc	.+28     	; 0x556e <__vector_39+0x70>
    5552:	81 e0       	ldi	r24, 0x01	; 1
    5554:	8e 0f       	add	r24, r30
    5556:	80 93 cf 1a 	sts	0x1ACF, r24	; 0x801acf <_index.1885>
    555a:	f0 e0       	ldi	r31, 0x00	; 0
    555c:	ed 52       	subi	r30, 0x2D	; 45
    555e:	f5 4e       	sbci	r31, 0xE5	; 229
    5560:	80 81       	ld	r24, Z
    5562:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
    5566:	85 e8       	ldi	r24, 0x85	; 133
    5568:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
    556c:	72 c0       	rjmp	.+228    	; 0x5652 <__vector_39+0x154>
    556e:	84 e9       	ldi	r24, 0x94	; 148
    5570:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
    5574:	80 91 d0 1a 	lds	r24, 0x1AD0	; 0x801ad0 <_twiCurrentHandler>
    5578:	90 91 d1 1a 	lds	r25, 0x1AD1	; 0x801ad1 <_twiCurrentHandler+0x1>
    557c:	dc 01       	movw	r26, r24
    557e:	12 96       	adiw	r26, 0x02	; 2
    5580:	ed 91       	ld	r30, X+
    5582:	fc 91       	ld	r31, X
    5584:	13 97       	sbiw	r26, 0x03	; 3
    5586:	30 97       	sbiw	r30, 0x00	; 0
    5588:	09 f4       	brne	.+2      	; 0x558c <__vector_39+0x8e>
    558a:	63 c0       	rjmp	.+198    	; 0x5652 <__vector_39+0x154>
    558c:	20 e0       	ldi	r18, 0x00	; 0
    558e:	40 e0       	ldi	r20, 0x00	; 0
    5590:	50 e0       	ldi	r21, 0x00	; 0
    5592:	64 e0       	ldi	r22, 0x04	; 4
    5594:	19 95       	eicall
    5596:	5d c0       	rjmp	.+186    	; 0x5652 <__vector_39+0x154>
    5598:	e0 91 cf 1a 	lds	r30, 0x1ACF	; 0x801acf <_index.1885>
    559c:	81 e0       	ldi	r24, 0x01	; 1
    559e:	8e 0f       	add	r24, r30
    55a0:	80 93 cf 1a 	sts	0x1ACF, r24	; 0x801acf <_index.1885>
    55a4:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
    55a8:	f0 e0       	ldi	r31, 0x00	; 0
    55aa:	ed 52       	subi	r30, 0x2D	; 45
    55ac:	f5 4e       	sbci	r31, 0xE5	; 229
    55ae:	80 83       	st	Z, r24
    55b0:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7000b9>
    55b4:	80 34       	cpi	r24, 0x40	; 64
    55b6:	11 f4       	brne	.+4      	; 0x55bc <__vector_39+0xbe>
    55b8:	10 92 cf 1a 	sts	0x1ACF, r1	; 0x801acf <_index.1885>
    55bc:	20 91 cf 1a 	lds	r18, 0x1ACF	; 0x801acf <_index.1885>
    55c0:	30 e0       	ldi	r19, 0x00	; 0
    55c2:	80 91 d2 1a 	lds	r24, 0x1AD2	; 0x801ad2 <_twiMessageLen>
    55c6:	90 e0       	ldi	r25, 0x00	; 0
    55c8:	01 97       	sbiw	r24, 0x01	; 1
    55ca:	28 17       	cp	r18, r24
    55cc:	39 07       	cpc	r19, r25
    55ce:	24 f4       	brge	.+8      	; 0x55d8 <__vector_39+0xda>
    55d0:	85 ec       	ldi	r24, 0xC5	; 197
    55d2:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
    55d6:	3d c0       	rjmp	.+122    	; 0x5652 <__vector_39+0x154>
    55d8:	85 e8       	ldi	r24, 0x85	; 133
    55da:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
    55de:	39 c0       	rjmp	.+114    	; 0x5652 <__vector_39+0x154>
    55e0:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
    55e4:	e0 91 cf 1a 	lds	r30, 0x1ACF	; 0x801acf <_index.1885>
    55e8:	f0 e0       	ldi	r31, 0x00	; 0
    55ea:	ed 52       	subi	r30, 0x2D	; 45
    55ec:	f5 4e       	sbci	r31, 0xE5	; 229
    55ee:	80 83       	st	Z, r24
    55f0:	84 e9       	ldi	r24, 0x94	; 148
    55f2:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
    55f6:	80 91 d0 1a 	lds	r24, 0x1AD0	; 0x801ad0 <_twiCurrentHandler>
    55fa:	90 91 d1 1a 	lds	r25, 0x1AD1	; 0x801ad1 <_twiCurrentHandler+0x1>
    55fe:	dc 01       	movw	r26, r24
    5600:	12 96       	adiw	r26, 0x02	; 2
    5602:	ed 91       	ld	r30, X+
    5604:	fc 91       	ld	r31, X
    5606:	13 97       	sbiw	r26, 0x03	; 3
    5608:	30 97       	sbiw	r30, 0x00	; 0
    560a:	19 f1       	breq	.+70     	; 0x5652 <__vector_39+0x154>
    560c:	20 91 d2 1a 	lds	r18, 0x1AD2	; 0x801ad2 <_twiMessageLen>
    5610:	43 ed       	ldi	r20, 0xD3	; 211
    5612:	5a e1       	ldi	r21, 0x1A	; 26
    5614:	65 e0       	ldi	r22, 0x05	; 5
    5616:	19 95       	eicall
    5618:	1c c0       	rjmp	.+56     	; 0x5652 <__vector_39+0x154>
    561a:	85 ea       	ldi	r24, 0xA5	; 165
    561c:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
    5620:	18 c0       	rjmp	.+48     	; 0x5652 <__vector_39+0x154>
    5622:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7000b9>
    5626:	80 93 20 02 	sts	0x0220, r24	; 0x800220 <_twiCurrentState>
    562a:	84 e0       	ldi	r24, 0x04	; 4
    562c:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
    5630:	80 91 d0 1a 	lds	r24, 0x1AD0	; 0x801ad0 <_twiCurrentHandler>
    5634:	90 91 d1 1a 	lds	r25, 0x1AD1	; 0x801ad1 <_twiCurrentHandler+0x1>
    5638:	dc 01       	movw	r26, r24
    563a:	12 96       	adiw	r26, 0x02	; 2
    563c:	ed 91       	ld	r30, X+
    563e:	fc 91       	ld	r31, X
    5640:	13 97       	sbiw	r26, 0x03	; 3
    5642:	30 97       	sbiw	r30, 0x00	; 0
    5644:	31 f0       	breq	.+12     	; 0x5652 <__vector_39+0x154>
    5646:	20 e0       	ldi	r18, 0x00	; 0
    5648:	40 e0       	ldi	r20, 0x00	; 0
    564a:	50 e0       	ldi	r21, 0x00	; 0
    564c:	60 91 20 02 	lds	r22, 0x0220	; 0x800220 <_twiCurrentState>
    5650:	19 95       	eicall
    5652:	ff 91       	pop	r31
    5654:	ef 91       	pop	r30
    5656:	bf 91       	pop	r27
    5658:	af 91       	pop	r26
    565a:	9f 91       	pop	r25
    565c:	8f 91       	pop	r24
    565e:	7f 91       	pop	r23
    5660:	6f 91       	pop	r22
    5662:	5f 91       	pop	r21
    5664:	4f 91       	pop	r20
    5666:	3f 91       	pop	r19
    5668:	2f 91       	pop	r18
    566a:	0f 90       	pop	r0
    566c:	0b be       	out	0x3b, r0	; 59
    566e:	0f 90       	pop	r0
    5670:	0f be       	out	0x3f, r0	; 63
    5672:	0f 90       	pop	r0
    5674:	1f 90       	pop	r1
    5676:	18 95       	reti

00005678 <fifo_init>:
    5678:	fc 01       	movw	r30, r24
    567a:	41 11       	cpse	r20, r1
    567c:	01 c0       	rjmp	.+2      	; 0x5680 <fifo_init+0x8>
    567e:	6c d3       	rcall	.+1752   	; 0x5d58 <abort>
    5680:	84 2f       	mov	r24, r20
    5682:	90 e0       	ldi	r25, 0x00	; 0
    5684:	9c 01       	movw	r18, r24
    5686:	21 50       	subi	r18, 0x01	; 1
    5688:	31 09       	sbc	r19, r1
    568a:	82 23       	and	r24, r18
    568c:	93 23       	and	r25, r19
    568e:	89 2b       	or	r24, r25
    5690:	09 f0       	breq	.+2      	; 0x5694 <fifo_init+0x1c>
    5692:	62 d3       	rcall	.+1732   	; 0x5d58 <abort>
    5694:	41 38       	cpi	r20, 0x81	; 129
    5696:	08 f0       	brcs	.+2      	; 0x569a <fifo_init+0x22>
    5698:	5f d3       	rcall	.+1726   	; 0x5d58 <abort>
    569a:	12 82       	std	Z+2, r1	; 0x02
    569c:	13 82       	std	Z+3, r1	; 0x03
    569e:	44 83       	std	Z+4, r20	; 0x04
    56a0:	44 0f       	add	r20, r20
    56a2:	41 50       	subi	r20, 0x01	; 1
    56a4:	45 83       	std	Z+5, r20	; 0x05
    56a6:	71 83       	std	Z+1, r23	; 0x01
    56a8:	60 83       	st	Z, r22
    56aa:	80 e0       	ldi	r24, 0x00	; 0
    56ac:	90 e0       	ldi	r25, 0x00	; 0
    56ae:	08 95       	ret

000056b0 <__subsf3>:
    56b0:	50 58       	subi	r21, 0x80	; 128

000056b2 <__addsf3>:
    56b2:	bb 27       	eor	r27, r27
    56b4:	aa 27       	eor	r26, r26
    56b6:	0e d0       	rcall	.+28     	; 0x56d4 <__addsf3x>
    56b8:	4d c1       	rjmp	.+666    	; 0x5954 <__fp_round>
    56ba:	3e d1       	rcall	.+636    	; 0x5938 <__fp_pscA>
    56bc:	30 f0       	brcs	.+12     	; 0x56ca <__addsf3+0x18>
    56be:	43 d1       	rcall	.+646    	; 0x5946 <__fp_pscB>
    56c0:	20 f0       	brcs	.+8      	; 0x56ca <__addsf3+0x18>
    56c2:	31 f4       	brne	.+12     	; 0x56d0 <__addsf3+0x1e>
    56c4:	9f 3f       	cpi	r25, 0xFF	; 255
    56c6:	11 f4       	brne	.+4      	; 0x56cc <__addsf3+0x1a>
    56c8:	1e f4       	brtc	.+6      	; 0x56d0 <__addsf3+0x1e>
    56ca:	33 c1       	rjmp	.+614    	; 0x5932 <__fp_nan>
    56cc:	0e f4       	brtc	.+2      	; 0x56d0 <__addsf3+0x1e>
    56ce:	e0 95       	com	r30
    56d0:	e7 fb       	bst	r30, 7
    56d2:	29 c1       	rjmp	.+594    	; 0x5926 <__fp_inf>

000056d4 <__addsf3x>:
    56d4:	e9 2f       	mov	r30, r25
    56d6:	4f d1       	rcall	.+670    	; 0x5976 <__fp_split3>
    56d8:	80 f3       	brcs	.-32     	; 0x56ba <__addsf3+0x8>
    56da:	ba 17       	cp	r27, r26
    56dc:	62 07       	cpc	r22, r18
    56de:	73 07       	cpc	r23, r19
    56e0:	84 07       	cpc	r24, r20
    56e2:	95 07       	cpc	r25, r21
    56e4:	18 f0       	brcs	.+6      	; 0x56ec <__addsf3x+0x18>
    56e6:	71 f4       	brne	.+28     	; 0x5704 <__addsf3x+0x30>
    56e8:	9e f5       	brtc	.+102    	; 0x5750 <__addsf3x+0x7c>
    56ea:	67 c1       	rjmp	.+718    	; 0x59ba <__fp_zero>
    56ec:	0e f4       	brtc	.+2      	; 0x56f0 <__addsf3x+0x1c>
    56ee:	e0 95       	com	r30
    56f0:	0b 2e       	mov	r0, r27
    56f2:	ba 2f       	mov	r27, r26
    56f4:	a0 2d       	mov	r26, r0
    56f6:	0b 01       	movw	r0, r22
    56f8:	b9 01       	movw	r22, r18
    56fa:	90 01       	movw	r18, r0
    56fc:	0c 01       	movw	r0, r24
    56fe:	ca 01       	movw	r24, r20
    5700:	a0 01       	movw	r20, r0
    5702:	11 24       	eor	r1, r1
    5704:	ff 27       	eor	r31, r31
    5706:	59 1b       	sub	r21, r25
    5708:	99 f0       	breq	.+38     	; 0x5730 <__addsf3x+0x5c>
    570a:	59 3f       	cpi	r21, 0xF9	; 249
    570c:	50 f4       	brcc	.+20     	; 0x5722 <__addsf3x+0x4e>
    570e:	50 3e       	cpi	r21, 0xE0	; 224
    5710:	68 f1       	brcs	.+90     	; 0x576c <__addsf3x+0x98>
    5712:	1a 16       	cp	r1, r26
    5714:	f0 40       	sbci	r31, 0x00	; 0
    5716:	a2 2f       	mov	r26, r18
    5718:	23 2f       	mov	r18, r19
    571a:	34 2f       	mov	r19, r20
    571c:	44 27       	eor	r20, r20
    571e:	58 5f       	subi	r21, 0xF8	; 248
    5720:	f3 cf       	rjmp	.-26     	; 0x5708 <__addsf3x+0x34>
    5722:	46 95       	lsr	r20
    5724:	37 95       	ror	r19
    5726:	27 95       	ror	r18
    5728:	a7 95       	ror	r26
    572a:	f0 40       	sbci	r31, 0x00	; 0
    572c:	53 95       	inc	r21
    572e:	c9 f7       	brne	.-14     	; 0x5722 <__addsf3x+0x4e>
    5730:	7e f4       	brtc	.+30     	; 0x5750 <__addsf3x+0x7c>
    5732:	1f 16       	cp	r1, r31
    5734:	ba 0b       	sbc	r27, r26
    5736:	62 0b       	sbc	r22, r18
    5738:	73 0b       	sbc	r23, r19
    573a:	84 0b       	sbc	r24, r20
    573c:	ba f0       	brmi	.+46     	; 0x576c <__addsf3x+0x98>
    573e:	91 50       	subi	r25, 0x01	; 1
    5740:	a1 f0       	breq	.+40     	; 0x576a <__addsf3x+0x96>
    5742:	ff 0f       	add	r31, r31
    5744:	bb 1f       	adc	r27, r27
    5746:	66 1f       	adc	r22, r22
    5748:	77 1f       	adc	r23, r23
    574a:	88 1f       	adc	r24, r24
    574c:	c2 f7       	brpl	.-16     	; 0x573e <__addsf3x+0x6a>
    574e:	0e c0       	rjmp	.+28     	; 0x576c <__addsf3x+0x98>
    5750:	ba 0f       	add	r27, r26
    5752:	62 1f       	adc	r22, r18
    5754:	73 1f       	adc	r23, r19
    5756:	84 1f       	adc	r24, r20
    5758:	48 f4       	brcc	.+18     	; 0x576c <__addsf3x+0x98>
    575a:	87 95       	ror	r24
    575c:	77 95       	ror	r23
    575e:	67 95       	ror	r22
    5760:	b7 95       	ror	r27
    5762:	f7 95       	ror	r31
    5764:	9e 3f       	cpi	r25, 0xFE	; 254
    5766:	08 f0       	brcs	.+2      	; 0x576a <__addsf3x+0x96>
    5768:	b3 cf       	rjmp	.-154    	; 0x56d0 <__addsf3+0x1e>
    576a:	93 95       	inc	r25
    576c:	88 0f       	add	r24, r24
    576e:	08 f0       	brcs	.+2      	; 0x5772 <__addsf3x+0x9e>
    5770:	99 27       	eor	r25, r25
    5772:	ee 0f       	add	r30, r30
    5774:	97 95       	ror	r25
    5776:	87 95       	ror	r24
    5778:	08 95       	ret

0000577a <__divsf3>:
    577a:	0c d0       	rcall	.+24     	; 0x5794 <__divsf3x>
    577c:	eb c0       	rjmp	.+470    	; 0x5954 <__fp_round>
    577e:	e3 d0       	rcall	.+454    	; 0x5946 <__fp_pscB>
    5780:	40 f0       	brcs	.+16     	; 0x5792 <__divsf3+0x18>
    5782:	da d0       	rcall	.+436    	; 0x5938 <__fp_pscA>
    5784:	30 f0       	brcs	.+12     	; 0x5792 <__divsf3+0x18>
    5786:	21 f4       	brne	.+8      	; 0x5790 <__divsf3+0x16>
    5788:	5f 3f       	cpi	r21, 0xFF	; 255
    578a:	19 f0       	breq	.+6      	; 0x5792 <__divsf3+0x18>
    578c:	cc c0       	rjmp	.+408    	; 0x5926 <__fp_inf>
    578e:	51 11       	cpse	r21, r1
    5790:	15 c1       	rjmp	.+554    	; 0x59bc <__fp_szero>
    5792:	cf c0       	rjmp	.+414    	; 0x5932 <__fp_nan>

00005794 <__divsf3x>:
    5794:	f0 d0       	rcall	.+480    	; 0x5976 <__fp_split3>
    5796:	98 f3       	brcs	.-26     	; 0x577e <__divsf3+0x4>

00005798 <__divsf3_pse>:
    5798:	99 23       	and	r25, r25
    579a:	c9 f3       	breq	.-14     	; 0x578e <__divsf3+0x14>
    579c:	55 23       	and	r21, r21
    579e:	b1 f3       	breq	.-20     	; 0x578c <__divsf3+0x12>
    57a0:	95 1b       	sub	r25, r21
    57a2:	55 0b       	sbc	r21, r21
    57a4:	bb 27       	eor	r27, r27
    57a6:	aa 27       	eor	r26, r26
    57a8:	62 17       	cp	r22, r18
    57aa:	73 07       	cpc	r23, r19
    57ac:	84 07       	cpc	r24, r20
    57ae:	38 f0       	brcs	.+14     	; 0x57be <__divsf3_pse+0x26>
    57b0:	9f 5f       	subi	r25, 0xFF	; 255
    57b2:	5f 4f       	sbci	r21, 0xFF	; 255
    57b4:	22 0f       	add	r18, r18
    57b6:	33 1f       	adc	r19, r19
    57b8:	44 1f       	adc	r20, r20
    57ba:	aa 1f       	adc	r26, r26
    57bc:	a9 f3       	breq	.-22     	; 0x57a8 <__divsf3_pse+0x10>
    57be:	33 d0       	rcall	.+102    	; 0x5826 <__divsf3_pse+0x8e>
    57c0:	0e 2e       	mov	r0, r30
    57c2:	3a f0       	brmi	.+14     	; 0x57d2 <__divsf3_pse+0x3a>
    57c4:	e0 e8       	ldi	r30, 0x80	; 128
    57c6:	30 d0       	rcall	.+96     	; 0x5828 <__divsf3_pse+0x90>
    57c8:	91 50       	subi	r25, 0x01	; 1
    57ca:	50 40       	sbci	r21, 0x00	; 0
    57cc:	e6 95       	lsr	r30
    57ce:	00 1c       	adc	r0, r0
    57d0:	ca f7       	brpl	.-14     	; 0x57c4 <__divsf3_pse+0x2c>
    57d2:	29 d0       	rcall	.+82     	; 0x5826 <__divsf3_pse+0x8e>
    57d4:	fe 2f       	mov	r31, r30
    57d6:	27 d0       	rcall	.+78     	; 0x5826 <__divsf3_pse+0x8e>
    57d8:	66 0f       	add	r22, r22
    57da:	77 1f       	adc	r23, r23
    57dc:	88 1f       	adc	r24, r24
    57de:	bb 1f       	adc	r27, r27
    57e0:	26 17       	cp	r18, r22
    57e2:	37 07       	cpc	r19, r23
    57e4:	48 07       	cpc	r20, r24
    57e6:	ab 07       	cpc	r26, r27
    57e8:	b0 e8       	ldi	r27, 0x80	; 128
    57ea:	09 f0       	breq	.+2      	; 0x57ee <__divsf3_pse+0x56>
    57ec:	bb 0b       	sbc	r27, r27
    57ee:	80 2d       	mov	r24, r0
    57f0:	bf 01       	movw	r22, r30
    57f2:	ff 27       	eor	r31, r31
    57f4:	93 58       	subi	r25, 0x83	; 131
    57f6:	5f 4f       	sbci	r21, 0xFF	; 255
    57f8:	2a f0       	brmi	.+10     	; 0x5804 <__divsf3_pse+0x6c>
    57fa:	9e 3f       	cpi	r25, 0xFE	; 254
    57fc:	51 05       	cpc	r21, r1
    57fe:	68 f0       	brcs	.+26     	; 0x581a <__divsf3_pse+0x82>
    5800:	92 c0       	rjmp	.+292    	; 0x5926 <__fp_inf>
    5802:	dc c0       	rjmp	.+440    	; 0x59bc <__fp_szero>
    5804:	5f 3f       	cpi	r21, 0xFF	; 255
    5806:	ec f3       	brlt	.-6      	; 0x5802 <__divsf3_pse+0x6a>
    5808:	98 3e       	cpi	r25, 0xE8	; 232
    580a:	dc f3       	brlt	.-10     	; 0x5802 <__divsf3_pse+0x6a>
    580c:	86 95       	lsr	r24
    580e:	77 95       	ror	r23
    5810:	67 95       	ror	r22
    5812:	b7 95       	ror	r27
    5814:	f7 95       	ror	r31
    5816:	9f 5f       	subi	r25, 0xFF	; 255
    5818:	c9 f7       	brne	.-14     	; 0x580c <__divsf3_pse+0x74>
    581a:	88 0f       	add	r24, r24
    581c:	91 1d       	adc	r25, r1
    581e:	96 95       	lsr	r25
    5820:	87 95       	ror	r24
    5822:	97 f9       	bld	r25, 7
    5824:	08 95       	ret
    5826:	e1 e0       	ldi	r30, 0x01	; 1
    5828:	66 0f       	add	r22, r22
    582a:	77 1f       	adc	r23, r23
    582c:	88 1f       	adc	r24, r24
    582e:	bb 1f       	adc	r27, r27
    5830:	62 17       	cp	r22, r18
    5832:	73 07       	cpc	r23, r19
    5834:	84 07       	cpc	r24, r20
    5836:	ba 07       	cpc	r27, r26
    5838:	20 f0       	brcs	.+8      	; 0x5842 <__divsf3_pse+0xaa>
    583a:	62 1b       	sub	r22, r18
    583c:	73 0b       	sbc	r23, r19
    583e:	84 0b       	sbc	r24, r20
    5840:	ba 0b       	sbc	r27, r26
    5842:	ee 1f       	adc	r30, r30
    5844:	88 f7       	brcc	.-30     	; 0x5828 <__divsf3_pse+0x90>
    5846:	e0 95       	com	r30
    5848:	08 95       	ret

0000584a <__fixsfsi>:
    584a:	04 d0       	rcall	.+8      	; 0x5854 <__fixunssfsi>
    584c:	68 94       	set
    584e:	b1 11       	cpse	r27, r1
    5850:	b5 c0       	rjmp	.+362    	; 0x59bc <__fp_szero>
    5852:	08 95       	ret

00005854 <__fixunssfsi>:
    5854:	98 d0       	rcall	.+304    	; 0x5986 <__fp_splitA>
    5856:	88 f0       	brcs	.+34     	; 0x587a <__fixunssfsi+0x26>
    5858:	9f 57       	subi	r25, 0x7F	; 127
    585a:	90 f0       	brcs	.+36     	; 0x5880 <__fixunssfsi+0x2c>
    585c:	b9 2f       	mov	r27, r25
    585e:	99 27       	eor	r25, r25
    5860:	b7 51       	subi	r27, 0x17	; 23
    5862:	a0 f0       	brcs	.+40     	; 0x588c <__fixunssfsi+0x38>
    5864:	d1 f0       	breq	.+52     	; 0x589a <__fixunssfsi+0x46>
    5866:	66 0f       	add	r22, r22
    5868:	77 1f       	adc	r23, r23
    586a:	88 1f       	adc	r24, r24
    586c:	99 1f       	adc	r25, r25
    586e:	1a f0       	brmi	.+6      	; 0x5876 <__fixunssfsi+0x22>
    5870:	ba 95       	dec	r27
    5872:	c9 f7       	brne	.-14     	; 0x5866 <__fixunssfsi+0x12>
    5874:	12 c0       	rjmp	.+36     	; 0x589a <__fixunssfsi+0x46>
    5876:	b1 30       	cpi	r27, 0x01	; 1
    5878:	81 f0       	breq	.+32     	; 0x589a <__fixunssfsi+0x46>
    587a:	9f d0       	rcall	.+318    	; 0x59ba <__fp_zero>
    587c:	b1 e0       	ldi	r27, 0x01	; 1
    587e:	08 95       	ret
    5880:	9c c0       	rjmp	.+312    	; 0x59ba <__fp_zero>
    5882:	67 2f       	mov	r22, r23
    5884:	78 2f       	mov	r23, r24
    5886:	88 27       	eor	r24, r24
    5888:	b8 5f       	subi	r27, 0xF8	; 248
    588a:	39 f0       	breq	.+14     	; 0x589a <__fixunssfsi+0x46>
    588c:	b9 3f       	cpi	r27, 0xF9	; 249
    588e:	cc f3       	brlt	.-14     	; 0x5882 <__fixunssfsi+0x2e>
    5890:	86 95       	lsr	r24
    5892:	77 95       	ror	r23
    5894:	67 95       	ror	r22
    5896:	b3 95       	inc	r27
    5898:	d9 f7       	brne	.-10     	; 0x5890 <__fixunssfsi+0x3c>
    589a:	3e f4       	brtc	.+14     	; 0x58aa <__fixunssfsi+0x56>
    589c:	90 95       	com	r25
    589e:	80 95       	com	r24
    58a0:	70 95       	com	r23
    58a2:	61 95       	neg	r22
    58a4:	7f 4f       	sbci	r23, 0xFF	; 255
    58a6:	8f 4f       	sbci	r24, 0xFF	; 255
    58a8:	9f 4f       	sbci	r25, 0xFF	; 255
    58aa:	08 95       	ret

000058ac <__floatunsisf>:
    58ac:	e8 94       	clt
    58ae:	09 c0       	rjmp	.+18     	; 0x58c2 <__floatsisf+0x12>

000058b0 <__floatsisf>:
    58b0:	97 fb       	bst	r25, 7
    58b2:	3e f4       	brtc	.+14     	; 0x58c2 <__floatsisf+0x12>
    58b4:	90 95       	com	r25
    58b6:	80 95       	com	r24
    58b8:	70 95       	com	r23
    58ba:	61 95       	neg	r22
    58bc:	7f 4f       	sbci	r23, 0xFF	; 255
    58be:	8f 4f       	sbci	r24, 0xFF	; 255
    58c0:	9f 4f       	sbci	r25, 0xFF	; 255
    58c2:	99 23       	and	r25, r25
    58c4:	a9 f0       	breq	.+42     	; 0x58f0 <__floatsisf+0x40>
    58c6:	f9 2f       	mov	r31, r25
    58c8:	96 e9       	ldi	r25, 0x96	; 150
    58ca:	bb 27       	eor	r27, r27
    58cc:	93 95       	inc	r25
    58ce:	f6 95       	lsr	r31
    58d0:	87 95       	ror	r24
    58d2:	77 95       	ror	r23
    58d4:	67 95       	ror	r22
    58d6:	b7 95       	ror	r27
    58d8:	f1 11       	cpse	r31, r1
    58da:	f8 cf       	rjmp	.-16     	; 0x58cc <__floatsisf+0x1c>
    58dc:	fa f4       	brpl	.+62     	; 0x591c <__floatsisf+0x6c>
    58de:	bb 0f       	add	r27, r27
    58e0:	11 f4       	brne	.+4      	; 0x58e6 <__floatsisf+0x36>
    58e2:	60 ff       	sbrs	r22, 0
    58e4:	1b c0       	rjmp	.+54     	; 0x591c <__floatsisf+0x6c>
    58e6:	6f 5f       	subi	r22, 0xFF	; 255
    58e8:	7f 4f       	sbci	r23, 0xFF	; 255
    58ea:	8f 4f       	sbci	r24, 0xFF	; 255
    58ec:	9f 4f       	sbci	r25, 0xFF	; 255
    58ee:	16 c0       	rjmp	.+44     	; 0x591c <__floatsisf+0x6c>
    58f0:	88 23       	and	r24, r24
    58f2:	11 f0       	breq	.+4      	; 0x58f8 <__floatsisf+0x48>
    58f4:	96 e9       	ldi	r25, 0x96	; 150
    58f6:	11 c0       	rjmp	.+34     	; 0x591a <__floatsisf+0x6a>
    58f8:	77 23       	and	r23, r23
    58fa:	21 f0       	breq	.+8      	; 0x5904 <__floatsisf+0x54>
    58fc:	9e e8       	ldi	r25, 0x8E	; 142
    58fe:	87 2f       	mov	r24, r23
    5900:	76 2f       	mov	r23, r22
    5902:	05 c0       	rjmp	.+10     	; 0x590e <__floatsisf+0x5e>
    5904:	66 23       	and	r22, r22
    5906:	71 f0       	breq	.+28     	; 0x5924 <__floatsisf+0x74>
    5908:	96 e8       	ldi	r25, 0x86	; 134
    590a:	86 2f       	mov	r24, r22
    590c:	70 e0       	ldi	r23, 0x00	; 0
    590e:	60 e0       	ldi	r22, 0x00	; 0
    5910:	2a f0       	brmi	.+10     	; 0x591c <__floatsisf+0x6c>
    5912:	9a 95       	dec	r25
    5914:	66 0f       	add	r22, r22
    5916:	77 1f       	adc	r23, r23
    5918:	88 1f       	adc	r24, r24
    591a:	da f7       	brpl	.-10     	; 0x5912 <__floatsisf+0x62>
    591c:	88 0f       	add	r24, r24
    591e:	96 95       	lsr	r25
    5920:	87 95       	ror	r24
    5922:	97 f9       	bld	r25, 7
    5924:	08 95       	ret

00005926 <__fp_inf>:
    5926:	97 f9       	bld	r25, 7
    5928:	9f 67       	ori	r25, 0x7F	; 127
    592a:	80 e8       	ldi	r24, 0x80	; 128
    592c:	70 e0       	ldi	r23, 0x00	; 0
    592e:	60 e0       	ldi	r22, 0x00	; 0
    5930:	08 95       	ret

00005932 <__fp_nan>:
    5932:	9f ef       	ldi	r25, 0xFF	; 255
    5934:	80 ec       	ldi	r24, 0xC0	; 192
    5936:	08 95       	ret

00005938 <__fp_pscA>:
    5938:	00 24       	eor	r0, r0
    593a:	0a 94       	dec	r0
    593c:	16 16       	cp	r1, r22
    593e:	17 06       	cpc	r1, r23
    5940:	18 06       	cpc	r1, r24
    5942:	09 06       	cpc	r0, r25
    5944:	08 95       	ret

00005946 <__fp_pscB>:
    5946:	00 24       	eor	r0, r0
    5948:	0a 94       	dec	r0
    594a:	12 16       	cp	r1, r18
    594c:	13 06       	cpc	r1, r19
    594e:	14 06       	cpc	r1, r20
    5950:	05 06       	cpc	r0, r21
    5952:	08 95       	ret

00005954 <__fp_round>:
    5954:	09 2e       	mov	r0, r25
    5956:	03 94       	inc	r0
    5958:	00 0c       	add	r0, r0
    595a:	11 f4       	brne	.+4      	; 0x5960 <__fp_round+0xc>
    595c:	88 23       	and	r24, r24
    595e:	52 f0       	brmi	.+20     	; 0x5974 <__fp_round+0x20>
    5960:	bb 0f       	add	r27, r27
    5962:	40 f4       	brcc	.+16     	; 0x5974 <__fp_round+0x20>
    5964:	bf 2b       	or	r27, r31
    5966:	11 f4       	brne	.+4      	; 0x596c <__fp_round+0x18>
    5968:	60 ff       	sbrs	r22, 0
    596a:	04 c0       	rjmp	.+8      	; 0x5974 <__fp_round+0x20>
    596c:	6f 5f       	subi	r22, 0xFF	; 255
    596e:	7f 4f       	sbci	r23, 0xFF	; 255
    5970:	8f 4f       	sbci	r24, 0xFF	; 255
    5972:	9f 4f       	sbci	r25, 0xFF	; 255
    5974:	08 95       	ret

00005976 <__fp_split3>:
    5976:	57 fd       	sbrc	r21, 7
    5978:	90 58       	subi	r25, 0x80	; 128
    597a:	44 0f       	add	r20, r20
    597c:	55 1f       	adc	r21, r21
    597e:	59 f0       	breq	.+22     	; 0x5996 <__fp_splitA+0x10>
    5980:	5f 3f       	cpi	r21, 0xFF	; 255
    5982:	71 f0       	breq	.+28     	; 0x59a0 <__fp_splitA+0x1a>
    5984:	47 95       	ror	r20

00005986 <__fp_splitA>:
    5986:	88 0f       	add	r24, r24
    5988:	97 fb       	bst	r25, 7
    598a:	99 1f       	adc	r25, r25
    598c:	61 f0       	breq	.+24     	; 0x59a6 <__fp_splitA+0x20>
    598e:	9f 3f       	cpi	r25, 0xFF	; 255
    5990:	79 f0       	breq	.+30     	; 0x59b0 <__fp_splitA+0x2a>
    5992:	87 95       	ror	r24
    5994:	08 95       	ret
    5996:	12 16       	cp	r1, r18
    5998:	13 06       	cpc	r1, r19
    599a:	14 06       	cpc	r1, r20
    599c:	55 1f       	adc	r21, r21
    599e:	f2 cf       	rjmp	.-28     	; 0x5984 <__fp_split3+0xe>
    59a0:	46 95       	lsr	r20
    59a2:	f1 df       	rcall	.-30     	; 0x5986 <__fp_splitA>
    59a4:	08 c0       	rjmp	.+16     	; 0x59b6 <__fp_splitA+0x30>
    59a6:	16 16       	cp	r1, r22
    59a8:	17 06       	cpc	r1, r23
    59aa:	18 06       	cpc	r1, r24
    59ac:	99 1f       	adc	r25, r25
    59ae:	f1 cf       	rjmp	.-30     	; 0x5992 <__fp_splitA+0xc>
    59b0:	86 95       	lsr	r24
    59b2:	71 05       	cpc	r23, r1
    59b4:	61 05       	cpc	r22, r1
    59b6:	08 94       	sec
    59b8:	08 95       	ret

000059ba <__fp_zero>:
    59ba:	e8 94       	clt

000059bc <__fp_szero>:
    59bc:	bb 27       	eor	r27, r27
    59be:	66 27       	eor	r22, r22
    59c0:	77 27       	eor	r23, r23
    59c2:	cb 01       	movw	r24, r22
    59c4:	97 f9       	bld	r25, 7
    59c6:	08 95       	ret

000059c8 <__mulsf3>:
    59c8:	0b d0       	rcall	.+22     	; 0x59e0 <__mulsf3x>
    59ca:	c4 cf       	rjmp	.-120    	; 0x5954 <__fp_round>
    59cc:	b5 df       	rcall	.-150    	; 0x5938 <__fp_pscA>
    59ce:	28 f0       	brcs	.+10     	; 0x59da <__mulsf3+0x12>
    59d0:	ba df       	rcall	.-140    	; 0x5946 <__fp_pscB>
    59d2:	18 f0       	brcs	.+6      	; 0x59da <__mulsf3+0x12>
    59d4:	95 23       	and	r25, r21
    59d6:	09 f0       	breq	.+2      	; 0x59da <__mulsf3+0x12>
    59d8:	a6 cf       	rjmp	.-180    	; 0x5926 <__fp_inf>
    59da:	ab cf       	rjmp	.-170    	; 0x5932 <__fp_nan>
    59dc:	11 24       	eor	r1, r1
    59de:	ee cf       	rjmp	.-36     	; 0x59bc <__fp_szero>

000059e0 <__mulsf3x>:
    59e0:	ca df       	rcall	.-108    	; 0x5976 <__fp_split3>
    59e2:	a0 f3       	brcs	.-24     	; 0x59cc <__mulsf3+0x4>

000059e4 <__mulsf3_pse>:
    59e4:	95 9f       	mul	r25, r21
    59e6:	d1 f3       	breq	.-12     	; 0x59dc <__mulsf3+0x14>
    59e8:	95 0f       	add	r25, r21
    59ea:	50 e0       	ldi	r21, 0x00	; 0
    59ec:	55 1f       	adc	r21, r21
    59ee:	62 9f       	mul	r22, r18
    59f0:	f0 01       	movw	r30, r0
    59f2:	72 9f       	mul	r23, r18
    59f4:	bb 27       	eor	r27, r27
    59f6:	f0 0d       	add	r31, r0
    59f8:	b1 1d       	adc	r27, r1
    59fa:	63 9f       	mul	r22, r19
    59fc:	aa 27       	eor	r26, r26
    59fe:	f0 0d       	add	r31, r0
    5a00:	b1 1d       	adc	r27, r1
    5a02:	aa 1f       	adc	r26, r26
    5a04:	64 9f       	mul	r22, r20
    5a06:	66 27       	eor	r22, r22
    5a08:	b0 0d       	add	r27, r0
    5a0a:	a1 1d       	adc	r26, r1
    5a0c:	66 1f       	adc	r22, r22
    5a0e:	82 9f       	mul	r24, r18
    5a10:	22 27       	eor	r18, r18
    5a12:	b0 0d       	add	r27, r0
    5a14:	a1 1d       	adc	r26, r1
    5a16:	62 1f       	adc	r22, r18
    5a18:	73 9f       	mul	r23, r19
    5a1a:	b0 0d       	add	r27, r0
    5a1c:	a1 1d       	adc	r26, r1
    5a1e:	62 1f       	adc	r22, r18
    5a20:	83 9f       	mul	r24, r19
    5a22:	a0 0d       	add	r26, r0
    5a24:	61 1d       	adc	r22, r1
    5a26:	22 1f       	adc	r18, r18
    5a28:	74 9f       	mul	r23, r20
    5a2a:	33 27       	eor	r19, r19
    5a2c:	a0 0d       	add	r26, r0
    5a2e:	61 1d       	adc	r22, r1
    5a30:	23 1f       	adc	r18, r19
    5a32:	84 9f       	mul	r24, r20
    5a34:	60 0d       	add	r22, r0
    5a36:	21 1d       	adc	r18, r1
    5a38:	82 2f       	mov	r24, r18
    5a3a:	76 2f       	mov	r23, r22
    5a3c:	6a 2f       	mov	r22, r26
    5a3e:	11 24       	eor	r1, r1
    5a40:	9f 57       	subi	r25, 0x7F	; 127
    5a42:	50 40       	sbci	r21, 0x00	; 0
    5a44:	8a f0       	brmi	.+34     	; 0x5a68 <__mulsf3_pse+0x84>
    5a46:	e1 f0       	breq	.+56     	; 0x5a80 <__mulsf3_pse+0x9c>
    5a48:	88 23       	and	r24, r24
    5a4a:	4a f0       	brmi	.+18     	; 0x5a5e <__mulsf3_pse+0x7a>
    5a4c:	ee 0f       	add	r30, r30
    5a4e:	ff 1f       	adc	r31, r31
    5a50:	bb 1f       	adc	r27, r27
    5a52:	66 1f       	adc	r22, r22
    5a54:	77 1f       	adc	r23, r23
    5a56:	88 1f       	adc	r24, r24
    5a58:	91 50       	subi	r25, 0x01	; 1
    5a5a:	50 40       	sbci	r21, 0x00	; 0
    5a5c:	a9 f7       	brne	.-22     	; 0x5a48 <__mulsf3_pse+0x64>
    5a5e:	9e 3f       	cpi	r25, 0xFE	; 254
    5a60:	51 05       	cpc	r21, r1
    5a62:	70 f0       	brcs	.+28     	; 0x5a80 <__mulsf3_pse+0x9c>
    5a64:	60 cf       	rjmp	.-320    	; 0x5926 <__fp_inf>
    5a66:	aa cf       	rjmp	.-172    	; 0x59bc <__fp_szero>
    5a68:	5f 3f       	cpi	r21, 0xFF	; 255
    5a6a:	ec f3       	brlt	.-6      	; 0x5a66 <__mulsf3_pse+0x82>
    5a6c:	98 3e       	cpi	r25, 0xE8	; 232
    5a6e:	dc f3       	brlt	.-10     	; 0x5a66 <__mulsf3_pse+0x82>
    5a70:	86 95       	lsr	r24
    5a72:	77 95       	ror	r23
    5a74:	67 95       	ror	r22
    5a76:	b7 95       	ror	r27
    5a78:	f7 95       	ror	r31
    5a7a:	e7 95       	ror	r30
    5a7c:	9f 5f       	subi	r25, 0xFF	; 255
    5a7e:	c1 f7       	brne	.-16     	; 0x5a70 <__mulsf3_pse+0x8c>
    5a80:	fe 2b       	or	r31, r30
    5a82:	88 0f       	add	r24, r24
    5a84:	91 1d       	adc	r25, r1
    5a86:	96 95       	lsr	r25
    5a88:	87 95       	ror	r24
    5a8a:	97 f9       	bld	r25, 7
    5a8c:	08 95       	ret

00005a8e <__udivmodsi4>:
    5a8e:	a1 e2       	ldi	r26, 0x21	; 33
    5a90:	1a 2e       	mov	r1, r26
    5a92:	aa 1b       	sub	r26, r26
    5a94:	bb 1b       	sub	r27, r27
    5a96:	fd 01       	movw	r30, r26
    5a98:	0d c0       	rjmp	.+26     	; 0x5ab4 <__udivmodsi4_ep>

00005a9a <__udivmodsi4_loop>:
    5a9a:	aa 1f       	adc	r26, r26
    5a9c:	bb 1f       	adc	r27, r27
    5a9e:	ee 1f       	adc	r30, r30
    5aa0:	ff 1f       	adc	r31, r31
    5aa2:	a2 17       	cp	r26, r18
    5aa4:	b3 07       	cpc	r27, r19
    5aa6:	e4 07       	cpc	r30, r20
    5aa8:	f5 07       	cpc	r31, r21
    5aaa:	20 f0       	brcs	.+8      	; 0x5ab4 <__udivmodsi4_ep>
    5aac:	a2 1b       	sub	r26, r18
    5aae:	b3 0b       	sbc	r27, r19
    5ab0:	e4 0b       	sbc	r30, r20
    5ab2:	f5 0b       	sbc	r31, r21

00005ab4 <__udivmodsi4_ep>:
    5ab4:	66 1f       	adc	r22, r22
    5ab6:	77 1f       	adc	r23, r23
    5ab8:	88 1f       	adc	r24, r24
    5aba:	99 1f       	adc	r25, r25
    5abc:	1a 94       	dec	r1
    5abe:	69 f7       	brne	.-38     	; 0x5a9a <__udivmodsi4_loop>
    5ac0:	60 95       	com	r22
    5ac2:	70 95       	com	r23
    5ac4:	80 95       	com	r24
    5ac6:	90 95       	com	r25
    5ac8:	9b 01       	movw	r18, r22
    5aca:	ac 01       	movw	r20, r24
    5acc:	bd 01       	movw	r22, r26
    5ace:	cf 01       	movw	r24, r30
    5ad0:	08 95       	ret

00005ad2 <__tablejump2__>:
    5ad2:	ee 0f       	add	r30, r30
    5ad4:	ff 1f       	adc	r31, r31
    5ad6:	88 1f       	adc	r24, r24
    5ad8:	8b bf       	out	0x3b, r24	; 59
    5ada:	07 90       	elpm	r0, Z+
    5adc:	f6 91       	elpm	r31, Z
    5ade:	e0 2d       	mov	r30, r0
    5ae0:	19 94       	eijmp

00005ae2 <calloc>:
    5ae2:	0f 93       	push	r16
    5ae4:	1f 93       	push	r17
    5ae6:	cf 93       	push	r28
    5ae8:	df 93       	push	r29
    5aea:	86 9f       	mul	r24, r22
    5aec:	80 01       	movw	r16, r0
    5aee:	87 9f       	mul	r24, r23
    5af0:	10 0d       	add	r17, r0
    5af2:	96 9f       	mul	r25, r22
    5af4:	10 0d       	add	r17, r0
    5af6:	11 24       	eor	r1, r1
    5af8:	c8 01       	movw	r24, r16
    5afa:	0d d0       	rcall	.+26     	; 0x5b16 <malloc>
    5afc:	ec 01       	movw	r28, r24
    5afe:	00 97       	sbiw	r24, 0x00	; 0
    5b00:	21 f0       	breq	.+8      	; 0x5b0a <calloc+0x28>
    5b02:	a8 01       	movw	r20, r16
    5b04:	60 e0       	ldi	r22, 0x00	; 0
    5b06:	70 e0       	ldi	r23, 0x00	; 0
    5b08:	34 d1       	rcall	.+616    	; 0x5d72 <memset>
    5b0a:	ce 01       	movw	r24, r28
    5b0c:	df 91       	pop	r29
    5b0e:	cf 91       	pop	r28
    5b10:	1f 91       	pop	r17
    5b12:	0f 91       	pop	r16
    5b14:	08 95       	ret

00005b16 <malloc>:
    5b16:	0f 93       	push	r16
    5b18:	1f 93       	push	r17
    5b1a:	cf 93       	push	r28
    5b1c:	df 93       	push	r29
    5b1e:	82 30       	cpi	r24, 0x02	; 2
    5b20:	91 05       	cpc	r25, r1
    5b22:	10 f4       	brcc	.+4      	; 0x5b28 <malloc+0x12>
    5b24:	82 e0       	ldi	r24, 0x02	; 2
    5b26:	90 e0       	ldi	r25, 0x00	; 0
    5b28:	e0 91 16 1b 	lds	r30, 0x1B16	; 0x801b16 <__flp>
    5b2c:	f0 91 17 1b 	lds	r31, 0x1B17	; 0x801b17 <__flp+0x1>
    5b30:	20 e0       	ldi	r18, 0x00	; 0
    5b32:	30 e0       	ldi	r19, 0x00	; 0
    5b34:	a0 e0       	ldi	r26, 0x00	; 0
    5b36:	b0 e0       	ldi	r27, 0x00	; 0
    5b38:	30 97       	sbiw	r30, 0x00	; 0
    5b3a:	19 f1       	breq	.+70     	; 0x5b82 <malloc+0x6c>
    5b3c:	40 81       	ld	r20, Z
    5b3e:	51 81       	ldd	r21, Z+1	; 0x01
    5b40:	02 81       	ldd	r16, Z+2	; 0x02
    5b42:	13 81       	ldd	r17, Z+3	; 0x03
    5b44:	48 17       	cp	r20, r24
    5b46:	59 07       	cpc	r21, r25
    5b48:	c8 f0       	brcs	.+50     	; 0x5b7c <malloc+0x66>
    5b4a:	84 17       	cp	r24, r20
    5b4c:	95 07       	cpc	r25, r21
    5b4e:	69 f4       	brne	.+26     	; 0x5b6a <malloc+0x54>
    5b50:	10 97       	sbiw	r26, 0x00	; 0
    5b52:	31 f0       	breq	.+12     	; 0x5b60 <malloc+0x4a>
    5b54:	12 96       	adiw	r26, 0x02	; 2
    5b56:	0c 93       	st	X, r16
    5b58:	12 97       	sbiw	r26, 0x02	; 2
    5b5a:	13 96       	adiw	r26, 0x03	; 3
    5b5c:	1c 93       	st	X, r17
    5b5e:	27 c0       	rjmp	.+78     	; 0x5bae <malloc+0x98>
    5b60:	00 93 16 1b 	sts	0x1B16, r16	; 0x801b16 <__flp>
    5b64:	10 93 17 1b 	sts	0x1B17, r17	; 0x801b17 <__flp+0x1>
    5b68:	22 c0       	rjmp	.+68     	; 0x5bae <malloc+0x98>
    5b6a:	21 15       	cp	r18, r1
    5b6c:	31 05       	cpc	r19, r1
    5b6e:	19 f0       	breq	.+6      	; 0x5b76 <malloc+0x60>
    5b70:	42 17       	cp	r20, r18
    5b72:	53 07       	cpc	r21, r19
    5b74:	18 f4       	brcc	.+6      	; 0x5b7c <malloc+0x66>
    5b76:	9a 01       	movw	r18, r20
    5b78:	bd 01       	movw	r22, r26
    5b7a:	ef 01       	movw	r28, r30
    5b7c:	df 01       	movw	r26, r30
    5b7e:	f8 01       	movw	r30, r16
    5b80:	db cf       	rjmp	.-74     	; 0x5b38 <malloc+0x22>
    5b82:	21 15       	cp	r18, r1
    5b84:	31 05       	cpc	r19, r1
    5b86:	f9 f0       	breq	.+62     	; 0x5bc6 <malloc+0xb0>
    5b88:	28 1b       	sub	r18, r24
    5b8a:	39 0b       	sbc	r19, r25
    5b8c:	24 30       	cpi	r18, 0x04	; 4
    5b8e:	31 05       	cpc	r19, r1
    5b90:	80 f4       	brcc	.+32     	; 0x5bb2 <malloc+0x9c>
    5b92:	8a 81       	ldd	r24, Y+2	; 0x02
    5b94:	9b 81       	ldd	r25, Y+3	; 0x03
    5b96:	61 15       	cp	r22, r1
    5b98:	71 05       	cpc	r23, r1
    5b9a:	21 f0       	breq	.+8      	; 0x5ba4 <malloc+0x8e>
    5b9c:	fb 01       	movw	r30, r22
    5b9e:	93 83       	std	Z+3, r25	; 0x03
    5ba0:	82 83       	std	Z+2, r24	; 0x02
    5ba2:	04 c0       	rjmp	.+8      	; 0x5bac <malloc+0x96>
    5ba4:	90 93 17 1b 	sts	0x1B17, r25	; 0x801b17 <__flp+0x1>
    5ba8:	80 93 16 1b 	sts	0x1B16, r24	; 0x801b16 <__flp>
    5bac:	fe 01       	movw	r30, r28
    5bae:	32 96       	adiw	r30, 0x02	; 2
    5bb0:	44 c0       	rjmp	.+136    	; 0x5c3a <malloc+0x124>
    5bb2:	fe 01       	movw	r30, r28
    5bb4:	e2 0f       	add	r30, r18
    5bb6:	f3 1f       	adc	r31, r19
    5bb8:	81 93       	st	Z+, r24
    5bba:	91 93       	st	Z+, r25
    5bbc:	22 50       	subi	r18, 0x02	; 2
    5bbe:	31 09       	sbc	r19, r1
    5bc0:	39 83       	std	Y+1, r19	; 0x01
    5bc2:	28 83       	st	Y, r18
    5bc4:	3a c0       	rjmp	.+116    	; 0x5c3a <malloc+0x124>
    5bc6:	20 91 14 1b 	lds	r18, 0x1B14	; 0x801b14 <__brkval>
    5bca:	30 91 15 1b 	lds	r19, 0x1B15	; 0x801b15 <__brkval+0x1>
    5bce:	23 2b       	or	r18, r19
    5bd0:	41 f4       	brne	.+16     	; 0x5be2 <malloc+0xcc>
    5bd2:	20 91 02 02 	lds	r18, 0x0202	; 0x800202 <__malloc_heap_start>
    5bd6:	30 91 03 02 	lds	r19, 0x0203	; 0x800203 <__malloc_heap_start+0x1>
    5bda:	30 93 15 1b 	sts	0x1B15, r19	; 0x801b15 <__brkval+0x1>
    5bde:	20 93 14 1b 	sts	0x1B14, r18	; 0x801b14 <__brkval>
    5be2:	20 91 00 02 	lds	r18, 0x0200	; 0x800200 <__data_start>
    5be6:	30 91 01 02 	lds	r19, 0x0201	; 0x800201 <__data_start+0x1>
    5bea:	21 15       	cp	r18, r1
    5bec:	31 05       	cpc	r19, r1
    5bee:	41 f4       	brne	.+16     	; 0x5c00 <malloc+0xea>
    5bf0:	2d b7       	in	r18, 0x3d	; 61
    5bf2:	3e b7       	in	r19, 0x3e	; 62
    5bf4:	40 91 04 02 	lds	r20, 0x0204	; 0x800204 <__malloc_margin>
    5bf8:	50 91 05 02 	lds	r21, 0x0205	; 0x800205 <__malloc_margin+0x1>
    5bfc:	24 1b       	sub	r18, r20
    5bfe:	35 0b       	sbc	r19, r21
    5c00:	e0 91 14 1b 	lds	r30, 0x1B14	; 0x801b14 <__brkval>
    5c04:	f0 91 15 1b 	lds	r31, 0x1B15	; 0x801b15 <__brkval+0x1>
    5c08:	e2 17       	cp	r30, r18
    5c0a:	f3 07       	cpc	r31, r19
    5c0c:	a0 f4       	brcc	.+40     	; 0x5c36 <malloc+0x120>
    5c0e:	2e 1b       	sub	r18, r30
    5c10:	3f 0b       	sbc	r19, r31
    5c12:	28 17       	cp	r18, r24
    5c14:	39 07       	cpc	r19, r25
    5c16:	78 f0       	brcs	.+30     	; 0x5c36 <malloc+0x120>
    5c18:	ac 01       	movw	r20, r24
    5c1a:	4e 5f       	subi	r20, 0xFE	; 254
    5c1c:	5f 4f       	sbci	r21, 0xFF	; 255
    5c1e:	24 17       	cp	r18, r20
    5c20:	35 07       	cpc	r19, r21
    5c22:	48 f0       	brcs	.+18     	; 0x5c36 <malloc+0x120>
    5c24:	4e 0f       	add	r20, r30
    5c26:	5f 1f       	adc	r21, r31
    5c28:	50 93 15 1b 	sts	0x1B15, r21	; 0x801b15 <__brkval+0x1>
    5c2c:	40 93 14 1b 	sts	0x1B14, r20	; 0x801b14 <__brkval>
    5c30:	81 93       	st	Z+, r24
    5c32:	91 93       	st	Z+, r25
    5c34:	02 c0       	rjmp	.+4      	; 0x5c3a <malloc+0x124>
    5c36:	e0 e0       	ldi	r30, 0x00	; 0
    5c38:	f0 e0       	ldi	r31, 0x00	; 0
    5c3a:	cf 01       	movw	r24, r30
    5c3c:	df 91       	pop	r29
    5c3e:	cf 91       	pop	r28
    5c40:	1f 91       	pop	r17
    5c42:	0f 91       	pop	r16
    5c44:	08 95       	ret

00005c46 <free>:
    5c46:	cf 93       	push	r28
    5c48:	df 93       	push	r29
    5c4a:	00 97       	sbiw	r24, 0x00	; 0
    5c4c:	09 f4       	brne	.+2      	; 0x5c50 <free+0xa>
    5c4e:	81 c0       	rjmp	.+258    	; 0x5d52 <free+0x10c>
    5c50:	fc 01       	movw	r30, r24
    5c52:	32 97       	sbiw	r30, 0x02	; 2
    5c54:	13 82       	std	Z+3, r1	; 0x03
    5c56:	12 82       	std	Z+2, r1	; 0x02
    5c58:	a0 91 16 1b 	lds	r26, 0x1B16	; 0x801b16 <__flp>
    5c5c:	b0 91 17 1b 	lds	r27, 0x1B17	; 0x801b17 <__flp+0x1>
    5c60:	10 97       	sbiw	r26, 0x00	; 0
    5c62:	81 f4       	brne	.+32     	; 0x5c84 <free+0x3e>
    5c64:	20 81       	ld	r18, Z
    5c66:	31 81       	ldd	r19, Z+1	; 0x01
    5c68:	82 0f       	add	r24, r18
    5c6a:	93 1f       	adc	r25, r19
    5c6c:	20 91 14 1b 	lds	r18, 0x1B14	; 0x801b14 <__brkval>
    5c70:	30 91 15 1b 	lds	r19, 0x1B15	; 0x801b15 <__brkval+0x1>
    5c74:	28 17       	cp	r18, r24
    5c76:	39 07       	cpc	r19, r25
    5c78:	51 f5       	brne	.+84     	; 0x5cce <free+0x88>
    5c7a:	f0 93 15 1b 	sts	0x1B15, r31	; 0x801b15 <__brkval+0x1>
    5c7e:	e0 93 14 1b 	sts	0x1B14, r30	; 0x801b14 <__brkval>
    5c82:	67 c0       	rjmp	.+206    	; 0x5d52 <free+0x10c>
    5c84:	ed 01       	movw	r28, r26
    5c86:	20 e0       	ldi	r18, 0x00	; 0
    5c88:	30 e0       	ldi	r19, 0x00	; 0
    5c8a:	ce 17       	cp	r28, r30
    5c8c:	df 07       	cpc	r29, r31
    5c8e:	40 f4       	brcc	.+16     	; 0x5ca0 <free+0x5a>
    5c90:	4a 81       	ldd	r20, Y+2	; 0x02
    5c92:	5b 81       	ldd	r21, Y+3	; 0x03
    5c94:	9e 01       	movw	r18, r28
    5c96:	41 15       	cp	r20, r1
    5c98:	51 05       	cpc	r21, r1
    5c9a:	f1 f0       	breq	.+60     	; 0x5cd8 <free+0x92>
    5c9c:	ea 01       	movw	r28, r20
    5c9e:	f5 cf       	rjmp	.-22     	; 0x5c8a <free+0x44>
    5ca0:	d3 83       	std	Z+3, r29	; 0x03
    5ca2:	c2 83       	std	Z+2, r28	; 0x02
    5ca4:	40 81       	ld	r20, Z
    5ca6:	51 81       	ldd	r21, Z+1	; 0x01
    5ca8:	84 0f       	add	r24, r20
    5caa:	95 1f       	adc	r25, r21
    5cac:	c8 17       	cp	r28, r24
    5cae:	d9 07       	cpc	r29, r25
    5cb0:	59 f4       	brne	.+22     	; 0x5cc8 <free+0x82>
    5cb2:	88 81       	ld	r24, Y
    5cb4:	99 81       	ldd	r25, Y+1	; 0x01
    5cb6:	84 0f       	add	r24, r20
    5cb8:	95 1f       	adc	r25, r21
    5cba:	02 96       	adiw	r24, 0x02	; 2
    5cbc:	91 83       	std	Z+1, r25	; 0x01
    5cbe:	80 83       	st	Z, r24
    5cc0:	8a 81       	ldd	r24, Y+2	; 0x02
    5cc2:	9b 81       	ldd	r25, Y+3	; 0x03
    5cc4:	93 83       	std	Z+3, r25	; 0x03
    5cc6:	82 83       	std	Z+2, r24	; 0x02
    5cc8:	21 15       	cp	r18, r1
    5cca:	31 05       	cpc	r19, r1
    5ccc:	29 f4       	brne	.+10     	; 0x5cd8 <free+0x92>
    5cce:	f0 93 17 1b 	sts	0x1B17, r31	; 0x801b17 <__flp+0x1>
    5cd2:	e0 93 16 1b 	sts	0x1B16, r30	; 0x801b16 <__flp>
    5cd6:	3d c0       	rjmp	.+122    	; 0x5d52 <free+0x10c>
    5cd8:	e9 01       	movw	r28, r18
    5cda:	fb 83       	std	Y+3, r31	; 0x03
    5cdc:	ea 83       	std	Y+2, r30	; 0x02
    5cde:	49 91       	ld	r20, Y+
    5ce0:	59 91       	ld	r21, Y+
    5ce2:	c4 0f       	add	r28, r20
    5ce4:	d5 1f       	adc	r29, r21
    5ce6:	ec 17       	cp	r30, r28
    5ce8:	fd 07       	cpc	r31, r29
    5cea:	61 f4       	brne	.+24     	; 0x5d04 <free+0xbe>
    5cec:	80 81       	ld	r24, Z
    5cee:	91 81       	ldd	r25, Z+1	; 0x01
    5cf0:	84 0f       	add	r24, r20
    5cf2:	95 1f       	adc	r25, r21
    5cf4:	02 96       	adiw	r24, 0x02	; 2
    5cf6:	e9 01       	movw	r28, r18
    5cf8:	99 83       	std	Y+1, r25	; 0x01
    5cfa:	88 83       	st	Y, r24
    5cfc:	82 81       	ldd	r24, Z+2	; 0x02
    5cfe:	93 81       	ldd	r25, Z+3	; 0x03
    5d00:	9b 83       	std	Y+3, r25	; 0x03
    5d02:	8a 83       	std	Y+2, r24	; 0x02
    5d04:	e0 e0       	ldi	r30, 0x00	; 0
    5d06:	f0 e0       	ldi	r31, 0x00	; 0
    5d08:	12 96       	adiw	r26, 0x02	; 2
    5d0a:	8d 91       	ld	r24, X+
    5d0c:	9c 91       	ld	r25, X
    5d0e:	13 97       	sbiw	r26, 0x03	; 3
    5d10:	00 97       	sbiw	r24, 0x00	; 0
    5d12:	19 f0       	breq	.+6      	; 0x5d1a <free+0xd4>
    5d14:	fd 01       	movw	r30, r26
    5d16:	dc 01       	movw	r26, r24
    5d18:	f7 cf       	rjmp	.-18     	; 0x5d08 <free+0xc2>
    5d1a:	8d 91       	ld	r24, X+
    5d1c:	9c 91       	ld	r25, X
    5d1e:	11 97       	sbiw	r26, 0x01	; 1
    5d20:	9d 01       	movw	r18, r26
    5d22:	2e 5f       	subi	r18, 0xFE	; 254
    5d24:	3f 4f       	sbci	r19, 0xFF	; 255
    5d26:	82 0f       	add	r24, r18
    5d28:	93 1f       	adc	r25, r19
    5d2a:	20 91 14 1b 	lds	r18, 0x1B14	; 0x801b14 <__brkval>
    5d2e:	30 91 15 1b 	lds	r19, 0x1B15	; 0x801b15 <__brkval+0x1>
    5d32:	28 17       	cp	r18, r24
    5d34:	39 07       	cpc	r19, r25
    5d36:	69 f4       	brne	.+26     	; 0x5d52 <free+0x10c>
    5d38:	30 97       	sbiw	r30, 0x00	; 0
    5d3a:	29 f4       	brne	.+10     	; 0x5d46 <free+0x100>
    5d3c:	10 92 17 1b 	sts	0x1B17, r1	; 0x801b17 <__flp+0x1>
    5d40:	10 92 16 1b 	sts	0x1B16, r1	; 0x801b16 <__flp>
    5d44:	02 c0       	rjmp	.+4      	; 0x5d4a <free+0x104>
    5d46:	13 82       	std	Z+3, r1	; 0x03
    5d48:	12 82       	std	Z+2, r1	; 0x02
    5d4a:	b0 93 15 1b 	sts	0x1B15, r27	; 0x801b15 <__brkval+0x1>
    5d4e:	a0 93 14 1b 	sts	0x1B14, r26	; 0x801b14 <__brkval>
    5d52:	df 91       	pop	r29
    5d54:	cf 91       	pop	r28
    5d56:	08 95       	ret

00005d58 <abort>:
    5d58:	81 e0       	ldi	r24, 0x01	; 1
    5d5a:	90 e0       	ldi	r25, 0x00	; 0
    5d5c:	f8 94       	cli
    5d5e:	7d c3       	rjmp	.+1786   	; 0x645a <_exit>

00005d60 <memcpy>:
    5d60:	fb 01       	movw	r30, r22
    5d62:	dc 01       	movw	r26, r24
    5d64:	02 c0       	rjmp	.+4      	; 0x5d6a <memcpy+0xa>
    5d66:	01 90       	ld	r0, Z+
    5d68:	0d 92       	st	X+, r0
    5d6a:	41 50       	subi	r20, 0x01	; 1
    5d6c:	50 40       	sbci	r21, 0x00	; 0
    5d6e:	d8 f7       	brcc	.-10     	; 0x5d66 <memcpy+0x6>
    5d70:	08 95       	ret

00005d72 <memset>:
    5d72:	dc 01       	movw	r26, r24
    5d74:	01 c0       	rjmp	.+2      	; 0x5d78 <memset+0x6>
    5d76:	6d 93       	st	X+, r22
    5d78:	41 50       	subi	r20, 0x01	; 1
    5d7a:	50 40       	sbci	r21, 0x00	; 0
    5d7c:	e0 f7       	brcc	.-8      	; 0x5d76 <memset+0x4>
    5d7e:	08 95       	ret

00005d80 <strcasestr>:
    5d80:	fb 01       	movw	r30, r22
    5d82:	51 91       	ld	r21, Z+
    5d84:	55 23       	and	r21, r21
    5d86:	b1 f0       	breq	.+44     	; 0x5db4 <strcasestr+0x34>
    5d88:	bf 01       	movw	r22, r30
    5d8a:	dc 01       	movw	r26, r24
    5d8c:	05 2e       	mov	r0, r21
    5d8e:	4d 91       	ld	r20, X+
    5d90:	44 23       	and	r20, r20
    5d92:	69 f0       	breq	.+26     	; 0x5dae <strcasestr+0x2e>
    5d94:	10 d0       	rcall	.+32     	; 0x5db6 <strcasestr+0x36>
    5d96:	d9 f7       	brne	.-10     	; 0x5d8e <strcasestr+0xe>
    5d98:	cd 01       	movw	r24, r26
    5d9a:	01 90       	ld	r0, Z+
    5d9c:	00 20       	and	r0, r0
    5d9e:	49 f0       	breq	.+18     	; 0x5db2 <strcasestr+0x32>
    5da0:	4d 91       	ld	r20, X+
    5da2:	41 11       	cpse	r20, r1
    5da4:	08 d0       	rcall	.+16     	; 0x5db6 <strcasestr+0x36>
    5da6:	c9 f3       	breq	.-14     	; 0x5d9a <strcasestr+0x1a>
    5da8:	fb 01       	movw	r30, r22
    5daa:	41 11       	cpse	r20, r1
    5dac:	ee cf       	rjmp	.-36     	; 0x5d8a <strcasestr+0xa>
    5dae:	81 e0       	ldi	r24, 0x01	; 1
    5db0:	90 e0       	ldi	r25, 0x00	; 0
    5db2:	01 97       	sbiw	r24, 0x01	; 1
    5db4:	08 95       	ret
    5db6:	40 25       	eor	r20, r0
    5db8:	39 f0       	breq	.+14     	; 0x5dc8 <strcasestr+0x48>
    5dba:	40 32       	cpi	r20, 0x20	; 32
    5dbc:	29 f4       	brne	.+10     	; 0x5dc8 <strcasestr+0x48>
    5dbe:	40 29       	or	r20, r0
    5dc0:	4b 57       	subi	r20, 0x7B	; 123
    5dc2:	46 5e       	subi	r20, 0xE6	; 230
    5dc4:	08 f0       	brcs	.+2      	; 0x5dc8 <strcasestr+0x48>
    5dc6:	18 94       	sez
    5dc8:	08 95       	ret

00005dca <strcat>:
    5dca:	fb 01       	movw	r30, r22
    5dcc:	dc 01       	movw	r26, r24
    5dce:	0d 90       	ld	r0, X+
    5dd0:	00 20       	and	r0, r0
    5dd2:	e9 f7       	brne	.-6      	; 0x5dce <strcat+0x4>
    5dd4:	11 97       	sbiw	r26, 0x01	; 1
    5dd6:	01 90       	ld	r0, Z+
    5dd8:	0d 92       	st	X+, r0
    5dda:	00 20       	and	r0, r0
    5ddc:	e1 f7       	brne	.-8      	; 0x5dd6 <strcat+0xc>
    5dde:	08 95       	ret

00005de0 <strcpy>:
    5de0:	fb 01       	movw	r30, r22
    5de2:	dc 01       	movw	r26, r24
    5de4:	01 90       	ld	r0, Z+
    5de6:	0d 92       	st	X+, r0
    5de8:	00 20       	and	r0, r0
    5dea:	e1 f7       	brne	.-8      	; 0x5de4 <strcpy+0x4>
    5dec:	08 95       	ret

00005dee <strncasecmp>:
    5dee:	fb 01       	movw	r30, r22
    5df0:	dc 01       	movw	r26, r24
    5df2:	41 50       	subi	r20, 0x01	; 1
    5df4:	50 40       	sbci	r21, 0x00	; 0
    5df6:	88 f0       	brcs	.+34     	; 0x5e1a <strncasecmp+0x2c>
    5df8:	8d 91       	ld	r24, X+
    5dfa:	81 34       	cpi	r24, 0x41	; 65
    5dfc:	1c f0       	brlt	.+6      	; 0x5e04 <strncasecmp+0x16>
    5dfe:	8b 35       	cpi	r24, 0x5B	; 91
    5e00:	0c f4       	brge	.+2      	; 0x5e04 <strncasecmp+0x16>
    5e02:	80 5e       	subi	r24, 0xE0	; 224
    5e04:	61 91       	ld	r22, Z+
    5e06:	61 34       	cpi	r22, 0x41	; 65
    5e08:	1c f0       	brlt	.+6      	; 0x5e10 <strncasecmp+0x22>
    5e0a:	6b 35       	cpi	r22, 0x5B	; 91
    5e0c:	0c f4       	brge	.+2      	; 0x5e10 <strncasecmp+0x22>
    5e0e:	60 5e       	subi	r22, 0xE0	; 224
    5e10:	86 1b       	sub	r24, r22
    5e12:	61 11       	cpse	r22, r1
    5e14:	71 f3       	breq	.-36     	; 0x5df2 <strncasecmp+0x4>
    5e16:	99 0b       	sbc	r25, r25
    5e18:	08 95       	ret
    5e1a:	88 1b       	sub	r24, r24
    5e1c:	fc cf       	rjmp	.-8      	; 0x5e16 <strncasecmp+0x28>

00005e1e <printf>:
    5e1e:	cf 93       	push	r28
    5e20:	df 93       	push	r29
    5e22:	cd b7       	in	r28, 0x3d	; 61
    5e24:	de b7       	in	r29, 0x3e	; 62
    5e26:	ae 01       	movw	r20, r28
    5e28:	4a 5f       	subi	r20, 0xFA	; 250
    5e2a:	5f 4f       	sbci	r21, 0xFF	; 255
    5e2c:	fa 01       	movw	r30, r20
    5e2e:	61 91       	ld	r22, Z+
    5e30:	71 91       	ld	r23, Z+
    5e32:	af 01       	movw	r20, r30
    5e34:	80 91 1a 1b 	lds	r24, 0x1B1A	; 0x801b1a <__iob+0x2>
    5e38:	90 91 1b 1b 	lds	r25, 0x1B1B	; 0x801b1b <__iob+0x3>
    5e3c:	61 d0       	rcall	.+194    	; 0x5f00 <vfprintf>
    5e3e:	df 91       	pop	r29
    5e40:	cf 91       	pop	r28
    5e42:	08 95       	ret

00005e44 <puts>:
    5e44:	0f 93       	push	r16
    5e46:	1f 93       	push	r17
    5e48:	cf 93       	push	r28
    5e4a:	df 93       	push	r29
    5e4c:	e0 91 1a 1b 	lds	r30, 0x1B1A	; 0x801b1a <__iob+0x2>
    5e50:	f0 91 1b 1b 	lds	r31, 0x1B1B	; 0x801b1b <__iob+0x3>
    5e54:	23 81       	ldd	r18, Z+3	; 0x03
    5e56:	21 ff       	sbrs	r18, 1
    5e58:	1b c0       	rjmp	.+54     	; 0x5e90 <puts+0x4c>
    5e5a:	8c 01       	movw	r16, r24
    5e5c:	d0 e0       	ldi	r29, 0x00	; 0
    5e5e:	c0 e0       	ldi	r28, 0x00	; 0
    5e60:	f8 01       	movw	r30, r16
    5e62:	81 91       	ld	r24, Z+
    5e64:	8f 01       	movw	r16, r30
    5e66:	60 91 1a 1b 	lds	r22, 0x1B1A	; 0x801b1a <__iob+0x2>
    5e6a:	70 91 1b 1b 	lds	r23, 0x1B1B	; 0x801b1b <__iob+0x3>
    5e6e:	db 01       	movw	r26, r22
    5e70:	18 96       	adiw	r26, 0x08	; 8
    5e72:	ed 91       	ld	r30, X+
    5e74:	fc 91       	ld	r31, X
    5e76:	19 97       	sbiw	r26, 0x09	; 9
    5e78:	88 23       	and	r24, r24
    5e7a:	31 f0       	breq	.+12     	; 0x5e88 <puts+0x44>
    5e7c:	19 95       	eicall
    5e7e:	89 2b       	or	r24, r25
    5e80:	79 f3       	breq	.-34     	; 0x5e60 <puts+0x1c>
    5e82:	df ef       	ldi	r29, 0xFF	; 255
    5e84:	cf ef       	ldi	r28, 0xFF	; 255
    5e86:	ec cf       	rjmp	.-40     	; 0x5e60 <puts+0x1c>
    5e88:	8a e0       	ldi	r24, 0x0A	; 10
    5e8a:	19 95       	eicall
    5e8c:	89 2b       	or	r24, r25
    5e8e:	19 f0       	breq	.+6      	; 0x5e96 <puts+0x52>
    5e90:	8f ef       	ldi	r24, 0xFF	; 255
    5e92:	9f ef       	ldi	r25, 0xFF	; 255
    5e94:	02 c0       	rjmp	.+4      	; 0x5e9a <puts+0x56>
    5e96:	8d 2f       	mov	r24, r29
    5e98:	9c 2f       	mov	r25, r28
    5e9a:	df 91       	pop	r29
    5e9c:	cf 91       	pop	r28
    5e9e:	1f 91       	pop	r17
    5ea0:	0f 91       	pop	r16
    5ea2:	08 95       	ret

00005ea4 <sprintf>:
    5ea4:	0f 93       	push	r16
    5ea6:	1f 93       	push	r17
    5ea8:	cf 93       	push	r28
    5eaa:	df 93       	push	r29
    5eac:	cd b7       	in	r28, 0x3d	; 61
    5eae:	de b7       	in	r29, 0x3e	; 62
    5eb0:	2e 97       	sbiw	r28, 0x0e	; 14
    5eb2:	0f b6       	in	r0, 0x3f	; 63
    5eb4:	f8 94       	cli
    5eb6:	de bf       	out	0x3e, r29	; 62
    5eb8:	0f be       	out	0x3f, r0	; 63
    5eba:	cd bf       	out	0x3d, r28	; 61
    5ebc:	0e 89       	ldd	r16, Y+22	; 0x16
    5ebe:	1f 89       	ldd	r17, Y+23	; 0x17
    5ec0:	86 e0       	ldi	r24, 0x06	; 6
    5ec2:	8c 83       	std	Y+4, r24	; 0x04
    5ec4:	1a 83       	std	Y+2, r17	; 0x02
    5ec6:	09 83       	std	Y+1, r16	; 0x01
    5ec8:	8f ef       	ldi	r24, 0xFF	; 255
    5eca:	9f e7       	ldi	r25, 0x7F	; 127
    5ecc:	9e 83       	std	Y+6, r25	; 0x06
    5ece:	8d 83       	std	Y+5, r24	; 0x05
    5ed0:	ae 01       	movw	r20, r28
    5ed2:	46 5e       	subi	r20, 0xE6	; 230
    5ed4:	5f 4f       	sbci	r21, 0xFF	; 255
    5ed6:	68 8d       	ldd	r22, Y+24	; 0x18
    5ed8:	79 8d       	ldd	r23, Y+25	; 0x19
    5eda:	ce 01       	movw	r24, r28
    5edc:	01 96       	adiw	r24, 0x01	; 1
    5ede:	10 d0       	rcall	.+32     	; 0x5f00 <vfprintf>
    5ee0:	ef 81       	ldd	r30, Y+7	; 0x07
    5ee2:	f8 85       	ldd	r31, Y+8	; 0x08
    5ee4:	e0 0f       	add	r30, r16
    5ee6:	f1 1f       	adc	r31, r17
    5ee8:	10 82       	st	Z, r1
    5eea:	2e 96       	adiw	r28, 0x0e	; 14
    5eec:	0f b6       	in	r0, 0x3f	; 63
    5eee:	f8 94       	cli
    5ef0:	de bf       	out	0x3e, r29	; 62
    5ef2:	0f be       	out	0x3f, r0	; 63
    5ef4:	cd bf       	out	0x3d, r28	; 61
    5ef6:	df 91       	pop	r29
    5ef8:	cf 91       	pop	r28
    5efa:	1f 91       	pop	r17
    5efc:	0f 91       	pop	r16
    5efe:	08 95       	ret

00005f00 <vfprintf>:
    5f00:	2f 92       	push	r2
    5f02:	3f 92       	push	r3
    5f04:	4f 92       	push	r4
    5f06:	5f 92       	push	r5
    5f08:	6f 92       	push	r6
    5f0a:	7f 92       	push	r7
    5f0c:	8f 92       	push	r8
    5f0e:	9f 92       	push	r9
    5f10:	af 92       	push	r10
    5f12:	bf 92       	push	r11
    5f14:	cf 92       	push	r12
    5f16:	df 92       	push	r13
    5f18:	ef 92       	push	r14
    5f1a:	ff 92       	push	r15
    5f1c:	0f 93       	push	r16
    5f1e:	1f 93       	push	r17
    5f20:	cf 93       	push	r28
    5f22:	df 93       	push	r29
    5f24:	cd b7       	in	r28, 0x3d	; 61
    5f26:	de b7       	in	r29, 0x3e	; 62
    5f28:	2b 97       	sbiw	r28, 0x0b	; 11
    5f2a:	0f b6       	in	r0, 0x3f	; 63
    5f2c:	f8 94       	cli
    5f2e:	de bf       	out	0x3e, r29	; 62
    5f30:	0f be       	out	0x3f, r0	; 63
    5f32:	cd bf       	out	0x3d, r28	; 61
    5f34:	6c 01       	movw	r12, r24
    5f36:	7b 01       	movw	r14, r22
    5f38:	8a 01       	movw	r16, r20
    5f3a:	fc 01       	movw	r30, r24
    5f3c:	17 82       	std	Z+7, r1	; 0x07
    5f3e:	16 82       	std	Z+6, r1	; 0x06
    5f40:	83 81       	ldd	r24, Z+3	; 0x03
    5f42:	81 ff       	sbrs	r24, 1
    5f44:	bf c1       	rjmp	.+894    	; 0x62c4 <vfprintf+0x3c4>
    5f46:	ce 01       	movw	r24, r28
    5f48:	01 96       	adiw	r24, 0x01	; 1
    5f4a:	3c 01       	movw	r6, r24
    5f4c:	f6 01       	movw	r30, r12
    5f4e:	93 81       	ldd	r25, Z+3	; 0x03
    5f50:	f7 01       	movw	r30, r14
    5f52:	93 fd       	sbrc	r25, 3
    5f54:	85 91       	lpm	r24, Z+
    5f56:	93 ff       	sbrs	r25, 3
    5f58:	81 91       	ld	r24, Z+
    5f5a:	7f 01       	movw	r14, r30
    5f5c:	88 23       	and	r24, r24
    5f5e:	09 f4       	brne	.+2      	; 0x5f62 <vfprintf+0x62>
    5f60:	ad c1       	rjmp	.+858    	; 0x62bc <vfprintf+0x3bc>
    5f62:	85 32       	cpi	r24, 0x25	; 37
    5f64:	39 f4       	brne	.+14     	; 0x5f74 <vfprintf+0x74>
    5f66:	93 fd       	sbrc	r25, 3
    5f68:	85 91       	lpm	r24, Z+
    5f6a:	93 ff       	sbrs	r25, 3
    5f6c:	81 91       	ld	r24, Z+
    5f6e:	7f 01       	movw	r14, r30
    5f70:	85 32       	cpi	r24, 0x25	; 37
    5f72:	21 f4       	brne	.+8      	; 0x5f7c <vfprintf+0x7c>
    5f74:	b6 01       	movw	r22, r12
    5f76:	90 e0       	ldi	r25, 0x00	; 0
    5f78:	d6 d1       	rcall	.+940    	; 0x6326 <fputc>
    5f7a:	e8 cf       	rjmp	.-48     	; 0x5f4c <vfprintf+0x4c>
    5f7c:	91 2c       	mov	r9, r1
    5f7e:	21 2c       	mov	r2, r1
    5f80:	31 2c       	mov	r3, r1
    5f82:	ff e1       	ldi	r31, 0x1F	; 31
    5f84:	f3 15       	cp	r31, r3
    5f86:	d8 f0       	brcs	.+54     	; 0x5fbe <vfprintf+0xbe>
    5f88:	8b 32       	cpi	r24, 0x2B	; 43
    5f8a:	79 f0       	breq	.+30     	; 0x5faa <vfprintf+0xaa>
    5f8c:	38 f4       	brcc	.+14     	; 0x5f9c <vfprintf+0x9c>
    5f8e:	80 32       	cpi	r24, 0x20	; 32
    5f90:	79 f0       	breq	.+30     	; 0x5fb0 <vfprintf+0xb0>
    5f92:	83 32       	cpi	r24, 0x23	; 35
    5f94:	a1 f4       	brne	.+40     	; 0x5fbe <vfprintf+0xbe>
    5f96:	23 2d       	mov	r18, r3
    5f98:	20 61       	ori	r18, 0x10	; 16
    5f9a:	1d c0       	rjmp	.+58     	; 0x5fd6 <vfprintf+0xd6>
    5f9c:	8d 32       	cpi	r24, 0x2D	; 45
    5f9e:	61 f0       	breq	.+24     	; 0x5fb8 <vfprintf+0xb8>
    5fa0:	80 33       	cpi	r24, 0x30	; 48
    5fa2:	69 f4       	brne	.+26     	; 0x5fbe <vfprintf+0xbe>
    5fa4:	23 2d       	mov	r18, r3
    5fa6:	21 60       	ori	r18, 0x01	; 1
    5fa8:	16 c0       	rjmp	.+44     	; 0x5fd6 <vfprintf+0xd6>
    5faa:	83 2d       	mov	r24, r3
    5fac:	82 60       	ori	r24, 0x02	; 2
    5fae:	38 2e       	mov	r3, r24
    5fb0:	e3 2d       	mov	r30, r3
    5fb2:	e4 60       	ori	r30, 0x04	; 4
    5fb4:	3e 2e       	mov	r3, r30
    5fb6:	2a c0       	rjmp	.+84     	; 0x600c <vfprintf+0x10c>
    5fb8:	f3 2d       	mov	r31, r3
    5fba:	f8 60       	ori	r31, 0x08	; 8
    5fbc:	1d c0       	rjmp	.+58     	; 0x5ff8 <vfprintf+0xf8>
    5fbe:	37 fc       	sbrc	r3, 7
    5fc0:	2d c0       	rjmp	.+90     	; 0x601c <vfprintf+0x11c>
    5fc2:	20 ed       	ldi	r18, 0xD0	; 208
    5fc4:	28 0f       	add	r18, r24
    5fc6:	2a 30       	cpi	r18, 0x0A	; 10
    5fc8:	40 f0       	brcs	.+16     	; 0x5fda <vfprintf+0xda>
    5fca:	8e 32       	cpi	r24, 0x2E	; 46
    5fcc:	b9 f4       	brne	.+46     	; 0x5ffc <vfprintf+0xfc>
    5fce:	36 fc       	sbrc	r3, 6
    5fd0:	75 c1       	rjmp	.+746    	; 0x62bc <vfprintf+0x3bc>
    5fd2:	23 2d       	mov	r18, r3
    5fd4:	20 64       	ori	r18, 0x40	; 64
    5fd6:	32 2e       	mov	r3, r18
    5fd8:	19 c0       	rjmp	.+50     	; 0x600c <vfprintf+0x10c>
    5fda:	36 fe       	sbrs	r3, 6
    5fdc:	06 c0       	rjmp	.+12     	; 0x5fea <vfprintf+0xea>
    5fde:	8a e0       	ldi	r24, 0x0A	; 10
    5fe0:	98 9e       	mul	r9, r24
    5fe2:	20 0d       	add	r18, r0
    5fe4:	11 24       	eor	r1, r1
    5fe6:	92 2e       	mov	r9, r18
    5fe8:	11 c0       	rjmp	.+34     	; 0x600c <vfprintf+0x10c>
    5fea:	ea e0       	ldi	r30, 0x0A	; 10
    5fec:	2e 9e       	mul	r2, r30
    5fee:	20 0d       	add	r18, r0
    5ff0:	11 24       	eor	r1, r1
    5ff2:	22 2e       	mov	r2, r18
    5ff4:	f3 2d       	mov	r31, r3
    5ff6:	f0 62       	ori	r31, 0x20	; 32
    5ff8:	3f 2e       	mov	r3, r31
    5ffa:	08 c0       	rjmp	.+16     	; 0x600c <vfprintf+0x10c>
    5ffc:	8c 36       	cpi	r24, 0x6C	; 108
    5ffe:	21 f4       	brne	.+8      	; 0x6008 <vfprintf+0x108>
    6000:	83 2d       	mov	r24, r3
    6002:	80 68       	ori	r24, 0x80	; 128
    6004:	38 2e       	mov	r3, r24
    6006:	02 c0       	rjmp	.+4      	; 0x600c <vfprintf+0x10c>
    6008:	88 36       	cpi	r24, 0x68	; 104
    600a:	41 f4       	brne	.+16     	; 0x601c <vfprintf+0x11c>
    600c:	f7 01       	movw	r30, r14
    600e:	93 fd       	sbrc	r25, 3
    6010:	85 91       	lpm	r24, Z+
    6012:	93 ff       	sbrs	r25, 3
    6014:	81 91       	ld	r24, Z+
    6016:	7f 01       	movw	r14, r30
    6018:	81 11       	cpse	r24, r1
    601a:	b3 cf       	rjmp	.-154    	; 0x5f82 <vfprintf+0x82>
    601c:	98 2f       	mov	r25, r24
    601e:	9f 7d       	andi	r25, 0xDF	; 223
    6020:	95 54       	subi	r25, 0x45	; 69
    6022:	93 30       	cpi	r25, 0x03	; 3
    6024:	28 f4       	brcc	.+10     	; 0x6030 <vfprintf+0x130>
    6026:	0c 5f       	subi	r16, 0xFC	; 252
    6028:	1f 4f       	sbci	r17, 0xFF	; 255
    602a:	9f e3       	ldi	r25, 0x3F	; 63
    602c:	99 83       	std	Y+1, r25	; 0x01
    602e:	0d c0       	rjmp	.+26     	; 0x604a <vfprintf+0x14a>
    6030:	83 36       	cpi	r24, 0x63	; 99
    6032:	31 f0       	breq	.+12     	; 0x6040 <vfprintf+0x140>
    6034:	83 37       	cpi	r24, 0x73	; 115
    6036:	71 f0       	breq	.+28     	; 0x6054 <vfprintf+0x154>
    6038:	83 35       	cpi	r24, 0x53	; 83
    603a:	09 f0       	breq	.+2      	; 0x603e <vfprintf+0x13e>
    603c:	55 c0       	rjmp	.+170    	; 0x60e8 <vfprintf+0x1e8>
    603e:	20 c0       	rjmp	.+64     	; 0x6080 <vfprintf+0x180>
    6040:	f8 01       	movw	r30, r16
    6042:	80 81       	ld	r24, Z
    6044:	89 83       	std	Y+1, r24	; 0x01
    6046:	0e 5f       	subi	r16, 0xFE	; 254
    6048:	1f 4f       	sbci	r17, 0xFF	; 255
    604a:	88 24       	eor	r8, r8
    604c:	83 94       	inc	r8
    604e:	91 2c       	mov	r9, r1
    6050:	53 01       	movw	r10, r6
    6052:	12 c0       	rjmp	.+36     	; 0x6078 <vfprintf+0x178>
    6054:	28 01       	movw	r4, r16
    6056:	f2 e0       	ldi	r31, 0x02	; 2
    6058:	4f 0e       	add	r4, r31
    605a:	51 1c       	adc	r5, r1
    605c:	f8 01       	movw	r30, r16
    605e:	a0 80       	ld	r10, Z
    6060:	b1 80       	ldd	r11, Z+1	; 0x01
    6062:	36 fe       	sbrs	r3, 6
    6064:	03 c0       	rjmp	.+6      	; 0x606c <vfprintf+0x16c>
    6066:	69 2d       	mov	r22, r9
    6068:	70 e0       	ldi	r23, 0x00	; 0
    606a:	02 c0       	rjmp	.+4      	; 0x6070 <vfprintf+0x170>
    606c:	6f ef       	ldi	r22, 0xFF	; 255
    606e:	7f ef       	ldi	r23, 0xFF	; 255
    6070:	c5 01       	movw	r24, r10
    6072:	4e d1       	rcall	.+668    	; 0x6310 <strnlen>
    6074:	4c 01       	movw	r8, r24
    6076:	82 01       	movw	r16, r4
    6078:	f3 2d       	mov	r31, r3
    607a:	ff 77       	andi	r31, 0x7F	; 127
    607c:	3f 2e       	mov	r3, r31
    607e:	15 c0       	rjmp	.+42     	; 0x60aa <vfprintf+0x1aa>
    6080:	28 01       	movw	r4, r16
    6082:	22 e0       	ldi	r18, 0x02	; 2
    6084:	42 0e       	add	r4, r18
    6086:	51 1c       	adc	r5, r1
    6088:	f8 01       	movw	r30, r16
    608a:	a0 80       	ld	r10, Z
    608c:	b1 80       	ldd	r11, Z+1	; 0x01
    608e:	36 fe       	sbrs	r3, 6
    6090:	03 c0       	rjmp	.+6      	; 0x6098 <vfprintf+0x198>
    6092:	69 2d       	mov	r22, r9
    6094:	70 e0       	ldi	r23, 0x00	; 0
    6096:	02 c0       	rjmp	.+4      	; 0x609c <vfprintf+0x19c>
    6098:	6f ef       	ldi	r22, 0xFF	; 255
    609a:	7f ef       	ldi	r23, 0xFF	; 255
    609c:	c5 01       	movw	r24, r10
    609e:	2d d1       	rcall	.+602    	; 0x62fa <strnlen_P>
    60a0:	4c 01       	movw	r8, r24
    60a2:	f3 2d       	mov	r31, r3
    60a4:	f0 68       	ori	r31, 0x80	; 128
    60a6:	3f 2e       	mov	r3, r31
    60a8:	82 01       	movw	r16, r4
    60aa:	33 fc       	sbrc	r3, 3
    60ac:	19 c0       	rjmp	.+50     	; 0x60e0 <vfprintf+0x1e0>
    60ae:	82 2d       	mov	r24, r2
    60b0:	90 e0       	ldi	r25, 0x00	; 0
    60b2:	88 16       	cp	r8, r24
    60b4:	99 06       	cpc	r9, r25
    60b6:	a0 f4       	brcc	.+40     	; 0x60e0 <vfprintf+0x1e0>
    60b8:	b6 01       	movw	r22, r12
    60ba:	80 e2       	ldi	r24, 0x20	; 32
    60bc:	90 e0       	ldi	r25, 0x00	; 0
    60be:	33 d1       	rcall	.+614    	; 0x6326 <fputc>
    60c0:	2a 94       	dec	r2
    60c2:	f5 cf       	rjmp	.-22     	; 0x60ae <vfprintf+0x1ae>
    60c4:	f5 01       	movw	r30, r10
    60c6:	37 fc       	sbrc	r3, 7
    60c8:	85 91       	lpm	r24, Z+
    60ca:	37 fe       	sbrs	r3, 7
    60cc:	81 91       	ld	r24, Z+
    60ce:	5f 01       	movw	r10, r30
    60d0:	b6 01       	movw	r22, r12
    60d2:	90 e0       	ldi	r25, 0x00	; 0
    60d4:	28 d1       	rcall	.+592    	; 0x6326 <fputc>
    60d6:	21 10       	cpse	r2, r1
    60d8:	2a 94       	dec	r2
    60da:	21 e0       	ldi	r18, 0x01	; 1
    60dc:	82 1a       	sub	r8, r18
    60de:	91 08       	sbc	r9, r1
    60e0:	81 14       	cp	r8, r1
    60e2:	91 04       	cpc	r9, r1
    60e4:	79 f7       	brne	.-34     	; 0x60c4 <vfprintf+0x1c4>
    60e6:	e1 c0       	rjmp	.+450    	; 0x62aa <vfprintf+0x3aa>
    60e8:	84 36       	cpi	r24, 0x64	; 100
    60ea:	11 f0       	breq	.+4      	; 0x60f0 <vfprintf+0x1f0>
    60ec:	89 36       	cpi	r24, 0x69	; 105
    60ee:	39 f5       	brne	.+78     	; 0x613e <vfprintf+0x23e>
    60f0:	f8 01       	movw	r30, r16
    60f2:	37 fe       	sbrs	r3, 7
    60f4:	07 c0       	rjmp	.+14     	; 0x6104 <vfprintf+0x204>
    60f6:	60 81       	ld	r22, Z
    60f8:	71 81       	ldd	r23, Z+1	; 0x01
    60fa:	82 81       	ldd	r24, Z+2	; 0x02
    60fc:	93 81       	ldd	r25, Z+3	; 0x03
    60fe:	0c 5f       	subi	r16, 0xFC	; 252
    6100:	1f 4f       	sbci	r17, 0xFF	; 255
    6102:	08 c0       	rjmp	.+16     	; 0x6114 <vfprintf+0x214>
    6104:	60 81       	ld	r22, Z
    6106:	71 81       	ldd	r23, Z+1	; 0x01
    6108:	07 2e       	mov	r0, r23
    610a:	00 0c       	add	r0, r0
    610c:	88 0b       	sbc	r24, r24
    610e:	99 0b       	sbc	r25, r25
    6110:	0e 5f       	subi	r16, 0xFE	; 254
    6112:	1f 4f       	sbci	r17, 0xFF	; 255
    6114:	f3 2d       	mov	r31, r3
    6116:	ff 76       	andi	r31, 0x6F	; 111
    6118:	3f 2e       	mov	r3, r31
    611a:	97 ff       	sbrs	r25, 7
    611c:	09 c0       	rjmp	.+18     	; 0x6130 <vfprintf+0x230>
    611e:	90 95       	com	r25
    6120:	80 95       	com	r24
    6122:	70 95       	com	r23
    6124:	61 95       	neg	r22
    6126:	7f 4f       	sbci	r23, 0xFF	; 255
    6128:	8f 4f       	sbci	r24, 0xFF	; 255
    612a:	9f 4f       	sbci	r25, 0xFF	; 255
    612c:	f0 68       	ori	r31, 0x80	; 128
    612e:	3f 2e       	mov	r3, r31
    6130:	2a e0       	ldi	r18, 0x0A	; 10
    6132:	30 e0       	ldi	r19, 0x00	; 0
    6134:	a3 01       	movw	r20, r6
    6136:	33 d1       	rcall	.+614    	; 0x639e <__ultoa_invert>
    6138:	88 2e       	mov	r8, r24
    613a:	86 18       	sub	r8, r6
    613c:	44 c0       	rjmp	.+136    	; 0x61c6 <vfprintf+0x2c6>
    613e:	85 37       	cpi	r24, 0x75	; 117
    6140:	31 f4       	brne	.+12     	; 0x614e <vfprintf+0x24e>
    6142:	23 2d       	mov	r18, r3
    6144:	2f 7e       	andi	r18, 0xEF	; 239
    6146:	b2 2e       	mov	r11, r18
    6148:	2a e0       	ldi	r18, 0x0A	; 10
    614a:	30 e0       	ldi	r19, 0x00	; 0
    614c:	25 c0       	rjmp	.+74     	; 0x6198 <vfprintf+0x298>
    614e:	93 2d       	mov	r25, r3
    6150:	99 7f       	andi	r25, 0xF9	; 249
    6152:	b9 2e       	mov	r11, r25
    6154:	8f 36       	cpi	r24, 0x6F	; 111
    6156:	c1 f0       	breq	.+48     	; 0x6188 <vfprintf+0x288>
    6158:	18 f4       	brcc	.+6      	; 0x6160 <vfprintf+0x260>
    615a:	88 35       	cpi	r24, 0x58	; 88
    615c:	79 f0       	breq	.+30     	; 0x617c <vfprintf+0x27c>
    615e:	ae c0       	rjmp	.+348    	; 0x62bc <vfprintf+0x3bc>
    6160:	80 37       	cpi	r24, 0x70	; 112
    6162:	19 f0       	breq	.+6      	; 0x616a <vfprintf+0x26a>
    6164:	88 37       	cpi	r24, 0x78	; 120
    6166:	21 f0       	breq	.+8      	; 0x6170 <vfprintf+0x270>
    6168:	a9 c0       	rjmp	.+338    	; 0x62bc <vfprintf+0x3bc>
    616a:	e9 2f       	mov	r30, r25
    616c:	e0 61       	ori	r30, 0x10	; 16
    616e:	be 2e       	mov	r11, r30
    6170:	b4 fe       	sbrs	r11, 4
    6172:	0d c0       	rjmp	.+26     	; 0x618e <vfprintf+0x28e>
    6174:	fb 2d       	mov	r31, r11
    6176:	f4 60       	ori	r31, 0x04	; 4
    6178:	bf 2e       	mov	r11, r31
    617a:	09 c0       	rjmp	.+18     	; 0x618e <vfprintf+0x28e>
    617c:	34 fe       	sbrs	r3, 4
    617e:	0a c0       	rjmp	.+20     	; 0x6194 <vfprintf+0x294>
    6180:	29 2f       	mov	r18, r25
    6182:	26 60       	ori	r18, 0x06	; 6
    6184:	b2 2e       	mov	r11, r18
    6186:	06 c0       	rjmp	.+12     	; 0x6194 <vfprintf+0x294>
    6188:	28 e0       	ldi	r18, 0x08	; 8
    618a:	30 e0       	ldi	r19, 0x00	; 0
    618c:	05 c0       	rjmp	.+10     	; 0x6198 <vfprintf+0x298>
    618e:	20 e1       	ldi	r18, 0x10	; 16
    6190:	30 e0       	ldi	r19, 0x00	; 0
    6192:	02 c0       	rjmp	.+4      	; 0x6198 <vfprintf+0x298>
    6194:	20 e1       	ldi	r18, 0x10	; 16
    6196:	32 e0       	ldi	r19, 0x02	; 2
    6198:	f8 01       	movw	r30, r16
    619a:	b7 fe       	sbrs	r11, 7
    619c:	07 c0       	rjmp	.+14     	; 0x61ac <vfprintf+0x2ac>
    619e:	60 81       	ld	r22, Z
    61a0:	71 81       	ldd	r23, Z+1	; 0x01
    61a2:	82 81       	ldd	r24, Z+2	; 0x02
    61a4:	93 81       	ldd	r25, Z+3	; 0x03
    61a6:	0c 5f       	subi	r16, 0xFC	; 252
    61a8:	1f 4f       	sbci	r17, 0xFF	; 255
    61aa:	06 c0       	rjmp	.+12     	; 0x61b8 <vfprintf+0x2b8>
    61ac:	60 81       	ld	r22, Z
    61ae:	71 81       	ldd	r23, Z+1	; 0x01
    61b0:	80 e0       	ldi	r24, 0x00	; 0
    61b2:	90 e0       	ldi	r25, 0x00	; 0
    61b4:	0e 5f       	subi	r16, 0xFE	; 254
    61b6:	1f 4f       	sbci	r17, 0xFF	; 255
    61b8:	a3 01       	movw	r20, r6
    61ba:	f1 d0       	rcall	.+482    	; 0x639e <__ultoa_invert>
    61bc:	88 2e       	mov	r8, r24
    61be:	86 18       	sub	r8, r6
    61c0:	fb 2d       	mov	r31, r11
    61c2:	ff 77       	andi	r31, 0x7F	; 127
    61c4:	3f 2e       	mov	r3, r31
    61c6:	36 fe       	sbrs	r3, 6
    61c8:	0d c0       	rjmp	.+26     	; 0x61e4 <vfprintf+0x2e4>
    61ca:	23 2d       	mov	r18, r3
    61cc:	2e 7f       	andi	r18, 0xFE	; 254
    61ce:	a2 2e       	mov	r10, r18
    61d0:	89 14       	cp	r8, r9
    61d2:	58 f4       	brcc	.+22     	; 0x61ea <vfprintf+0x2ea>
    61d4:	34 fe       	sbrs	r3, 4
    61d6:	0b c0       	rjmp	.+22     	; 0x61ee <vfprintf+0x2ee>
    61d8:	32 fc       	sbrc	r3, 2
    61da:	09 c0       	rjmp	.+18     	; 0x61ee <vfprintf+0x2ee>
    61dc:	83 2d       	mov	r24, r3
    61de:	8e 7e       	andi	r24, 0xEE	; 238
    61e0:	a8 2e       	mov	r10, r24
    61e2:	05 c0       	rjmp	.+10     	; 0x61ee <vfprintf+0x2ee>
    61e4:	b8 2c       	mov	r11, r8
    61e6:	a3 2c       	mov	r10, r3
    61e8:	03 c0       	rjmp	.+6      	; 0x61f0 <vfprintf+0x2f0>
    61ea:	b8 2c       	mov	r11, r8
    61ec:	01 c0       	rjmp	.+2      	; 0x61f0 <vfprintf+0x2f0>
    61ee:	b9 2c       	mov	r11, r9
    61f0:	a4 fe       	sbrs	r10, 4
    61f2:	0f c0       	rjmp	.+30     	; 0x6212 <vfprintf+0x312>
    61f4:	fe 01       	movw	r30, r28
    61f6:	e8 0d       	add	r30, r8
    61f8:	f1 1d       	adc	r31, r1
    61fa:	80 81       	ld	r24, Z
    61fc:	80 33       	cpi	r24, 0x30	; 48
    61fe:	21 f4       	brne	.+8      	; 0x6208 <vfprintf+0x308>
    6200:	9a 2d       	mov	r25, r10
    6202:	99 7e       	andi	r25, 0xE9	; 233
    6204:	a9 2e       	mov	r10, r25
    6206:	09 c0       	rjmp	.+18     	; 0x621a <vfprintf+0x31a>
    6208:	a2 fe       	sbrs	r10, 2
    620a:	06 c0       	rjmp	.+12     	; 0x6218 <vfprintf+0x318>
    620c:	b3 94       	inc	r11
    620e:	b3 94       	inc	r11
    6210:	04 c0       	rjmp	.+8      	; 0x621a <vfprintf+0x31a>
    6212:	8a 2d       	mov	r24, r10
    6214:	86 78       	andi	r24, 0x86	; 134
    6216:	09 f0       	breq	.+2      	; 0x621a <vfprintf+0x31a>
    6218:	b3 94       	inc	r11
    621a:	a3 fc       	sbrc	r10, 3
    621c:	10 c0       	rjmp	.+32     	; 0x623e <vfprintf+0x33e>
    621e:	a0 fe       	sbrs	r10, 0
    6220:	06 c0       	rjmp	.+12     	; 0x622e <vfprintf+0x32e>
    6222:	b2 14       	cp	r11, r2
    6224:	80 f4       	brcc	.+32     	; 0x6246 <vfprintf+0x346>
    6226:	28 0c       	add	r2, r8
    6228:	92 2c       	mov	r9, r2
    622a:	9b 18       	sub	r9, r11
    622c:	0d c0       	rjmp	.+26     	; 0x6248 <vfprintf+0x348>
    622e:	b2 14       	cp	r11, r2
    6230:	58 f4       	brcc	.+22     	; 0x6248 <vfprintf+0x348>
    6232:	b6 01       	movw	r22, r12
    6234:	80 e2       	ldi	r24, 0x20	; 32
    6236:	90 e0       	ldi	r25, 0x00	; 0
    6238:	76 d0       	rcall	.+236    	; 0x6326 <fputc>
    623a:	b3 94       	inc	r11
    623c:	f8 cf       	rjmp	.-16     	; 0x622e <vfprintf+0x32e>
    623e:	b2 14       	cp	r11, r2
    6240:	18 f4       	brcc	.+6      	; 0x6248 <vfprintf+0x348>
    6242:	2b 18       	sub	r2, r11
    6244:	02 c0       	rjmp	.+4      	; 0x624a <vfprintf+0x34a>
    6246:	98 2c       	mov	r9, r8
    6248:	21 2c       	mov	r2, r1
    624a:	a4 fe       	sbrs	r10, 4
    624c:	0f c0       	rjmp	.+30     	; 0x626c <vfprintf+0x36c>
    624e:	b6 01       	movw	r22, r12
    6250:	80 e3       	ldi	r24, 0x30	; 48
    6252:	90 e0       	ldi	r25, 0x00	; 0
    6254:	68 d0       	rcall	.+208    	; 0x6326 <fputc>
    6256:	a2 fe       	sbrs	r10, 2
    6258:	16 c0       	rjmp	.+44     	; 0x6286 <vfprintf+0x386>
    625a:	a1 fc       	sbrc	r10, 1
    625c:	03 c0       	rjmp	.+6      	; 0x6264 <vfprintf+0x364>
    625e:	88 e7       	ldi	r24, 0x78	; 120
    6260:	90 e0       	ldi	r25, 0x00	; 0
    6262:	02 c0       	rjmp	.+4      	; 0x6268 <vfprintf+0x368>
    6264:	88 e5       	ldi	r24, 0x58	; 88
    6266:	90 e0       	ldi	r25, 0x00	; 0
    6268:	b6 01       	movw	r22, r12
    626a:	0c c0       	rjmp	.+24     	; 0x6284 <vfprintf+0x384>
    626c:	8a 2d       	mov	r24, r10
    626e:	86 78       	andi	r24, 0x86	; 134
    6270:	51 f0       	breq	.+20     	; 0x6286 <vfprintf+0x386>
    6272:	a1 fe       	sbrs	r10, 1
    6274:	02 c0       	rjmp	.+4      	; 0x627a <vfprintf+0x37a>
    6276:	8b e2       	ldi	r24, 0x2B	; 43
    6278:	01 c0       	rjmp	.+2      	; 0x627c <vfprintf+0x37c>
    627a:	80 e2       	ldi	r24, 0x20	; 32
    627c:	a7 fc       	sbrc	r10, 7
    627e:	8d e2       	ldi	r24, 0x2D	; 45
    6280:	b6 01       	movw	r22, r12
    6282:	90 e0       	ldi	r25, 0x00	; 0
    6284:	50 d0       	rcall	.+160    	; 0x6326 <fputc>
    6286:	89 14       	cp	r8, r9
    6288:	30 f4       	brcc	.+12     	; 0x6296 <vfprintf+0x396>
    628a:	b6 01       	movw	r22, r12
    628c:	80 e3       	ldi	r24, 0x30	; 48
    628e:	90 e0       	ldi	r25, 0x00	; 0
    6290:	4a d0       	rcall	.+148    	; 0x6326 <fputc>
    6292:	9a 94       	dec	r9
    6294:	f8 cf       	rjmp	.-16     	; 0x6286 <vfprintf+0x386>
    6296:	8a 94       	dec	r8
    6298:	f3 01       	movw	r30, r6
    629a:	e8 0d       	add	r30, r8
    629c:	f1 1d       	adc	r31, r1
    629e:	80 81       	ld	r24, Z
    62a0:	b6 01       	movw	r22, r12
    62a2:	90 e0       	ldi	r25, 0x00	; 0
    62a4:	40 d0       	rcall	.+128    	; 0x6326 <fputc>
    62a6:	81 10       	cpse	r8, r1
    62a8:	f6 cf       	rjmp	.-20     	; 0x6296 <vfprintf+0x396>
    62aa:	22 20       	and	r2, r2
    62ac:	09 f4       	brne	.+2      	; 0x62b0 <vfprintf+0x3b0>
    62ae:	4e ce       	rjmp	.-868    	; 0x5f4c <vfprintf+0x4c>
    62b0:	b6 01       	movw	r22, r12
    62b2:	80 e2       	ldi	r24, 0x20	; 32
    62b4:	90 e0       	ldi	r25, 0x00	; 0
    62b6:	37 d0       	rcall	.+110    	; 0x6326 <fputc>
    62b8:	2a 94       	dec	r2
    62ba:	f7 cf       	rjmp	.-18     	; 0x62aa <vfprintf+0x3aa>
    62bc:	f6 01       	movw	r30, r12
    62be:	86 81       	ldd	r24, Z+6	; 0x06
    62c0:	97 81       	ldd	r25, Z+7	; 0x07
    62c2:	02 c0       	rjmp	.+4      	; 0x62c8 <vfprintf+0x3c8>
    62c4:	8f ef       	ldi	r24, 0xFF	; 255
    62c6:	9f ef       	ldi	r25, 0xFF	; 255
    62c8:	2b 96       	adiw	r28, 0x0b	; 11
    62ca:	0f b6       	in	r0, 0x3f	; 63
    62cc:	f8 94       	cli
    62ce:	de bf       	out	0x3e, r29	; 62
    62d0:	0f be       	out	0x3f, r0	; 63
    62d2:	cd bf       	out	0x3d, r28	; 61
    62d4:	df 91       	pop	r29
    62d6:	cf 91       	pop	r28
    62d8:	1f 91       	pop	r17
    62da:	0f 91       	pop	r16
    62dc:	ff 90       	pop	r15
    62de:	ef 90       	pop	r14
    62e0:	df 90       	pop	r13
    62e2:	cf 90       	pop	r12
    62e4:	bf 90       	pop	r11
    62e6:	af 90       	pop	r10
    62e8:	9f 90       	pop	r9
    62ea:	8f 90       	pop	r8
    62ec:	7f 90       	pop	r7
    62ee:	6f 90       	pop	r6
    62f0:	5f 90       	pop	r5
    62f2:	4f 90       	pop	r4
    62f4:	3f 90       	pop	r3
    62f6:	2f 90       	pop	r2
    62f8:	08 95       	ret

000062fa <strnlen_P>:
    62fa:	fc 01       	movw	r30, r24
    62fc:	05 90       	lpm	r0, Z+
    62fe:	61 50       	subi	r22, 0x01	; 1
    6300:	70 40       	sbci	r23, 0x00	; 0
    6302:	01 10       	cpse	r0, r1
    6304:	d8 f7       	brcc	.-10     	; 0x62fc <strnlen_P+0x2>
    6306:	80 95       	com	r24
    6308:	90 95       	com	r25
    630a:	8e 0f       	add	r24, r30
    630c:	9f 1f       	adc	r25, r31
    630e:	08 95       	ret

00006310 <strnlen>:
    6310:	fc 01       	movw	r30, r24
    6312:	61 50       	subi	r22, 0x01	; 1
    6314:	70 40       	sbci	r23, 0x00	; 0
    6316:	01 90       	ld	r0, Z+
    6318:	01 10       	cpse	r0, r1
    631a:	d8 f7       	brcc	.-10     	; 0x6312 <strnlen+0x2>
    631c:	80 95       	com	r24
    631e:	90 95       	com	r25
    6320:	8e 0f       	add	r24, r30
    6322:	9f 1f       	adc	r25, r31
    6324:	08 95       	ret

00006326 <fputc>:
    6326:	0f 93       	push	r16
    6328:	1f 93       	push	r17
    632a:	cf 93       	push	r28
    632c:	df 93       	push	r29
    632e:	fb 01       	movw	r30, r22
    6330:	23 81       	ldd	r18, Z+3	; 0x03
    6332:	21 fd       	sbrc	r18, 1
    6334:	03 c0       	rjmp	.+6      	; 0x633c <fputc+0x16>
    6336:	8f ef       	ldi	r24, 0xFF	; 255
    6338:	9f ef       	ldi	r25, 0xFF	; 255
    633a:	2c c0       	rjmp	.+88     	; 0x6394 <fputc+0x6e>
    633c:	22 ff       	sbrs	r18, 2
    633e:	16 c0       	rjmp	.+44     	; 0x636c <fputc+0x46>
    6340:	46 81       	ldd	r20, Z+6	; 0x06
    6342:	57 81       	ldd	r21, Z+7	; 0x07
    6344:	24 81       	ldd	r18, Z+4	; 0x04
    6346:	35 81       	ldd	r19, Z+5	; 0x05
    6348:	42 17       	cp	r20, r18
    634a:	53 07       	cpc	r21, r19
    634c:	44 f4       	brge	.+16     	; 0x635e <fputc+0x38>
    634e:	a0 81       	ld	r26, Z
    6350:	b1 81       	ldd	r27, Z+1	; 0x01
    6352:	9d 01       	movw	r18, r26
    6354:	2f 5f       	subi	r18, 0xFF	; 255
    6356:	3f 4f       	sbci	r19, 0xFF	; 255
    6358:	31 83       	std	Z+1, r19	; 0x01
    635a:	20 83       	st	Z, r18
    635c:	8c 93       	st	X, r24
    635e:	26 81       	ldd	r18, Z+6	; 0x06
    6360:	37 81       	ldd	r19, Z+7	; 0x07
    6362:	2f 5f       	subi	r18, 0xFF	; 255
    6364:	3f 4f       	sbci	r19, 0xFF	; 255
    6366:	37 83       	std	Z+7, r19	; 0x07
    6368:	26 83       	std	Z+6, r18	; 0x06
    636a:	14 c0       	rjmp	.+40     	; 0x6394 <fputc+0x6e>
    636c:	8b 01       	movw	r16, r22
    636e:	ec 01       	movw	r28, r24
    6370:	fb 01       	movw	r30, r22
    6372:	00 84       	ldd	r0, Z+8	; 0x08
    6374:	f1 85       	ldd	r31, Z+9	; 0x09
    6376:	e0 2d       	mov	r30, r0
    6378:	19 95       	eicall
    637a:	89 2b       	or	r24, r25
    637c:	e1 f6       	brne	.-72     	; 0x6336 <fputc+0x10>
    637e:	d8 01       	movw	r26, r16
    6380:	16 96       	adiw	r26, 0x06	; 6
    6382:	8d 91       	ld	r24, X+
    6384:	9c 91       	ld	r25, X
    6386:	17 97       	sbiw	r26, 0x07	; 7
    6388:	01 96       	adiw	r24, 0x01	; 1
    638a:	17 96       	adiw	r26, 0x07	; 7
    638c:	9c 93       	st	X, r25
    638e:	8e 93       	st	-X, r24
    6390:	16 97       	sbiw	r26, 0x06	; 6
    6392:	ce 01       	movw	r24, r28
    6394:	df 91       	pop	r29
    6396:	cf 91       	pop	r28
    6398:	1f 91       	pop	r17
    639a:	0f 91       	pop	r16
    639c:	08 95       	ret

0000639e <__ultoa_invert>:
    639e:	fa 01       	movw	r30, r20
    63a0:	aa 27       	eor	r26, r26
    63a2:	28 30       	cpi	r18, 0x08	; 8
    63a4:	51 f1       	breq	.+84     	; 0x63fa <__ultoa_invert+0x5c>
    63a6:	20 31       	cpi	r18, 0x10	; 16
    63a8:	81 f1       	breq	.+96     	; 0x640a <__ultoa_invert+0x6c>
    63aa:	e8 94       	clt
    63ac:	6f 93       	push	r22
    63ae:	6e 7f       	andi	r22, 0xFE	; 254
    63b0:	6e 5f       	subi	r22, 0xFE	; 254
    63b2:	7f 4f       	sbci	r23, 0xFF	; 255
    63b4:	8f 4f       	sbci	r24, 0xFF	; 255
    63b6:	9f 4f       	sbci	r25, 0xFF	; 255
    63b8:	af 4f       	sbci	r26, 0xFF	; 255
    63ba:	b1 e0       	ldi	r27, 0x01	; 1
    63bc:	3e d0       	rcall	.+124    	; 0x643a <__ultoa_invert+0x9c>
    63be:	b4 e0       	ldi	r27, 0x04	; 4
    63c0:	3c d0       	rcall	.+120    	; 0x643a <__ultoa_invert+0x9c>
    63c2:	67 0f       	add	r22, r23
    63c4:	78 1f       	adc	r23, r24
    63c6:	89 1f       	adc	r24, r25
    63c8:	9a 1f       	adc	r25, r26
    63ca:	a1 1d       	adc	r26, r1
    63cc:	68 0f       	add	r22, r24
    63ce:	79 1f       	adc	r23, r25
    63d0:	8a 1f       	adc	r24, r26
    63d2:	91 1d       	adc	r25, r1
    63d4:	a1 1d       	adc	r26, r1
    63d6:	6a 0f       	add	r22, r26
    63d8:	71 1d       	adc	r23, r1
    63da:	81 1d       	adc	r24, r1
    63dc:	91 1d       	adc	r25, r1
    63de:	a1 1d       	adc	r26, r1
    63e0:	20 d0       	rcall	.+64     	; 0x6422 <__ultoa_invert+0x84>
    63e2:	09 f4       	brne	.+2      	; 0x63e6 <__ultoa_invert+0x48>
    63e4:	68 94       	set
    63e6:	3f 91       	pop	r19
    63e8:	2a e0       	ldi	r18, 0x0A	; 10
    63ea:	26 9f       	mul	r18, r22
    63ec:	11 24       	eor	r1, r1
    63ee:	30 19       	sub	r19, r0
    63f0:	30 5d       	subi	r19, 0xD0	; 208
    63f2:	31 93       	st	Z+, r19
    63f4:	de f6       	brtc	.-74     	; 0x63ac <__ultoa_invert+0xe>
    63f6:	cf 01       	movw	r24, r30
    63f8:	08 95       	ret
    63fa:	46 2f       	mov	r20, r22
    63fc:	47 70       	andi	r20, 0x07	; 7
    63fe:	40 5d       	subi	r20, 0xD0	; 208
    6400:	41 93       	st	Z+, r20
    6402:	b3 e0       	ldi	r27, 0x03	; 3
    6404:	0f d0       	rcall	.+30     	; 0x6424 <__ultoa_invert+0x86>
    6406:	c9 f7       	brne	.-14     	; 0x63fa <__ultoa_invert+0x5c>
    6408:	f6 cf       	rjmp	.-20     	; 0x63f6 <__ultoa_invert+0x58>
    640a:	46 2f       	mov	r20, r22
    640c:	4f 70       	andi	r20, 0x0F	; 15
    640e:	40 5d       	subi	r20, 0xD0	; 208
    6410:	4a 33       	cpi	r20, 0x3A	; 58
    6412:	18 f0       	brcs	.+6      	; 0x641a <__ultoa_invert+0x7c>
    6414:	49 5d       	subi	r20, 0xD9	; 217
    6416:	31 fd       	sbrc	r19, 1
    6418:	40 52       	subi	r20, 0x20	; 32
    641a:	41 93       	st	Z+, r20
    641c:	02 d0       	rcall	.+4      	; 0x6422 <__ultoa_invert+0x84>
    641e:	a9 f7       	brne	.-22     	; 0x640a <__ultoa_invert+0x6c>
    6420:	ea cf       	rjmp	.-44     	; 0x63f6 <__ultoa_invert+0x58>
    6422:	b4 e0       	ldi	r27, 0x04	; 4
    6424:	a6 95       	lsr	r26
    6426:	97 95       	ror	r25
    6428:	87 95       	ror	r24
    642a:	77 95       	ror	r23
    642c:	67 95       	ror	r22
    642e:	ba 95       	dec	r27
    6430:	c9 f7       	brne	.-14     	; 0x6424 <__ultoa_invert+0x86>
    6432:	00 97       	sbiw	r24, 0x00	; 0
    6434:	61 05       	cpc	r22, r1
    6436:	71 05       	cpc	r23, r1
    6438:	08 95       	ret
    643a:	9b 01       	movw	r18, r22
    643c:	ac 01       	movw	r20, r24
    643e:	0a 2e       	mov	r0, r26
    6440:	06 94       	lsr	r0
    6442:	57 95       	ror	r21
    6444:	47 95       	ror	r20
    6446:	37 95       	ror	r19
    6448:	27 95       	ror	r18
    644a:	ba 95       	dec	r27
    644c:	c9 f7       	brne	.-14     	; 0x6440 <__ultoa_invert+0xa2>
    644e:	62 0f       	add	r22, r18
    6450:	73 1f       	adc	r23, r19
    6452:	84 1f       	adc	r24, r20
    6454:	95 1f       	adc	r25, r21
    6456:	a0 1d       	adc	r26, r0
    6458:	08 95       	ret

0000645a <_exit>:
    645a:	f8 94       	cli

0000645c <__stop_program>:
    645c:	ff cf       	rjmp	.-2      	; 0x645c <__stop_program>
